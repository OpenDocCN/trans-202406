- en: Appendix A. Installing MongoDB
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MongoDB binaries are available for Linux, macOS, Windows, and Solaris. This
    means that, on most platforms, you can download an archive from [the MongoDB Download
    Center page](https://www.mongodb.com/download-center), inflate it, and run the
    binary.
  prefs: []
  type: TYPE_NORMAL
- en: 'The MongoDB server requires a directory it can write database files to and
    a port it can listen for connections on. This section covers the entire install
    on the two variants of system: Windows and everything else (Linux/Unix/macOS).'
  prefs: []
  type: TYPE_NORMAL
- en: When we speak of “installing MongoDB,” generally what we are talking about is
    setting up *mongod*, the core database server. *mongod* can be used as a standalone
    server or as a member of a replica set. Most of the time, this will be the MongoDB
    process you are using.
  prefs: []
  type: TYPE_NORMAL
- en: Choosing a Version
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'MongoDB uses a fairly simple versioning scheme: even-point releases are stable,
    and odd-point releases are development versions. For example, anything starting
    with 4.2 is a stable release, such as 4.2.0, 4.2.1, and 4.2.8\. Anything starting
    with 4.3 is a development release, such as 4.3.0, 4.3.2, or 4.3.12\. Let’s take
    the 4.2/4.3 release as a sample case to demonstrate how the versioning timeline
    works:'
  prefs: []
  type: TYPE_NORMAL
- en: MongoDB 4.2.0 is released. This is a major release and will have an extensive
    changelog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the developers start working on the milestones for 4.4 (the next major
    stable release), they release 4.3.0\. This is the new development branch, which
    is fairly similar to 4.2.0 but probably with an extra feature or two and maybe
    some bugs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As the developers continue to add features, they will release 4.3.1, 4.3.2,
    and so on. These releases should not be used in production.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Some minor bug fixes may be backported to the 4.2 branch, which will cause releases
    of 4.2.1, 4.2.2, and so on. Developers are conservative about what is backported;
    few new features are ever added to a stable release. Generally, only bug fixes
    are ported.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After all of the major milestones have been reached for 4.4.0, 4.3.7 (or whatever
    the latest development release is) will be turned into 4.4.0-rc0.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After extensive testing of 4.4.0-rc0, usually there are a couple minor bugs
    that need to be fixed. Developers fix these bugs and release 4.4.0-rc1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Developers repeat step 6 until no new bugs are apparent, and then 4.4.0-rc2
    (or whatever the latest release ended up being) is renamed 4.4.0.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Developers start over from step 1, incrementing all versions by 0.2.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can see how close a production release is by browsing the core server roadmap
    on the [MongoDB bug tracker](http://jira.mongodb.org).
  prefs: []
  type: TYPE_NORMAL
- en: If you are running in production, you should use a stable release. If you are
    planning to use a development release in production, ask about it first on the
    mailing list or IRC to get the developers’ advice.
  prefs: []
  type: TYPE_NORMAL
- en: If you are just starting development on a project, using a development release
    may be a better choice. By the time you deploy to production, there will probably
    be a stable release with the features you’re using (MongoDB attempts to stick
    to a regular cycle of stable releases every 12 months). However, you must balance
    this against the possibility that you may run into server bugs, which can be discouraging
    to a new user.
  prefs: []
  type: TYPE_NORMAL
- en: Windows Install
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To install MongoDB on Windows, download the Windows *.msi* from [the MongoDB
    Download Center page](https://oreil.ly/nZZd0). Use the advice in the previous
    section to choose the correct version of MongoDB. When you click the link, it
    will download the *.msi*. Double-click the *.msi* file icon to launch the installer
    program.
  prefs: []
  type: TYPE_NORMAL
- en: Now you need to make a directory in which MongoDB can write database files.
    By default, MongoDB tries to use the *\data\db* directory on the current drive
    as its data directory (e.g., if you’re running *mongod* on *C:* on Windows, it’ll
    use *C:\Program Files\MongoDB\Server\&<VERSION>\data*). This will be created automatically
    for you by the installer. If you chose to use a directory other than *\data\db*,
    you’ll need to specify the path when you start MongoDB, which is covered in a
    moment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that you have a data directory, open the command prompt (*cmd.exe*). Navigate
    to the directory where you unzipped the MongoDB binaries and run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you chose a directory other than *C:\Program Files\MongoDB\Server\&<VERSION>\data*,
    you’ll have to specify it here, with the `--dbpath` argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: See [Chapter 21](ch21.xhtml#chapter-start-stop) for more common options, or
    run `mongod.exe` `--help` to see all the options.
  prefs: []
  type: TYPE_NORMAL
- en: Installing as a Service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'MongoDB can also be installed as a service on Windows. To do this, simply run
    it with the full path, escape any spaces, and use the `--install` option. For
    example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It can then be started and stopped from the Control Panel.
  prefs: []
  type: TYPE_NORMAL
- en: POSIX (Linux and Mac OS X) Install
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Choose a version of MongoDB, based on the advice in the section [“Choosing a
    Version”](#sect1_d1e12370). Go to [the MongoDB Download Center](https://oreil.ly/XEScg)
    and select the correct version for your OS.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: If you are using a Mac and are running macOS Catalina 10.15+, you should use
    */System/Volumes/Data/db* instead of */data/db*. This version made a change that
    renders the root folder read-only and resets upon reboot, which would result in
    the loss of your MongoDB data folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'You must create a directory for the database to put its files in. By default
    the database will use */data/db*, although you can specify any other directory.
    If you create the default directory, make sure it has the correct write permissions.
    You can create the directory and set the permissions by running the following
    commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '`mkdir -p` creates the directory and all its parents, if necessary (i.e., if
    the */data* directory doesn’t exist, it will create the */data* directory and
    then the */data/db* directory). `chown` changes the ownership of */data/db* so
    that your user can write to it. Of course, you can also just create a directory
    in your home folder and specify that MongoDB should use that when you start the
    database, to avoid any permissions issues.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Decompress the *.tar.gz* file you downloaded from the MongoDB Download Center:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you can start the database:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Or, if you’d like to use an alternate database path, specify it with the `--dbpath`
    option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: You can run `mongod.exe` `--help` to see all the possible options.
  prefs: []
  type: TYPE_NORMAL
- en: Installing from a Package Manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are also many package managers that can be used to install MongoDB. If
    you prefer using one of these, there are official packages for Red Hat, Debian,
    and Ubuntu as well as unofficial packages for many other systems. If you use an
    unofficial version, make sure it installs a relatively recent version.
  prefs: []
  type: TYPE_NORMAL
- en: 'On macOS, there are unofficial packages for Homebrew and MacPorts. To use the
    [MongoDB Homebrew tap](https://oreil.ly/9xoTe), you first install the tap and
    then install the required version of MongoDB via Homebrew. The following example
    highlights how to install the latest production version of MongoDB Community Edition.
    You can add the custom tap in a macOS terminal session using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Then install the latest available production release of MongoDB Community Server
    (including all command-line tools) using:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'If you go for the MacPorts version, be forewarned: it takes hours to compile
    all the Boost libraries, which are MongoDB prerequisites. Start the download and
    leave it overnight.'
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of the package manager you use, it is a good idea to figure out where
    it is putting the MongoDB log files before you have a problem and need to find
    them. It’s important to make sure they’re being saved properly in advance of any
    possible issues.
  prefs: []
  type: TYPE_NORMAL
