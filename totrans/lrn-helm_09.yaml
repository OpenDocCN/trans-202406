- en: Appendix A. Chart API Versions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This appendix covers the differences between chart API versions 2 and 1 (legacy).
  prefs: []
  type: TYPE_NORMAL
- en: The chart API version is specified in each chart’s *Chart.yaml* file and is
    used by Helm to determine how to parse the chart and which feature sets are made
    available.
  prefs: []
  type: TYPE_NORMAL
- en: For new charts, API version 2 should generally be used. However, many publicly
    available charts were created prior to the genesis of API version 2, and use 1,
    the legacy API version. Here we will go into detail on each of these API versions
    and the ways in which they are different.
  prefs: []
  type: TYPE_NORMAL
- en: API Version 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chart API version 2 is the current API version that was introduced in Helm 3\.
    This is the default API version used when new charts are created using `helm create`.
  prefs: []
  type: TYPE_NORMAL
- en: Charts using API version 2 are guaranteed to be supported by Helm 3, but not
    necessarily by Helm 2\. If you are only planning to support Helm 3 and above,
    it is recommended to just use this API version.
  prefs: []
  type: TYPE_NORMAL
- en: The Chart.yaml File
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following is an example of a *Chart.yaml* file for a chart using API version
    2:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_chart_api_versions_CO1-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Field denoting chart API version 2
  prefs: []
  type: TYPE_NORMAL
- en: Each of the top-level fields in this file will be described in detail in the
    following subsections.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: apiVersion'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Required*'
  prefs: []
  type: TYPE_NORMAL
- en: The API version of this chart.
  prefs: []
  type: TYPE_NORMAL
- en: This field should *always* be set to `v2`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: name'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Required*'
  prefs: []
  type: TYPE_NORMAL
- en: The name of the chart.
  prefs: []
  type: TYPE_NORMAL
- en: In most cases, this should be 1-to-1 with the name of your application (i.e.,
    `lemon`). If your application is broken into multiple, installable components,
    it is common to suffix this name with a description of the component; for example,
    `lemon-frontend`, `lemon-backend`, etc.
  prefs: []
  type: TYPE_NORMAL
- en: Chart names must be composed of lowercase letters, numbers, and dashes (`-`).
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: version'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Required*'
  prefs: []
  type: TYPE_NORMAL
- en: The current version of the chart, strictly formatted using Semantic Versioning
    2.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: type'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Required*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifies the chart type, which may be one on the following two types:'
  prefs: []
  type: TYPE_NORMAL
- en: '`application`'
  prefs: []
  type: TYPE_NORMAL
- en: A typical, installable chart
  prefs: []
  type: TYPE_NORMAL
- en: '`library`'
  prefs: []
  type: TYPE_NORMAL
- en: A noninstallable chart containing common definitions, meant to be included as
    a dependency chart
  prefs: []
  type: TYPE_NORMAL
- en: This field is unique to API version 2\. In API version 1, all charts are considered
    to be `application` charts. For more information on `library` charts, please see
    [Chapter 6](ch06.xhtml#advanced_charts).
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: description'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A simple, one-sentence description of the chart.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: appVersion'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The version of the application that the chart represents.
  prefs: []
  type: TYPE_NORMAL
- en: This field should match the version of the *software* you are deploying, not
    the chart itself. For example, if you’re creating a new internal chart to deploy
    a custom configured Nginx 1.18.0, the `appVersion` field would be `1.18.0`, whereas
    the `version` field would be something more like `0.1.0` (initial version).
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: home'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An absolute URL to the homepage for the chart and/or application.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: icon'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An absolute URL to an image that can be used as an icon for this chart.
  prefs: []
  type: TYPE_NORMAL
- en: This field is typically used by services such as Artifact Hub to display an
    appropriate image for the chart available for download.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: sources'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One or more absolute URLs to the source code of the chart (if made available).
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: keywords'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A list of keywords or topics that the chart represents.
  prefs: []
  type: TYPE_NORMAL
- en: These are used by services such as Artifact Hub to group together charts by
    category or further enhance search capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: maintainers'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A list of name/email/URL combinations for the person(s) who maintain the chart.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: deprecated'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whether or not the chart is deprecated.
  prefs: []
  type: TYPE_NORMAL
- en: This field is used by services such as Artifact Hub to determine when to remove
    chart listings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: annotations'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Additional mappings for the chart uninterpreted by Helm, made available for
    inspection by other applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: this field is *not* linked to Kubernetes annotations in any meaningful
    way; however, you may choose to define these as Kubernetes-specific annotations
    depending on how you decide to use this field.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: kubeVersion'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A SemVer constraint specifying the minimum Kubernetes version required for the
    chart to properly install.
  prefs: []
  type: TYPE_NORMAL
- en: Some charts may use Kubernetes resource types and API groups that are only available
    on certain versions of Kubernetes. If an operator attempts to install a chart
    with an incompatible `kubeVersion` compared to that of the target cluster, an
    error will occur before any Kubernetes resources are provisioned.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: dependencies'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A list of dependencies for the chart.
  prefs: []
  type: TYPE_NORMAL
- en: The chart dependencies listed here will be negotiated and placed appropriately
    into the *charts/* subdirectory when you run `helm dependency update`.
  prefs: []
  type: TYPE_NORMAL
- en: At a bare minimum, each entry under the `dependencies` block should contain
    a `name` subfield, and either a `repository` or an `alias` subfield. A `repository`
    should be an absolute URL to a valid chart repository (serving */index.yaml*).
    An `alias` should be the character “@” followed by the name of a previously added
    chart repository (e.g., *`@myrepo`*).
  prefs: []
  type: TYPE_NORMAL
- en: For more information about how to use chart dependencies, see [“Chart Dependencies”](ch06.xhtml#chart_dependencies).
  prefs: []
  type: TYPE_NORMAL
- en: The Chart.lock File
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When a chart has dependencies listed under the `dependencies` field in *Chart.yaml*,
    a special file named *Chart.lock* is generated and updated each time you run the
    command `helm dependency update`. When a chart contains a *Chart.lock* file, operators
    can run `helm dependency build` to generate the *charts/* directory without the
    need to renegotiate dependencies.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a *Chart.lock* file generated based on the dependencies
    specified in the *Chart.yaml* example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Dynamic fields such as `conditions` and `tags` are stripped out, and this file
    simply contains the `repository`, `name`, and `version` that were resolved for
    each dependency during the update, as well as a `digest` (SHA-256) and a `generated`
    timestamp.
  prefs: []
  type: TYPE_NORMAL
- en: 'Notice that the `alias: "@myrepo"` setting for the PostgreSQL dependency has
    been converted into `repository: https://charts.example.com/`. This means that
    sometime prior to updating the dependencies, a chart repository was added using
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: API Version 1 (legacy)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chart API version 1 is the original API version, and the only version recognized
    by Helm 2\. The `apiVersion` field in *Chart.yaml* was first introduced in Helm
    3 and is not recognized by Helm 2\. Using Helm 2, all charts are assumed to be
    adhering to API version 1\. In Helm 3, the `apiVersion` is strictly required.
  prefs: []
  type: TYPE_NORMAL
- en: Charts using API version 1 are guaranteed to be supported by both Helm 2 and
    Helm 3, but may not be able to support certain features that will only be made
    available to Helm 3 in the future.
  prefs: []
  type: TYPE_NORMAL
- en: The Chart.yaml File
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The format of the *Chart.yaml* file for charts using API version 1 is nearly
    identical to that of charts using API version 2, with a couple notable differences.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is an example of a *Chart.yaml* file for a chart using API version
    1:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[![1](Images/1.png)](#co_chart_api_versions_CO2-1)'
  prefs: []
  type: TYPE_NORMAL
- en: Field denoting chart API version 1
  prefs: []
  type: TYPE_NORMAL
- en: Differences from v2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As it compares to the *Chart.yaml* example for API version 2, there are some
    subtle differences:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `apiVersion` field is set to `v1` (Note: In Helm 2, this field is not strictly
    required).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `type` field is missing. There is no concept of library charts in API version
    1.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `dependencies` field is missing. In API version 1, chart dependencies are
    specified in a dedicated file called *requirements.yaml* (as described later in
    this section).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Two additional fields are present: `tillerVersion` and `engine`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: In many ways, the two chart API versions can essentially be considered Helm
    2 charts (`v1`) versus Helm 3 charts (`v2`). This is especially true since chart
    API version 2 was introduced at the exact same time that Helm 3 was released.
  prefs: []
  type: TYPE_NORMAL
- en: The reason these versions aren’t instead named `v2` and `v3` (denoting the Helm
    version) is because the API for charts is independently versioned from the API
    for the Helm CLI.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if and when Helm 4 is released, it is possible that chart API version
    2 will still be used. Likewise, if chart API version 2 is later determined to
    be insufficient for whatever reason, a new chart API version 3 could be introduced
    prior to another major Helm release.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: tillerVersion (legacy)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A SemVer constraint specifying the Tiller version required for the chart to
    properly install.
  prefs: []
  type: TYPE_NORMAL
- en: Tiller is a legacy Helm server-side component only used in Helm 2\. This field
    is ignored entirely when using Helm 3.
  prefs: []
  type: TYPE_NORMAL
- en: 'Field: engine (legacy)'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The name of the template engine to use. Defaults to *gotpl*.
  prefs: []
  type: TYPE_NORMAL
- en: The requirements.yaml File (Legacy)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In API version 1, there is an additional file called *requirements.yaml* that
    specifies the chart’s dependencies. The format of this file is identical to the
    `dependencies` field as defined in API version 2.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example of a standalone *requirements.yaml* file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'For a detailed description of each of the subfields, please see the subsection
    titled “Field: dependencies” under API version `v2`. In API version `v2`, the
    contents of this file are defined directly in *Chart.yaml*.'
  prefs: []
  type: TYPE_NORMAL
- en: The requirements.lock File (Legacy)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In API version 1, the chart dependency lock file has the name *requirements.lock*.
    This file is identical in format and purpose to the *Chart.lock* file described
    under API version 2, just with a different name. For more information, please
    see the subsection titled “The Chart.lock File” under API version 2.
  prefs: []
  type: TYPE_NORMAL
