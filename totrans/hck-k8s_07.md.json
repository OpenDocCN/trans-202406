["```\n$ kubectl api-resources --namespaced=false\nNAME                              SHORTNAMES ... NAMESPACED   KIND\ncomponentstatuses                 cs             false ComponentStatus\nnamespaces                        ns             false Namespace\nnodes                             no             false Node\npersistentvolumes                 pv             false PersistentVolume\n...\n```", "```\nuser@host:~ [0]$ kubectl get nodes --show-labels ![1](Images/1.png)\nNAME          STATUS   ROLES    AGE   VERSION   LABELS\nkube-node-1   Ready    master   11m   v1.22.1   beta.kubernetes.io/arch=amd64,...\nkube-node-2   Ready    <none>   11m   v1.22.1   beta.kubernetes.io/arch=amd64,...\nkube-node-3   Ready    <none>   11m   v1.22.1   beta.kubernetes.io/arch=amd64,...\n\nuser@host:~ [0]$ kubectl label nodes kube-node-2 \\\n  node-restriction.kubernetes.io/nodeclass=web-facing ![2](Images/2.png)\n\n```", "```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: high-risk-workload\nspec:\n  replicas: 1\n  template:\n    spec:\n      containers:\n      - image: nginx/\n# ...\n      nodeSelector:\n        node-restriction.kubernetes.io/nodeclass: web-facing ![3](Images/3.png)\n\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  annotations:\n    scheduler...io/node-selector: node-restriction.k...s.io/nodeclass=web-facing\n  name: my-web-facing-ns\n```", "```\n$ kubectl taint nodes kube-node-2 key1=value1:NoSchedule\n```", "```\nuser@pod:~ [0]$ curl https://kubernetes.default/api/v1/namespaces/default/pods/ \\\n  --header \"Authorization: Bearer ${TOKEN}\" --insecure ![1](Images/1.png)\n\nuser@pod:~ [0]$ kubectl --token=\"$(<${DIR}/token)\" \\\n  --certificate-authority=\"${DIR}/ca.crt\" get pods ![2](Images/2.png)\n\nuser@pod:~ [0]$ kubectl --token=\"$(<${DIR}/token)\" \\\n  --insecure-skip-tls-verify get pods ![3](Images/3.png)\n\nuser@pod:~ [0]$ kubectl --token=\"$(<${DIR}/token)\" -k \\\n  get buckets ack-test-smoke-s3 -o yaml ![4](Images/4.png)\n```", "```\nuser@pod:~ [0]$ openssl s_client -connect kubernetes.default:443 \\\n  < /dev/null 2>/dev/null |\n  openssl x509 -noout -text | grep -E \"DNS:|IP Address:\"\n\nDNS:kube-node-1, DNS:kubernetes, DNS:kubernetes.default,\nDNS:kubernetes.default.svc, DNS:kubernetes.default.svc.cluster.local,\nIP Address:10.96.0.1, IP Address:10.0.1.1, IP Address:167.99.95.202\n```", "```\nroot@pod:/ [60]# curl -k https://kubernetes.default:443/version\n{\n  \"major\": \"1\",\n  \"minor\": \"22\",\n  \"gitVersion\": \"v1.22.0\",\n# ...\n```", "```\n--encryption-provider-config=/etc/kubernetes/encryption.yaml\n```", "```\napiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n  - resources:\n    - secrets\n    providers:\n    - aescbc:\n        keys:\n        - name: key1\n          secret: <BASE64 ENCODED SECRET ENCRYPTION KEY>\n    - identity: {}\n```", "```\napiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n  - resources:\n      - secrets\n    providers:\n      - kms:\n          name : myKmsPlugin\n          endpoint: unix:///var/kms-plugin/socket.sock\n          cachesize: 100\n```", "```\n# kubectl get -n kube-system -o wide serviceaccounts | grep controller\nattachdetach-controller              1         20m\ncalico-kube-controllers              1         20m\ncertificate-controller               1         20m\nclusterrole-aggregation-controller   1         20m\ncronjob-controller                   1         20m\ndaemon-set-controller                1         20m\ndeployment-controller                1         20m\ndisruption-controller                1         20m\nendpoint-controller                  1         20m\nendpointslice-controller             1         20m\nendpointslicemirroring-controller    1         20m\nexpand-controller                    1         20m\njob-controller                       1         20m\nnamespace-controller                 1         20m\nnode-controller                      1         20m\npv-protection-controller             1         20m\npvc-protection-controller            1         20m\nreplicaset-controller                1         20m\nreplication-controller               1         20m\nresourcequota-controller             1         20m\nservice-account-controller           1         20m\nservice-controller                   1         20m\nstatefulset-controller               1         20m\nttl-controller                       1         20m\n```", "```\n  - command:\n    - kube-controller-manager\n    - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf\n    - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf\n    - --bind-address=127.0.0.1\n    - --client-ca-file=/etc/kubernetes/pki/ca.crt\n    - --cluster-name=kubernetes\n    - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt\n    - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key\n    - --controllers=*,bootstrapsigner,tokencleaner\n    - --kubeconfig=/etc/kubernetes/controller-manager.conf\n    - --leader-elect=true\n    - --port=0\n    - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt\n    - --root-ca-file=/etc/kubernetes/pki/ca.crt\n    - --service-account-private-key-file=/etc/kubernetes/pki/sa.key\n    - --use-service-account-credentials=true\n    image: k8s.gcr.io/kube-controller-manager:v1.20.4\n    volumeMounts:\n    - mountPath: /etc/ssl/certs\n      name: ca-certs\n      readOnly: true\n    - mountPath: /etc/ca-certificates\n      name: etc-ca-certificates\n      readOnly: true\n    - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec\n      name: flexvolume-dir\n    - mountPath: /etc/kubernetes/pki\n      name: k8s-certs\n      readOnly: true\n    - mountPath: /etc/kubernetes/controller-manager.conf\n      name: kubeconfig\n      readOnly: true\n    - mountPath: /usr/local/share/ca-certificates\n      name: usr-local-share-ca-certificates\n      readOnly: true\n    - mountPath: /usr/share/ca-certificates\n      name: usr-share-ca-certificates\n      readOnly: true\n```", "```\n# find /proc/27386/root/etc/kubernetes/\n/proc/27386/root/etc/kubernetes/\n/proc/27386/root/etc/kubernetes/pki\n/proc/27386/root/etc/kubernetes/pki/apiserver.crt\n/proc/27386/root/etc/kubernetes/pki/front-proxy-client.key\n/proc/27386/root/etc/kubernetes/pki/ca.key\n/proc/27386/root/etc/kubernetes/pki/ca.crt\n/proc/27386/root/etc/kubernetes/pki/sa.key\n/proc/27386/root/etc/kubernetes/pki/sa.pub\n/proc/27386/root/etc/kubernetes/pki/front-proxy-client.crt\n/proc/27386/root/etc/kubernetes/pki/apiserver-kubelet-client.crt\n/proc/27386/root/etc/kubernetes/pki/front-proxy-ca.key\n/proc/27386/root/etc/kubernetes/pki/apiserver-kubelet-client.key\n/proc/27386/root/etc/kubernetes/pki/apiserver.key\n/proc/27386/root/etc/kubernetes/pki/front-proxy-ca.crt\n/proc/27386/root/etc/kubernetes/controller-manager.conf\n```", "```\n  containers:\n  - command:\n    - kube-scheduler\n    - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf\n    - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf\n    - --bind-address=127.0.0.1\n    - --kubeconfig=/etc/kubernetes/scheduler.conf\n    - --leader-elect=true\n    - --port=0\n    image: k8s.gcr.io/kube-scheduler:v1.20.4\n```", "```\nroot@kube-node-2 # kubectl get secrets -n null ![1](Images/1.png)\nError from server (Forbidden): secrets is forbidden: User \"system:node:kube-node-2\"\ncannot list resource \"secrets\" in API group \"\" in the namespace \"null\":\nNo Object name found\n\nroot@kube-node-2 # kubectl label --overwrite \\\n    node kube-node-2 sublimino=was_here ![2](Images/2.png)\nnode/kube-node-2 labeled\n\n```", "```\n# try to modify a restricted label\nroot@kube-node-2 # kubectl label --overwrite \\\n    node kube-node-2 example.com.node-restriction.kubernetes.io/fips=true\nError from server (Forbidden): nodes \"kube-node-2\" is forbidden: is not allowed\nto modify labels: example.com.node-restriction.kubernetes.io/fips\n```"]