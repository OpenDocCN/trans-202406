["```\n$ kubectl get pods -n kube-system\nNAME                               READY   STATUS    RESTARTS       AGE\ncilium-k5td6                       1/1     Running   0              110s\ncilium-operator-f5dcdcc8d-njfbk    1/1     Running   0              110s\n\n```", "```\n$ kubectl run grocery-store --image=nginx:1.25.3-alpine \\\n  -l app=grocery-store,role=backend --port 80\npod/grocery-store created\n$ kubectl run payment-processor --image=nginx:1.25.3-alpine \\\n  -l app=payment-processor,role=api --port 80\npod/payment-processor created\n$ kubectl run coffee-shop --image=nginx:1.25.3-alpine \\\n  -l app=coffee-shop,role=backend --port 80\n\n```", "```\n$ kubectl get pod payment-processor --template '{{.status.podIP}}'\n10.244.0.136\n$ kubectl exec grocery-store -it -- wget --spider --timeout=1 10.244.0.136\nConnecting to 10.244.0.136 (10.244.0.136:80)\nremote file exists\n$ kubectl exec coffee-shop -it -- wget --spider --timeout=1 10.244.0.136\nConnecting to 10.244.0.136 (10.244.0.136:80)\nremote file exists\n\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: api-allow\nspec:\n  podSelector:                     ![1](Images/1.png)\n    matchLabels:\n      app: payment-processor\n      role: api\n  ingress:                         ![2](Images/2.png)\n  - from:\n    - podSelector:\n        matchLabels:\n          app: coffee-shop\n```", "```\n$ kubectl apply -f networkpolicy-api-allow.yaml\nnetworkpolicy.networking.k8s.io/api-allow created\n\n```", "```\nkubectl exec grocery-store -it -- wget --spider --timeout=1 10.244.0.136\nConnecting to 10.244.0.136 (10.244.0.136:80)\nwget: download timed out\ncommand terminated with exit code 1\n$ kubectl exec coffee-shop -it -- wget --spider --timeout=1 10.244.0.136\nConnecting to 10.244.0.136 (10.244.0.136:80)\nremote file exists\n\n```", "```\n$ kubectl get networkpolicy api-allow\nNAME         POD-SELECTOR                     AGE\napi-allow    app=payment-processor,role=api   83m\n\n```", "```\n$ kubectl describe networkpolicy api-allow\nName:         api-allow\nNamespace:    default\nCreated on:   2024-01-10 09:06:59 -0700 MST\nLabels:       <none>\nAnnotations:  <none>\nSpec:\n  PodSelector:     app=payment-processor,role=api\n  Allowing ingress traffic:\n    To Port: <any> (traffic allowed to all ports)\n    From:\n      PodSelector: app=coffee-shop\n  Not affecting egress traffic\n  Policy Types: Ingress\n\n```", "```\n$ kubectl create namespace internal-tools\nnamespace/internal-tools created\n$ kubectl run metrics-api --image=nginx:1.25.3-alpine --port=80 \\\n  -l app=api -n internal-tools\npod/metrics-api created\n$ kubectl run metrics-consumer --image=nginx:1.25.3-alpine --port=80 \\\n  -l app=consumer -n internal-tools\npod/metrics-consumer created\n\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-all\n  namespace: internal-tools\nspec:\n  podSelector: {}                  ![1](Images/1.png)\n  policyTypes:                     ![2](Images/2.png)\n  - Ingress                        ![2](Images/2.png)\n  - Egress                         ![2](Images/2.png)\n```", "```\n$ kubectl apply -f networkpolicy-deny-all.yaml\nnetworkpolicy.networking.k8s.io/default-deny-all created\n\n```", "```\n$ kubectl get pod metrics-api --template '{{.status.podIP}}' -n internal-tools\n10.244.0.182\n$ kubectl exec metrics-consumer -it -n internal-tools \\\n  -- wget --spider --timeout=1 10.244.0.182\nConnecting to 10.244.0.182 (10.244.0.182:80)\nwget: download timed out\ncommand terminated with exit code 1\n$ kubectl get pod metrics-consumer --template '{{.status.podIP}}' \\\n  -n internal-tools\n10.244.0.70\n$ kubectl exec metrics-api -it -n internal-tools \\\n  -- wget --spider --timeout=1 10.244.0.70\nConnecting to 10.244.0.70 (10.244.0.70:80)\nwget: download timed out\ncommand terminated with exit code 1\n\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: port-allow\n  namespace: internal-tools\nspec:\n  podSelector:\n    matchLabels:\n      app: api\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          app: consumer\n    ports:                         ![1](Images/1.png)\n    - protocol: TCP                ![1](Images/1.png)\n      port: 80                     ![1](Images/1.png)\n```"]