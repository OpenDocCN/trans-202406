- en: Conclusion
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'We hope that the book helped you understand how observability and security
    for Kubernetes deployments are different from traditional deployments. And we
    hope that the book is a guide for you as you design and implement your security
    and observability strategy, whether you are in the early stages of your journey
    or further along in adopting Kubernetes. The key takeaway is that you need to
    think about security and observability at every stage of your journey; it should
    not be an afterthought that is implemented once you have designed your deployment.
    We often hear folks say, “I will not need to worry about security or observability
    for a while; let me first get my workloads running in Kubernetes.” This line of
    thinking is not right, as the right security implementation will likely alter
    the design and will likely cause an untimely iteration to the design and delay
    the implementation. The following are some of the characteristics that make Kubernetes
    different:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望这本书能帮助您了解 Kubernetes 部署的可观察性和安全性与传统部署的不同之处。我们希望这本书能够成为您设计和实施安全性和可观察性策略的指南，无论您是在旅程的早期阶段还是在采用
    Kubernetes 的更进一步阶段。关键的观点是，在旅程的每个阶段都需要考虑安全性和可观察性；这不应该是您设计部署后才实施的事后想法。我们经常听到有人说：“我暂时不需要担心安全性或可观察性；让我先让我的工作负载在
    Kubernetes 中运行起来。” 这种思维方式是不正确的，因为正确的安全实施可能会改变设计，并可能导致设计的不时迭代和实施的延迟。以下是 Kubernetes
    不同的一些特征：
- en: Kubernetes is the most widely adopted orchestration engine for deploying modern
    applications and is used both in public cloud and on-premise deployments.
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 是部署现代应用程序的最广泛采用的编排引擎，被用于公有云和本地部署。
- en: Kubernetes is declarative in nature and enables users to specify outcomes for
    their application deployments (e.g., scale, specifications, access, etc.).
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 是声明性的，并使用户能够为他们的应用程序部署指定结果（例如，规模、规格、访问等）的性质。
- en: Kubernetes continuously monitors the status of the deployment and takes corrective
    action to ensure the deployment is operating as specified.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 不断监视部署的状态，并采取纠正措施，以确保部署按照指定的方式运行。
- en: Kubernetes abstracts the details of networking, IP addresses, etc., and instead
    allows users to define identity using higher-level constructs like labels.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 抽象了网络、IP 地址等细节，而允许用户使用高级构造（如标签）来定义身份。
- en: Due to these characteristics, implementing observability and security for Kubernetes
    needs a different approach.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于这些特性，为 Kubernetes 实施可观察性和安全性需要采用不同的方法。
- en: 'These characteristics of Kubernetes have also altered the development process
    and the teams involved. Previously, development teams built applications that
    would be deployed on preprovisioned infrastructure. In today’s world, when you
    deploy an application in the cloud, you first provision the infrastructure (e.g.,
    hosts, VMs, etc.) that is required for your application and then deploy your application
    on the provisioned infrastructure. Also, the infrastructure is dynamic and adapts
    to the needs of the application. The following lists the life cycle of an application
    in a Kubernetes cluster and the role of various teams:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 的这些特性也改变了开发过程和涉及的团队。以前，开发团队构建的应用程序将部署在预配基础设施上。在今天的世界中，当您在云中部署应用程序时，您首先会为应用程序需要的基础设施（如主机、虚拟机等）预配基础设施，然后将应用程序部署在预配的基础设施上。此外，基础设施是动态的，并根据应用程序的需求进行调整。以下列出了在
    Kubernetes 集群中应用程序的生命周期以及各个团队的角色：
- en: The deployment of an application comprises the build stage (create the resources
    needed for the application), the deploy stage (deploy the application using Kubernetes),
    and the runtime stage (application operation post deployment).
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的部署包括构建阶段（创建应用程序所需的资源）、部署阶段（使用 Kubernetes 部署应用程序）和运行时阶段（部署后的应用程序运行）。
- en: The teams that are responsible for successful deployment and operation of the
    application are the operations team, the platform team, the networking team, the
    security team, and the compliance team.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 负责应用程序成功部署和运行的团队包括运维团队、平台团队、网络团队、安全团队和合规团队。
- en: In order to design an effective security and observability strategy for your
    application, you need to consider security and observability at all stages.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要为您的应用设计一个有效的安全性和可观察性策略，您需要在所有阶段考虑安全性和可观察性。
- en: Collaboration between the teams is critical to success as security is a joint
    responsibility of all the teams involved.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队之间的合作对于成功至关重要，因为安全是所有涉及团队的共同责任。
- en: 'The following checklist is a good guide to ensure that you have an effective
    security and observability implementation for your Kubernetes deployments:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的检查清单是确保你在 Kubernetes 部署中实现有效安全性和可观察性的良好指南：
- en: All images are scanned for known vulnerabilities prior to deployment and then
    periodically scanned for vulnerabilities discovered post-deployment.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有镜像在部署前都会进行已知漏洞的扫描，然后定期扫描已部署后发现的漏洞。
- en: All container images being deployed are built with minimal base OS components
    (e.g., distroless or scratch images).
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有部署的容器镜像都使用最小化的基础操作系统组件构建（例如 distroless 或 scratch 镜像）。
- en: The operating system on the host is an immutable Linux distribution that reduces
    the attack surface area.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机操作系统采用不可变的 Linux 发行版，减少攻击面。
- en: The host OS and the pods deployed are configured with controls that only allow
    required access (e.g., system calls, filesystem access).
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机操作系统和部署的 Pod 都配置了控制，只允许必要的访问（例如系统调用、文件系统访问）。
- en: The Kubernetes cluster deployment is hardened with the encryption of secrets,
    securing access to the API server and the data store.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 集群部署采用密钥加密，确保 API 服务器和数据存储的安全访问。
- en: Deployment of workloads in your Kubernetes cluster is controlled by best practices
    for RBAC and admission controllers to enforce policies.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 集群中工作负载的部署受到 RBAC 和准入控制器的最佳实践控制，以强制执行策略。
- en: All access to services in your cluster is exposed to external clients using
    security best practices.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有服务的访问都遵循安全最佳实践，暴露给外部客户端。
- en: The Kubernetes cluster has an integration with a perimeter security device (firewall
    or a gateway) to enable the device to have visibility into traffic originating
    from the cluster so it can add effective controls.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes 集群与周界安全设备（防火墙或网关）集成，使设备能够查看源自集群的流量，并添加有效的控制。
- en: You need to ensure that access control is in place for network traffic and application
    traffic using L3/L7 policies.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要确保网络流量和应用程序流量的访问控制已经就位，使用 L3/L7 策略。
- en: Ensure that you are using a tool native to Kubernetes to implement observability;
    e.g., your tool needs to be aware that pods backing a service or a deployment
    are identical and should be viewed as a unit to “observe” a service.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你使用 Kubernetes 原生工具实现可观察性；例如，你的工具需要意识到支持服务或部署的 Pod 是相同的，并应作为一个单元来“观察”一个服务。
- en: Ensure that you implement machine learning to baseline behavior of various entities
    in your cluster and build an anomaly detection system layered above that to detect
    security incidents.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你实施机器学习来基线集群中各种实体的行为，并在此基础上构建异常检测系统，用于检测安全事件。
- en: Ensure that you implement threat defense features like IDS, IPS, and advanced
    threat detection techniques in your cluster to detect malicious activity inside
    your cluster.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保在集群中实施威胁防御功能，如 IDS、IPS 和高级威胁检测技术，以便检测集群内的恶意活动。
- en: Ensure that you have implemented data in transit encryption for communication
    inside the cluster as well as communication to external entities.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你已经实现了数据传输加密，包括集群内部和与外部实体的通信。
- en: We wish you the best in your Kubernetes journey as you implement security and
    observability for your workloads!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 祝愿你在 Kubernetes 之旅中实施工作负载的安全性和可观察性取得最好的结果！
