["```\n<intent-filter>\n  <action android:name=\"android.intent.action.MAIN\" />\n  <category android:name=\"android.intent.category.LAUNCHER\" />\n</intent-filter>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest package=\"org.oreilly.nmd\"\n          xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n  <application\n      android:allowBackup=\"false\"\n      android:icon=\"@mipmap/ic_launcher\"\n      android:label=\"@string/app_name\"\n      android:roundIcon=\"@mipmap/ic_launcher_round\"\n      android:supportsRtl=\"true\"\n      android:theme=\"@style/AppTheme\">\n    <activity android:name=\".MainActivity\">\n      <intent-filter>\n        <action android:name=\"android.intent.action.MAIN\" />\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n      </intent-filter>\n    </activity>\n    <activity android:name=\".BrowseContentActivity\" />\n    <activity android:name=\".BookDetailActivity\" />\n    <activity android:name=\".SearchResultsActivity\" />\n  </application>\n\n</manifest>\n```", "```\n<activity android:name=\".MyActivity\" />\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <fragment android:name=\".ListFragment\"\n            android:layout_width=\"200dp\"\n            android:layout_height=\"match_parent\" />\n    <fragment android:name=\".DetailFragment\"\n            android:layout_weight=\"1\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\" />\n</LinearLayout>\n```", "```\nwindow.rootViewController = viewController\n```", "```\nfunc application(_ application: UIApplication,\n  didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) ->\n  Bool {\n    // Override point for customization after application launch\n    return true\n}\n```", "```\n<key>UIMainStoryboardFile</key>\n<string>Main</string>\n```", "```\nFailed to instantiate the default view controller\n    for UIMainStoryboardFile 'Main' - perhaps the designated entry point is not\n    set?\n```", "```\nfunc application(_ application: UIApplication,\n  didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) ->\n  Bool {\n    window = UIWindow(frame: UIScreen.main.bounds)\n    window?.rootViewController = UIStoryboard(name: \"Main\", bundle: nil).\n                                   instantiateInitialViewController()\n    window?.makeKeyAndVisible()\n    return true\n}\n```", "```\n// Create the view controllers\nlet primaryViewController = ...\nlet secondaryViewController = ...\n\n// Present the secondary view controller as the active view controller\nprimaryViewController.show(secondaryViewController, sender: nil)\n```", "```\nlet primaryViewController = UIViewController(nibName: nil, bundle: nil)\nlet secondaryViewController = UIViewController(nibName: nil, bundle: nil)\n\n// Add the primary view controller to a navigation controller\nlet _ = UINavigationController(rootViewController: primaryViewController)\n\n...\n\n// Check if the view controller is part of a navigation controller\nif let navigationController = primaryViewController.navigationController {\n    // Push the view controller onto the navigation stack\n    navigationController.pushViewController(secondaryViewController, animated: true)\n} else {\n    // Present the view controller modally because no navigation stack exists\n    primaryViewController.present(secondaryViewController, animated: true, completion: nil)\n}\n```", "```\nlet primaryViewController = UIViewController(nibName: nil, bundle: nil)\nlet secondaryViewController = UIViewController(nibName: nil, bundle: nil)\n\n// Change the presentation style and the transition style\nsecondaryViewController.modalPresentationStyle = .formSheet\nsecondaryViewController.modalTransitionStyle = .flipHorizontal\n\n// Change the active UI controller\nprimaryViewController.show(secondaryViewController, sender: nil)\n```", "```\nprimaryViewController.performSegue(withIdentifier: \"ExampleSegue\", sender: nil)\n```", "```\nclass ViewController: UIViewController {\n\n    func buttonPressed(button: UIButton) {\n        // Code to trigger the segue. This could also be done directly\n        // on the button itself within the storyboard editor\n        performSegue(withIdentifier: \"ExampleSegue\", sender: button)\n    }\n\n    override func shouldPerformSegue(withIdentifier identifier: String,\n      sender: Any?) -> Bool {\n        // This is an optional method that returns true by default\n        // Returing false would cancel the segue\n        return true\n    }\n\n    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {\n        // This is the destination view controller in the segue\n        let destinationViewController = segue.destination\n\n        // Let's pass some data to the destination segue\n        ...\n    }\n}\n```", "```\nlet viewController = UIStoryboard(name: \"Main\", bundle: nil).\n                    instantiateViewController(withIdentifier: \"ExampleViewController\")\n```", "```\nclass ViewController: UIViewController {\n\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n\n        // Perform some customization\n    }\n\n}\n```", "```\nclass ViewController: UIViewController {\n    var hugeDataFile: Any?\n\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n        // Set up operations not dependent on a view\n        // For example, setting up that hugeDataFile object in the background\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // The view has been loaded from the storyboard\n        title = \"Awesome View Controller Example\"\n    }\n\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        // The view is about to be displayed on the screen\n    }\n\n    override func viewDidAppear(_ animated: Bool) {\n        super.viewDidAppear(animated)\n        // The view has been displayed on the screen\n    }\n\n    override func viewWillDisappear(_ animated: Bool) {\n        super.viewWillDisappear(animated)\n        // The view is about to disappear from the screen\n    }\n\n    override func viewDidDisappear(_ animated: Bool) {\n        super.viewDidDisappear(animated)\n        // The view has disappeared from the screen\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Uh-oh! Better clear out that huge data file we were holding on to\n        hugeDataFile = nil\n    }\n}\n```"]