- en: Part VI. Advanced Patterns
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六部分. 高级模式
- en: The patterns in this category cover more complex topics that do not fit in any
    of the other categories. Some of the patterns here such as *Controller* or *Operator*
    are timeless, and Kubernetes itself is built on them. However, some of the other
    pattern implementations are still evolving. To keep up with this, we will keep
    our [online examples](https://oreil.ly/p5EwH) up to date and reflect the latest
    developments in this space.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 此类别中的模式涵盖了一些复杂的主题，这些主题不适合其他任何类别。例如*控制器*或*操作者*这类模式是永恒的，Kubernetes 本身就是建立在它们之上的。然而，其他一些模式实现仍在不断演变。为了跟上这一变化，我们将保持我们的[在线示例](https://oreil.ly/p5EwH)更新，并反映这一领域的最新发展。
- en: 'In the following chapters, we explore these advanced patterns:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将探讨这些高级模式：
- en: '[Chapter 27, “Controller”](ch27.html#Controller), is essential to Kubernetes
    itself and shows how custom controllers can extend the platform.'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第27章，“控制器”](ch27.html#Controller)，对 Kubernetes 本身至关重要，展示了如何通过自定义控制器扩展平台。'
- en: '[Chapter 28, “Operator”](ch28.html#Operator), combines a controller with custom
    domain-specific resources to encapsulate operational knowledge in an automated
    form.'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第28章，“操作者”](ch28.html#Operator)，将控制器与自定义领域特定资源结合起来，以自动化形式封装操作知识。'
- en: '[Chapter 29, “Elastic Scale”](ch29.html#ElasticScale), describes how Kubernetes
    can handle dynamic loads by scaling in various dimensions.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第29章，“弹性扩展”](ch29.html#ElasticScale)，描述了 Kubernetes 如何通过多维度缩放来处理动态负载。'
- en: '[Chapter 30, “Image Builder”](ch30.html#ImageBuilder), moves the aspect of
    building application images onto the cluster itself.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第30章，“镜像构建器”](ch30.html#ImageBuilder)，将构建应用程序镜像的方面移到集群本身。'
