["```\nlet singer = \"Aretha\";\n```", "```\n// Inferred type: string\nlet bestSong = Math.random() > 0.5\n  ? \"Chain of Fools\"\n  : \"Respect\";\n```", "```\nlet firstName = \"Whitney\";\nfirstName.length();\n//        ~~~~~~\n//  This expression is not callable.\n//    Type 'Number' has no call signatures\n```", "```\nlet let wat;\n//      ~~~\n// Error: ',' expected.\n```", "```\nlet let, wat;\n```", "```\nconsole.blub(\"Nothing is worth more than laughter.\");\n//      ~~~~\n// Error: Property 'blub' does not exist on type 'Console'.\n```", "```\nlet firstName = \"Carole\";\nfirstName = \"Joan\";\n```", "```\nlet lastName = \"King\";\nlastName = true;\n// Error: Type 'boolean' is not assignable to type 'string'.\n```", "```\nlet rocker; // Type: any\n\nrocker = \"Joan Jett\"; // Type: string\nrocker.toUpperCase(); // Ok\n\nrocker = 19.58; // Type: number\nrocker.toPrecision(1); // Ok\n\nrocker.toUpperCase();\n//     ~~~~~~~~~~~\n// Error: 'toUpperCase' does not exist on type 'number'.\n```", "```\nlet rocker: string;\nrocker = \"Joan Jett\";\n```", "```\n// output .js file\nlet rocker;\nrocker = \"Joan Jett\";\n```", "```\nlet rocker: string;\nrocker = 19.58;\n// Error: Type 'number' is not assignable to type 'string'.\n```", "```\nlet firstName: string = \"Tina\";\n//           ~~~~~~~~ Does not change the type system...\n```", "```\nlet firstName: string = 42;\n//  ~~~~~~~~~\n// Error: Type 'number' is not assignable to type 'string'.\n```", "```\nlet rapper = \"Queen Latifah\";\nrapper.length; // ok\n```", "```\nrapper.push('!');\n//     ~~~~\n// Property 'push' does not exist on type 'string'.\n```", "```\nlet cher = {\n  firstName: \"Cherilyn\",\n  lastName: \"Sarkisian\",\n};\n\ncher.middleName;\n//   ~~~~~~~~~~\n//   Property 'middleName' does not exist on type\n//   '{ firstName: string; lastName: string; }'.\n```", "```\nimport { value } from \"./values\";\n\nexport const doubled = value * 2;\n```", "```\n// a.ts\nexport const shared = \"Cher\";\n```", "```\n// b.ts\nexport const shared = \"Cher\";\n```", "```\n// c.ts\nimport { shared } from \"./a\";\n//       ~~~~~~\n// Error: Import declaration conflicts with local declaration of 'shared'.\n\nexport const shared = \"Cher\";\n//           ~~~~~~\n// Error: Individual declarations in merged declaration\n// 'shared' must be all exported or all local.\n```", "```\n// a.ts\nconst shared = \"Cher\";\n//    ~~~~~~\n// Cannot redeclare block-scoped variable 'shared'.\n```", "```\n// b.ts\nconst shared = \"Cher\";\n//    ~~~~~~\n// Cannot redeclare block-scoped variable 'shared'.\n```", "```\n// a.ts and b.ts\nconst shared = \"Cher\"; // Ok\n\nexport {};\n```"]