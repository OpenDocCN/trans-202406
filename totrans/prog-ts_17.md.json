["```\n// Global variable\ndeclare let someGlobal: GlobalType\n\n// Global class\ndeclare class GlobalClass {}\n\n// Global function\ndeclare function globalFunction(): string\n\n// Global enum\nenum GlobalEnum {A, B, C}\n\n// Global namespace\nnamespace GlobalNamespace {}\n\n// Global type alias\ntype GlobalType = number\n\n// Global interface\ninterface GlobalInterface {}\n```", "```\n// Default export\ndeclare let defaultExport: SomeType\nexport default defaultExport\n\n// Named export\nexport class SomeExport {\n  a: SomeOtherType\n}\n\n// Class export\nexport class ExportedClass {}\n\n// Function export\nexport function exportedFunction(): string\n\n// Enum export\nenum ExportedEnum {A, B, C}\n\n// Namespace export\nexport namespace SomeNamespace {\n  let someNamespacedExport: number\n}\n\n// Type export\nexport type SomeType = {\n  a: number\n}\n\n// Interface export\nexport interface SomeOtherType {\n  b: string\n}\n```", "```\ndeclare let defaultExport: SomeType\nexport = defaultExport\n```", "```\ndeclare namespace MyNamedExports {\n  export let someExport: SomeType\n  export type SomeType = number\n  export class OtherExport {\n    otherType: string\n  }\n}\nexport = MyNamedExports\n```", "```\ndeclare namespace MyExports {\n  export let someExport: SomeType\n  export type SomeType = number\n}\ndeclare function MyExports(a: number): string\nexport = MyExports\n```", "```\n// Default export\ndeclare let defaultExport: SomeType\nexport default defaultExport\n\n// Named export\nexport class SomeExport {\n  a: SomeType\n}\n\n// Type export\nexport type SomeType = {\n  a: number\n}\n\nexport as namespace MyModule\n```", "```\nlet a = new MyModule.SomeExport\n```", "```\nnpm install jquery --save\nnpm install @types/jquery --save-dev\n```", "```\ninterface JQuery {\n  marquee(speed: number): JQuery<HTMLElement>\n}\n```", "```\nimport $ from 'jquery'\n$(myElement).marquee(3)\n```", "```\nnpm install react --save\nnpm install @types/react --save-dev\n```", "```\nimport {ReactNode} from 'react'\n\ndeclare module 'react' {\n  export function inspect(element: ReactNode): void\n}\n```", "```\nexport = React\nexport as namespace React\n\ndeclare namespace React {\n  interface Component<P = {}, S = {}, SS = any>\n    extends ComponentLifecycle<P, S, SS> {}\n  class Component<P, S> {\n    constructor(props: Readonly<P>)\n    // ...\n  }\n  // ...\n}\n```", "```\nimport 'react' ![1](assets/1.png)\n\ndeclare module 'react' { ![2](assets/2.png)\n  interface Component<P, S> { ![3](assets/3.png)\n    reducer(action: object, state: S): S ![4](assets/4.png)\n  }\n}\n```", "```\nimport * as React from 'react'\n\ntype Props = {\n  // ...\n}\n\ntype State = {\n  count: number\n  item: string\n}\n\ntype Action =\n  | {type: 'SET_ITEM', value: string}\n  | {type: 'INCREMENT_COUNT'}\n  | {type: 'DECREMENT_COUNT'}\n\nclass ShoppingBasket extends React.Component<Props, State> {\n  reducer(action: Action, state: State): State {\n    switch (action.type) {\n      case 'SET_ITEM':\n        return {...state, item: action.value}\n      case 'INCREMENT_COUNT':\n        return {...state, count: state.count + 1}\n      case 'DECREMENT_COUNT':\n        return {...state, count: state.count - 1}\n    }\n  }\n}\n```"]