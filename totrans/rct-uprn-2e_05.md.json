["```\nconst hi = <h1>Hello</h1>;\n```", "```\nconst planet = 'Earth';\nconst hi = <h1>Hello people of <em>{planet}</em>!</h1>;\n```", "```\nconst rock = 3;\nconst planet = <em>{rock === 3 ? 'Earth' : 'Some other place'}</em>;\nconst hi = <h1>Hello people of {planet}!</h1>;\n```", "```\nfunction Example1() {\n  return (\n    <h1>\n      {1} plus {2} is   {3}\n    </h1>\n  );\n}\n```", "```\n<h1>1 plus 2 is   3</h1>\n```", "```\nfunction Example2() {\n  return (\n    <h1>\n      {1}\n      plus\n      {2}\n      is\n      {3}\n    </h1>\n  );\n}\n```", "```\n<h1>\n  1plus2is3\n</h1>\n```", "```\nfunction Example3() {\n  return (\n    <h1>\n      {/* space expressions */}\n      {1}\n      {' '}plus{' '}\n      {2}\n      {' '}is{' '}\n      {3}\n    </h1>\n  );\n}\n```", "```\nfunction Example4() {\n  return (\n    <h1>\n      {/* space glued to string expressions */}\n      {1}\n      {' plus '}\n      {2}\n      {' is '}\n      {3}\n    </h1>\n  );\n}\n```", "```\n<h1>\n  {/* multiline comment */}\n  {/*\n multi\n line\n comment\n */}\n  {\n    // single line\n  }\n  Hello!\n</h1>\n```", "```\n<h2>\n  More info &raquo;\n</h2>\n```", "```\n<h2>\n  {\"More info &raquo;\"}\n</h2>\n```", "```\n<h2>\n  {\"More info \\u00bb\"}\n</h2>\n```", "```\nconst RAQUO = ' \\u00bb';\n```", "```\n<h2>\n  {\"More info\" + RAQUO}\n</h2>\n<h2>\n  {\"More info\"}{RAQUO}\n</h2>\n```", "```\nconst firstname =\n  'John<scr'+'ipt src=\"https://evil/co.js\"></scr'+'ipt>';\n```", "```\ndocument.write(firstname);\n```", "```\nfunction Example() {\n  const firstname =\n    'John<scr' + 'ipt src=\"https://evil/co.js\"></scr' + 'ipt>';\n  return <h2>Hello {firstname}!</h2>;\n}\n```", "```\nconst attr = {\n  href: 'https://example.org',\n  target: '_blank',\n};\n```", "```\nreturn (\n  <a\n    href={attr.href}\n    target={attr.target}>\n    Hello\n  </a>\n);\n```", "```\nreturn <a {...attr}>Hello</a>;\n```", "```\n<FancyLink\n  href=\"https://example.org\"\n  rel=\"canonical\"\n  target=\"_blank\"\n  variant=\"small\">\n  Follow me\n</FancyLink>\n```", "```\nfunction FancyLink(props) {\n  const classes = ['link-core'];\n  switch (props.variant) {\n    case 'small':\n      classes.push('link-small');\n      break;\n    case 'huge':\n      classes.push('link-huge');\n      break;\n    default:\n      classes.push('link-default');\n  }\n\n  return (\n    <a {...props} className={classes.join(' ')}>\n      {props.children}\n    </a>\n  );\n}\n```", "```\n<FancyLink>\n  <span>Follow me</span>\n</FancyLink>\n```", "```\nfunction FancyLink(props) {\n  const classes = ['link-core'];\n  switch (props.variant) {\n    // same as before...\n  }\n\n  const attribs = Object.assign({}, props); // shallow clone\n  delete attribs.variant;\n\n  return (\n    <a {...attribs} className={classes.join(' ')}>\n      {props.children}\n    </a>\n  );\n}\n```", "```\nconst attribs = {...props};\n```", "```\nconst {variant, ...attribs} = props;\n```", "```\nfunction FancyLink(props) {\n  const {variant, ...attribs} = props;\n  const classes = ['link-core'];\n  switch (variant) {\n    // same as before...\n  }\n\n  return (\n    <a {...attribs} className={classes.join(' ')}>\n      {props.children}\n    </a>\n  );\n}\n```", "```\n// Syntax error:\n//   Adjacent JSX elements must be wrapped in an enclosing tag\nfunction InvalidExample() {\n  return (\n    <span>\n      Hello\n    </span>\n    <span>\n      World\n    </span>\n  );\n}\n```", "```\nfunction Example() {\n  return (\n    <div>\n      <span>Hello</span>\n      {' '}\n      <span>World</span>\n    </div>\n  );\n}\n```", "```\nfunction FragmentExample() {\n  return (\n    <React.Fragment>\n      <span>Hello</span>\n      {' '}\n      <span>World</span>\n    </React.Fragment>\n  );\n}\n```", "```\nfunction FragmentExample() {\n  return (\n    <>\n      <span>Hello</span>\n      {' '}\n      <span>World</span>\n    </>\n  );\n}\n```", "```\nfunction ArrayExample() {\n  return [\n    <span key=\"a\">Hello</span>,\n    ' ',\n    <span key=\"b\">World</span>,\n    '!'\n  ];\n}\n```", "```\nfunction ChildrenExample(props) {\n  console.log(props.children.length); // 4\n  return (\n    <div>\n      {props.children}\n    </div>\n  );\n}\n\nReactDOM.render(\n  <ChildrenExample>\n    <span key=\"greet\">Hello</span>\n    {' '}\n    <span key=\"world\">World</span>\n    !\n  </ChildrenExample>,\n  document.getElementById('app')\n);\n```", "```\n// Warning: Invalid DOM property `class`. Did you mean `className`?\n// Warning: Invalid DOM property `for`. Did you mean `htmlFor`?\nconst em = <em class=\"important\" />;\nconst label = <label for=\"thatInput\" />;\n\n// OK\nconst em = <em className=\"important\" />;\nconst label = <label htmlFor=\"thatInput\" />;\n```", "```\n// Error: The `style` prop expects a mapping from style properties to values\nfunction InvalidStyle() {\n  return <em style=\"font-size: 2em; line-height: 1.6\" />;\n}\n\n// OK\nfunction ValidStyle() {\n  const styles = {\n    fontSize: '2em',\n    lineHeight: '1.6',\n  };\n  return <em style={styles}>Valid style</em>;\n}\n\n// inline is also OK\n// note the double curly braces:\n// one for the dynamic value in JSX, one for the JS object\nfunction InlineStyle() {\n  return (\n    <em style={{fontSize: '2em', lineHeight: '1.6'}}>Inline style</em>\n  );\n}\n```", "```\n// NO-NO\n// no unclosed tags, even though they are fine in HTML\nconst gimmeabreak = <br>;\nconst list = <ul><li>item</ul>;\nconst meta = <meta charset=\"utf-8\">;\n\n// OK\nconst gimmeabreak = <br />;\nconst list = <ul><li>item</li></ul>;\nconst meta = <meta charSet=\"utf-8\" />;\n\n// or\nconst meta = <meta charSet=\"utf-8\"></meta>;\n```", "```\n// Warning: Invalid event handler property `onclick`. Did you mean `onClick`?\nconst a = <a onclick=\"reticulateSplines()\" />;\n\n// OK\nconst a = <a onClick={reticulateSplines} />;\n```", "```\nconst Library = {\n  Book({id}) {\n    return `Book ${id}`;\n  },\n  Reader({id}) {\n    return `Reader ${id}`;\n  },\n};\n```", "```\n<Library.Reader id={456} /> is reading <Library.Book id={123} />\n```", "```\nfunction changeHandler(which, event) {\n  console.log(\n    `onChange called on the ${which} with value \"${event.target.value}\"`,\n  );\n}\n\nfunction ExampleForm() {\n  return (\n    <form onChange={changeHandler.bind(null, 'form')}>\n      <label>\n        Type here:\n        <br />\n        <input type=\"text\" onChange={changeHandler.bind(null, 'text input')} />\n      </label>\n      <div>Make your pick:</div>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"pick\"\n          value=\"option1\"\n          onChange={changeHandler.bind(null, 'radio 1')}\n        />\n        Option 1\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"pick\"\n          value=\"option2\"\n          onChange={changeHandler.bind(null, 'radio 2')}\n        />\n        Option 2\n      </label>\n    </form>\n  );\n}\n```", "```\nonChange called on the text input with value \"x\"\nonChange called on the form with value \"x\"\n```", "```\nonChange called on the radio 1 with value \"option1\"\nonChange called on the form with value \"option1\"\n```", "```\ni.value; // \"bye\"\ni.getAttribute('value'); // \"hello\"\n```", "```\nfunction changeHandler({target}) {\n  console.log('value: ', target.value);\n  console.log('defaultValue: ', target.defaultValue);\n}\n\nfunction ExampleForm() {\n  return (\n    <form>\n      <label>\n        Type here: <input defaultValue=\"hello\" onChange={changeHandler} />\n      </label>\n    </form>\n  );\n}\n```", "```\nfunction ExampleTextarea() {\n  return (\n    <form>\n      <label>\n        Type here:{' '}\n        <textarea\n          defaultValue={'hello\\nworld'}\n          onChange={changeHandler}\n        />{' '}\n      </label>\n    </form>\n  );\n}\n```", "```\n<!-- old school HTML -->\n<select>\n  <option value=\"stay\">Should I stay</option>\n  <option value=\"move\" selected>or should I go</option>\n</select>\n```", "```\n// React/JSX\nfunction ExampleSelect() {\n  return (\n    <form>\n      <select defaultValue=\"move\" onChange={changeHandler}>\n        <option value=\"stay\">Should I stay</option>\n        <option value=\"move\">or should I go</option>\n      </select>\n    </form>\n  );\n}\n```", "```\nfunction ExampleMultiSelect() {\n  return (\n    <form>\n      <select\n        defaultValue={['stay', 'move']}\n        multiple={true}\n        onChange={selectHandler}>\n        <option value=\"stay\">Should I stay</option>\n        <option value=\"move\">or should I go</option>\n        <option value=\"trouble\">If I stay it will be trouble</option>\n      </select>\n    </form>\n  );\n}\n```", "```\nfunction selectHandler({target}) {\n  console.log(\n    Array.from(target.selectedOptions).map((option) => option.value),\n  );\n}\n```", "```\nconst input = <input type=\"text\" name=\"firstname\" />;\n```", "```\nconst input = <input type=\"text\" name=\"firstname\" defaultValue=\"Jessie\" />;\n```", "```\nconst profile = {\n  firstname: 'Jessie',\n  lastname: 'Pinkman',\n  gender: 'male',\n  acceptedTOC: false,\n};\n```", "```\nfunction UncontrolledForm() {\n  return (\n    <form onChange={updateProfile}>\n      <label>\n        First name:{' '}\n        <input type=\"text\" name=\"firstname\" defaultValue={profile.firstname} />\n      </label>\n      <br />\n      <label>\n        Last name:{' '}\n        <input type=\"text\" name=\"lastname\" defaultValue={profile.lastname} />\n      </label>\n      <br />\n      Gender:\n      <label>\n        <input\n          type=\"radio\"\n          name=\"gender\"\n          defaultChecked={profile.gender === 'male'}\n          value=\"male\"\n        />\n        Male\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"gender\"\n          defaultChecked={profile.gender === 'female'}\n          value=\"female\"\n        />\n        Female\n      </label>\n      <br />\n      <label>\n        <input\n          type=\"checkbox\"\n          name=\"acceptTOC\"\n          defaultChecked={profile.acceptTOC === true}\n        />\n        I accept terms and things\n      </label>\n    </form>\n  );\n}\n```", "```\nfunction updateProfile({target}) {\n  profile[target.name] =\n    target.type === 'checkbox' ? target.checked === true : target.value;\n  console.log(profile);\n}\n```", "```\n<form onSubmit={updateProfile}>\n  {/* same thing as before ... */}\n  <input type=\"submit\" value=\"Save\"/>\n</form>\n```", "```\nfunction updateProfile(ev) {\n  ev.preventDefault();\n  const form = ev.target;\n  Object.keys(profile).forEach((name) => {\n    const element = form[name];\n    profile[name] =\n      element.type === 'checkbox' ? element.checked : element.value;\n  });\n}\n```", "```\nform.elements.length; // 6\nform.elements[0].value; // \"Jessie\", access by index\nform.elements['firstname'].value; // \"Jessie\", access by name\nform.firstname.value; // \"Jessie\", even shorter\n```", "```\nclass ControlledForm extends React.Component {\n  constructor() {\n    // ...\n  }\n  updateForm({target}) {\n    // ...\n  }\n  render() {\n    return (\n      <form>\n        {/* ... */}\n      </form>\n    );\n  }\n}\n```", "```\nconstructor() {\n  super();\n  this.state = {...profile};\n  this.updateForm = this.updateForm.bind(this);\n}\n```", "```\n<input\n  type=\"text\"\n  name=\"firstname\"\n  value={this.state.firstname}\n  onChange={this.updateForm}\n/>\n```", "```\nupdateForm({target}) {\n  this.setState({\n    [target.name]:\n      target.type === 'checkbox' ? target.checked : target.value,\n  });\n}\n```"]