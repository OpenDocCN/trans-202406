["```\nTaskItemViewHolder.inflateFrom(parent)\n```", "```\napp:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\n```", "```\npackage com.hfad.bitsandpizzas\n\ndata class Pizza(\n    var pizzaId: Long = 0L,\n    var pizzaName: String = \"\",\n    var pizzaDescription: String = \"\",\n    var pizzaImageId: Int = 0\n)\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<TextView\n\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" />\n```", "```\npackage com.hfad.bitsandpizzas\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport android.widget.TextView\nimport androidx.recyclerview.widget.RecyclerView\n\nclass PizzaAdapter : RecyclerView.Adapter<...........................................>() {\n\n    var pizzas = listOf<..............>()\n        set(value) {\n            field = value\n            notifyDataSetChanged()\n        }\n\n    override fun getItemCount() =.............................................\n    override fun............................(parent: ViewGroup, viewType: Int)\n                         : PizzaViewHolder = PizzaViewHolder.inflateFrom(parent)\n\n    override fun onBindViewHolder(.................................. , position: Int) {\n\n        val item = .......... [position]\n\n        holder.bind(item)\n    }\n\n    class PizzaViewHolder(val rootView: TextView)\n\n                             : ................................... (rootView) {\n        companion object {\n            fun inflateFrom(parent: ViewGroup): PizzaViewHolder {\n                val layoutInflater = LayoutInflater.from(parent.context)\n                val view = layoutInflater\n                           .inflate(R.layout.pizza_item, parent, false) .....................................\n                return PizzaViewHolder(view)\n            }\n        }\n\n        fun bind(item: .......... ) {\n\n            rootView.text = .......................................\n        }\n    }\n}\n```", "```\npackage com.hfad.bitsandpizzas\n\ndata class Pizza(\n    var pizzaId: Long = 0L,\n    var pizzaName: String = \"\",\n    var pizzaDescription: String = \"\",\n    var pizzaImageId: Int = 0\n)\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<TextView\n\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" />\n```", "```\nThis lets you add attributes that give the card rounded corners and a drop shadow to make it look higher than its background. You add rounded corners using the `app:cardCornerRadius` attribute, and the `app:cardElevation` attribute sets its elevation and adds drop shadows:\n\n###### Note\n\nThere’s also an app:cardBackgroundColor attribute that changes the card’s background color.\n\n![image](Images/f0652-05.png)\n\nOnce you’ve defined the card view, you add any views to it that you want it to include. In the Tasks app, we want to add a text view and a checkbox to the card view to display the name of each task and whether it’s been completed. Let’s see what the code for this looks like.\n\n```", "```\n<androidx.recyclerview.widget.RecyclerView ...\n    app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\n    android:orientation=\"horizontal\" />\n```", "```\n<androidx.recyclerview.widget.RecyclerView ...\n    app:layoutManager=\"androidx.recyclerview.widget.GridLayoutManager\"\n    app:spanCount=\"2\" />\n```", "```\n<androidx.recyclerview.widget.RecyclerView ...\n    app:layoutManager=\"androidx.recyclerview.widget.StaggeredGridLayoutManager\"\n    app:spanCount=\"2\" />\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <..................................................\n        android:id=\"@+id/recycler\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        ...............................................................................\n        ................../>\n</LinearLayout>\n```"]