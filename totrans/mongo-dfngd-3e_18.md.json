["```\n$ mongo --nodb --norc\n```", "```\nst = ShardingTest({\n  name:\"one-min-shards\",\n  chunkSize:1,\n  shards:2,\n  rs:{\n    nodes:3,\n    oplogSize:10\n  },\n  other:{\n    enableBalancer:true\n  }\n});\n```", "```\n$ mongo --nodb\n```", "```\n> db = (new Mongo(\"localhost:20009\")).getDB(\"accounts\")\n```", "```\n> for (var i=0; i<100000; i++) {\n...     db.users.insert({\"username\" : \"user\"+i, \"created_at\" : new Date()});\n... }\n> db.users.count()\n100000\n```", "```\n> sh.status()\n--- Sharding Status --- \nsharding version: {\n  \"_id\": 1,\n  \"minCompatibleVersion\": 5,\n  \"currentVersion\": 6,\n  \"clusterId\": ObjectId(\"5a4f93d6bcde690005986071\")\n}\nshards:\n{\n  \"_id\" : \"one-min-shards-rs0\", \n  \"host\" : \n    \"one-min-shards-rs0/MBP:20000,MBP:20001,MBP:20002\",\n  \"state\" : 1 }\n{  \"_id\" : \"one-min-shards-rs1\",  \n   \"host\" : \n     \"one-min-shards-rs1/MBP:20003,MBP:20004,MBP:20005\",\n   \"state\" : 1 }\nactive mongoses:\n  \"3.6.1\" : 1\nautosplit:\n  Currently enabled: no\nbalancer:\n  Currently enabled:  no\n  Currently running:  no\n  Failed balancer rounds in last 5 attempts:  0\n  Migration Results for the last 24 hours: \n    No recent migrations\ndatabases:\n  {  \"_id\" : \"accounts\",  \"primary\" : \"one-min-shards-rs1\",  \n     \"partitioned\" : false }\n  {  \"_id\" : \"config\",  \"primary\" : \"config\",  \n     \"partitioned\" : true }\n  config.system.sessions\nshard key: { \"_id\" : 1 }\nunique: false\nbalancing: true\nchunks:\n  one-min-shards-rs0\t1\n  { \"_id\" : { \"$minKey\" : 1 } } -->> { \"_id\" : { \"$maxKey\" : 1 } } \n  on : one-min-shards-rs0 Timestamp(1, 0)\n```", "```\n> sh.enableSharding(\"accounts\")\n```", "```\n> db.users.createIndex({\"username\" : 1})\n```", "```\n> sh.shardCollection(\"accounts.users\", {\"username\" : 1})\n```", "```\n> sh.status()\n--- Sharding Status --- \nsharding version: {\n  \"_id\" : 1,\n  \"minCompatibleVersion\" : 5,\n  \"currentVersion\" : 6,\n  \"clusterId\" : ObjectId(\"5a4f93d6bcde690005986071\")\n}\nshards:\n  {  \"_id\" : \"one-min-shards-rs0\", \n     \"host\" : \n       \"one-min-shards-rs0/MBP:20000,MBP:20001,MBP:20002\",  \n     \"state\" : 1 }\n  {  \"_id\" : \"one-min-shards-rs1\",  \n     \"host\" : \n       \"one-min-shards-rs1/MBP:20003,MBP:20004,MBP:20005\",\n     \"state\" : 1 }\nactive mongoses:\n  \"3.6.1\" : 1\nautosplit:\n  Currently enabled: no\nbalancer:\n  Currently enabled:  yes\n  Currently running:  no\n  Failed balancer rounds in last 5 attempts:  0\n  Migration Results for the last 24 hours: \n    6 : Success\ndatabases:\n  {  \"_id\" : \"accounts\",  \"primary\" : \"one-min-shards-rs1\",  \n     \"partitioned\" : true }\naccounts.users\n  shard key: { \"username\" : 1 }\n  unique: false\n  balancing: true\n  chunks:\n    one-min-shards-rs0\t6\n    one-min-shards-rs1\t7\n    { \"username\" : { \"$minKey\" : 1 } } -->> \n      { \"username\" : \"user17256\" } on : one-min-shards-rs0 Timestamp(2, 0) \n    { \"username\" : \"user17256\" } -->> \n      { \"username\" : \"user24515\" } on : one-min-shards-rs0 Timestamp(3, 0) \n    { \"username\" : \"user24515\" } -->> \n      { \"username\" : \"user31775\" } on : one-min-shards-rs0 Timestamp(4, 0) \n    { \"username\" : \"user31775\" } -->> \n      { \"username\" : \"user39034\" } on : one-min-shards-rs0 Timestamp(5, 0) \n    { \"username\" : \"user39034\" } -->> \n      { \"username\" : \"user46294\" } on : one-min-shards-rs0 Timestamp(6, 0) \n    { \"username\" : \"user46294\" } -->> \n      { \"username\" : \"user53553\" } on : one-min-shards-rs0 Timestamp(7, 0) \n    { \"username\" : \"user53553\" } -->> \n      { \"username\" : \"user60812\" } on : one-min-shards-rs1 Timestamp(7, 1) \n    { \"username\" : \"user60812\" } -->> \n      { \"username\" : \"user68072\" } on : one-min-shards-rs1 Timestamp(1, 7) \n    { \"username\" : \"user68072\" } -->> \n      { \"username\" : \"user75331\" } on : one-min-shards-rs1 Timestamp(1, 8) \n    { \"username\" : \"user75331\" } -->> \n      { \"username\" : \"user82591\" } on : one-min-shards-rs1 Timestamp(1, 9) \n    { \"username\" : \"user82591\" } -->> \n      { \"username\" : \"user89851\" } on : one-min-shards-rs1 Timestamp(1, 10) \n    { \"username\" : \"user89851\" } -->> \n      { \"username\" : \"user9711\" } on : one-min-shards-rs1 Timestamp(1, 11) \n    { \"username\" : \"user9711\" } -->> \n      { \"username\" : { \"$maxKey\" : 1 } } on : one-min-shards-rs1 Timestamp(1, 12) \n    {  \"_id\" : \"config\",  \"primary\" : \"config\",  \"partitioned\" : true }\nconfig.system.sessions\n  shard key: { \"_id\" : 1 }\n  unique: false\n  balancing: true\n  chunks:\n    one-min-shards-rs0\t1\n    { \"_id\" : { \"$minKey\" : 1 } } -->> \n      { \"_id\" : { \"$maxKey\" : 1 } } on : one-min-shards-rs0 Timestamp(1, 0)\n```", "```\n> db.users.find({username: \"user12345\"})\n{ \n    \"_id\" : ObjectId(\"5a4fb11dbb9ce6070f377880\"), \n    \"username\" : \"user12345\", \n    \"created_at\" : ISODate(\"2018-01-05T17:08:45.657Z\") \n}\n```", "```\n> db.users.find({username: \"user12345\"}}).explain()\n{\n  \"queryPlanner\" : {\n    \"mongosPlannerVersion\" : 1,\n    \"winningPlan\" : {\n      \"stage\" : \"SINGLE_SHARD\",\n      \"shards\" : [{\n    \"shardName\" : \"one-min-shards-rs0\",\n    \"connectionString\" :\n      \"one-min-shards-rs0/MBP:20000,MBP:20001,MBP:20002\",\n    \"serverInfo\" : {\n        \"host\" : \"MBP\",\n        \"port\" : 20000,\n      \"version\" : \"3.6.1\",\n      \"gitVersion\" : \"025d4f4fe61efd1fb6f0005be20cb45a004093d1\"\n    },\n    \"plannerVersion\" : 1,\n    \"namespace\" : \"accounts.users\",\n    \"indexFilterSet\" : false,\n    \"parsedQuery\" : {\n        \"username\" : {\n         \"$eq\" : \"user12345\"\n       }\n    },\n    \"winningPlan\" : {\n      \"stage\" : \"FETCH\",\n      \"inputStage\" : {\n        \"stage\" : \"SHARDING_FILTER\",\n          \"inputStage\" : {\n              \"stage\" : \"IXSCAN\",\n          \"keyPattern\" : {\n            \"username\" : 1\n          },\n          \"indexName\" : \"username_1\",\n          \"isMultiKey\" : false,\n          \"multiKeyPaths\" : {\n                \"username\" : [ ]\n          },\n          \"isUnique\" : false,\n              \"isSparse\" : false,\n            \"isPartial\" : false,\n          \"indexVersion\" : 2,\n          \"direction\" : \"forward\",\n          \"indexBounds\" : {\n            \"username\" : [\n                  \"[\\\"user12345\\\", \\\"user12345\\\"]\"\n        ]\n          }\n        }\n          }\n    },\n    \"rejectedPlans\" : [ ]\n      }]\n    }\n  },\n  \"ok\" : 1,\n  \"$clusterTime\" : {\n    \"clusterTime\" : Timestamp(1515174248, 1),\n    \"signature\" : {\n      \"hash\" : BinData(0,\"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\"),\n      \"keyId\" : NumberLong(0)\n    }\n  },\n  \"operationTime\" : Timestamp(1515173700, 201)\n}\n```", "```\n> db.users.find().explain()\n{\n  \"queryPlanner\":{\n    \"mongosPlannerVersion\":1,\n    \"winningPlan\":{\n      \"stage\":\"SHARD_MERGE\",\n      \"shards\":[\n        {\n          \"shardName\":\"one-min-shards-rs0\",\n          \"connectionString\": \n            \"one-min-shards-rs0/MBP:20000,MBP:20001,MBP:20002\",\n          \"serverInfo\":{\n            \"host\":\"MBP.fios-router.home\",\n            \"port\":20000,\n            \"version\":\"3.6.1\",\n            \"gitVersion\":\"025d4f4fe61efd1fb6f0005be20cb45a004093d1\"\n          },\n          \"plannerVersion\":1,\n          \"namespace\":\"accounts.users\",\n          \"indexFilterSet\":false,\n          \"parsedQuery\":{\n\n          },\n          \"winningPlan\":{\n            \"stage\":\"SHARDING_FILTER\",\n            \"inputStage\":{\n              \"stage\":\"COLLSCAN\",\n              \"direction\":\"forward\"\n            }\n          },\n          \"rejectedPlans\":[\n\n          ]\n        },\n        {\n          \"shardName\":\"one-min-shards-rs1\",\n          \"connectionString\":\n            \"one-min-shards-rs1/MBP:20003,MBP:20004,MBP:20005\",\n          \"serverInfo\":{\n            \"host\":\"MBP.fios-router.home\",\n            \"port\":20003,\n            \"version\":\"3.6.1\",\n            \"gitVersion\":\"025d4f4fe61efd1fb6f0005be20cb45a004093d1\"\n          },\n          \"plannerVersion\":1,\n          \"namespace\":\"accounts.users\",\n          \"indexFilterSet\":false,\n          \"parsedQuery\":{\n\n          },\n          \"winningPlan\":{\n            \"stage\":\"SHARDING_FILTER\",\n            \"inputStage\":{\n              \"stage\":\"COLLSCAN\",\n              \"direction\":\"forward\"\n            }\n          },\n          \"rejectedPlans\":[\n\n          ]\n        }\n      ]\n    }\n  },\n  \"ok\":1,\n  \"$clusterTime\":{\n    \"clusterTime\":Timestamp(1515174893, 1),\n    \"signature\":{\n      \"hash\":BinData(0, \"AAAAAAAAAAAAAAAAAAAAAAAAAAA=\"),\n      \"keyId\":NumberLong(0)\n    }\n  },\n  \"operationTime\":Timestamp(1515173709, 514)\n}\n```", "```\n> st.stop()\n```"]