["```\n$ kubectl expose deploy/nginx --port 80\nservice \"nginx\" exposed\n\n$ kubectl describe svc/nginx\nName:              nginx\nNamespace:         default\nLabels:            app=nginx\nAnnotations:       <none>\nSelector:          app=nginx\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.97.137.240\nIPs:               10.97.137.240\nPort:              <unset>  80/TCP\nTargetPort:        80/TCP\nEndpoints:         172.17.0.3:80\nSession Affinity:  None\nEvents:            <none>\n\n```", "```\n$ kubectl get svc nginx\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)   AGE\nnginx        ClusterIP   10.97.137.240   <none>        80/TCP    2s\n\n```", "```\n$ kubectl proxy\nStarting to serve on 127.0.0.1:8001\n\n```", "```\n$ open http://localhost:8001/api/v1/namespaces/default/services/nginx/proxy/\n\n```", "```\napiVersion:  v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n```", "```\n$ kubectl run busybox --rm -it --image busybox:1.36 -- /bin/sh\nIf you don't see a command prompt, try pressing enter.\n\n/ # nslookup nginx\nServer:\t\t10.96.0.10\nAddress:\t10.96.0.10:53\n\nName:\tnginx.default.svc.cluster.local\nAddress: 10.100.34.223\n\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n  name: webserver\nspec:\n  ports:\n  - port: 80\n  selector:\n    app: nginx\n```", "```\n$ kubectl apply -f simple-nginx-svc.yaml\n\n$ kubectl get svc/webserver\nNAME        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE\nwebserver   ClusterIP   10.98.223.206   <none>        80/TCP    11s\n\n```", "```\n$ kubectl edit svc/webserver\n\n```", "```\n# Please edit the object below. Lines beginning with a '#' will be ignored,\n# and an empty file will abort the edit. If an error occurs while saving this...\n# reopened with the relevant failures.\n#\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\"...\n  creationTimestamp: \"2023-03-01T14:07:55Z\"\n  name: webserver\n  namespace: default\n  resourceVersion: \"1128\"\n  uid: 48daed0e-a16f-4923-bd7e-1d879dc2221f\nspec:\n  clusterIP: 10.98.223.206\n  clusterIPs:\n  - 10.98.223.206\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - nodePort: 31275\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n\n```", "```\n$ kubectl get svc/webserver\nNAME        TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nwebserver   NodePort   10.98.223.206   <none>        80:31275/TCP   4m\n\n$ kubectl get svc/webserver -o yaml\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\"...\n  creationTimestamp: \"2023-03-01T14:07:55Z\"\n  name: webserver\n  namespace: default\n  resourceVersion: \"1128\"\n  uid: 48daed0e-a16f-4923-bd7e-1d879dc2221f\nspec:\n  clusterIP: 10.98.223.206\n  clusterIPs:\n  - 10.98.223.206\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - nodePort: 31275\n    port: 80\n    protocol: TCP\n    targetPort: 80\n  selector:\n    app: nginx\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/\ncontroller-v1.8.1/deploy/static/provider/cloud/deploy.yaml\n\n```", "```\n$ minikube addons enable ingress\n\n```", "```\n$ kubectl get pods -n ingress-nginx\nNAME                                       READY   STATUS      RESTARTS   AGE\ningress-nginx-admission-create-xpqbt       0/1     Completed   0          3m39s\ningress-nginx-admission-patch-r7cnf        0/1     Completed   1          3m39s\ningress-nginx-controller-6cc5ccb977-l9hvz  1/1     Running     0          3m39s\n\n```", "```\n$ kubectl create deployment web --image=gcr.io/google-samples/hello-app:2.0\n\n```", "```\n$ kubectl expose deployment web --port=8080\n\n```", "```\n$ kubectl get all -l app=web\nNAME                       READY   STATUS    RESTARTS   AGE\npod/web-79b7b8f988-95tjv   1/1     Running   0          47s\n\nNAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nservice/web   ClusterIP   10.100.87.233   <none>        8080/TCP   8s\n\nNAME                  READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/web   1/1     1            1           47s\n\nNAME                             DESIRED   CURRENT   READY   AGE\nreplicaset.apps/web-79b7b8f988   1         1         1       47s\n\n```", "```\n$ cat nginx-ingress.yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: nginx-public\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n  - host:\n    http:\n      paths:\n      - path: /web\n        pathType: Prefix\n        backend:\n          service:\n            name: web\n            port:\n              number: 8080\n\n$ kubectl apply -f nginx-ingress.yaml\n\n```", "```\n$ curl https://192.168.49.2/web\nHello, world!\nVersion: 1.0.0\nHostname: web-68487bc957-v9fj8\n\n```", "```\n$ kubectl describe ingress\n\n```"]