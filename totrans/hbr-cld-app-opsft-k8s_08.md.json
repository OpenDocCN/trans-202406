["```\n$ oc get clusterserviceversion\nNAME                                  DISPLAY                                      \nVERSION   REPLACES   PHASE\nadvanced-cluster-management.v1.0.0    Advanced Cluster Management for Kubernetes   \n1.0.0                Succeeded\ncontainer-security-operator.v1.0.5    Container Security                           \n1.0.5                Succeeded\netcdoperator.v0.9.4                   etcd                                         \n0.9.4                Succeeded\nopenshift-pipelines-operator.v1.0.1   OpenShift Pipelines Operator                 \n1.0.1                Succeeded\n```", "```\n$ oc get subscriptions.operators.coreos.com -n openshift-operators\nNAME                              PACKAGE                           SOURCE\n                CHANNEL\ncontainer-security-operator       container-security-operator       community-\noperators       alpha\n```", "```\n$ oc get clusteroperators\nNAME                                       VERSION   AVAILABLE   PROGRESSING   \nDEGRADED   SINCE\nauthentication                             4.4.3     True        False         \nFalse      48d\ncloud-credential                           4.4.3     True        False         \nFalse      48d\ncluster-autoscaler                         4.4.3     True        False         \nFalse      48d\nconsole                                    4.4.3     True        False         \nFalse      48d\ncsi-snapshot-controller                    4.4.3     True        False         \nFalse      48d\ndns                                        4.4.3     True        False         \nFalse      48d\netcd                                       4.4.3     True        False         \nFalse      28h\nimage-registry                             4.4.3     True        False         \nFalse      48d\ningress                                    4.4.3     True        False         \nFalse      48d\ninsights                                   4.4.3     True        False         \nFalse      48d\nkube-apiserver                             4.4.3     True        False         \nFalse      48d\nkube-controller-manager                    4.4.3     True        False         \nFalse      48d\nkube-scheduler                             4.4.3     True        False         \nFalse      48d\nkube-storage-version-migrator              4.4.3     True        False         \nFalse      48d\nmachine-api                                4.4.3     True        False         \nFalse      48d\nmachine-config                             4.4.3     True        False         \nFalse      48d\nmarketplace                                4.4.3     True        False         \nFalse      48d\nmonitoring                                 4.4.3     True        False         \nFalse      41h\nnetwork                                    4.4.3     True        False         \nFalse      48d\nnode-tuning                                4.4.3     True        False         \nFalse      48d\nopenshift-apiserver                        4.4.3     True        False         \nFalse      38d\nopenshift-controller-manager               4.4.3     True        False         \nFalse      48d\nopenshift-samples                          4.4.3     True        False         \nFalse      48d\noperator-lifecycle-manager                 4.4.3     True        False         \nFalse      48d\noperator-lifecycle-manager-catalog         4.4.3     True        False         \nFalse      48d\noperator-lifecycle-manager-packageserver   4.4.3     True        False         \nFalse      28h\nservice-ca                                 4.4.3     True        False         \nFalse      48d\nservice-catalog-apiserver                  4.4.3     True        False         \nFalse      48d\nservice-catalog-controller-manager         4.4.3     True        False         \nFalse      48d\nstorage                                    4.4.3     True        False         \nFalse      48d\n```", "```\napiVersion: config.openshift.io/v1\nkind: OAuth\nmetadata:\n name: cluster\nspec:\n identityProviders: []\n tokenConfig:\n   accessTokenMaxAgeSeconds: 86400\n```", "```\n$ htpasswd -c -b -B .htpasswd username password\n```", "```\n$ oc create secret generic htpass-secret --from-file=htpasswd=.htpasswd -n \nopenshift-config\n```", "```\napiVersion: config.openshift.io/v1\nkind: OAuth\nmetadata:\n name: cluster\nspec:\n identityProviders:\n - htpasswd:\n     fileData:\n       name: htpass-secret\n   mappingMethod: claim\n   name: htpasswdidp\n   type: htpasswd\n tokenConfig:\n   accessTokenMaxAgeSeconds: 86400\n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n name: policy-project-frontend-app-prod\n namespace: open-cluster-management-policies\n annotations:\n   policy.open-cluster-management.io/standards: NIST-CSF\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline configuration\nspec:\n disabled: false\n remediationAction: enforce\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: policy-project-frontend-app-prod\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n         - frontend-app-prod\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: project.openshift.io/v1\n           kind: Project\n           metadata:\n             name: frontend-app-prod\n         status:\n           Validity: {}\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: v1\n           kind: LimitRange\n           metadata:\n             name: mem-limit-range\n             namespace: frontend-app-prod\n           spec:\n             limits:\n               - default:\n                   memory: 512Mi\n                 defaultRequest:\n                   memory: 256Mi\n                 type: Container\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: PlacementBinding\nmetadata:\n name: binding-policy-project-frontend-app-prod\n namespace: open-cluster-management-policies\nplacementRef:\n name: production-clusters\n kind: PlacementRule\n apiGroup: apps.open-cluster-management.io\nsubjects:\n- name: policy-project-frontend-app-prod\n kind: Policy\n apiGroup: policy.open-cluster-management.io\n---\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: placement-policy-project-frontend-app-prod\n namespace: open-cluster-management-policies\nspec:\n clusterConditions:\n - status: \"True\"\n   type: ManagedClusterConditionAvailable\n clusterSelector:\n   matchExpressions: []\n```", "```\npolicy.open-cluster-management.io/standards: NIST-CSF\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline configuration\n```", "```\nobject-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: project.openshift.io/v1\n           kind: Project\n           metadata:\n             name: frontend-app-prod\n         status:\n           Validity: {}\n```", "```\nmatchLabels:\n    apps/pacman: deployed\n  matchExpressions:\n    - {key: region, operator: In, values: [us-east, us-west]}\n    - {key: env, operator: NotIn, values: [development]}\n    - {key: authenticationProfile, operator: Exists}\n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n name: policy-etcdencryption\n annotations:\n   policy.open-cluster-management.io/standards: NIST SP 800-53\n   policy.open-cluster-management.io/categories: CM Configuration Management\n   policy.open-cluster-management.io/controls: CM-2 Baseline Configuration\nspec:\n remediationAction: enforce\n disabled: false\n policy-templates:\n   - objectDefinition:\n       apiVersion: policy.open-cluster-management.io/v1\n       kind: ConfigurationPolicy\n       metadata:\n         name: enable-etcd-encryption\n       spec:\n         severity: high\n         namespaceSelector:\n           exclude:\n             - kube-*\n           include:\n             - default\n         object-templates:\n           - complianceType: musthave\n             objectDefinition:\n               apiVersion: config.openshift.io/v1\n               kind: APIServer\n               metadata:\n                 name: cluster\n               spec:\n                 encryption:\n                   type: aescbc\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: PlacementBinding\nmetadata:\n name: binding-policy-etcdencryption\nplacementRef:\n name: placement-policy-etcdencryption\n kind: PlacementRule\n apiGroup: apps.open-cluster-management.io\nsubjects:\n- name: policy-etcdencryption\n kind: Policy\n apiGroup: policy.open-cluster-management.io\n---\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: placement-policy-etcdencryption\nspec:\n clusterConditions:\n - status: \"True\"\n   type: ManagedClusterConditionAvailable\n clusterSelector:\n   matchExpressions:\n     - {key: environment, operator: In, values: [\"dev\", “prod”]}\n```", "```\n$ oc get openshiftapiserver \\\n  -o=jsonpath='{range.items[0].status.conditions[?(@.type==\"Encrypted\")]}\n  {.reason}{\"\\n\"}{.message}{\"\\n\"}'\n\nEncryptionInProgress\nResource routes.route.openshift.io is not encrypted\n…\n\n$ oc get openshiftapiserver \\\n  -o=jsonpath='{range.items[0].status.conditions[?(@.type==\"Encrypted\")]}\n  {.reason}{\"\\n\"}{.message}{\"\\n\"}'\n\nEncryptionInProgress\nResource routes.route.openshift.io is being encrypted\n…\n$ oc get openshiftapiserver \\\n  -o=jsonpath='{range.items[0].status.conditions[?(@.type==\"Encrypted\")]}\n  {.reason}{\"\\n\"}{.message}{\"\\n\"}'\n\nEncryptionCompleted\nAll resources encrypted: routes.route.openshift.io, \noauthaccesstokens.oauth.openshift.io, oauthauthorizetokens.oauth.openshift.io\n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n name: policy-role-developer\n annotations:\n   policy.open-cluster-management.io/standards: NIST SP 800-53\n   policy.open-cluster-management.io/categories: AC Access Control\n   policy.open-cluster-management.io/controls: AC-3 Access Enforcement\nspec:\n remediationAction: enforce\n disabled: false\n policy-templates:\n   - objectDefinition:\n       apiVersion: policy.open-cluster-management.io/v1\n       kind: ConfigurationPolicy\n       metadata:\n         name: policy-role-developer\n       spec:\n         remediationAction: enforce \n          severity: high\n         namespaceSelector:\n           exclude: [\"kube-*\"]\n           include: [\"default\"]\n         object-templates:\n           - complianceType: mustonlyhave # role definition should exact match\n             objectDefinition:\n               apiVersion: rbac.authorization.k8s.io/v1\n               kind: ClusterRole\n               metadata:\n                 name: developer-read\n               rules:\n                 - apiGroups: [\"*\"]\n                   resources: [\"deployments\", \"configmaps\", \"services\", \"secrets\"]\n                   verbs: [\"get\", \"list\", \"watch\"]\n           - complianceType: mustonlyhave # role definition should exact match\n             objectDefinition:\n               apiVersion: rbac.authorization.k8s.io/v1\n               kind: ClusterRole\n               metadata:\n                 name: developer-write\n               rules:\n                 - apiGroups: [\"*\"]\n                   resources: [\"deployments\", \"configmaps\", \"services\", \"secrets\"]\n                   verbs: [\"create\", \"delete\", \"patch\", \"update\"]\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: PlacementBinding\nmetadata:\n name: binding-policy-role-developer\nplacementRef:\n name: placement-policy-role-developer\n kind: PlacementRule\n apiGroup: apps.open-cluster-management.io\nsubjects:\n- name: policy-role-developer\n kind: Policy\n apiGroup: policy.open-cluster-management.io\n---\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: placement-policy-role-developer\nspec:\n clusterConditions:\n - status: \"True\"\n   type: ManagedClusterConditionAvailable\n clusterSelector:\n   matchExpressions:\n     - {key: environment, operator: In, values: [\"dev\"]}\n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n name: policy-role-developer-binding\n annotations:\n   policy.open-cluster-management.io/standards: NIST SP 800-53\n   policy.open-cluster-management.io/categories: AC Access Control\n   policy.open-cluster-management.io/controls: AC-3 Access Enforcement\nspec:\n remediationAction: enforce\n disabled: false\n policy-templates:\n   - objectDefinition:\n       apiVersion: policy.open-cluster-management.io/v1\n       kind: ConfigurationPolicy\n       metadata:\n         name: policy-role-developer-binding\n       spec:\n         remediationAction: enforce \n         severity: high\n         namespaceSelector:\n           exclude: [\"kube-*\"]\n           include: [\"default\"]\n         object-templates:\n           - complianceType: mustonlyhave # role definition should exact match\n             objectDefinition:\n               apiVersion: rbac.authorization.k8s.io/v1\n               kind: RoleBinding\n               metadata:\n                 name: role-developer-read-binding\n                 namespace: game-app\n               roleRef:\n                 apiGroup: rbac.authorization.k8s.io\n                 kind: ClusterRole\n                 name: developer-read\n               subjects:\n               - apiGroup: rbac.authorization.k8s.io\n                 kind: Group\n                 name: \"game-developers\"\n           - complianceType: mustonlyhave # role definition should exact match\n             objectDefinition:\n               apiVersion: rbac.authorization.k8s.io/v1\n               kind: RoleBinding\n               metadata:\n                 name: role-developer-read-binding\n                 namespace: game-app\n               roleRef:\n                 apiGroup: rbac.authorization.k8s.io\n                 kind: ClusterRole\n                 name: developer-write\n               subjects:\n               - apiGroup: rbac.authorization.k8s.io\n                 kind: Group\n                 name: \"game-developers\"\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: PlacementBinding\nmetadata:\n name: binding-policy-role-developer-binding\nplacementRef:\n name: placement-policy-role-developer-binding\n kind: PlacementRule\n apiGroup: apps.open-cluster-management.io\nsubjects:\n- name: policy-role-developer-binding\n kind: Policy\n apiGroup: policy.open-cluster-management.io\n---\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: placement-policy-role-developer-binding\nspec:\n clusterConditions:\n - status: \"True\"\n   type: ManagedClusterConditionAvailable\n clusterSelector:\n   matchExpressions:\n     - {key: environment, operator: In, values: [\"dev\"]}\n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n name: policy-htpasswd-auth-provider\n namespace: open-cluster-management-policies\n annotations:\n   policy.open-cluster-management.io/standards: NIST-CSF\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline configuration\nspec:\n complianceType: mustonlyhave\n remediationAction: enforce\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: policy-htpasswd-auth-provider\n     spec:\n       object-templates:\n       - complianceType: mustonlyhave\n         objectDefinition:\n           apiVersion: config.openshift.io/v1\n           kind: OAuth\n           metadata:\n             name: cluster\n           spec:\n             identityProviders:\n             - htpasswd:\n                 fileData:\n                   name: htpass-secret\n               mappingMethod: claim\n               name: htpasswdidp\n               type: htpasswd\n             tokenConfig:\n               accessTokenMaxAgeSeconds: 7776000\n       - complianceType: mustonlyhave\n         objectDefinition:\n           apiVersion: v1\n           data:\n             htpasswd: \"\"\n           kind: Secret\n           metadata:\n             name: htpass-secret\n             namespace: openshift-config\n           type: Opaque\n       # - complianceType: musthave\n       #   objectDefinition:\n       #     kind: Identity\n       #     apiVersion: user.openshift.io/v1\n       #     metadata:\n       #       name: 'htpassidp:johndoe'\n       #     providerName: htpassidp\n       #     providerUserName: johndoe\n       #     user:\n       #       name: johndoe\n       #       uid: e4d768dd-a6b5-489c-8900-2c18a160d76f\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: PlacementBinding\nmetadata:\n name: binding-policy-htpasswd-auth-provider\n namespace: open-cluster-management-policies\nplacementRef:\n name: placement-policy-oauth-provider\n kind: PlacementRule\n apiGroup: apps.open-cluster-management.io\nsubjects:\n- name: policy-htpasswd-auth-provider\n kind: Policy\n apiGroup: policy.open-cluster-management.io\n---\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: placement-policy-oauth-provider\n namespace: open-cluster-management-policies\nspec:\n clusterConditions:\n - status: \"True\"\n   type: ManagedClusterConditionAvailable\n clusterSelector:\n   matchExpressions:\n   - key: authenticationProfile\n     operator: In\n     values:\n     - htpasswd\n   matchLabels: {}\n```", "```\n$ touch htpasswd.txt\nhtpasswd -b -B htpasswd.txt username password\n```", "```\n# Upgrade Policy to select known desired version from public connected registry\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n annotations:\n   policy.open-cluster-management.io/categories: CM Configuration Management\n   policy.open-cluster-management.io/controls: CM-2 Baseline Configuration\n   policy.open-cluster-management.io/standards: NIST SP 800-53\n name: upgrade-cluster\n namespace: upgrade-policies\nspec:\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: upgrade-cluster\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - '*'\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: config.openshift.io/v1\n           kind: ClusterVersion\n           metadata:\n             name: version\n           spec:\n             desiredUpdate:\n               force: false\n               image: \"\"\n               version: 4.5.9\n       remediationAction: enforce\n       severity: high\n remediationAction: enforce\nstatus: \n # Note that the associated PlacementRules are omitted for this example\n placement:\n - placementBinding: binding-upgrade-cluster\n   placementRule: placement-upgrade-cluster\n status:\n - clustername: east1\n   clusternamespace: east1\n   compliant: Compliant\n```", "```\napiVersion: config.openshift.io/v1\nkind: ClusterVersion\nmetadata:\n  name: version\nspec:\n  desiredUpdate:\n    force: false\n    image: \"\"\n    version: 4.5.9\n```", "```\n# Configure the OpenShift Update Service (OSUS) also known informally as \n\"Cincinnati\".\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n annotations:\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses\n     and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration\n   policy.open-cluster-management.io/standards: NIST-CSF\n name: policy-cincinatti-operator\n namespace: upgrade-policies\nspec:\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: cincinatti-policy-prod\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n         apiVersion: cincinnati.openshift.io/v1beta1\n         kind: Cincinnati\n         metadata:\n           name: example-cincinnati\n         spec:\n           registry: quay.io\n           replicas: 1\n           repository: openshift-release-dev/ocp-release\n       remediationAction: inform\n       severity: low\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: cincinatti-policy-subscription\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: operators.coreos.com/v1alpha1\n           kind: Subscription\n           metadata:\n             name: cincinnati-subscription\n             namespace: cincinnati-operator\n           spec:\n             channel: alpha\n             installPlanApproval: Automatic\n             name: cincinnati-operator\n             source: redhat-operators\n             sourceNamespace: openshift-marketplace\n       remediationAction: inform\n       severity: low\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: cincinatti-policy-operatorgroup\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: operators.coreos.com/v1\n           kind: OperatorGroup\n           metadata:\n             name: cincinnati-operatorgroup\n             namespace: cincinnati-operator\n           spec:\n             targetNamespaces:\n             - cincinnati-operator\n       remediationAction: inform\n       severity: low\n remediationAction: enforce\nstatus:\n placement:\n - placementBinding: binding-policy-cincinatti-operator\n   placementRule: placement-policy-cincinatti-operator\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n annotations:\n   policy.open-cluster-management.io/categories: \n     PR.IP Information Protection \nProcesses\n     and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration\n   policy.open-cluster-management.io/standards: NIST-CSF\n name: policy-config-imageconfig\n namespace: upgrade-policies\nspec:\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: policy-config-imageconfig-prod\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: config.openshift.io/v1\n           kind: Image\n           metadata:\n             name: cluster\n           spec:\n             additionalTrustedCA:\n               name: trusted-ca\n       remediationAction: inform\n       severity: low\n remediationAction: enforce\nstatus:\n placement:\n - placementBinding: binding-policy-config-imageconfig\n   placementRule: placement-policy-config-imageconfig\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n annotations:\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses\n     and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration\n   policy.open-cluster-management.io/standards: NIST-CSF\n name: policy-configmap-ca\n namespace: upgrade-policies\nspec:\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: configmapca\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: v1\n           data:\n             cincinnati-registry: |-\n               -----BEGIN CERTIFICATE-----\n               YOUR_DISCONNECTED_REGISTRY_CERTIFICATE\n               -----END CERTIFICATE-----\n           kind: ConfigMap\n           metadata:\n             name: trusted-ca\n             namespace: openshift-config\n       remediationAction: inform\n       severity: low\n remediationAction: enforce\nstatus:\n placement:\n - placementBinding: binding-policy-configmap-ca\n   placementRule: placement-policy-configmap-ca\n---\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n annotations:\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses\n     and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration\n   policy.open-cluster-management.io/standards: NIST-CSF\n name: policy-namespace-operatorgroup\n namespace: upgrade-policies\nspec:\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: policy-namespace-operatorgroup-prod\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n       - complianceType: musthave\n         objectDefinition:\n           apiVersion: v1\n           kind: Namespace\n           metadata:\n             name: cincinnati-operator\n       remediationAction: inform\n       severity: low\n remediationAction: enforce\nstatus:\n placement:\n - placementBinding: binding-policy-namespace-operatorgroup\n   placementRule: placement-policy-namespace-operatorgroup\n# END Policies for cincinnati-operator\n```", "```\napiVersion: policy.open-cluster-management.io/v1\nkind: Policy\nmetadata:\n annotations:\n   policy.open-cluster-management.io/categories: PR.IP Information Protection \nProcesses\n     and Procedures\n   policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration\n   policy.open-cluster-management.io/standards: NIST-CSF\n name: policy-cincinatti-clusterversion\n namespace: upgrade-policies\nspec:\n disabled: false\n policy-templates:\n - objectDefinition:\n     apiVersion: policy.open-cluster-management.io/v1\n     kind: ConfigurationPolicy\n     metadata:\n       name: policy-cluster-version\n     spec:\n       namespaceSelector:\n         exclude:\n         - kube-*\n         include:\n         - default\n       object-templates:\n       - apiVersion: config.openshift.io/v1\n         complianceType: musthave\n         kind: ClusterVersion\n         metadata:\n           name: version\n         objectDefinition:\n           spec:\n             channel: stable-4.5\n             upstream: http://disconnected-cincinnati-policy-engine-route-\ncincinnati-\noperator.apps.YOUR_CLUSTER_NAME.YOUR_BASE_DOMAIN/api/upgrades_info/v1/graph\n       remediationAction: inform\n       severity: low\n remediationAction: inform\nstatus:\n placement:\n - placementBinding: binding-policy-cincinatti-clusterversion\n   placementRule: placement-policy-cincinatti-clusterversion\n```"]