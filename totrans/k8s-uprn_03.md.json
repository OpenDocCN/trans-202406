["```\n$ gcloud config set compute/zone us-west1-a\n```", "```\n$ gcloud container clusters create kuar-cluster --num-nodes=3\n```", "```\n$ gcloud container clusters get-credentials kuar-cluster\n```", "```\n$ az group create --name=kuar --location=westus\n```", "```\n$ az aks create --resource-group=kuar --name=kuar-cluster\n```", "```\n$ az aks get-credentials --resource-group=kuar --name=kuar-cluster\n```", "```\n$ az aks install-cli\n```", "```\n$ eksctl create cluster\n```", "```\n$ eksctl create cluster --help\n```", "```\n$ minikube start\n```", "```\n$ minikube stop\n```", "```\n$ minikube delete\n```", "```\n$ kind create cluster --wait 5m\n$ export KUBECONFIG=\"$(kind get kubeconfig-path)\"\n$ kubectl cluster-info\n$ kind delete cluster\n```", "```\n$ kubectl version\n```", "```\n$ kubectl get componentstatuses\n```", "```\nNAME                 STATUS    MESSAGE              ERROR\nscheduler            Healthy   ok\ncontroller-manager   Healthy   ok\netcd-0               Healthy   {\"health\": \"true\"}\n```", "```\n$ kubectl get nodes\nNAME     STATUS   ROLES                  AGE     VERSION\nkube0    Ready    control-plane,master   45d     v1.22.4\nkube1    Ready    <none>                 45d     v1.22.4\nkube2    Ready    <none>                 45d     v1.22.4\nkube3    Ready    <none>                 45d     v1.22.4\n\n```", "```\n$ kubectl describe nodes kube1\n```", "```\nName:                   kube1\nRole:\nLabels:                 beta.kubernetes.io/arch=arm\n                        beta.kubernetes.io/os=linux\n                        kubernetes.io/hostname=node-1\n```", "```\nConditions:\n  Type                 Status  ...   Reason                       Message\n -----                 ------        ------                       -------\n  NetworkUnavailable   False   ...   FlannelIsUp                  Flannel...\n  MemoryPressure       False   ...   KubeletHasSufficientMemory   kubelet...\n  DiskPressure         False   ...   KubeletHasNoDiskPressure     kubelet...\n  PIDPressure          False   ...   KubeletHasSufficientPID      kubelet...\n  Ready                True    ...   KubeletReady                 kubelet...\n```", "```\nCapacity:\n alpha.kubernetes.io/nvidia-gpu:        0\n cpu:                                   4\n memory:                                882636Ki\n pods:                                  110\nAllocatable:\n alpha.kubernetes.io/nvidia-gpu:        0\n cpu:                                   4\n memory:                                882636Ki\n pods:                                  110\n```", "```\nSystem Info:\n  Machine ID:                 44d8f5dd42304af6acde62d233194cc6\n  System UUID:                c8ab697e-fc7e-28a2-7621-94c691120fb9\n  Boot ID:                    e78d015d-81c2-4876-ba96-106a82da263e\n  Kernel Version:             4.19.0-18-amd64\n  OS Image:                   Debian GNU/Linux 10 (buster)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.4.12\n  Kubelet Version:            v1.22.4\n  Kube-Proxy Version:         v1.22.4\nPodCIDR:                      10.244.1.0/24\nPodCIDRs:                     10.244.1.0/24\n```", "```\nNon-terminated Pods:            (3 in total)\n  Namespace   Name        CPU Requests CPU Limits Memory Requests Memory Limits\n  ---------   ----        ------------ ---------- --------------- -------------\n  kube-system kube-dns...  260m (6%)    0 (0%)     140Mi (16%)     220Mi (25%)\n  kube-system kube-fla...  0 (0%)       0 (0%)     0 (0%)          0 (0%)\n  kube-system kube-pro...  0 (0%)       0 (0%)     0 (0%)          0 (0%)\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.\n  CPU Requests  CPU Limits      Memory Requests Memory Limits\n  ------------  ----------      --------------- -------------\n  260m (6%)     0 (0%)          140Mi (16%)     220Mi (25%)\nNo events.\n```", "```\n$ kubectl get daemonSets --namespace=kube-system kube-proxy\nNAME         DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR\nkube-proxy   5         5         5       5            5           ...   45d\n```", "```\n$ kubectl get deployments --namespace=kube-system core-dns\nNAME       DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ncore-dns   1         1         1            1           45d\n```", "```\n$ kubectl get services --namespace=kube-system core-dns\nNAME       CLUSTER-IP   EXTERNAL-IP   PORT(S)         AGE\ncore-dns   10.96.0.10   <none>  53/UDP,53/TCP   45d\n```"]