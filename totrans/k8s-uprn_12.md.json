["```\n$ kubectl run -i oneshot \\\n  --image=gcr.io/kuar-demo/kuard-amd64:blue \\\n  --restart=OnFailure \\\n  --command /kuard \\\n  -- --keygen-enable \\\n     --keygen-exit-on-complete \\\n     --keygen-num-to-gen 10\n\n...\n(ID 0) Workload starting\n(ID 0 1/10) Item done: SHA256:nAsUsG54XoKRkJwyN+OShkUPKew3mwq7OCc\n(ID 0 2/10) Item done: SHA256:HVKX1ANns6SgF/er1lyo+ZCdnB8geFGt0/8\n(ID 0 3/10) Item done: SHA256:irjCLRov3mTT0P0JfsvUyhKRQ1TdGR8H1jg\n(ID 0 4/10) Item done: SHA256:nbQAIVY/yrhmEGk3Ui2sAHuxb/o6mYO0qRk\n(ID 0 5/10) Item done: SHA256:CCpBoXNlXOMQvR2v38yqimXGAa/w2Tym+aI\n(ID 0 6/10) Item done: SHA256:wEY2TTIDz4ATjcr1iimxavCzZzNjRmbOQp8\n(ID 0 7/10) Item done: SHA256:t3JSrCt7sQweBgqG5CrbMoBulwk4lfDWiTI\n(ID 0 8/10) Item done: SHA256:E84/Vze7KKyjCh9OZh02MkXJGoty9PhaCec\n(ID 0 9/10) Item done: SHA256:UOmYex79qqbI1MhcIfG4hDnGKonlsij2k3s\n(ID 0 10/10) Item done: SHA256:WCR8wIGOFag84Bsa8f/9QHuKqF+0mEnCADY\n(ID 0) Workload exiting\n```", "```\n$ kubectl delete pods oneshot\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: oneshot\nspec:\n  template:\n    spec:\n      containers:\n      - name: kuard\n        image: gcr.io/kuar-demo/kuard-amd64:blue\n        imagePullPolicy: Always\n        command:\n        - \"/kuard\"\n        args:\n        - \"--keygen-enable\"\n        - \"--keygen-exit-on-complete\"\n        - \"--keygen-num-to-gen=10\"\n      restartPolicy: OnFailure\n```", "```\n$ kubectl apply -f job-oneshot.yaml\njob.batch/oneshot created\n```", "```\n$ kubectl describe jobs oneshot\n\nName:           oneshot\nNamespace:      default\nSelector:       controller-uid=a2ed65c4-cfda-43c8-bb4a-707c4ed29143\nLabels:         controller-uid=a2ed65c4-cfda-43c8-bb4a-707c4ed29143\n                job-name=oneshot\nAnnotations:    <none>\nParallelism:    1\nCompletions:    1\nStart Time:     Wed, 02 Jun 2021 21:23:23 -0700\nCompleted At:   Wed, 02 Jun 2021 21:23:51 -0700\nDuration:       28s\nPods Statuses:  0 Running / 1 Succeeded / 0 Failed\nPod Template:\n  Labels:  controller-uid=a2ed65c4-cfda-43c8-bb4a-707c4ed29143\n           job-name=oneshot\nEvents:\n  ... Reason             Message\n  ... ------             -------\n  ... SuccessfulCreate   Created pod: oneshot-4kfdt\n```", "```\n$ kubectl logs oneshot-4kfdt\n\n...\nServing on :8080\n(ID 0) Workload starting\n(ID 0 1/10) Item done: SHA256:+r6b4W81DbEjxMcD3LHjU+EIGnLEzbpxITKn8IqhkPI\n(ID 0 2/10) Item done: SHA256:mzHewajaY1KA8VluSLOnNMk9fDE5zdn7vvBS5Ne8AxM\n(ID 0 3/10) Item done: SHA256:TRtEQHfflJmwkqnNyGgQm/IvXNykSBIg8c03h0g3onE\n(ID 0 4/10) Item done: SHA256:tSwPYH/J347il/mgqTxRRdeZcOazEtgZlA8A3/HWbro\n(ID 0 5/10) Item done: SHA256:IP8XtguJ6GbWwLHqjKecVfdS96B17nnO21I/TNc1j9k\n(ID 0 6/10) Item done: SHA256:ZfNxdQvuST/6ZzEVkyxdRG98p73c/5TM99SEbPeRWfc\n(ID 0 7/10) Item done: SHA256:tH+CNl/IUl/HUuKdMsq2XEmDQ8oAvmhMO6Iwj8ZEOj0\n(ID 0 8/10) Item done: SHA256:3GfsUaALVEHQcGNLBOu4Qd1zqqqJ8j738i5r+I5XwVI\n(ID 0 9/10) Item done: SHA256:5wV4L/xEiHSJXwLUT2fHf0SCKM2g3XH3sVtNbgskCXw\n(ID 0 10/10) Item done: SHA256:bPqqOonwSbjzLqe9ZuVRmZkz+DBjaNTZ9HwmQhbdWLI\n(ID 0) Workload exiting\n```", "```\n...\nspec:\n  template:\n    spec:\n      containers:\n        ...\n        args:\n        - \"--keygen-enable\"\n        - \"--keygen-exit-on-complete\"\n        - \"--keygen-exit-code=1\"\n        - \"--keygen-num-to-gen=3\"\n...\n```", "```\n$ kubectl get pod -l job-name=oneshot\n\nNAME            READY     STATUS             RESTARTS   AGE\noneshot-3ddk0   0/1       CrashLoopBackOff   4          3m\n```", "```\n$ kubectl get pod -l job-name=oneshot -a\n\nNAME            READY     STATUS    RESTARTS   AGE\noneshot-0wm49   0/1       Error     0          1m\noneshot-6h9s2   0/1       Error     0          39s\noneshot-hkzw0   1/1       Running   0          6s\noneshot-k5swz   0/1       Error     0          28s\noneshot-m1rdw   0/1       Error     0          19s\noneshot-x157b   0/1       Error     0          57s\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: parallel\n  labels:\n    chapter: jobs\nspec:\n  parallelism: 5\n  completions: 10\n  template:\n    metadata:\n      labels:\n        chapter: jobs\n    spec:\n      containers:\n      - name: kuard\n        image: gcr.io/kuar-demo/kuard-amd64:blue\n        imagePullPolicy: Always\n        command:\n        - \"/kuard\"\n        args:\n        - \"--keygen-enable\"\n        - \"--keygen-exit-on-complete\"\n        - \"--keygen-num-to-gen=10\"\n      restartPolicy: OnFailure\n```", "```\n$ kubectl apply -f job-parallel.yaml\njob.batch/parallel created\n```", "```\n$ kubectl get pods -w\nNAME             READY     STATUS              RESTARTS  AGE\nparallel-55tlv   1/1       Running             0         5s\nparallel-5s7s9   1/1       Running             0         5s\nparallel-jp7bj   1/1       Running             0         5s\nparallel-lssmn   1/1       Running             0         5s\nparallel-qxcxp   1/1       Running             0         5s\nNAME             READY     STATUS              RESTARTS  AGE\nparallel-jp7bj   0/1       Completed           0         26s\nparallel-tzp9n   0/1       Pending             0         0s\nparallel-tzp9n   0/1       Pending             0         0s\nparallel-tzp9n   0/1       ContainerCreating   0         1s\nparallel-tzp9n   1/1       Running             0         1s\nparallel-tzp9n   0/1       Completed           0         48s\nparallel-x1kmr   0/1       Pending             0         0s\n...\n```", "```\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  labels:\n    app: work-queue\n    component: queue\n    chapter: jobs\n  name: queue\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: work-queue\n      component: queue\n      chapter: jobs\n  template:\n    metadata:\n      labels:\n        app: work-queue\n        component: queue\n        chapter: jobs\n    spec:\n      containers:\n      - name: queue\n        image: \"gcr.io/kuar-demo/kuard-amd64:blue\"\n        imagePullPolicy: Always\n```", "```\n$ kubectl apply -f rs-queue.yaml\nreplicaset.apps/queue created\n```", "```\n$ kubectl port-forward rs/queue 8080:8080\nForwarding from 127.0.0.1:8080 -> 8080\nForwarding from [::1]:8080 -> 8080\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: work-queue\n    component: queue\n    chapter: jobs\n  name: queue\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: work-queue\n    component: queue\n```", "```\n$ kubectl apply -f service-queue.yaml\nservice/queue created\n```", "```\n# Create a work queue called 'keygen'\ncurl -X PUT localhost:8080/memq/server/queues/keygen\n\n# Create 100 work items and load up the queue.\nfor i in work-item-{0..99}; do\n  curl -X POST localhost:8080/memq/server/queues/keygen/enqueue \\\n    -d \"$i\"\ndone\n```", "```\n$ curl 127.0.0.1:8080/memq/server/stats\n{\n    \"kind\": \"stats\",\n    \"queues\": [\n        {\n            \"depth\": 100,\n            \"dequeued\": 0,\n            \"drained\": 0,\n            \"enqueued\": 100,\n            \"name\": \"keygen\"\n        }\n    ]\n}\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app: message-queue\n    component: consumer\n    chapter: jobs\n  name: consumers\nspec:\n  parallelism: 5\n  template:\n    metadata:\n      labels:\n        app: message-queue\n        component: consumer\n        chapter: jobs\n    spec:\n      containers:\n      - name: worker\n        image: \"gcr.io/kuar-demo/kuard-amd64:blue\"\n        imagePullPolicy: Always\n        command:\n        - \"/kuard\"\n        args:\n        - \"--keygen-enable\"\n        - \"--keygen-exit-on-complete\"\n        - \"--keygen-memq-server=http://queue:8080/memq/server\"\n        - \"--keygen-memq-queue=keygen\"\n      restartPolicy: OnFailure\n```", "```\n$ kubectl apply -f job-consumers.yaml\njob.batch/consumers created\n```", "```\n$ kubectl get pods\nNAME              READY     STATUS    RESTARTS   AGE\nqueue-43s87       1/1       Running   0          5m\nconsumers-6wjxc   1/1       Running   0          2m\nconsumers-7l5mh   1/1       Running   0          2m\nconsumers-hvz42   1/1       Running   0          2m\nconsumers-pc8hr   1/1       Running   0          2m\nconsumers-w20cc   1/1       Running   0          2m\n```", "```\n$ kubectl delete rs,svc,job -l chapter=jobs\n```", "```\napiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: example-cron\nspec:\n  # Run every fifth hour\n  schedule: \"0 */5 * * *\"\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: batch-job\n            image: my-batch-image\n          restartPolicy: OnFailure\n```"]