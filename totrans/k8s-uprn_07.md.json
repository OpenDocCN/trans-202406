["```\n$ kubectl create deployment alpaca-prod \\\n  --image=gcr.io/kuar-demo/kuard-amd64:blue \\\n  --port=8080\n$ kubectl scale deployment alpaca-prod --replicas 3\n$ kubectl expose deployment alpaca-prod\n$ kubectl create deployment bandicoot-prod \\\n  --image=gcr.io/kuar-demo/kuard-amd64:green \\\n  --port=8080\n$ kubectl scale deployment bandicoot-prod --replicas 2\n  kubectl expose deployment bandicoot-prod\n$ kubectl get services -o wide\n\nNAME             CLUSTER-IP    ... PORT(S)  ... SELECTOR\nalpaca-prod      10.115.245.13 ... 8080/TCP ... app=alpaca\nbandicoot-prod   10.115.242.3  ... 8080/TCP ... app=bandicoot\nkubernetes       10.115.240.1  ... 443/TCP  ... <none>\n```", "```\n$ ALPACA_POD=$(kubectl get pods -l app=alpaca \\\n    -o jsonpath='{.items[0].metadata.name}')\n$ kubectl port-forward $ALPACA_POD 48858:8080\n```", "```\n;; opcode: QUERY, status: NOERROR, id: 12071\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;alpaca-prod.default.svc.cluster.local.\tIN\t A\n\n;; ANSWER SECTION:\nalpaca-prod.default.svc.cluster.local.\t30\tIN\tA\t10.115.245.13\n```", "```\n$ kubectl edit deployment/alpaca-prod\n```", "```\nspec:\n  ...\n  template:\n    ...\n    spec:\n      containers:\n        ...\n        name: alpaca-prod\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          periodSeconds: 2\n          initialDelaySeconds: 0\n          failureThreshold: 3\n          successThreshold: 1\n```", "```\n$ ALPACA_POD=$(kubectl get pods -l app=alpaca-prod \\\n    -o jsonpath='{.items[0].metadata.name}')\n$ kubectl port-forward $ALPACA_POD 48858:8080\n```", "```\n$ kubectl get endpoints alpaca-prod --watch\n```", "```\n$ kubectl edit service alpaca-prod\n```", "```\n$ kubectl describe service alpaca-prod\n\nName:                   alpaca-prod\nNamespace:              default\nLabels:                 app=alpaca\nAnnotations:            <none>\nSelector:               app=alpaca\nType:                   NodePort\nIP:                     10.115.245.13\nPort:                   <unset> 8080/TCP\nNodePort:               <unset> 32711/TCP\nEndpoints:              10.112.1.66:8080,10.112.2.104:8080,10.112.2.105:8080\nSession Affinity:       None\nNo events.\n```", "```\n$ ssh <*node*> -L 8080:localhost:32711\n```", "```\n$ kubectl describe service alpaca-prod\n\nName:                   alpaca-prod\nNamespace:              default\nLabels:                 app=alpaca\nSelector:               app=alpaca\nType:                   LoadBalancer\nIP:                     10.115.245.13\nLoadBalancer Ingress:   104.196.248.204\nPort:                   <unset>\t8080/TCP\nNodePort:               <unset>\t32711/TCP\nEndpoints:              10.112.1.66:8080,10.112.2.104:8080,10.112.2.105:8080\nSession Affinity:       None\nEvents:\n  FirstSeen ... Reason                Message\n  --------- ... ------                -------\n  3m        ... Type                  NodePort -> LoadBalancer\n  3m        ... CreatingLoadBalancer  Creating load balancer\n  2m        ... CreatedLoadBalancer   Created load balancer\n```", "```\n...\nmetadata:\n    ...\n    name: some-service\n    annotations:\n        service.beta.kubernetes.io/azure-load-balancer-internal: \"true\"\n...\n```", "```\n$ kubectl describe endpoints alpaca-prod\n\nName:           alpaca-prod\nNamespace:      default\nLabels:         app=alpaca\nSubsets:\n  Addresses:            10.112.1.54,10.112.2.84,10.112.2.85\n  NotReadyAddresses:    <none>\n  Ports:\n    Name        Port    Protocol\n    ----        ----    --------\n    <unset>     8080    TCP\n\nNo events.\n```", "```\n$ kubectl get endpoints alpaca-prod --watch\n```", "```\nNAME          ENDPOINTS                                            AGE\nalpaca-prod   10.112.1.54:8080,10.112.2.84:8080,10.112.2.85:8080   1m\n```", "```\n$ kubectl delete deployment alpaca-prod\n$ kubectl create deployment alpaca-prod \\\n  --image=gcr.io/kuar-demo/kuard-amd64:blue \\\n  --port=8080\n$ kubectl scale deployment alpaca-prod --replicas=3\n```", "```\nNAME          ENDPOINTS                                            AGE\nalpaca-prod   10.112.1.54:8080,10.112.2.84:8080,10.112.2.85:8080   1m\nalpaca-prod   10.112.1.54:8080,10.112.2.84:8080                    1m\nalpaca-prod   <none>                                               1m\nalpaca-prod   10.112.2.90:8080                                     1m\nalpaca-prod   10.112.1.57:8080,10.112.2.90:8080                    1m\nalpaca-prod   10.112.0.28:8080,10.112.1.57:8080,10.112.2.90:8080   1m\n```", "```\n$ kubectl get pods -o wide --show-labels\n\nNAME                            ... IP          ... LABELS\nalpaca-prod-12334-87f8h    ... 10.112.1.54 ... app=alpaca\nalpaca-prod-12334-jssmh    ... 10.112.2.84 ... app=alpaca\nalpaca-prod-12334-tjp56    ... 10.112.2.85 ... app=alpaca\nbandicoot-prod-5678-sbxzl  ... 10.112.1.55 ... app=bandicoot\nbandicoot-prod-5678-x0dh8  ... 10.112.2.86 ... app=bandicoot\n```", "```\n$ kubectl get pods -o wide --selector=app=alpaca\n\nNAME                         ... IP          ...\nalpaca-prod-3408831585-bpzdz ... 10.112.1.54 ...\nalpaca-prod-3408831585-kncwt ... 10.112.2.84 ...\nalpaca-prod-3408831585-l9fsq ... 10.112.2.85 ...\n```", "```\n$ BANDICOOT_POD=$(kubectl get pods -l app=bandicoot \\\n    -o jsonpath='{.items[0].metadata.name}')\n$ kubectl port-forward $BANDICOOT_POD 48858:8080\n```", "```\napiVersion: v1\nkind: Endpoints\nmetadata:\n  # This name must match the name of your service\n  name: my-database-server\nsubsets:\n  - addresses:\n      # Replace this IP with the real IP of your server\n      - ip: 1.2.3.4\n    ports:\n      # Replace this port with the port(s) you want to expose\n      - port: 1433\n```", "```\n$ kubectl delete services,deployments -l app\n```"]