["```\nlet persistentContainer = NSPersistentContainer(name: \"MyModel\")\npersistentContainer.loadPersistentStores { (description, error) in\n    // Completion handler\n}\n```", "```\nlet persistentContainer = NSPersistentContainer(name: \"MyModel\")\npersistentContainer.loadPersistentStores { (description, error) in\n    guard let error = error else {\n        // Display error to user and/or attempt to do this again\n        return\n    }\n\n    // Update the user interface and/or start using Core Data\n}\n```", "```\nimport Foundation\nimport CoreData\n\n@objc(MyEntity)\npublic class MyEntity: NSManagedObject {\n\n}\n\nextension MyEntity {\n\n    @nonobjc public class func fetchRequest() -> NSFetchRequest<MyEntity> {\n        return NSFetchRequest<MyEntity>(entityName: \"MyEntity\")\n    }\n\n    @NSManaged public var title: String?\n\n}\n```", "```\npublic class Person: NSManagedObject {\n\t@NSManaged public var firstName: String\n\t@NSManaged public var lastName: String\n\tpublic var fullName: String {\n\t\treturn \"\\(firstName) \\(lastName)\"\n\t}\n}\n```", "```\npersistentContainer.performBackgroundTask { (managedObjectContext) in\n\t// Some operation...\n}\n```", "```\npersistentContainer.performBackgroundTask { (managedObjectContext) in\n    let person = Person(context: managedObjectContext)\n    person.firstName = \"Mike\"\n    person.lastName = \"Dunn\"\n}\n```", "```\npersistentContainer.performBackgroundTask { (managedObjectContext) in\n    let person = Person(context: managedObjectContext)\n    person.firstName = \"Mike\"\n    person.lastName = \"Dunn\"\n\n    // Save the context\n    do {\n        try managedObjectContext.save()\n    } catch {\n        print(\"Error during save. \\(error)\")\n    }\n}\n```", "```\nlet managedObjectContext = persistentContainer.viewContext\nlet fetchRequest = NSFetchRequest<Person>(entityName: \"Person\")\ndo {\n\tlet persons = try managedObjectContext.fetch(fetchRequest)\n} catch {\n\tfatalError(\"Fetch could not be completed.\")\n}\n```"]