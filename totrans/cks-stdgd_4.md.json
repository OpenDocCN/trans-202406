["```\n$ systemctl | grep running\n...\nsnapd.service   loaded active running   Snap Daemon\n```", "```\n$ systemctl status snapd\n● snapd.service - Snap Daemon\n     Loaded: loaded (/lib/systemd/system/snapd.service; enabled; vendor \\\n     preset: enabled)\n     Active: active (running) since Mon 2022-09-19 22:49:56 UTC; 30min ago\nTriggeredBy: ● snapd.socket\n   Main PID: 704 (snapd)\n      Tasks: 12 (limit: 2339)\n     Memory: 45.9M\n     CGroup: /system.slice/snapd.service\n             └─704 /usr/lib/snapd/snapd\n```", "```\n$ sudo systemctl stop snapd\nWarning: Stopping snapd.service, but it can still be activated by:\n  snapd.socket\n```", "```\n$ sudo systemctl disable snapd\nRemoved /etc/systemd/system/multi-user.target.wants/snapd.service.\n```", "```\n$ systemctl status snapd\n● snapd.service - Snap Daemon\n     Loaded: loaded (/lib/systemd/system/snapd.service; disabled; vendor \\\n     preset: enabled)\n     Active: inactive (dead) since Mon 2022-09-19 23:22:22 UTC; 4min 4s ago\nTriggeredBy: ● snapd.socket\n   Main PID: 704 (code=exited, status=0/SUCCESS)\n```", "```\n$ sudo apt purge --auto-remove snapd\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following packages will be REMOVED:\n  snapd* squashfs-tools*\n0 upgraded, 0 newly installed, 2 to remove and 116 not upgraded.\nAfter this operation, 147 MB disk space will be freed.\nDo you want to continue? [Y/n] y\n...\n```", "```\n$ systemctl status snapd\nUnit snapd.service could not be found.\n```", "```\n$ cat /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n...\n```", "```\n$ ps aux | grep bash\nroot         956  0.0  0.4  22512 19200 pts/0    Ss   17:57   0:00 -bash\nroot        7064  0.0  0.0   6608  2296 pts/0    S+   18:08   0:00 grep \\\n--color=auto bash\n```", "```\n$ sudo adduser ben\nAdding user ‘ben’ ...\nAdding new group ‘ben’ (1001) ...\nAdding new user ‘ben’ (1001) with group ‘ben’ ...\nCreating home directory ‘/home/ben’ ...\nCopying files from ‘/etc/skel’ ...\nNew password:\nRetype new password:\n...\n```", "```\n$ cat /etc/passwd\n...\nben:x:1001:1001:,,,:/home/ben:/bin/bash\n```", "```\n$ su ben\nPassword:\nben@controlplane:/root$ pwd\n/root\n```", "```\n$ su - ben\nben@controlplane:~$ pwd\n/home/ben\n```", "```\n$ sudo -u ben pwd\n/root\n```", "```\n$ sudo userdel -r ben\n```", "```\n$ cat /etc/group\nroot:x:0:\nplugdev:x:46:packer\nnogroup:x:65534:\n...\n```", "```\n$ sudo groupadd kube-developers\n```", "```\n$ cat /etc/group\n...\nkube-developers:x:1004:\n```", "```\n$ sudo usermod -g kube-developers ben\n```", "```\n$ cat /etc/passwd | grep ben\nben:x:1001:1004:,,,:/home/ben:/bin/bash\n```", "```\n$ sudo groupdel kube-developers\ngroupdel: cannot remove the primary group of user *ben*\n```", "```\n$ sudo usermod -g kube-admins ben\n$ sudo groupdel kube-developers\n```", "```\n$ touch my-file\n```", "```\n$ ls -l\ntotal 0\n-rw-r--r-- 1 root root 0 Sep 26 17:53 my-file\n```", "```\n$ chown ben my-file\n$ ls -l\ntotal 0\n-rw-r--r-- 1 ben  root 0 Sep 26 17:53 my-file\n```", "```\n$ chmod -w file1\n$ ls -l\ntotal 0\n-r--r--r-- 1 ben  root 0 Sep 26 17:53 my-file\n```", "```\n$ sudo apt update\n$ sudo apt install apache2\n```", "```\n$ sudo ss -ltpn\nState    Recv-Q   Send-Q   Local Address:Port   Peer Address:Port   Process\n...\nLISTEN   0        511      *:80                 *:*                 users: \\\n((\"apache2\",pid=18435,fd=4),(\"apache2\",pid=18434,fd=4),(\"apache2\", ]\\\npid=18432,fd=4))\n\n```", "```\n$ sudo systemctl status apache2\n● apache2.service - The Apache HTTP Server\n     Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor \\\n     preset: enabled)\n     Active: active (running) since Tue 2022-09-20 22:25:25 UTC; 39s ago\n       Docs: https://httpd.apache.org/docs/2.4/\n   Main PID: 18432 (apache2)\n      Tasks: 55 (limit: 2339)\n     Memory: 5.6M\n     CGroup: /system.slice/apache2.service\n             ├─18432 /usr/sbin/apache2 -k start\n             ├─18434 /usr/sbin/apache2 -k start\n             └─18435 /usr/sbin/apache2 -k start\n```", "```\n$ sudo systemctl stop apache2\n$ sudo systemctl disable apache2\nSynchronizing state of apache2.service with SysV service script with \\\n/lib/systemd/systemd-sysv-install.\nExecuting: /lib/systemd/systemd-sysv-install disable apache2\nRemoved /etc/systemd/system/multi-user.target.wants/apache2.service.\n$ sudo apt purge --auto-remove apache2\n```", "```\n$ sudo ss -ltpn | grep :80\n```", "```\n$ sudo ufw allow ssh\nRules updated\nRules updated (v6)\n$ sudo ufw default deny outgoing\nDefault outgoing policy changed to *deny*\n(be sure to update your rules accordingly)\n$ sudo ufw default deny incoming\nDefault incoming policy changed to *deny*\n(be sure to update your rules accordingly)\n$ sudo ufw enable\nCommand may disrupt existing ssh connections. Proceed with operation (y|n)? y\nFirewall is active and enabled on system startup\n```", "```\n$ sudo ufw allow 6443\nRule added\nRule added (v6)\n```", "```\n$ sudo aa-status\napparmor module is loaded.\n31 profiles are loaded.\n31 profiles are in enforce mode.\n   /snap/snapd/15177/usr/lib/snapd/snap-confine\n   ...\n0 profiles are in complain mode.\n14 processes have profiles defined.\n14 processes are in enforce mode.\n   /pause (11934) docker-default\n   ...\n0 processes are in complain mode.\n0 processes are unconfined but have a profile defined.\n```", "```\n#include <tunables/global>\n\nprofile k8s-deny-write flags=(attach_disconnected) { ![1](assets/1.png)\n  #include <abstractions/base>\n\n  file, ![2](assets/2.png)\n\n  deny /** w, ![3](assets/3.png)\n}\n```", "```\n$ sudo apparmor_parser /etc/apparmor.d/k8s-deny-write\n```", "```\n$ sudo aa-status\napparmor module is loaded.\n32 profiles are loaded.\n32 profiles are in enforce mode.\n   k8s-deny-write\n   ...\n```", "```\n$ sudo apt-get update\n$ sudo apt-get install apparmor-utils\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hello-apparmor\n  annotations:\n    container.apparmor.security.beta.kubernetes.io/hello: \\ ![1](assets/1.png)\n    localhost/k8s-deny-write ![2](assets/2.png)\nspec:\n  containers:\n  - name: hello ![3](assets/3.png)\n    image: busybox:1.28\n    command: [\"sh\", \"-c\", \"echo 'Hello AppArmor!' && sleep 1h\"]\n```", "```\n$ kubectl apply -f pod.yaml\npod/hello-apparmor created\n$ kubectl get pod hello-apparmor\nNAME             READY   STATUS    RESTARTS   AGE\nhello-apparmor   1/1     Running   0          4s\n```", "```\n$ kubectl exec -it hello-apparmor -- /bin/sh\n/ # touch test.txt\ntouch: test.txt: Permission denied\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hello-seccomp\nspec:\n  securityContext:\n    seccompProfile:\n      type: RuntimeDefault ![1](assets/1.png)\n  containers:\n  - name: hello\n    image: busybox:1.28\n    command: [\"sh\", \"-c\", \"echo 'Hello seccomp!' && sleep 1h\"]\n```", "```\n$ kubectl apply -f pod.yaml\npod/hello-seccomp created\n$ kubectl get pod hello-seccomp\nNAME            READY   STATUS    RESTARTS   AGE\nhello-seccomp   1/1     Running   0          4s\n```", "```\n$ kubectl logs hello-seccomp\nHello seccomp!\n```", "```\n$ sudo mkdir -p /var/lib/kubelet/seccomp/profiles\n```", "```\n{\n    \"defaultAction\": \"SCMP_ACT_ALLOW\", ![1](assets/1.png)\n    \"architectures\": [ ![2](assets/2.png)\n        \"SCMP_ARCH_X86_64\",\n        \"SCMP_ARCH_X86\",\n        \"SCMP_ARCH_X32\"\n    ],\n    \"syscalls\": [\n        {\n            \"names\": [\n                \"mkdir\"\n            ],\n            \"action\": \"SCMP_ACT_ERRNO\" ![3](assets/3.png)\n        }\n    ]\n}\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hello-seccomp\nspec:\n  securityContext:\n    seccompProfile:\n      type: Localhost ![1](assets/1.png)\n      localhostProfile: profiles/mkdir-violation.json ![2](assets/2.png)\n  containers:\n  - name: hello\n    image: busybox:1.28\n    command: [\"sh\", \"-c\", \"echo 'Hello seccomp!' && sleep 1h\"]\n    securityContext:\n      allowPrivilegeEscalation: false\n```", "```\n$ kubectl apply -f pod.yaml\npod/hello-seccomp created\n$ kubectl get pod hello-seccomp\nNAME            READY   STATUS    RESTARTS   AGE\nhello-seccomp   1/1     Running   0          4s\n```", "```\n$ kubectl exec -it hello-seccomp -- /bin/sh\n/ # mkdir test\nmkdir: can't create directory *test*: Operation not permitted\n```"]