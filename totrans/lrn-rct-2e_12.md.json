["```\nconst userDetails = response => {\n  const login = response.login;\n  console.log(login);\n};\n```", "```\nfetch(\"https://api.github.com/users/moonhighway\")\n  .then(res => res.json())\n  .then(console.log);\n```", "```\nfetch(\"https://api.github.com/users/moonhighway\")\n^\n\nReferenceError: fetch is not defined\nat Object.<anonymous> (/Users/eveporcello/Desktop/index.js:7:1)\nat Module.\\_compile (internal/modules/cjs/loader.js:1063:30)\nat Object.Module.\\_extensions..js (internal/modules/cjs/loader.js:1103:10)\nat Module.load (internal/modules/cjs/loader.js:914:32)\nat Function.Module.\\_load (internal/modules/cjs/loader.js:822:14)\nat Function.Module.runMain (internal/modules/cjs/loader.js:1143:12)\nat internal/main/run_main_module.js:16:11\n```", "```\nnpm install isomorphic-fetch\n```", "```\nconst fetch = require(\"isomorphic-fetch\");\n\nconst userDetails = response => {\n  const login = response.login;\n  console.log(login);\n};\n\nfetch(\"https://api.github.com/users/moonhighway\")\n  .then(res => res.json())\n  .then(userDetails);\n```", "```\nfunction Star({\n  selected = false,\n  onClick = f => f\n}) {\n  return (\n    <div\n      className={\n        selected ? \"star selected\" : \"star\"\n      }\n      onClick={onClick}\n    ></div>\n  );\n}\n```", "```\nfunction Star({\n  selected = false,\n  onClick = f => f\n}) {\n  return React.createElement(\"div\", {\n    className: selected\n      ? \"star selected\"\n      : \"star\",\n    onClick: onClick\n  });\n}\n```", "```\n// Renders html directly in the browser\nReactDOM.render(<Star />);\n\n// Renders html as a string\nlet html = ReactDOM.renderToString(<Star />);\n```", "```\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Menu } from \"./Menu\";\n\nconst data = [\n  {\n    name: \"Baked Salmon\",\n    ingredients: [\n      {\n        name: \"Salmon\",\n        amount: 1,\n        measurement: \"lb\"\n      },\n      {\n        name: \"Pine Nuts\",\n        amount: 1,\n        measurement: \"cup\"\n      },\n      {\n        name: \"Butter Lettuce\",\n        amount: 2,\n        measurement: \"cups\"\n      },\n      {\n        name: \"Yellow Squash\",\n        amount: 1,\n        measurement: \"med\"\n      },\n      {\n        name: \"Olive Oil\",\n        amount: 0.5,\n        measurement: \"cup\"\n      },\n      {\n        name: \"Garlic\",\n        amount: 3,\n        measurement: \"cloves\"\n      }\n    ],\n    steps: [\n      \"Preheat the oven to 350 degrees.\",\n      \"Spread the olive oil around a glass baking dish.\",\n      \"Add the yellow squash and place in the oven for 30 mins.\",\n      \"Add the salmon, garlic, and pine nuts to the dish.\",\n      \"Bake for 15 minutes.\",\n      \"Remove from oven. Add the lettuce and serve.\"\n    ]\n  },\n  {\n    name: \"Fish Tacos\",\n    ingredients: [\n      {\n        name: \"Whitefish\",\n        amount: 1,\n        measurement: \"l lb\"\n      },\n      {\n        name: \"Cheese\",\n        amount: 1,\n        measurement: \"cup\"\n      },\n      {\n        name: \"Iceberg Lettuce\",\n        amount: 2,\n        measurement: \"cups\"\n      },\n      {\n        name: \"Tomatoes\",\n        amount: 2,\n        measurement: \"large\"\n      },\n      {\n        name: \"Tortillas\",\n        amount: 3,\n        measurement: \"med\"\n      }\n    ],\n    steps: [\n      \"Cook the fish on the grill until hot.\",\n      \"Place the fish on the 3 tortillas.\",\n      \"Top them with lettuce, tomatoes, and cheese.\"\n    ]\n  }\n];\n\nReactDOM.render(\n  <Menu\n    recipes={data}\n    title=\"Delicious Recipes\"\n  />,\n  document.getElementById(\"root\")\n);\n```", "```\nfunction Recipe({ name, ingredients, steps }) {\n  return (\n    <section\n      id={name.toLowerCase().replace(/ /g, \"-\")}\n    >\n      <h1>{name}</h1>\n      <ul className=\"ingredients\">\n        {ingredients.map((ingredient, i) => (\n          <li key={i}>{ingredient.name}</li>\n        ))}\n      </ul>\n      <section className=\"instructions\">\n        <h2>Cooking Instructions</h2>\n        {steps.map((step, i) => (\n          <p key={i}>{step}</p>\n        ))}\n      </section>\n    </section>\n  );\n}\n\nexport function Menu({ title, recipes }) {\n  return (\n    <article>\n      <header>\n        <h1>{title}</h1>\n      </header>\n      <div className=\"recipes\">\n        {recipes.map((recipe, i) => (\n          <Recipe key={i} {...recipe} />\n        ))}\n      </div>\n    </article>\n  );\n}\n```", "```\nnpm install express\n```", "```\nimport express from \"express\";\nconst app = express();\n\napp.use(express.static(\"./build\"));\n```", "```\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { Menu } from \"../src/Menu.js\";\n\nconst PORT = process.env.PORT || 4000;\n\napp.get(\"/*\", (req, res) => {\n  const app = ReactDOMServer.renderToString(\n    <Menu />\n  );\n});\n\napp.listen(PORT, () =>\n  console.log(\n    `Server is listening on port ${PORT}`\n  )\n);\n```", "```\napp.get(\"/*\", (req, res) => {\n  const app = ReactDOMServer.renderToString(\n    <Menu />\n  );\n\n  const indexFile = path.resolve(\n    \"./build/index.html\"\n  );\n\n  fs.readFile(indexFile, \"utf8\", (err, data) => {\n    return res.send(\n      data.replace(\n        '<div id=\"root\"></div>',\n        `<div id=\"root\">${app}</div>`\n      )\n    );\n  });\n});\n```", "```\nnpm install @babel/core @babel/preset-env babel-loader nodemon npm-run-all\nwebpack webpack-cli webpack-node-externals\n```", "```\n{\n  \"presets\": [\"@babel/preset-env\", \"react-app\"]\n}\n```", "```\nconst path = require(\"path\");\nconst nodeExternals = require(\"webpack-node-externals\");\n\nmodule.exports = {\n  entry: \"./server/index.js\",\n  target: \"node\",\n  externals: [nodeExternals()],\n  output: {\n    path: path.resolve(\"build-server\"),\n    filename: \"index.js\"\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: \"babel-loader\"\n      }\n    ]\n  }\n};\n```", "```\nSKIP_PREFLIGHT_CHECK=true\n```", "```\n{\n  \"scripts\": {\n    //...\n    \"dev:build-server\": \"NODE_ENV=development webpack --config webpack.server.js\n --mode=development -w\",\n    \"dev:start\": \"nodemon ./server-build/index.js\",\n    \"dev\": \"npm-run-all --parallel build dev:*\"\n  }\n}\n```", "```\nmkdir project-next\ncd project-next\nnpm init -y\nnpm install --save react react-dom next\nmkdir pages\n```", "```\n{\n  //...\n  \"scripts\": {\n    \"dev\": \"next\",\n    \"build\": \"next build\",\n    \"start\": \"next start\"\n  }\n}\n```", "```\nexport default function Index() {\n  return (\n    <div>\n      <p>Hello everyone!</p>\n    </div>\n  );\n}\n```", "```\nexport default function Pets() {\n  return <h1>Pets!</h1>;\n}\n```", "```\nimport Link from \"next/link\";\n\nexport default function Header() {\n  return (\n    <div>\n      <Link href=\"/\">\n        <a>Home</a>\n      </Link>\n      <Link href=\"/pets\">\n        <a>Pets</a>\n      </Link>\n    </div>\n  );\n}\n```", "```\nconst linkStyle = {\n  marginRight: 15,\n  color: \"salmon\"\n};\n\nexport default function Header() {\n  return (\n    <div>\n      <Link href=\"/\">\n        <a style={linkStyle}>Home</a>\n      </Link>\n      <Link href=\"/pets\">\n        <a style={linkStyle}>Pets</a>\n      </Link>\n    </div>\n  );\n}\n```", "```\nimport Header from \"./Header\";\n\nexport function Layout(props) {\n  return (\n    <div>\n      <Header />\n      {props.children}\n    </div>\n  );\n}\n```", "```\nimport Layout from \"./Layout\";\n\nexport default function Index() {\n  return (\n    <Layout>\n      <div>\n        <h1>Hello everyone!</h1>\n      </div>\n    </Layout>\n  );\n}\n```", "```\nimport Layout from \"./Layout\";\n\nexport default function Pets() {\n  return (\n    <Layout>\n      <div>\n        <h1>Hey pets!</h1>\n      </div>\n    </Layout>\n  );\n}\n```", "```\nnpm install isomorphic-unfetch\n```", "```\nimport fetch from \"isomorphic-unfetch\";\n```", "```\nPets.getInitialProps = async function() {\n  const res = await fetch(\n    `http://pet-library.moonhighway.com/api/pets`\n  );\n  const data = await res.json();\n  return {\n    pets: data\n  };\n};\n```", "```\nexport default function Pets(props) {\n  return (\n    <Layout>\n      <div>\n        <h1>Pets!</h1>\n        <ul>\n          {props.pets.map(pet => (\n            <li key={pet.id}>{pet.name}</li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  );\n}\n```", "```\nnpm install -g gatsby-cli\ngatsby new pets\n```", "```\ncd pets\n```", "```\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst ThirdPage = () => (\n  <Layout>\n    <SEO title=\"Page three\" />\n    <h1>Hi from the third page</h1>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default ThirdPage;\n```"]