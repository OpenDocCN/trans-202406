["```\n$ mongod --configsvr --replSet configRS --bind_ip localhost,198.51.100.51 mongod \n  --dbpath /var/lib/mongodb\n\n$ mongod --configsvr --replSet configRS --bind_ip localhost,198.51.100.52 mongod \n  --dbpath /var/lib/mongodb\n\n$ mongod --configsvr --replSet configRS --bind_ip localhost,198.51.100.53 mongod \n  --dbpath /var/lib/mongodb\n```", "```\n$ mongo --host *`<hostname>`* --port *`<port>`*\n```", "```\n> rs.initiate(\n  {\n    _id: \"configRS\",\n    configsvr: true,\n    members: [\n      { _id : 0, host : \"cfg1.example.net:27019\" },\n      { _id : 1, host : \"cfg2.example.net:27019\" },\n      { _id : 2, host : \"cfg3.example.net:27019\" }\n    ]\n  }\n)\n```", "```\n$ mongos --configdb \\\n  configRS/cfg1.example.net:27019, \\\n  cfg2.example.net:27019,cfg3.example.net:27019 \\\n--bind_ip localhost,198.51.100.100 --logpath /var/log/mongos.log\n```", "```\n$ mongo srv1.example.net\n```", "```\n> rs.status()\n   \"set\" : \"rs0\",\n   \"date\" : ISODate(\"2018-11-02T20:02:16.543Z\"),\n   \"myState\" : 1,\n   \"term\" : NumberLong(1),\n   \"heartbeatIntervalMillis\" : NumberLong(2000),\n   \"optimes\" : {\n\n         \"lastCommittedOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         },\n         \"readConcernMajorityOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         },\n         \"appliedOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         },\n         \"durableOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         }\n      },\n\n   \"members\" : [\n      {\n            \"_id\" : 0,\n            \"name\" : \"svr1.example.net:27017\",\n            \"health\" : 1,\n            \"state\" : 1,\n            \"stateStr\" : \"PRIMARY\",\n            \"uptime\" : 269,\n            \"optime\" : {\n                        \"ts\" : Timestamp(1478116934, 1),\n                        \"t\" : NumberLong(1)\n            },\n            \"optimeDate\" : ISODate(\"2018-11-02T20:02:14Z\"),\n            \"infoMessage\" : \"could not find member to sync from\",\n            \"electionTime\" : Timestamp(1478116933, 1),\n            \"electionDate\" : ISODate(\"2018-11-02T20:02:13Z\"),\n            \"configVersion\" : 1,\n            \"self\" : true\n      },\n      {\n            \"_id\" : 1,\n            \"name\" : \"svr2.example.net:27017\",\n            \"health\" : 1,\n            \"state\" : 2,\n            \"stateStr\" : \"SECONDARY\",\n            \"uptime\" : 14,\n            \"optime\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDurable\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDate\" : ISODate(\"2018-11-02T20:02:14Z\"),\n            \"optimeDurableDate\" : ISODate(\"2018-11-02T20:02:14Z\"),\n            \"lastHeartbeat\" : ISODate(\"2018-11-02T20:02:15.618Z\"),\n            \"lastHeartbeatRecv\" : ISODate(\"2018-11-02T20:02:14.866Z\"),\n            \"pingMs\" : NumberLong(0),\n            \"syncingTo\" : \"m1.example.net:27017\",\n            \"configVersion\" : 1\n      },\n      {\n            \"_id\" : 2,\n            \"name\" : \"svr3.example.net:27017\",\n            \"health\" : 1,\n            \"state\" : 2,\n            \"stateStr\" : \"SECONDARY\",\n            \"uptime\" : 14,\n            \"optime\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDurable\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDate\" : ISODate(\"2018-11-02T20:02:14Z\"),\n            \"optimeDurableDate\" : ISODate(\"2018-11-02T20:02:14Z\"),\n            \"lastHeartbeat\" : ISODate(\"2018-11-02T20:02:15.619Z\"),\n            \"lastHeartbeatRecv\" : ISODate(\"2018-11-02T20:02:14.787Z\"),\n            \"pingMs\" : NumberLong(0),\n            \"syncingTo\" : \"m1.example.net:27017\",\n            \"configVersion\" : 1\n      }\n   ],\n   \"ok\" : 1\n}\n```", "```\n$ mongod --replSet \"rs0\" --shardsvr --port 27017 \n    --bind_ip localhost,<*`ip address of member`*>\n```", "```\n$ mongo m1.example.net\n```", "```\n> rs.stepDown()\n```", "```\n$ mongod --replSet \"rs0\" --shardsvr --port 27017 \n    --bind_ip localhost,<*`ip address of the former primary`*>\n```", "```\n$ mongo mongos1.example.net:27017/admin\n```", "```\n> sh.addShard(\n    \"rs0/svr1.example.net:27017,svr2.example.net:27017,svr3.example.net:27017\" )\n```", "```\nrs0/svr1.example.net:27017,svr2.example.net:27017,svr3.example.net:27017\n```", "```\n> db.enableSharding(\"music\")\n```", "```\n> sh.shardCollection(\"music.artists\", {\"name\" : 1})\n```", "```\n> db.chunks.find(criteria, {\"min\" : 1, \"max\" : 1})\n{\n    \"_id\" : \"test.users-age_-100.0\",\n    \"min\" : {\"age\" : -100},\n    \"max\" : {\"age\" : 23}\n}\n{\n    \"_id\" : \"test.users-age_23.0\",\n    \"min\" : {\"age\" : 23},\n    \"max\" : {\"age\" : 100}\n}\n{\n    \"_id\" : \"test.users-age_100.0\",\n    \"min\" : {\"age\" : 100},\n    \"max\" : {\"age\" : 1000}\n}\n```", "```\n{\n    \"_id\" : \"test.users-username_MinKeyage_MinKey\",\n    \"min\" : {\n        \"username\" : { \"$minKey\" : 1 },\n        \"age\" : { \"$minKey\" : 1 }\n    },\n    \"max\" : {\n        \"username\" : \"user107487\",\n        \"age\" : 73\n    }\n}\n{\n    \"_id\" : \"test.users-username_\\\"user107487\\\"age_73.0\",\n    \"min\" : {\n        \"username\" : \"user107487\",\n        \"age\" : 73\n    },\n    \"max\" : {\n        \"username\" : \"user114978\",\n        \"age\" : 119\n    }\n}\n{\n    \"_id\" : \"test.users-username_\\\"user114978\\\"age_119.0\",\n    \"min\" : {\n        \"username\" : \"user114978\",\n        \"age\" : 119\n    },\n    \"max\" : {\n        \"username\" : \"user122468\",\n        \"age\" : 68\n    }\n}\n```", "```\n{\"age\" : 13, \"username\" : \"ian\"}\n{\"age\" : 13, \"username\" : \"randolph\"}\n------------ // split point\n{\"age\" : 14, \"username\" : \"randolph\"}\n{\"age\" : 14, \"username\" : \"eric\"}\n{\"age\" : 14, \"username\" : \"hari\"}\n{\"age\" : 14, \"username\" : \"mathias\"}\n------------ // split point\n{\"age\" : 15, \"username\" : \"greg\"}\n{\"age\" : 15, \"username\" : \"andrew\"}\n```", "```\n{\"age\" : 12, \"username\" : \"kevin\"}\n{\"age\" : 12, \"username\" : \"spencer\"}\n{\"age\" : 12, \"username\" : \"alberto\"}\n{\"age\" : 12, \"username\" : \"tad\"}\n```"]