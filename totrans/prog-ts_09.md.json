["```\n{\n  \"compilerOptions\": {\n    \"lib\": [\"dom\", \"es2015\"]\n  }\n}\n```", "```\n// Read properties from the global window object\nlet model = {\n  url: window.location.href\n}\n\n// Create an <input /> element\nlet input = document.createElement('input')\n\n// Give it some CSS classes\ninput.classList.add('Input', 'URLInput')\n\n// When the user types, update the model\ninput.addEventListener('change', () =>\n  model.url = input.value.toUpperCase()\n)\n\n// Inject the <input /> into the DOM\ndocument.body.appendChild(input)\n```", "```\ndocument.querySelector('.Element').value // Error TS2339: Property 'value' does\n                                         // not exist on type 'Element'.\n```", "```\n<ul class='list'>\n  <li>Homemade granola with yogurt</li>\n  <li>Fantastic french toast with fruit</li>\n  <li>Tortilla Española with salad</li>\n</ul>\n```", "```\nReact.createElement(\n  'ul',\n  {'class': 'list'},\n  React.createElement(\n    'li',\n    null,\n    'Homemade granola with yogurt'\n  ),\n  React.createElement(\n    'li',\n    null,\n    'Fantastic French toast with fruit'\n  ),\n  React.createElement(\n    'li',\n    null,\n    'Tortilla Española with salad'\n  )\n);\n\n```", "```\nimport React from 'react'\n```", "```\n<ul /> // Error TS2304: Cannot find name 'React'.\n```", "```\nimport * as React from 'react'\n```", "```\n{\n  \"compilerOptions\": {\n    \"jsx\": \"react\"\n  }\n}\n\n```", "```\nimport React from 'react' ![1](assets/1.png)\n\ntype Props = { ![2](assets/2.png)\n  isDisabled?: boolean\n  size: 'Big' | 'Small'\n  text: string\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void ![3](assets/3.png)\n}\n\nexport function FancyButton(props: Props) { ![4](assets/4.png)\n  const [toggled, setToggled] = React.useState(false) ![5](assets/5.png)\n  return <button\n    className={'Size-' + props.size}\n    disabled={props.isDisabled || false}\n    onClick={event => {\n      setToggled(!toggled)\n      props.onClick(event)\n    }}\n  >{props.text}</button>\n}\n\nlet button = <FancyButton ![6](assets/6.png)\n  size='Big'\n  text='Sign Up Now'\n  onClick={() => console.log('Clicked!')}\n/>\n```", "```\nimport React from 'react' ![1](assets/1.png)\nimport {FancyButton} from './FancyButton'\n\ntype Props = { ![2](assets/2.png)\n  firstName: string\n  userId: string\n}\n\ntype State = { ![3](assets/3.png)\n  isLoading: boolean\n}\n\nclass SignupForm extends React.Component<Props, State> { ![4](assets/4.png)\n  state = { ![5](assets/5.png)\n    isLoading: false\n  }\n  render() { ![6](assets/6.png)\n    return <> ![7](assets/7.png)\n      <h2>Sign up for a 7-day supply of our tasty\n          toothpaste now, {this.props.firstName}.</h2>\n      <FancyButton\n        isDisabled={this.state.isLoading}\n        size='Big'\n        text='Sign Up Now'\n        onClick={this.signUp}\n      />\n    </>\n  }\n  private signUp = async () => { ![8](assets/8.png)\n    this.setState({isLoading: true})\n    try {\n      await fetch('/api/signup?userId=' + this.props.userId)\n    } finally {\n      this.setState({isLoading: false})\n    }\n  }\n}\n\nlet form = <SignupForm firstName='Albert' userId='13ab9g3' /> ![9](assets/9.png)\n```", "```\nnpm install @angular/cli --global\n```", "```\nng new my-angular-app\n```", "```\nimport {Component, OnInit} from '@angular/core'\n\n@Component({\n  selector: 'simple-message',\n  styleUrls: ['./simple-message.component.css'],\n  templateUrl: './simple-message.component.html'\n})\nexport class SimpleMessageComponent implements OnInit {\n  message: string\n  ngOnInit() {\n    this.message = 'No messages, yet'\n  }\n}\n```", "```\n{\n  \"angularCompilerOptions\": {\n    \"fullTemplateTypeCheck\": true\n  }\n}\n```", "```\nimport {Component, OnInit} from '@angular/core'\n`import` `{``MessageService``}` `from` `'../services/message.service'`\n\n@Component({\n  selector: 'simple-message',\n  templateUrl: './simple-message.component.html',\n  styleUrls: ['./simple-message.component.css']\n})\nexport class SimpleMessageComponent implements OnInit {\n  message: string\n  `constructor``(`\n    `private` `messageService``:` `MessageService`\n  `)` `{``}`\n  ngOnInit() {\n    `this``.``messageService``.``getMessage``(``)``.``subscribe``(``response` `=``>`\n      `this``.``message` `=` `response``.``message`\n    `)`\n  }\n}\n\n```", "```\nimport {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  constructor(private http: HttpClient) {}\n  getMessage() {\n    return this.http.get('/api/message')\n  }\n}\n```", "```\ntype Request =\n  | {entity: 'user', data: User}\n  | {entity: 'location', data: Location}\n\n// client.ts\nasync function get<R extends Request>(entity: R['entity']): Promise<R['data']> {\n  let res = await fetch(/api/${entity})\n  let json = await res.json()\n  if (!json) {\n    throw ReferenceError('Empty response')\n  }\n  return json\n}\n\n// app.ts\nasync function startApp() {\n  let user = await get('user')  // User\n}\n```", "```\n// PostgreSQL, using node-postgres\nlet client = new Client\nlet res = await client.query(\n  'SELECT name FROM users where id = $1',\n  [739311]\n) // any\n\n// MongoDB, using node-mongodb-native\ndb.collection('users')\n  .find({id: 739311})\n  .toArray((err, user) =>\n    // user is any\n  )\n```", "```\ndb.collection('users')\n  .find({id: 739311})\n  .toArray((err, user: User) =>\n    // user is any\n  )\n```", "```\nlet user = await UserRepository\n  .findOne({id: 739311}) // User | undefined\n```"]