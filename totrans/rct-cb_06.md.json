["```\n$ npm install @material-ui/core\n```", "```\n$ npm install fontsource-roboto\n```", "```\n$ npm install @material-ui/icons\n```", "```\nimport CssBaseline from '@material-ui/core/CssBaseline'\n...\n\nfunction App() {\n  // ...\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      ...\n    </div>\n  )\n}\n\nexport default App\n```", "```\n<div className=\"App\">\n    <CssBaseline/>\n    <AppBar position='relative'>\n        <Toolbar>\n            <Typography component='h1' variant='h6' color='inherit' noWrap>\n                Material-UI Gallery\n            </Typography>\n        </Toolbar>\n    </AppBar>\n    <main>\n      {/* Main content goes here...*/}\n    </main>\n</div>\n```", "```\nimport { makeStyles } from '@material-ui/core/styles'\n```", "```\nconst useStyles = makeStyles((theme) => ({\n  galleryGrid: {\n    paddingTop: theme.spacing(4),\n  },\n  galleryItemDescription: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n}))\n```", "```\nconst classes = useStyles()\n\nreturn (\n  <div className=\"App\">\n    ...\n    <main>\n      <Container className={classes.galleryGrid}>\n        <Grid container spacing=\"4\">\n          <Grid item>...</Grid>\n          <Grid item>...</Grid>\n          ...\n        </Grid>\n      </Container>\n    </main>\n  </div>\n)\n```", "```\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Typography from '@material-ui/core/Typography'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MyDialog = ({ onClose, open, title, children }) => {\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n          color=\"inherit\"\n          noWrap\n        >\n          {title}\n        </Typography>\n      </DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          startIcon={<CloseIcon />}\n          onClick={onClose}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MyDialog\n```", "```\nimport './App.css'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport { Toolbar } from '@material-ui/core'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport MyDialog from './MyDialog'\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch'\n\nimport gallery from './gallery.json'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst useStyles = makeStyles((theme) => ({\n  galleryGrid: {\n    paddingTop: theme.spacing(4),\n  },\n  galleryItem: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    // maxWidth: '200px'\n  },\n  galleryImage: {\n    paddingTop: '54%',\n  },\n  galleryItemDescription: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n}))\n\nfunction App() {\n  const [showDetails, setShowDetails] = useState(false)\n  const [selectedImage, setSelectedImage] = useState()\n  const classes = useStyles()\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n          >\n            Material-UI Gallery\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        <Container className={classes.galleryGrid}>\n          <Grid container spacing=\"4\">\n            {gallery.map((item, i) => {\n              return (\n                <Grid item key={`photo-${i}`} xs={12} sm={3} lg={2}>\n                  <Card className={classes.galleryItem}>\n                    <CardMedia\n                      image={item.image}\n                      className={classes.galleryImage}\n                      title=\"A photo\"\n                    />\n                    <CardContent>\n                      <Typography\n                        gutterBottom\n                        variant=\"h6\"\n                        component=\"h2\"\n                      >\n                        Image\n                      </Typography>\n                      <Typography\n                        className={classes.galleryItemDescription}\n                      >\n                        {item.description}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => {\n                          setSelectedImage(item)\n                          setShowDetails(true)\n                        }}\n                        color=\"primary\"\n                      >\n                        <ImageSearchIcon />\n                      </IconButton>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </Container>\n      </main>\n      <MyDialog\n        open={showDetails}\n        title=\"Details\"\n        onClose={() => setShowDetails(false)}\n      >\n        <img\n          src={selectedImage && selectedImage.image}\n          alt=\"From PicSum\"\n        />\n        <Typography>\n          {selectedImage && selectedImage.description}\n        </Typography>\n      </MyDialog>\n    </div>\n  )\n}\n\nexport default App\n```", "```\n$ npm install react-bootstrap bootstrap\n```", "```\n<link\n  rel=\"stylesheet\"\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n  integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKG\"\n  crossorigin=\"anonymous\"\n/>\n```", "```\n<Form.Group controlId=\"startupName\">\n    <Form.Label>Startup name</Form.Label>\n    <Form.Control placeholder=\"No names ending in ...ly, please\"/>\n</Form.Group>\n```", "```\n<Form.Row>\n    <Form.Group as={Col} controlId=\"startupName\">\n        <Form.Label>Startup name</Form.Label>\n        <Form.Control placeholder=\"No names ending in ...ly, please\"/>\n    </Form.Group>\n    <Form.Group as={Col} controlId=\"market\">\n        <Form.Label>Market</Form.Label>\n        <Form.Control placeholder=\"e.g. seniors on Tik-Tok\"/>\n    </Form.Group>\n</Form.Row>\n```", "```\n<Form.Control as=\"select\" defaultValue=\"Choose...\">\n    <option>Progressive web application</option>\n    <option>Conservative web application</option>\n    <option>Android native</option>\n    <option>iOS native</option>\n    <option>New Jersey native</option>\n    <option>VT220</option>\n</Form.Control>\n```", "```\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport { useState } from 'react'\nimport './App.css'\n\nfunction App() {\n  const [submitted, setSubmitted] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <h1>VC Funding Registration</h1>\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"startupName\">\n            <Form.Label>Startup name</Form.Label>\n            <Form.Control placeholder=\"No names ending in ...ly, please\" />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"market\">\n            <Form.Label>Market</Form.Label>\n            <Form.Control placeholder=\"e.g. seniors on Tik-Tok\" />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"appType\">\n            <Form.Label>Type of application</Form.Label>\n            <Form.Control as=\"select\" defaultValue=\"Choose...\">\n              <option>Progressive web application</option>\n              <option>Conservative web application</option>\n              <option>Android native</option>\n              <option>iOS native</option>\n              <option>New Jersey native</option>\n              <option>VT220</option>\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Group id=\"technologiesUsed\">\n          <Form.Label>\n            Technologies used (check at least 3)\n          </Form.Label>\n          <Form.Control as=\"select\" multiple>\n            <option>Blockchain</option>\n            <option>Machine learning</option>\n            <option>Quantum computing</option>\n            <option>Autonomous vehicles</option>\n            <option>For-loops</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={() => setSubmitted(true)}>\n          Submit\n        </Button>\n      </Form>\n      <Alert\n        show={submitted}\n        variant=\"success\"\n        onClose={() => setSubmitted(false)}\n        dismissible\n      >\n        <Alert.Heading>We'll be in touch!</Alert.Heading>\n        <p>One of our partners will be in touch shortly.</p>\n      </Alert>\n    </div>\n  )\n}\n\nexport default App\n```", "```\nimport moment from 'moment'\n\nconst DateRow = ({ index, style }) => (\n  <div className={`aDate ${index % 2 && 'aDate-odd'}`} style={style}>\n    {moment().add(index, 'd').format('dddd, MMMM Do YYYY')}\n  </div>\n)\n\nexport default DateRow\n```", "```\nimport { FixedSizeList } from 'react-window'\nimport DateRow from './DateRow'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FixedSizeList\n        height={400}\n        itemCount={10000}\n        itemSize={40}\n        width={300}\n      >\n        {DateRow}\n      </FixedSizeList>\n    </div>\n  )\n}\n\nexport default App\n```", "```\n.aDate:nth-child(even) { /* This won't work */\n    background-color: #eee;\n}\n```", "```\n<div className={`aDate ${index % 2 && 'aDate-odd'}`} ...>\n```", "```\nimport { withMobileDialog } from '@material-ui/core'\n...\n\nconst ResponsiveDialog = withMobileDialog()(\n  ({ fullScreen }) => {\n    // Return some component using the fullScreen (true/false) property\n  }\n)\n```", "```\nimport { withMobileDialog } from '@material-ui/core'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Typography from '@material-ui/core/Typography'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst ResponsiveDialog = withMobileDialog()(\n  ({ onClose, open, title, fullScreen, children }) => {\n    return (\n      <Dialog open={open} fullScreen={fullScreen} onClose={onClose}>\n        <DialogTitle>\n          <Typography\n            component=\"h1\"\n            variant=\"h5\"\n            color=\"inherit\"\n            noWrap\n          >\n            {title}\n          </Typography>\n        </DialogTitle>\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            startIcon={<CloseIcon />}\n            onClick={onClose}\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n)\n\nexport default ResponsiveDialog\n```", "```\ntype Message {\n    id: ID!\n    author: String!\n    text: String!\n}\n```", "```\n$ npm install react-admin\n```", "```\n<Admin dataProvider={...}>\n  ...UI for separate resources goes here...\n</Admin>\n```", "```\n$ npm install graphql\n$ npm install ra-data-graphql-simple\n```", "```\nimport { Admin } from 'react-admin'\nimport buildGraphQLProvider from 'ra-data-graphql-simple'\nimport { useEffect, useState } from 'react'\n\nfunction App() {\n  const [dataProvider, setDataProvider] = useState()\n\n  useEffect(() => {\n    let didCancel = false\n    ;(async () => {\n      const dp = await buildGraphQLProvider({\n        clientOptions: { uri: 'http://localhost:5000' },\n      })\n      if (!didCancel) {\n        setDataProvider(() => dp)\n      }\n    })()\n    return () => {\n      didCancel = true\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {dataProvider && (\n        <Admin dataProvider={dataProvider}>\n          ...resource UI here...\n        </Admin>\n      )}\n    </div>\n  )\n}\n\nexport default App\n```", "```\nconst ListMessages = (props) => {\n  return (\n    <List {...props}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"author\" />\n        <TextField source=\"text\" />\n      </Datagrid>\n    </List>\n  )\n}\n```", "```\n<Admin dataProvider={dataProvider}>\n    <Resource name=\"Message\" list={ListMessages}/>\n</Admin>\n```", "```\ntype Query {\n    Message(id: ID!): Message\n    allMessages(page: Int, perPage: Int,\n        sortField: String, sortOrder: String,\n        filter: MessageFilter): [Message]\n}\n```", "```\ninput MessageFilter {\n    q: String\n    author: String\n    text: String\n}\n```", "```\nconst MessageFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Author\" source=\"author\" />\n    <TextInput label=\"Text\" source=\"text\" />\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n  </Filter>\n)\n```", "```\nconst ListMessages = (props) => {\n  return (\n    <List {...props} filters={<MessageFilter />}>\n      <Datagrid>\n        <TextField source=\"id\" />\n        <TextField source=\"author\" />\n        <TextField source=\"text\" />\n      </Datagrid>\n    </List>\n  )\n}\n```", "```\nconst CreateMessage = (props) => {\n  return (\n    <Create title=\"Create a Message\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"author\" />\n        <TextInput multiline source=\"text\" />\n      </SimpleForm>\n    </Create>\n  )\n}\n```", "```\n<Resource name=\"Message\" list={ListMessages} create={CreateMessage}/>\n```", "```\ntype Mutation {\n    createMessage(\n        author: String!\n        text: String!\n    ): Message\n}\n```", "```\n$ npm install semantic-ui-react semantic-ui-css\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n```", "```\nimport { Button, Form, Input, TextArea } from 'semantic-ui-react'\nimport './App.css'\nimport { useState } from 'react'\n\nfunction App() {\n  const [author, setAuthor] = useState('')\n  const [text, setText] = useState('')\n  const [messages, setMessages] = useState([])\n\n  return (\n    <div className=\"App\">\n      <Form>\n        <Form.Field>\n          <label htmlFor=\"author\">Author</label>\n          <Input\n            value={author}\n            id=\"author\"\n            onChange={(evt) => setAuthor(evt.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"text\">Message</label>\n          <TextArea\n            value={text}\n            id=\"text\"\n            onChange={(evt) => setText(evt.target.value)}\n          />\n        </Form.Field>\n        <Button\n          basic\n          onClick={() => {\n            setMessages((m) => [\n              {\n                icon: 'pencil',\n                date: new Date().toString(),\n                summary: author,\n                extraText: text,\n              },\n              ...m,\n            ])\n            setAuthor('')\n            setText('')\n          }}\n        >\n          Post\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default App\n```", "```\nsetMessages((m) => [\n  {\n    icon: 'pencil',\n    date: new Date().toString(),\n    summary: author,\n    extraText: text,\n  },\n  ...m,\n])\n```", "```\nimport {\n  Button,\n  Form,\n  Input,\n  TextArea,\n  Feed,\n} from 'semantic-ui-react'\nimport './App.css'\nimport { useState } from 'react'\n\nfunction App() {\n  const [author, setAuthor] = useState('')\n  const [text, setText] = useState('')\n  const [messages, setMessages] = useState([])\n\n  return (\n    <div className=\"App\">\n      <Form>\n        <Form.Field>\n          <label htmlFor=\"author\">Author</label>\n          <Input\n            value={author}\n            id=\"author\"\n            onChange={(evt) => setAuthor(evt.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"text\">Message</label>\n          <TextArea\n            value={text}\n            id=\"text\"\n            onChange={(evt) => setText(evt.target.value)}\n          />\n        </Form.Field>\n        <Button\n          basic\n          onClick={() => {\n            setMessages((m) => [\n              {\n                icon: 'pencil',\n                date: new Date().toString(),\n                summary: author,\n                extraText: text,\n              },\n              ...m,\n            ])\n            setAuthor('')\n            setText('')\n          }}\n        >\n          Post\n        </Button>\n      </Form>\n      <Feed events={messages} />\n    </div>\n  )\n}\n\nexport default App\n```"]