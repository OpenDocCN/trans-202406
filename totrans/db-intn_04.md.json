["```\nString\n{\n    size    uint_16\n    data    byte[size]\n}\n```", "```\nenum NodeType {\n   ROOT,     // 0x00h\n   INTERNAL, // 0x01h\n   LEAF      // 0x02h\n};\n```", "```\nint IS_LEAF_MASK         = 0x01h; // bit #1\nint VARIABLE_SIZE_VALUES = 0x02h; // bit #2\nint HAS_OVERFLOW_PAGES   = 0x04h; // bit #3\n```", "```\n// Set the bit\nflags |= HAS_OVERFLOW_PAGES;\nflags |= (1 << 2);\n\n// Unset the bit\nflags &= ~HAS_OVERFLOW_PAGES;\nflags &= ~(1 << 2);\n\n// Test whether or not the bit is set\nis_set = (flags & HAS_OVERFLOW_PAGES) != 0;\nis_set = (flags & (1 << 2)) != 0;\n```", "```\nFixed-size fields:\n| (4 bytes) employee_id                |\n| (4 bytes) tax_number                 |\n| (3 bytes) date                       |\n| (1 byte)  gender                     |\n| (2 bytes) first_name_length          |\n| (2 bytes) last_name_length           |\n\nVariable-size fields:\n| (first_name_length bytes) first_name |\n| (last_name_length bytes) last_name   |\n```", "```\n0                4               8\n+----------------+---------------+-------------+\n| [int] key_size | [int] page_id | [bytes] key |\n+----------------+---------------+-------------+\n```", "```\n0              1                5 ...\n+--------------+----------------+\n| [byte] flags | [int] key_size |\n+--------------+----------------+\n\n5                  9                    .. + key_size\n+------------------+--------------------+----------------------+\n| [int] value_size |     [bytes] key    | [bytes] data_record  |\n+------------------+--------------------+----------------------+\n```"]