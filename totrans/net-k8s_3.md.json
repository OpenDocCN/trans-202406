["```\nvagrant@ubuntu-xenial:~$ sudo ps -p 1 -o pid,pidns\n  PID      PIDNS\n    1 4026531836\n\nvagrant@ubuntu-xenial:~$ sudo ls -l /proc/1/ns\ntotal 0\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 cgroup -> cgroup:[4026531835]\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 ipc -> ipc:[4026531839]\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 mnt -> mnt:[4026531840]\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 net -> net:[4026531957]\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 pid -> pid:[4026531836]\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 user -> user:[4026531837]\nlrwxrwxrwx 1 root root 0 Dec 12 20:41 uts -> uts:[4026531838]\n```", "```\n$ echo 1 > /proc/sys/net/ipv4/ip_forward\n$ sudo ip netns add net1\n$ sudo ip link add veth0 type veth peer name veth1\n$ sudo ip link set veth1 netns net1\n$ sudo ip link add veth0 type veth peer name veth1\n$ sudo ip netns exec net1 ip addr add 192.168.1.101/24 dev veth1\n$ sudo ip netns exec net1 ip link set dev veth1 up\n$ sudo ip link add br0 type bridge\n$ sudo ip link set dev br0 up\n$ sudo ip link set enp0s3 master br0\n$ sudo ip link set veth0 master br0\n$ sudo ip netns exec net1  ip route add default via 192.168.1.100\n```", "```\n$ vagrant up\nBringing machine 'default' up with 'virtualbox' provider...\n==> default: Importing base box 'ubuntu/xenial64'...\n==> default: Matching MAC address for NAT networking...\n==> default: Checking if box 'ubuntu/xenial64' version '20200904.0.0' is up to date...\n==> default: Setting the name of the VM:\nadvanced_networking_code_examples_default_1600085275588_55198\n==> default: Clearing any previously set network interfaces...\n==> default: Available bridged network interfaces:\n1) en12: USB 10/100 /1000LAN\n2) en5: USB Ethernet(?)\n3) en0: Wi-Fi (Wireless)\n4) llw0\n5) en11: USB 10/100/1000 LAN 2\n6) en4: Thunderbolt 4\n7) en1: Thunderbolt 1\n8) en2: Thunderbolt 2\n9) en3: Thunderbolt 3\n==> default: When choosing an interface, it is usually the one that is\n==> default: being used to connect to the internet.\n==> default:\n    default: Which interface should the network bridge to? 1\n==> default: Preparing network interfaces based on configuration...\n    default: Adapter 1: nat\n    default: Adapter 2: bridged\n==> default: Forwarding ports...\n    default: 22 (guest) => 2222 (host) (adapter 1)\n==> default: Running 'pre-boot' VM customizations...\n==> default: Booting VM...\n==> default: Waiting for machine to boot. This may take a few minutes...\n    default: SSH address: 127.0.0.1:2222\n    default: SSH username: vagrant\n    default: SSH auth method: private key\n    default: Warning: Connection reset. Retrying...\n    default:\n    default: Vagrant insecure key detected. Vagrant will automatically replace\n    default: this with a newly generated keypair for better security.\n    default:\n    default: Inserting generated public key within guest...\n    default: Removing insecure key from the guest if it's present...\n    default: Key inserted! Disconnecting and reconnecting using new SSH key...\n==> default: Machine booted and ready!\n==> default: Checking for guest additions in VM...\n==> default: Configuring and enabling network interfaces...\n==> default: Mounting shared folders...\n    default: /vagrant =>\n    /Users/strongjz/Documents/code/advanced_networking_code_examples\n```", "```\n$± |master U:2 ?:2 ✗| → vagrant ssh\nWelcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-189-generic x86_64)\n\nvagrant@ubuntu-xenial:~$\n```", "```\nvagrant@ubuntu-xenial:~$ sysctl net.ipv4.ip_forward\nnet.ipv4.ip_forward = 0\nvagrant@ubuntu-xenial:~$ sudo echo 1 > /proc/sys/net/ipv4/ip_forward\nvagrant@ubuntu-xenial:~$  sysctl net.ipv4.ip_forward\nnet.ipv4.ip_forward = 1\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns list\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns add net1\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns list\nnet1\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip link add veth0 type veth peer name veth1\n```", "```\nvagrant@ubuntu-xenial:~$ ip link list\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state\nUNKNOWN mode DEFAULT group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc\npfifo_fast state UP mode DEFAULT group default qlen 1000\n    link/ether 02:8f:67:5f:07:a5 brd ff:ff:ff:ff:ff:ff\n3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc\npfifo_fast state UP mode DEFAULT group default qlen 1000\n    link/ether 08:00:27:0f:4e:0d brd ff:ff:ff:ff:ff:ff\n4: veth1@veth0: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc\nnoop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 72:e4:03:03:c1:96 brd ff:ff:ff:ff:ff:ff\n5: veth0@veth1: <BROADCAST,MULTICAST,M-DOWN> mtu 1500 qdisc\nnoop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 26:1a:7f:2c:d4:48 brd ff:ff:ff:ff:ff:ff\nvagrant@ubuntu-xenial:~$\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip link set veth1 netns net1\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns exec net1 ip link list\n4: veth1@if5: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state\nDOWN mode DEFAULT group default qlen 1000\n    link/ether 72:e4:03:03:c1:96 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns exec\nnet1 ip addr add 192.168.1.100/24 dev veth1\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns exec net1 ip link set dev veth1 up\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns exec net1 ip link list veth1\n4: veth1@if5: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500\nqdisc noqueue state LOWERLAYERDOWN mode DEFAULT\ngroup default qlen 1000 link/ether 72:e4:03:03:c1:96\nbrd ff:ff:ff:ff:ff:ff link-netnsid 0\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip link set dev veth0 up\nvagrant@ubuntu-xenial:~$ sudo ip link list\n5: veth0@if4: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\nqdisc noqueue state UP mode DEFAULT group default qlen 1000\nlink/ether 26:1a:7f:2c:d4:48 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns exec net1 ip link list\n4: veth1@if5: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500\nqdisc noqueue state UP mode DEFAULT group default qlen 1000\nlink/ether 72:e4:03:03:c1:96 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip link add br0 type bridge\nvagrant@ubuntu-xenial:~$ sudo ip link set dev br0 up\nvagrant@ubuntu-xenial:~$ sudo ip link set enp0s8 master br0\nvagrant@ubuntu-xenial:~$ sudo ip link set veth0 master br0\n```", "```\nvagrant@ubuntu-xenial:~$ ping 192.168.1.100 -c 4\nPING 192.168.1.100 (192.168.1.100) 56(84) bytes of data.\nFrom 192.168.1.10 icmp_seq=1 Destination Host Unreachable\nFrom 192.168.1.10 icmp_seq=2 Destination Host Unreachable\nFrom 192.168.1.10 icmp_seq=3 Destination Host Unreachable\nFrom 192.168.1.10 icmp_seq=4 Destination Host Unreachable\n\n--- 192.168.1.100 ping statistics ---\n4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 6043ms\n```", "```\n$ sudo ip netns exec net1\nip route add default via 192.168.1.100\n$ sudo ip netns exec net1 ip r\ndefault via 192.168.1.100 dev veth1\n192.168.1.0/24 dev veth1  proto kernel  scope link  src 192.168.1.100\n```", "```\n$ ping 192.168.2.100 -c 4\nPING 192.168.2.100 (192.168.2.100) 56(84) bytes of data.\n64 bytes from 192.168.2.100: icmp_seq=1 ttl=64 time=0.018 ms\n64 bytes from 192.168.2.100: icmp_seq=2 ttl=64 time=0.028 ms\n64 bytes from 192.168.2.100: icmp_seq=3 ttl=64 time=0.036 ms\n64 bytes from 192.168.2.100: icmp_seq=4 ttl=64 time=0.043 ms\n\n--- 192.168.2.100 ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 2997ms\n```", "```\n$ ping 192.168.2.101 -c 4\nPING 192.168.2.101 (192.168.2.101) 56(84) bytes of data.\n64 bytes from 192.168.2.101: icmp_seq=1 ttl=64 time=0.016 ms\n64 bytes from 192.168.2.101: icmp_seq=2 ttl=64 time=0.017 ms\n64 bytes from 192.168.2.101: icmp_seq=3 ttl=64 time=0.016 ms\n64 bytes from 192.168.2.101: icmp_seq=4 ttl=64 time=0.021 ms\n\n--- 192.168.2.101 ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 2997ms\nrtt min/avg/max/mdev = 0.016/0.017/0.021/0.004 ms\n```", "```\n$ echo 1 > /proc/sys/net/ipv4/ip_forward\n$ sudo ip netns add net1\n$ sudo ip link add veth0 type veth peer name veth1\n$ sudo ip link set veth1 netns net1\n$ sudo ip link add veth0 type veth peer name veth1\n$ sudo ip netns exec net1 ip addr add 192.168.1.101/24 dev veth1\n$ sudo ip netns exec net1 ip link set dev veth1 up\n$ sudo ip link add br0 type bridge\n$ sudo ip link set dev br0 up\n$ sudo ip link set enp0s3 master br0\n$ sudo ip link set veth0 master br0\n$ sudo ip netns exec net1  ip route add default via 192.168.1.100\n```", "```\n$ vagrant up\nBringing machine 'default' up with 'virtualbox' provider...\n==> default: Importing base box 'ubuntu/xenial64'...\n==> default: Matching MAC address for NAT networking...\n==> default: Checking if box\n'ubuntu/xenial64' version '20200904.0.0' is up to date...\n==> default: Setting the name of the VM:\nadvanced_networking_code_examples_default_1600085275588_55198\n==> default: Clearing any previously set network interfaces...\n==> default: Available bridged network interfaces:\n1) en12: USB 10/100 /1000LAN\n2) en5: USB Ethernet(?)\n3) en0: Wi-Fi (Wireless)\n4) llw0\n5) en11: USB 10/100/1000 LAN 2\n6) en4: Thunderbolt 4\n7) en1: Thunderbolt 1\n8) en2: Thunderbolt 2\n9) en3: Thunderbolt 3\n==> default: When choosing an interface, it is usually the one that is\n==> default: being used to connect to the internet.\n==> default:\n    default: Which interface should the network bridge to? 1\n==> default: Preparing network interfaces based on configuration...\n    default: Adapter 1: nat\n    default: Adapter 2: bridged\n==> default: Forwarding ports...\n    default: 22 (guest) => 2222 (host) (adapter 1)\n==> default: Running 'pre-boot' VM customizations...\n==> default: Booting VM...\n==> default: Waiting for machine to boot. This may take a few minutes...\n    default: SSH address: 127.0.0.1:2222\n    default: SSH username: vagrant\n    default: SSH auth method: private key\n    default: Warning: Connection reset. Retrying...\n    default:\n    default: Vagrant insecure key detected. Vagrant will automatically replace\n    default: this with a newly generated keypair for better security.\n    default:\n    default: Inserting generated public key within guest...\n    default: Removing insecure key from the guest if it's present...\n    default: Key inserted! Disconnecting and reconnecting using new SSH key...\n==> default: Machine booted and ready!\n==> default: Checking for guest additions in VM...\n==> default: Configuring and enabling network interfaces...\n==> default: Mounting shared folders...\n    default: /vagrant =>\n    /Users/strongjz/Documents/code/advanced_networking_code_examples\n    default: + sudo docker run hello-world\n    default: Unable to find image 'hello-world:latest' locally\n    default: latest: Pulling from library/hello-world\n    default: 0e03bdcc26d7:\n    default: Pulling fs layer\n    default: 0e03bdcc26d7:\n    default: Verifying Checksum\n    default: 0e03bdcc26d7:\n    default: Download complete\n    default: 0e03bdcc26d7:\n    default: Pull complete\n    default: Digest:\n    sha256:4cf9c47f86df71d48364001ede3a4fcd85ae80ce02ebad74156906caff5378bc\n    default: Status: Downloaded newer image for hello-world:latest\n    default:\n    default: Hello from Docker!\n    default: This message shows that your\n    default: installation appears to be working correctly.\n    default:\n    default: To generate this message, Docker took the following steps:\n    default:  1\\. The Docker client contacted the Docker daemon.\n    default:  2\\. The Docker daemon pulled the \"hello-world\" image\n    default: from the Docker Hub.\n    default:     (amd64)\n    default:  3\\. The Docker daemon created a new container from that image\n    default: which runs the executable that produces the output you are\n    default: currently reading.\n    default:  4\\. The Docker daemon streamed that output to the Docker\n    default: client, which sent it to your terminal.\n    default:\n    default: To try something more ambitious, you can run an Ubuntu\n    default: container with:\n    default:  $ docker run -it ubuntu bash\n    default:\n    default: Share images, automate workflows, and more with a free Docker ID:\n    default:  https://hub.docker.com\n    default:\n    default: For more examples and ideas, visit:\n    default:  https://docs.docker.com/get-started\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n1fd1db59c592        bridge              bridge              local\neb34a2105b0f        host                host                local\n941ce103b382        none                null                local\nvagrant@ubuntu-xenial:~$\n```", "```\nvagrant@ubuntu-xenial:~$ ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc\nnoqueue state UNKNOWN group default qlen 1 ![1](Images/1.png)\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n    valid_lft forever preferred_lft forever\n2: enp0s3:\n<BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group\ndefault qlen 1000 ![2](Images/2.png)\n    link/ether 02:8f:67:5f:07:a5 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global enp0s3\n    valid_lft forever preferred_lft forever\n    inet6 fe80::8f:67ff:fe5f:7a5/64 scope link\n    valid_lft forever preferred_lft forever\n3: enp0s8:\n<BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group\ndefault qlen 1000 ![3](Images/3.png)\n    link/ether 08:00:27:22:0e:46 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.19/24 brd 192.168.1.255 scope global enp0s8\n    valid_lft forever preferred_lft forever\n    inet 192.168.1.20/24 brd 192.168.1.255 scope global secondary enp0s8\n    valid_lft forever preferred_lft forever\n    inet6 2605:a000:160d:517:a00:27ff:fe22:e46/64 scope global mngtmpaddr dynamic\n    valid_lft 604600sec preferred_lft 604600sec\n    inet6 fe80::a00:27ff:fe22:e46/64 scope link\n    valid_lft forever preferred_lft forever\n4: docker0:\n<NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group\ndefault ![4](Images/4.png)\n    link/ether 02:42:7d:50:c7:01 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::42:7dff:fe50:c701/64 scope link\n    valid_lft forever preferred_lft forever\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker run -it busybox ip a\nUnable to find image 'busybox:latest' locally\nlatest: Pulling from library/busybox\ndf8698476c65: Pull complete\nDigest: sha256:d366a4665ab44f0648d7a00ae3fae139d55e32f9712c67accd604bb55df9d05a\nStatus: Downloaded newer image for busybox:latest\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n7: eth0@if8: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n    valid_lft forever preferred_lft forever\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker run -it --net=host busybox ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n    valid_lft forever preferred_lft forever`\n2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast qlen 1000\n    link/ether 02:8f:67:5f:07:a5 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global enp0s3\n    valid_lft forever preferred_lft forever\n    inet6 fe80::8f:67ff:fe5f:7a5/64 scope link\n    valid_lft forever preferred_lft forever\n3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast qlen 1000\n    link/ether 08:00:27:22:0e:46 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.19/24 brd 192.168.1.255 scope global enp0s8\n    valid_lft forever preferred_lft forever\n    inet 192.168.1.20/24 brd 192.168.1.255 scope global secondary enp0s8\n    valid_lft forever preferred_lft forever\n    inet6 2605:a000:160d:517:a00:27ff:fe22:e46/64 scope global dynamic\n    valid_lft 604603sec preferred_lft 604603sec\n    inet6 fe80::a00:27ff:fe22:e46/64 scope link\n    valid_lft forever preferred_lft forever\n4: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue\n    link/ether 02:42:7d:50:c7:01 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::42:7dff:fe50:c701/64 scope link\n    valid_lft forever preferred_lft forever\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker run -it --rm busybox /bin/sh\n/#\n```", "```\n/# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n11: eth0@if12: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n    valid_lft forever preferred_lft forever\n```", "```\n/ # ip r\ndefault via 172.17.0.1 dev eth0\n172.17.0.0/16 dev eth0 scope link  src 172.17.0.2\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker ps\nCONTAINER ID        IMAGE       COMMAND\n3b5a7c3a74d5        busybox     \"/bin/sh\"\n\nCREATED         STATUS        PORTS     NAMES\n47 seconds ago  Up 46 seconds           competent_mendel\n```", "```\nvagrant@ubuntu-xenial:~$ ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group\ndefault qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n    valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n    valid_lft forever preferred_lft forever\n2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP\ngroup default qlen 1000\n    link/ether 02:8f:67:5f:07:a5 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.15/24 brd 10.0.2.255 scope global enp0s3\n    valid_lft forever preferred_lft forever\n    inet6 fe80::8f:67ff:fe5f:7a5/64 scope link\n    valid_lft forever preferred_lft forever\n3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP\ngroup default qlen 1000\n    link/ether 08:00:27:22:0e:46 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.1.19/24 brd 192.168.1.255 scope global enp0s8\n    valid_lft forever preferred_lft forever\n    inet 192.168.1.20/24 brd 192.168.1.255 scope global secondary enp0s8\n    valid_lft forever preferred_lft forever\n    inet6 2605:a000:160d:517:a00:27ff:fe22:e46/64 scope global mngtmpaddr dynamic\n    valid_lft 604745sec preferred_lft 604745sec\n    inet6 fe80::a00:27ff:fe22:e46/64 scope link\n    valid_lft forever preferred_lft forever\n4: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\ngroup default\n    link/ether 02:42:7d:50:c7:01 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n    valid_lft forever preferred_lft forever\n    inet6 fe80::42:7dff:fe50:c701/64 scope link\n    valid_lft forever preferred_lft forever\n12: veth68b6f80@if11: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue\nmaster docker0 state UP group default\n    link/ether 3a:64:80:02:87:76 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet6 fe80::3864:80ff:fe02:8776/64 scope link\n    valid_lft forever preferred_lft forever\n```", "```\nvagrant@ubuntu-xenial:~$ ip r\ndefault via 192.168.1.1 dev enp0s8\n10.0.2.0/24 dev enp0s3  proto kernel  scope link  src 10.0.2.15\n172.17.0.0/16 dev docker0  proto kernel  scope link  src 172.17.0.1\n192.168.1.0/24 dev enp0s8  proto kernel  scope link  src 192.168.1.19\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker ps\nCONTAINER ID        IMAGE               COMMAND\n1f3f62ad5e02        busybox             \"/bin/sh\"\n\nCREATED             STATUS              PORTS NAMES\n11 minutes ago      Up 11 minutes       determined_shamir\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker inspect -f '{{.State.Pid}}' 1f3f62ad5e02\n25719\nvagrant@ubuntu-xenial:~$ ps -p 25719\n  PID TTY          TIME CMD\n25719 pts/0    00:00:00 sh\n```", "```\n$ sudo ln -sfT /proc/25719/ns/net /var/run/netns/1f3f62ad5e02\n```", "```\nvagrant@ubuntu-xenial:~$ sudo ip netns exec 1f3f62ad5e02 ip a\n1: lo:\n<LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n13: eth0@if14:\n<BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker exec 1f3f62ad5e02 ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n13: eth0@if14: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n       valid_lft forever preferred_lft forever\n```", "```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n)\n\nfunc hello(w http.ResponseWriter, _ *http.Request) {\n\tfmt.Fprintf(w, \"Hello\")\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", hello)\n\thttp.ListenAndServe(\"0.0.0.0:8080\", nil)\n}\n```", "```\nFROM golang:1.15 AS builder ![1](Images/1.png)\nWORKDIR /opt ![2](Images/2.png)\nCOPY web-server.go . ![3](Images/3.png)\nRUN CGO_ENABLED=0 GOOS=linux go build -o web-server . ![4](Images/4.png)\n\nFROM golang:1.15 ![5](Images/5.png)\nWORKDIR /opt ![6](Images/6.png)\nCOPY --from=0 /opt/web-server . ![7](Images/7.png)\nCMD [\"/opt/web-server\"] ![8](Images/8.png)\n```", "```\n$ sudo docker build .\nSending build context to Docker daemon   4.27MB\nStep 1/8 : FROM golang:1.15 AS builder\n1.15: Pulling from library/golang\n57df1a1f1ad8: Pull complete\n71e126169501: Pull complete\n1af28a55c3f3: Pull complete\n03f1c9932170: Pull complete\nf4773b341423: Pull complete\nfb320882041b: Pull complete\n24b0ad6f9416: Pull complete\nDigest:\nsha256:da7ff43658854148b401f24075c0aa390e3b52187ab67cab0043f2b15e754a68\nStatus: Downloaded newer image for golang:1.15\n ---> 05c8f6d2538a\nStep 2/8 : WORKDIR /opt\n ---> Running in 20c103431e6d\nRemoving intermediate container 20c103431e6d\n ---> 74ba65cfdf74\nStep 3/8 : COPY web-server.go .\n ---> 7a36ec66be52\nStep 4/8 : RUN CGO_ENABLED=0 GOOS=linux go build -o web-server .\n ---> Running in 5ea1c0a85422\nRemoving intermediate container 5ea1c0a85422\n ---> b508120db6ba\nStep 5/8 : FROM golang:1.15\n ---> 05c8f6d2538a\nStep 6/8 : WORKDIR /opt\n ---> Using cache\n ---> 74ba65cfdf74\nStep 7/8 : COPY --from=0 /opt/web-server .\n ---> dde6002760cd\nStep 8/8 : CMD [\"/opt/web-server\"]\n ---> Running in 2bcb7c8f5681\nRemoving intermediate container 2bcb7c8f5681\n ---> 72fd05de6f73\nSuccessfully built 72fd05de6f73\n```", "```\n$ sudo docker tag 72fd05de6f73 go-web:v0.0.1\n```", "```\n$ sudo docker images\nREPOSITORY      TAG         IMAGE ID          SIZE\n<none>          <none>      b508120db6ba      857MB\ngo-web          v0.0.1      72fd05de6f73      845MB\ngolang          1.15        05c8f6d2538a      839MB\nbusybox         latest      6858809bf669      1.23MB\nhello-world     latest      bf756fb1ae65      13.3kB\n```", "```\n$ sudo docker ps\nCONTAINER ID IMAGE    COMMAND      STATUS          PORTS NAMES\n1f3f62ad5e02 busybox  \"/bin/sh\"    Up 11 minutes   determined_shamir\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker logs 1f3f62ad5e02\nvagrant@ubuntu-xenial:~$\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker exec 1f3f62ad5e02 ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1\nlink/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\ninet 127.0.0.1/8 scope host lo\nvalid_lft forever preferred_lft forever\n7: eth0@if8: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue\nlink/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\ninet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\nvalid_lft forever preferred_lft forever\nvagrant@ubuntu-xenial:~$\n```", "```\n$ sudo docker pull gcr.io/kubernetes-e2e-test-images/dnsutils:1.3\n1.3: Pulling from kubernetes-e2e-test-images/dnsutils\n5a3ea8efae5d: Pull complete\n7b7e943444f2: Pull complete\n59c439aa0fa7: Pull complete\n3702870470ee: Pull complete\nDigest: sha256:b31bcf7ef4420ce7108e7fc10b6c00343b21257c945eec94c21598e72a8f2de0\nStatus: Downloaded newer image for gcr.io/kubernetes-e2e-test-images/dnsutils:1.3\ngcr.io/kubernetes-e2e-test-images/dnsutils:1.3\n```", "```\n$ sudo docker run -it gcr.io/kubernetes-e2e-test-images/dnsutils:1.3 /bin/sh\n/ #\n```", "```\n/ # ping google.com -c 4\nPING google.com (172.217.9.78): 56 data bytes\n64 bytes from 172.217.9.78: seq=0 ttl=114 time=39.677 ms\n64 bytes from 172.217.9.78: seq=1 ttl=114 time=38.180 ms\n64 bytes from 172.217.9.78: seq=2 ttl=114 time=43.150 ms\n64 bytes from 172.217.9.78: seq=3 ttl=114 time=38.140 ms\n\n--- google.com ping statistics ---\n4 packets transmitted, 4 packets received, 0% packet loss\nround-trip min/avg/max = 38.140/39.786/43.150 ms\n/ #\n```", "```\n$ sudo docker run -it -d -p 80:8080 go-web:v0.0.1\na568732bc191bb1f5a281e30e34ffdeabc624c59d3684b93167456a9a0902369\n```", "```\nvagrant@ubuntu-xenial:~$ sudo docker ps\nCONTAINER ID  IMAGE           COMMAND          CREATED       STATUS\n906fd860f84d  go-web:v0.0.1  \"/opt/web-server\" 4 minutes ago Up 4 minutes\n25ded12445df  dnsutils:1.3   \"/bin/sh\"         6 minutes ago Up 6 minutes\n\nPORTS                   NAMES\n0.0.0.0:8080->8080/tcp  frosty_brown\n                        brave_zhukovsky\n```", "```\n$ sudo docker inspect\n-f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'\n906fd860f84d\n172.17.0.2\n```", "```\n/ # wget 172.17.0.2:8080\nConnecting to 172.17.0.2:8080 (172.17.0.2:8080)\nindex.html           100% |*******************************************|\n                     5   0:00:00 ETA\n/ # cat index.html\nHello/ #\n```", "```\nvagrant@ubuntu-xenial:~$ curl 172.17.0.2:8080\nHello\n```", "```\nvagrant@ubuntu-xenial:~$ curl 172.17.0.2:80\ncurl: (7) Failed to connect to 172.17.0.2 port 80: Connection refused\nvagrant@ubuntu-xenial:~$ curl 172.17.0.2:8080\nHello\n```", "```\nvagrant@ubuntu-xenial:~$ curl 127.0.0.1:8080\ncurl: (7) Failed to connect to 127.0.0.1 port 8080: Connection refused\nvagrant@ubuntu-xenial:~$ curl 127.0.0.1:80\nHellovagrant@ubuntu-xenial:~$\n```", "```\n/ # wget 172.17.0.2:8080 -qO-\nHello/ #\n/ # wget 172.17.0.2:80 -qO-\nwget: can't connect to remote host (172.17.0.2): Connection refused\n```", "```\n/ # wget localhost:80 -qO-\nwget: can't connect to remote host (127.0.0.1): Connection refused\n/ # wget localhost:8080 -qO-\nwget: can't connect to remote host (127.0.0.1): Connection refused\n```", "```\nvagrant@host-2:~$ ifconfig enp0s8\nenp0s8    Link encap:Ethernet  HWaddr 08:00:27:f9:77:12\n          inet addr:192.168.1.23  Bcast:192.168.1.255  Mask:255.255.255.0\n          inet6 addr: fe80::a00:27ff:fef9:7712/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:65630 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:2967 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:96493210 (96.4 MB)  TX bytes:228989 (228.9 KB)\n```", "```\nvagrant@ubuntu-xenial:~$ curl 192.168.1.20:80\nHellovagrant@ubuntu-xenial:~$\nvagrant@host-2:~$ curl 192.168.1.20:8080\ncurl: (7) Failed to connect to 192.168.1.20 port 8080: Connection refused\nvagrant@ubuntu-xenial:~$\n```", "```\nvagrant@host-2:~$ curl 172.17.0.2:8080 -t 5\ncurl: (7) Failed to connect to 172.17.0.2 port 8080: No route to host\nvagrant@host-2:~$ curl 172.17.0.2:80 -t 5\ncurl: (7) Failed to connect to 172.17.0.2 port 80: No route to host\nvagrant@host-2:~$\n```"]