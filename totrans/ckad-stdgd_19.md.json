["```\n$ kubectl create configmap db-config --from-literal=DB_HOST=mysql-service \\\n  --from-literal=DB_USER=backend\nconfigmap/db-config created\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config\ndata:\n  DB_HOST: mysql-service\n  DB_USER: backend\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    envFrom:\n    - configMapRef:\n        name: db-config\n```", "```\n$ kubectl exec backend -- env\n...\nDB_HOST=mysql-service\nDB_USER=backend\n...\n```", "```\n{\n    \"db\": {\n      \"host\": \"mysql-service\",\n      \"user\": \"backend\"\n    }\n}\n```", "```\n$ kubectl create configmap db-config --from-file=db.json\nconfigmap/db-config created\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config\ndata:\n  db.json: |-                        ![1](Images/1.png)\n    {\n       \"db\": {\n          \"host\": \"mysql-service\",\n          \"user\": \"backend\"\n       }\n    }\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    volumeMounts:\n    - name: db-config-volume\n      mountPath: /etc/config\n  volumes:\n  - name: db-config-volume\n    configMap:                      ![1](Images/1.png)\n      name: db-config\n```", "```\n$ kubectl exec -it backend -- /bin/sh\n# ls -1 /etc/config\ndb.json\n# cat /etc/config/db.json\n{\n    \"db\": {\n      \"host\": \"mysql-service\",\n      \"user\": \"backend\"\n    }\n}\n```", "```\n$ kubectl create secret generic db-creds --from-literal=pwd=s3cre!\nsecret/db-creds created\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: db-creds\ntype: Opaque       ![1](Images/1.png)\ndata:\n  pwd: czNjcmUh    ![2](Images/2.png)\n```", "```\n$ echo -n 's3cre!' | base64\nczNjcmUh\n\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: db-creds\ntype: Opaque\nstringData:      ![1](Images/1.png)\n  pwd: s3cre!    ![2](Images/2.png)\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: db-creds\ntype: Opaque\ndata:              ![1](Images/1.png)\n  pwd: czNjcmUh!   ![2](Images/2.png)\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: secret-basic-auth\ntype: kubernetes.io/basic-auth\nstringData:                      ![1](Images/1.png)\n  username: bmuschko             ![2](Images/2.png)\n  password: secret               ![2](Images/2.png)\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    envFrom:\n    - secretRef:\n        name: secret-basic-auth\n```", "```\n$ kubectl exec backend -- env\n...\nusername=bmuschko\npassword=secret\n...\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    env:\n    - name: USER\n      valueFrom:\n        secretKeyRef:\n          name: secret-basic-auth\n          key: username\n    - name: PWD\n      valueFrom:\n        secretKeyRef:\n          name: secret-basic-auth\n          key: password\n```", "```\n$ kubectl exec backend -- env\n...\nUSER=bmuschko\nPWD=secret\n...\n\n```", "```\n$ cp ~/.ssh/id_rsa ssh-privatekey\n$ kubectl create secret generic secret-ssh-auth --from-file=ssh-privatekey \\\n  --type=kubernetes.io/ssh-auth\nsecret/secret-ssh-auth created\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    volumeMounts:\n    - name: ssh-volume\n      mountPath: /var/app\n      readOnly: true                ![1](Images/1.png)\n  volumes:\n  - name: ssh-volume\n    secret:\n      secretName: secret-ssh-auth   ![2](Images/2.png)\n```", "```\n$ kubectl exec -it backend -- /bin/sh\n# ls -1 /var/app\nssh-privatekey\n# cat /var/app/ssh-privatekey\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,8734C9153079F2E8497C8075289EBBF1\n...\n-----END RSA PRIVATE KEY-----\n```"]