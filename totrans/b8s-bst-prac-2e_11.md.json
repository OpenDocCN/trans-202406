["```\napiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8sallowedrepos\n  annotations:\n    metadata.gatekeeper.sh/title: \"Allowed Repositories\"\n    metadata.gatekeeper.sh/version: 1.0.0\n    description: >-\n      Requires container images to begin with a string from the specified list.\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sAllowedRepos\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          properties:\n            repos:\n              description: The list of prefixes a container image is allowed to\n                have.\n              type: array\n              items:\n                type: string\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8sallowedrepos\n\n        violation[{\"msg\": msg}] {\n          container := input.review.object.spec.containers[_]\n          satisfied := [good | repo = input.parameters.repos[_] ;\n            good = startswith(container.image, repo)]\n          not any(satisfied)\n          msg := sprintf(\"container <%v> has an invalid image repo <%v>,\n            allowed repos are %v\",\n             [container.name, container.image, input.parameters.repos])\n        }\n\n        violation[{\"msg\": msg}] {\n          container := input.review.object.spec.initContainers[_]\n          satisfied := [good | repo = input.parameters.repos[_] ;\n            good = startswith(container.image, repo)]\n          not any(satisfied)\n          msg := sprintf(\"initContainer <%v> has an invalid image repo <%v>,\n            allowed repos are %v\",\n             [container.name, container.image, input.parameters.repos])\n        }\n\n        violation[{\"msg\": msg}] {\n          container := input.review.object.spec.ephemeralContainers[_]\n          satisfied := [good | repo = input.parameters.repos[_] ;\n            good = startswith(container.image, repo)]\n          not any(satisfied)\n          msg := sprintf(\"ephemeralContainer <%v> has an invalid image repo <%v>,\n            allowed repos are %v\",\n             [container.name, container.image, input.parameters.repos])\n        }\n```", "```\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sAllowedRepos\nmetadata:\n  name: prod-repo-is-openpolicyagent\nspec:\n  enforcementAction: deny\n  match:\n    kinds:\n      - apiGroups: [\"\"]\n        kinds: [\"Pod\"]\n    namespaces:\n      - \"production\"\n  parameters:\n    repos:\n      - \"openpolicyagent/\"\n```", "```\napiVersion: config.gatekeeper.sh/v1alpha1\nkind: Config\nmetadata:\nname: config\n  namespace: gatekeeper-system\nspec:\n  sync:\n    syncOnly:\n    - kind: Service\n      version: v1\n    - kind: Pod\n      version: v1\n    - kind: Namespace\n      version: v1\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: opa\n  namespace: production\nspec:\n  containers:\n    - name: opa\n      image: quay.io/opa:0.9.2\n```", "```\n$ kubectl create -f bad_resources/opa_wrong_repo.yaml\nError from server (Forbidden): error when creating \"STDIN\": admission webhook\n  \"validation.gatekeeper.sh\" denied the request: [repo-is-openpolicyagent]\n    container <opa> has an invalid image repo <quay.io/opa:0.9.2>, allowed\n      repos are [\"openpolicyagent/\"]\n```", "```\n$ kubectl get k8sallowedrepos\nNAME                           ENFORCEMENT-ACTION   TOTAL-VIOLATIONS\nprod-repo-is-openpolicyagent   deny                 1\n\n$ kubectl get k8sallowedrepos prod-repo-is-openpolicyagent -o yaml\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sAllowedRepos\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: ...\n  creationTimestamp: \"...\"\n  generation: 1\n  name: prod-repo-is-openpolicyagent\n  resourceVersion: \"...\"\n  uid: ...\nspec:\n  match:\n    kinds:\n    - apiGroups:\n      - \"\"\n      kinds:\n      - Pod\n    namespaces:\n    - production\n  parameters:\n    repos:\n    - openpolicyagent/\nstatus:\n  auditTimestamp: \"2022-11-27T23:37:42Z\"\n  totalViolations: 1\n  violations:\n  - enforcementAction: deny\n    group: \"\"\n    kind: Pod\n    message: container <nginx> has an invalid image repo <nginx>, allowed repos\n      are [\"openpolicyagent/\"]\n    name: nginx\n    namespace: production\n    version: v1\n```"]