["```\n$ kubectl logs --help | more\nPrint the logs for a container in a pod or specified resource. If the pod has\nonly one container, the container name is optional.\n\nExamples:\n  # Return snapshot logs from pod nginx with only one container\n  kubectl logs nginx\n...\n\n```", "```\n$ kubectl get pods\nNAME                             READY   STATUS    RESTARTS   AGE\nnginx-with-pv-7d6877b8cf-mjx5m   1/1     Running   0          140m\n\n$ kubectl logs nginx-with-pv-7d6877b8cf-mjx5m\n...\n2023/03/31 11:03:24 [notice] 1#1: using the \"epoll\" event method\n2023/03/31 11:03:24 [notice] 1#1: nginx/1.23.4\n2023/03/31 11:03:24 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6)\n2023/03/31 11:03:24 [notice] 1#1: OS: Linux 5.15.49-linuxkit\n2023/03/31 11:03:24 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576\n2023/03/31 11:03:24 [notice] 1#1: start worker processes\n...\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: liveness-nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.25.2\n    livenessProbe:\n      httpGet:\n        path: /\n        port: 80\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: readiness-nginx\nspec:\n  containers:\n  - name: readiness\n    image: nginx:1.25.2\n    readinessProbe:\n      httpGet:\n        path: /\n        port: 80\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: startup-nginx\nspec:\n  containers:\n  - name: startup\n    image: nginx:1.25.2\n    startupProbe:\n      httpGet:\n        path: /\n        port: 80\n      failureThreshold: 30\n      periodSeconds: 10\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webserver\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.25.2\n        ports:\n        - containerPort: 80\n```", "```\n...\n        livenessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 2\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 80\n          initialDelaySeconds: 2\n          periodSeconds: 10\n...\n```", "```\n$ kubectl apply -f webserver.yaml\ndeployment.apps/webserver created\n\n$ kubectl get pods\nNAME                         READY     STATUS    RESTARTS   AGE\nwebserver-4288715076-dk9c7   1/1       Running   0          2m\n\n$ kubectl describe pod/webserver-4288715076-dk9c7\nName:           webserver-4288715076-dk9c7\nNamespace:      default\nPriority:       0\n\n...\nStatus:         Running\nIP:             10.32.0.2\n...\nContainers:\n  nginx:\n    ...\n    Ready:           True\n    Restart Count:   0\n    Liveness:       http-get http://:80/ delay=2s timeout=1s period=10s #succe...\n    Readiness:      http-get http://:80/ delay=2s timeout=1s period=10s #succe...\n    ...\n...\n\n```", "```\n$ kubectl top node\nNAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%\nminikube   338m         8%     1410Mi          17%\n\n$ kubectl top pods --all-namespaces\nNAMESPACE     NAME                               CPU(cores)   MEMORY(bytes)\ndefault       db                                 15m          440Mi\ndefault       liveness-nginx                     1m           5Mi\ndefault       nginx-with-pv-7d6877b8cf-mjx5m     0m           3Mi\ndefault       readiness-nginx                    1m           3Mi\ndefault       webserver-f4f7cb455-rhxwt          1m           4Mi\nkube-system   coredns-787d4945fb-jrp8j           4m           12Mi\nkube-system   etcd-minikube                      48m          52Mi\nkube-system   kube-apiserver-minikube            78m          266Mi\n...\n\n```", "```\n$ minikube delete && minikube start --kubernetes-version=v1.27.0 \\\n    --memory=6g --bootstrapper=kubeadm \\\n    --extra-config=kubelet.authentication-token-webhook=true \\\n    --extra-config=kubelet.authorization-mode=Webhook \\\n    --extra-config=scheduler.bind-address=0.0.0.0 \\\n    --extra-config=controller-manager.bind-address=0.0.0.0\n\n```", "```\n$ minikube addons disable metrics-server\n\n```", "```\n$ git clone https://github.com/prometheus-operator/kube-prometheus.git\n\n```", "```\n$ kubectl apply --server-side -f manifests/setup\n$ kubectl wait \\\n    --for condition=Established \\\n    --all CustomResourceDefinition \\\n    --namespace=monitoring\n$ kubectl apply -f manifests/\n\n```", "```\n$ kubectl --namespace monitoring port-forward svc/prometheus-k8s 9090\n\n```", "```\n$ kubectl --namespace monitoring port-forward svc/grafana 3000\n\n```"]