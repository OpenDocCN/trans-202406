- en: Chapter 12\. Consuming Falco Events
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 12 章。消费 Falco 事件
- en: At this point, you’ve learned how to run and configure Falco. You understand
    how Falco can be used for runtime and cloud security and how it can detect a vast
    spectrum of threats. Now, it’s time to focus on what you can do with Falco’s detections.
    Consuming Falco’s output is the final piece of the puzzle and the subject of this
    chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经学会了如何运行和配置 Falco。您了解 Falco 如何用于运行时和云安全，以及它如何检测广泛的威胁。现在，是时候关注您可以如何处理
    Falco 检测的内容了。消费 Falco 的输出是这个拼图的最后一块，也是本章的主题。
- en: Alerts generated by Falco are helpful for observing and securing your production
    system, and we will give you some advice on how to use those alerts proficiently.
    The first part of the chapter is about tools that help you consume Falco’s outputs
    effectively. We will teach you how to get notified immediately when Falco detects
    a security threat, so your security team can react as soon as possible and take
    appropriate countermeasures. Finally, we’ll show you a mechanism for automatically
    responding to threats to speed up response times.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Falco 生成的警报对于观察和保护生产系统非常有帮助，我们将为您提供如何有效使用这些警报的建议。本章的第一部分是关于帮助您有效消费 Falco 输出的工具。我们将教您如何在
    Falco 检测到安全威胁时立即获得通知，以便您的安全团队尽快采取适当的对策。最后，我们将展示一种自动响应威胁以加快响应时间的机制。
- en: Working with Falco Outputs
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理 Falco 输出
- en: A minimal Falco installation outputs a simple textual log that you can store
    for later consultation, but this is not very useful. Fortunately, more intelligent
    tools allow you to work with Falco’s outputs and expand its possibilities, and
    these are an important part of integrating Falco into your ecosystem.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最小化的 Falco 安装会输出一个简单的文本日志，您可以稍后查阅，但这并不是很有用。幸运的是，更智能的工具允许您处理 Falco 的输出并扩展其功能，这些工具是将
    Falco 整合到您生态系统中的重要部分。
- en: 'This section will talk in detail about two tools that we have already mentioned
    in the book. The first, falco-exporter, is a tool designed to do one thing and
    do it well: produce metrics from Falco’s detected events. The second, Falcosidekick,
    is the Swiss Army knife of Falco outputs. It lets you aggregate data from multiple
    Falco sensors, filter the notifications, and forward them to any other application
    or platform in your environment.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将详细讨论本书中已提及的两个工具。第一个工具是 falco-exporter，它专为一个目标而设计：从 Falco 检测的事件生成指标。第二个工具
    Falcosidekick 则是 Falco 输出的瑞士军刀，它允许您聚合来自多个 Falco 传感器的数据，过滤通知，并将它们转发到您环境中的任何其他应用程序或平台。
- en: falco-exporter
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: falco-exporter
- en: The [falco-exporter project](https://oreil.ly/0j6EJ) provides a Prometheus metrics
    exporter for Falco output events. It consumes Falco outputs via a streamed gRPC
    API and exposes a metrics endpoint. The metrics include information on the number
    of triggered rules and detailed information on the priority and tags associated
    with the rules, as well as labels to identify each event’s origin, such as the
    hostname, namespace, and pod’s name. It also provides a preconfigured Grafana
    dashboard.^([1](ch12.xhtml#ch01fn16)) falco-exporter is useful for when you only
    need metrics about security events. (By contrast, Falcosidekick can also export
    metrics, but it comes with many other functionalities and outputs.)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[falco-exporter 项目](https://oreil.ly/0j6EJ) 提供了用于 Falco 输出事件的 Prometheus 指标导出器。它通过流式
    gRPC API 消费 Falco 输出，并公开指标端点。这些指标包括触发规则的数量信息，以及与规则相关的优先级和标签的详细信息，还包括用于识别每个事件来源的标签，例如主机名、命名空间和
    Pod 名称。它还提供了一个预配置的 Grafana 仪表板。^([1](ch12.xhtml#ch01fn16)) falco-exporter 对于只需要关于安全事件的指标非常有用。（相比之下，Falcosidekick
    也可以导出指标，但它具有许多其他功能和输出。）'
- en: Before installing falco-exporter, ensure that Falco is installed and configured
    with the gRCP server and gRPC output enabled over a Unix socket (see [“gRPC Output”](ch08.xhtml#grpc_output)
    for a refresher).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装 falco-exporter 之前，请确保已安装并配置了 Falco，且启用了通过 Unix socket 的 gRPC 服务器和 gRPC 输出（参见[“gRPC
    输出”](ch08.xhtml#grpc_output)进行复习）。
- en: Host installation
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主机安装
- en: To install falco-exporter directly on the host, you have to download the latest
    version from the [releases page](https://oreil.ly/rfK8e), decompress the archive,
    and copy the executable file *falco-exporter* to your preferred location (e.g.,
    */usr/bin*). Whether you execute it manually or run it as a service is entirely
    up to you. The default options work out of the box with the gRPC Unix socket in
    */var/run/falco.sock* (the default option for Falco). If you need to customize
    its options, run `falco-exporter --help` for assistance.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要直接在主机上安装 falco-exporter，您需要从 [发布页面](https://oreil.ly/rfK8e) 下载最新版本，解压存档，并将可执行文件
    *falco-exporter* 复制到您喜欢的位置（例如 */usr/bin*）。无论您是手动执行还是作为服务运行都可以。默认选项与 gRPC Unix
    套接字 */var/run/falco.sock*（Falco 的默认选项）兼容。如果您需要自定义选项，请运行 `falco-exporter --help`
    获取帮助。
- en: Running in a container
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在容器中运行
- en: 'To run falco-exporter in a container using Docker, use these commands:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要在使用 Docker 容器中运行 falco-exporter，请使用以下命令：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `docker run` command assumes that Falco is installed on the host and Falco’s
    gRPC Unix socket is present in */var/run/falco.sock*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker run` 命令假设 Falco 已安装在主机上，并且 Falco 的 gRPC Unix 套接字位于 */var/run/falco.sock*。'
- en: Deploying to Kubernetes
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署到 Kubernetes
- en: 'You can deploy falco-exporter to a Kubernetes cluster using either Helm or
    manifest files (see [Chapter 9](ch09.xhtml#installing_falco) for details on the
    two installation methods), but we recommend Helm. You first need to add the Falcosecurity
    charts repository:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 Helm 或清单文件将 falco-exporter 部署到 Kubernetes 集群（有关两种安装方法的详细信息，请参阅 [第 9 章](ch09.xhtml#installing_falco)）。我们推荐使用
    Helm。首先需要添加 Falcosecurity 图表存储库：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, to install the chart, run:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，要安装图表，请运行：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For detailed instructions, see the [falco-exporter chart documentation](https://oreil.ly/qkH5G).
    If you want to use manifest files instead, follow the steps in the [falco-exporter
    documentation](https://oreil.ly/lktaK).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有关详细说明，请参阅 [falco-exporter 图表文档](https://oreil.ly/qkH5G)。如果要使用清单文件，请按照 [falco-exporter
    文档](https://oreil.ly/lktaK) 中的步骤操作。
- en: Falcosidekick
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Falcosidekick
- en: 'The [Falcosidekick project](https://oreil.ly/MVyRi) provides a complete solution
    for connecting Falco to your ecosystem. It works on top of Falco’s output and
    allows you to forward its notifications to many other destinations (see [Figure 12-1](#the_falcosidekick_logo_left_parenthesis)).
    Falcosidekick can add custom fields to the notifications or filter events by priority
    (on a per-destination basis). In particular, supported outputs include platforms
    and applications for:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[Falcosidekick 项目](https://oreil.ly/MVyRi) 提供了连接 Falco 到您生态系统的完整解决方案。它在 Falco
    输出的基础上工作，并允许您将其通知转发到许多其他目的地（参见 [图 12-1](#the_falcosidekick_logo_left_parenthesis)）。Falcosidekick
    可以向通知添加自定义字段或按优先级过滤事件（按目的地分）。特别支持的输出包括以下平台和应用程序：'
- en: Communication and collaboration
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 沟通与协作
- en: Metrics and observability
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指标和可观察性
- en: Alerting
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 警报
- en: Logging and storage
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志和存储
- en: Function as a Service (FaaS) and serverless
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 函数即服务（FaaS）和无服务器
- en: Message queues and streaming
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息队列和流式传输
- en: '![](Images/pcns_1201.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pcns_1201.png)'
- en: Figure 12-1\. The Falcosidekick logo (left) and some of its supported notification
    destinations (right)
  id: totrans-30
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 12-1\. Falcosidekick 标志（左）及其支持的部分通知目标（右）
- en: Falcosidekick also allows you to use a side project, [falcosidekick-ui](https://oreil.ly/o1pcB),
    to visualize Falco events in a pleasant web UI (shown in [Figure 12-2](#the_falcosidekick_web_ui)).
    The web UI displays statistics about detected events and shows values in aggregate
    form and on a timeline. You can also filter for the events you are interested
    in and get all the event details quickly.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Falcosidekick 还允许您使用一个辅助项目，[falcosidekick-ui](https://oreil.ly/o1pcB)，在愉快的 web
    UI 中可视化 Falco 事件（如 [图 12-2](#the_falcosidekick_web_ui) 所示）。Web UI 显示有关检测事件的统计信息，并以聚合形式和时间线显示值。您还可以筛选您感兴趣的事件并快速获取所有事件详细信息。
- en: '![](Images/pcns_1202.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pcns_1202.png)'
- en: Figure 12-2\. The Falcosidekick web UI
  id: totrans-33
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 12-2\. Falcosidekick web UI
- en: 'Using Falcosidekick requires a small change in Falco’s configuration: before
    using it, enable JSON formatting and configure the HTTP output to send events
    to the Falcosidekick endpoint (it listens at port 2801 by default). See [Chapter 8](ch08.xhtml#the_output_framework)
    for Falco output configuration instructions and the Falcosidekick online documentation
    for specific details.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Falcosidekick 需要对 Falco 的配置进行小修改：在使用之前，启用 JSON 格式化并配置 HTTP 输出以将事件发送到 Falcosidekick
    端点（默认监听端口 2801）。有关 Falco 输出配置说明，请参阅 [第 8 章](ch08.xhtml#the_output_framework)，有关特定细节，请参阅
    Falcosidekick 在线文档。
- en: Host installation
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主机安装
- en: 'To install Falcosidekick directly on the host, download the latest version
    from the [releases page](https://oreil.ly/ToAMj), decompress the archive, and
    copy the executable file *falcosidekick* to your preferred location (e.g., */usr/bin*).
    Whether to execute it manually or run it as a service is entirely up to you. You
    also need to create a YAML configuration file and pass its path as an argument.
    For example:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要直接在主机上安装 Falcosidekick，请从[发布页面](https://oreil.ly/ToAMj)下载最新版本，解压缩存档，并将可执行文件
    *falcosidekick* 复制到您喜欢的位置（例如 */usr/bin*）。是否手动执行或作为服务运行完全取决于您。您还需要创建一个 YAML 配置文件并将其路径作为参数传递。例如：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The Falcosidekick repository includes an example configuration file that you
    can start with. Falcosidekick also supports environment variables that you can
    use as an alternative or to override the configuration file values.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Falcosidekick 仓库包含一个示例配置文件，您可以从中开始。Falcosidekick 还支持环境变量，您可以用其作为配置文件值的替代方案或进行覆盖。
- en: Running in a container
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在容器中运行
- en: 'To run Falcosidekick in a container using Docker, use these commands:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 若要在使用 Docker 的容器中运行 Falcosidekick，请使用以下命令：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `docker run` command assumes that Falco is installed on the host and that
    the HTTP output is configured to send events to port 2801\. Using Docker’s `-e`
    option, you can use environment variables to pass configurations. Alternatively,
    use Docker’s `-v` option to give it a YAML configuration file.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker run` 命令假定 Falco 已安装在主机上，并且 HTTP 输出已配置为将事件发送到端口 2801。使用 Docker 的 `-e`
    选项，您可以使用环境变量传递配置。或者，使用 Docker 的 `-v` 选项给它一个 YAML 配置文件。'
- en: Deploying to Kubernetes
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部署到 Kubernetes
- en: 'As with falco-exporter, you can deploy Falcosidekick to a Kubernetes cluster
    using either Helm or manifest files. We recommend the Helm installation option,
    which comes in two variants. Before we explore them, if you haven’t already added
    the Falcosecurity charts repository to Helm, do it by running:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 与 falco-exporter 类似，您可以使用 Helm 或清单文件将 Falcosidekick 部署到 Kubernetes 集群中。我们建议使用
    Helm 安装选项，它有两种变体。在我们探索它们之前，如果您还没有将 Falcosecurity 图表仓库添加到 Helm，请通过运行以下命令来添加：
- en: '[PRE5]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now you’re ready to deploy to your Kubernetes cluster. The first and more ordinary
    way to do this is when you already have Falco deployed and configured to send
    events to Falcosidekick and you just need to install the Falcosidekick chart:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以准备部署到您的 Kubernetes 集群了。这样做的第一种更普通的方式是，当您已经部署并配置了 Falco 来发送事件到 Falcosidekick，并且只需安装
    Falcosidekick 图表：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The other variant allows you to deploy Falco and Falcosidekick in a single
    Helm installation that will automatically configure both charts to work together.
    It’s usually the most convenient solution. To do this, run:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种变体允许您在单个 Helm 安装中部署 Falco 和 Falcosidekick，并自动配置这两个图表以共同工作。通常这是最方便的解决方案。要执行此操作，请运行：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Optionally, if you want to deploy the Falcosidekick web UI as well, add `--set
    webui.enabled=true` to the install command (regardless of which variant you choose).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，如果您还想要部署 Falcosidekick 的 Web UI，请在安装命令中添加 `--set webui.enabled=true`（无论您选择哪种变体）。
- en: You can find details on additional options in the [Falcosidekick chart documentation](https://oreil.ly/QaipZ).
    If you want to use manifest files instead, use the provided [online examples](https://oreil.ly/fziYL).^([2](ch12.xhtml#ch01fn17))
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[Falcosidekick 图表文档](https://oreil.ly/QaipZ)中找到关于其他选项的详细信息。如果您想使用清单文件，可以使用提供的[在线示例](https://oreil.ly/fziYL)。^([2](ch12.xhtml#ch01fn17))
- en: Observability and Analysis
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可观察性和分析
- en: Falco allows you to observe and analyze the security of your cloud-native environment.
    If you plan to leverage Falco’s detections for auditing or forensic purposes,
    you’ll usually want to store as much information as possible and make Falco’s
    results easily accessible and searchable. The tools described in this chapter
    offer you plenty of support.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Falco 允许您观察和分析您的云原生环境的安全性。如果您计划利用 Falco 的检测功能进行审计或取证，通常需要尽可能多地存储信息，并使 Falco
    的结果易于访问和搜索。本章描述的工具将为您提供充分的支持。
- en: Storing Falco events is like ingesting any other application logs. This means
    you can reuse your existing logging backend for Falco. Also, Falcosidekick can
    easily send Falco events to systems that allow you to store and analyze vast volumes
    of log data, like Elasticsearch and Splunk. Since you will likely use this approach
    for later analysis, we suggest keeping all events that Falco emits with no filtering.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 存储 Falco 事件就像摄取任何其他应用程序日志一样。这意味着您可以重用现有的日志后端用于 Falco。此外，Falcosidekick 可以轻松地将
    Falco 事件发送到允许您存储和分析大量日志数据的系统，如 Elasticsearch 和 Splunk。由于您可能会使用这种方法进行后续分析，我们建议保留
    Falco 发出的所有事件，不进行任何过滤。
- en: 'You’ll probably also want to collect metrics, as this can help you detect errors
    and anomalies in your application. For instance, a metric reporting that a Falco
    rule regularly triggers on a particular machine may be a symptom of a security
    problem, a misconfiguration, or an implementation bug in your running application.
    A reliable tool for this purpose is falco-exporter: it exposes metrics, connects
    Falco to Prometheus, and also offers a ready-to-use Grafana dashboard ([Figure 12-3](#the_preconfigured_grafana_dashboard_for)).'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还希望收集指标，因为这可以帮助您检测应用程序中的错误和异常。例如，一个指标报告 Falco 规则在特定机器上定期触发可能是安全问题、配置错误或正在运行的应用程序中的实现
    bug 的症状。用于此目的的可靠工具是 falco-exporter：它公开指标，连接 Falco 到 Prometheus，并提供一个预配置的 Grafana
    仪表板（[图 12-3](#the_preconfigured_grafana_dashboard_for)）。
- en: '![](Images/pcns_1203.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pcns_1203.png)'
- en: Figure 12-3\. The preconfigured Grafana dashboard for Falco events metrics provided
    by falco-exporter
  id: totrans-57
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 12-3\. falco-exporter 提供的预配置 Grafana 仪表板，用于展示 Falco 事件指标
- en: Getting Notified
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接收通知
- en: Although storing and aggregating Falco events is fine for observability, it’s
    not helpful when you need to react promptly to a security event. You likely want
    to receive important notifications immediately and in the right place so that
    you or your team can take countermeasures or start investigating right away.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管存储和聚合 Falco 事件对于可观察性是可以的，但在需要立即对安全事件做出反应时并不有用。您可能希望立即且在正确的位置接收重要的通知，以便您或您的团队可以立即采取对策或开始调查。
- en: 'Falco’s built-in output channels do not provide a specific mechanism for immediate
    notifications, but Falcosidekick allows you to forward only important notifications.
    For example, let’s say you want to get notifications whenever an event triggers
    the *Sudo Potential Privilege Escalation* rule (which comes with `priority: CRITICAL`),
    but not for other, noisier rules with lower priority levels. Falcosidekick allows
    you to configure a minimum priority level at which you want to send events to
    a specific destination, and to adjust this configuration for each destination.
    It supports most on-call systems, like PagerDuty, Opsgenie, and Prometheus Alertmanager
    and can send notifications to most common communication platforms, including Slack,
    Mattermost, Rocket.Chat, Microsoft Teams, and Discord.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'Falco 的内置输出通道没有提供特定的即时通知机制，但是 Falcosidekick 允许您仅转发重要的通知。例如，假设您希望在事件触发 *Sudo
    潜在权限升级* 规则（具有 `priority: CRITICAL`）时收到通知，而不是其他优先级较低的更嘈杂的规则。Falcosidekick 允许您配置一个最低优先级级别，以便将事件发送到特定目的地，并可以为每个目的地调整此配置。它支持大多数的呼叫系统，如
    PagerDuty、Opsgenie 和 Prometheus Alertmanager，并且可以将通知发送到包括 Slack、Mattermost、Rocket.Chat、Microsoft
    Teams 和 Discord 在内的大多数常见通信平台。'
- en: You can use Falcosidekick configurations to integrate Falco alerts into your
    existing environment easily. And because Falcosidekick allows you to forward Falco
    notifications to multiple destinations simultaneously, you can, for example, send
    the alerts to both PagerDuty and a Slack channel.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 Falcosidekick 的配置轻松地将 Falco 警报集成到现有环境中。而且因为 Falcosidekick 允许您同时将 Falco
    通知发送到多个目的地，例如同时将警报发送到 PagerDuty 和 Slack 频道。
- en: Responding to Threats
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 响应威胁
- en: Another meaningful—and more sophisticated—way of consuming Falco events is to
    create systems that automatically take action in response to threats or security
    incidents. Implementing custom actions in response to threats is easier than you
    might think.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种有意义且更复杂的使用 Falco 事件的方式是创建系统，以自动响应威胁或安全事件。实施针对威胁的自定义操作比您想象的要容易。
- en: Although The Falco Project does not provide a specific tool for this purpose,
    a few emerging projects in the community are implementing this concept. Such systems
    are sometimes called *response engines* and usually specialize in managing threats
    in Kubernetes.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Falco 项目本身不提供专门用于此目的的工具，但社区中的一些新兴项目正在实现这一概念。这类系统有时被称为 *响应引擎*，通常专门用于管理 Kubernetes
    中的威胁。
- en: A response engine provides a straightforward mechanism to perform a predefined
    task when a Falco rule condition is violated. You can create a simple implementation
    using Falcosidekick to forward Falco notifications to a FaaS platform or serverless
    solution that, in turn, performs the required action. For example, you can automatically
    terminate a Kubernetes Pod whenever a Falco rule determines that the Pod is compromised,
    by implementing a cloud function that uses the Kubernetes API to delete the compromised
    Pod. [Figure 12-4](#example_of_a_functional_scheme_for_a_re) illustrates this
    approach and shows some cloud function providers supported by Falcosidekick.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 响应引擎提供了一个简单的机制，用于在违反 Falco 规则条件时执行预定义任务。您可以使用 Falcosidekick 创建一个简单的实现，将 Falco
    通知转发到一个 FaaS 平台或无服务器解决方案，该解决方案进而执行所需的操作。例如，您可以通过实现一个使用 Kubernetes API 删除受损 Pod
    的云函数来自动终止 Kubernetes Pod，每当 Falco 规则确定该 Pod 受到威胁时。[Figure 12-4](#example_of_a_functional_scheme_for_a_re)
    展示了这种方法，并展示了 Falcosidekick 支持的一些云函数提供者。
- en: '![](Images/pcns_1204.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/pcns_1204.png)'
- en: Figure 12-4\. Example of a functional scheme for a response engine for Kubernetes
    that uses Falcosidekick outputs to perform actions
  id: totrans-67
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 12-4\. Kubernetes 响应引擎功能方案示例，使用 Falcosidekick 输出执行操作
- en: You might want to be notified regardless of the rule’s priority level, but you
    will probably only want to perform actions for specific rules. For example, you
    might want only rules with a `CRITICAL` priority level to terminate Pods. Falcosidekick
    helps with this because it allows you to filter notifications based on their priority
    value, so you can control the information each destination receives.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望无论规则的优先级如何都收到通知，但您可能只希望针对特定规则执行操作。例如，您可能只希望具有 `CRITICAL` 优先级的规则终止 Pods。Falcosidekick
    在此方面非常有帮助，因为它允许您基于其优先级值过滤通知，从而控制每个目标接收的信息。
- en: We advise you to analyze your needs and design your response engine to meet
    them. Falco and tools like Falcosidekick will provide everything you need to support
    your solution.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议您分析您的需求并设计响应引擎以满足这些需求。Falco 和类似 Falcosidekick 的工具将为支持您的解决方案提供所需的一切。
- en: Conclusion
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This chapter concludes [Part III](part03.xhtml#iii_running_falco_in_production).
    You’ve learned all the fundamental aspects of running Falco in production and
    can now configure and customize it for almost any need and scenario. You’ve also
    discovered how to consume Falco events properly and integrate them with your ecosystem.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 本章结束了 [第三部分](part03.xhtml#iii_running_falco_in_production)。您已经了解了在生产环境中运行 Falco
    的所有基本方面，并且现在可以为几乎任何需求和场景配置和定制它。您还了解了如何正确消费 Falco 事件并将其集成到您的生态系统中。
- en: In [Part IV](part04.xhtml#iv_extending_falco), you will go beyond the knowledge
    of the average user and learn how to extend Falco to satisfy any advanced requirement.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第四部分](part04.xhtml#iv_extending_falco) 中，您将超越普通用户的知识，学习如何扩展 Falco 以满足任何高级需求。
- en: ^([1](ch12.xhtml#ch01fn16-marker)) A [Grafana dashboard](https://oreil.ly/2sVSm)
    is a set of organized UI elements to visualize the data. Dashboard configurations
    can be stored in a file and shared. You can get most of the available dashboards
    from Grafana’s [online gallery](https://oreil.ly/F25kV).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch12.xhtml#ch01fn16-marker)) [Grafana 仪表板](https://oreil.ly/2sVSm) 是一组组织良好的
    UI 元素，用于可视化数据。仪表板配置可以存储在文件中并进行共享。您可以从 Grafana 的 [在线画廊](https://oreil.ly/F25kV)
    获取大多数可用的仪表板。
- en: ^([2](ch12.xhtml#ch01fn17-marker)) The actual URLs of the Falcosidekick example
    manifest files for Kubernetes may change from time to time, but you can always
    find them under the Falcosecurity GitHub organization. Note that any Helm chart
    can generate such files. Indeed, like Falco’s manifest files, Falcosidekick’s
    files are rendered starting from its chart.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch12.xhtml#ch01fn17-marker)) Falcosidekick 示例清单文件的实际 URL 可能会不时更改，但您始终可以在
    Falcosecurity GitHub 组织下找到它们。请注意，任何 Helm 图表都可以生成这样的文件。事实上，与 Falco 的清单文件一样，Falcosidekick
    的文件也是从其图表开始渲染的。
