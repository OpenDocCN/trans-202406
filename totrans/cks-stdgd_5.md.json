["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: non-root-error\nspec:\n  containers:\n  - image: nginx:1.23.1\n    name: nginx\n    securityContext:\n      runAsNonRoot: true\n```", "```\n$ kubectl apply -f container-non-root-user-error.yaml\npod/non-root-error created\n$ kubectl get pod non-root-error\nNAME             READY   STATUS                       RESTARTS   AGE\nnon-root-error   0/1     CreateContainerConfigError   0          9s\n$ kubectl describe pod non-root-error\n...\nEvents:\n  Type     Reason     Age               From               Message\n  ----     ------     ----              ----               -------\n  Normal   Scheduled  24s               default-scheduler  Successfully \\\n  assigned default/non-root to minikube\n  Normal   Pulling    24s               kubelet            Pulling image \\\n  \"nginx:1.23.1\"\n  Normal   Pulled     16s               kubelet            Successfully \\\n  pulled image \"nginx:1.23.1\" in 7.775950615s\n  Warning  Failed     4s (x3 over 16s)  kubelet            Error: container \\\n  has runAsNonRoot and image will run as root (pod: \"non-root-error_default \\\n  (6ed9ed71-1002-4dc2-8cb1-3423f86bd144)\", container: secured-container)\n  Normal   Pulled     4s (x2 over 16s)  kubelet            Container image \\\n  \"nginx:1.23.1\" already present on machine\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: non-root-success\nspec:\n  containers:\n  - image: bitnami/nginx:1.23.1\n    name: nginx\n    securityContext:\n      runAsNonRoot: true\n```", "```\n$ kubectl apply -f container-non-root-user-success.yaml\npod/non-root-success created\n$ kubectl get pod non-root-success\nNAME               READY   STATUS    RESTARTS   AGE\nnon-root-success   1/1     Running   0          7s\n```", "```\n$ kubectl exec non-root-success -it -- /bin/sh\n$ id\nuid=1001 gid=0(root) groups=0(root)\n$ exit\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: user-id\nspec:\n  containers:\n  - image: busybox:1.35.0\n    name: busybox\n    command: [\"sh\", \"-c\", \"sleep 1h\"]\n    securityContext:\n      runAsUser: 1000\n      runAsGroup: 3000\n```", "```\n$ kubectl apply -f container-user-id.yaml\npod/user-id created\n$ kubectl get pods user-id\nNAME      READY   STATUS    RESTARTS   AGE\nuser-id   1/1     Running   0          6s\n```", "```\n$ kubectl exec user-id -it -- /bin/sh\n/ $ id\nuid=1000 gid=3000 groups=3000\n/ $ touch test.txt\ntouch: test.txt: Permission denied\n/ $ touch /tmp/test.txt\n/ $ exit\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: non-privileged\nspec:\n  containers:\n  - image: busybox:1.35.0\n    name: busybox\n    command: [\"sh\", \"-c\", \"sleep 1h\"]\n```", "```\n$ kubectl apply -f non-privileged.yaml\npod/non-privileged created\n$ kubectl get pods\nNAME             READY   STATUS    RESTARTS   AGE\nnon-privileged   1/1     Running   0          6s\n```", "```\n$ kubectl exec non-privileged -it -- /bin/sh\n/ # sysctl kernel.hostname=test\nsysctl: error setting key 'kernel.hostname': Read-only file system\n/ # exit\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: privileged\nspec:\n  containers:\n  - image: busybox:1.35.0\n    name: busybox\n    command: [\"sh\", \"-c\", \"sleep 1h\"]\n    securityContext:\n      privileged: true\n```", "```\n$ kubectl apply -f privileged.yaml\npod/privileged created\n$ kubectl get pod privileged\nNAME         READY   STATUS    RESTARTS   AGE\nprivileged   1/1     Running   0          6s\n```", "```\n$ kubectl exec privileged -it -- /bin/sh\n/ # sysctl kernel.hostname=test\nkernel.hostname = test\n/ # exit\n```", "```\nmetadata:\n  labels:\n    pod-security.kubernetes.io/enforce: restricted\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: psa\n  labels:\n    pod-security.kubernetes.io/enforce: restricted\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\n  namespace: psa\nspec:\n  containers:\n  - image: busybox:1.35.0\n    name: busybox\n    command: [\"sh\", \"-c\", \"sleep 1h\"]\n```", "```\n$ kubectl create -f psa-namespace.yaml\nnamespace/psa created\n$ kubectl apply -f psa-violating-pod.yaml\nError from server (Forbidden): error when creating \"psa-pod.yaml\": pods \\\n\"busybox\" is forbidden: violates PodSecurity \"restricted:latest\": \\\nallowPrivilegeEscalation != false (container \"busybox\" must set \\\nsecurityContext.allowPrivilegeEscalation=false), unrestricted \\\ncapabilities (container \"busybox\" must set securityContext. \\\ncapabilities.drop=[\"ALL\"]), runAsNonRoot != true (pod or container \\\n\"busybox\" must set securityContext.runAsNonRoot=true), seccompProfile \\\n(pod or container \"busybox\" must set securityContext.seccompProfile. \\\ntype to \"RuntimeDefault\" or \"Localhost\")\n$ kubectl get pod -n psa\nNo resources found in psa namespace.\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\n  namespace: psa\nspec:\n  containers:\n  - image: busybox:1.35.0\n    name: busybox\n    command: [\"sh\", \"-c\", \"sleep 1h\"]\n    securityContext:\n      allowPrivilegeEscalation: false\n      capabilities:\n        drop: [\"ALL\"]\n      runAsNonRoot: true\n      runAsUser: 2000\n      runAsGroup: 3000\n      seccompProfile:\n        type: RuntimeDefault\n```", "```\n$ kubectl apply -f psa-non-violating-pod.yaml\npod/busybox created\n$ kubectl get pod busybox -n psa\nNAME      READY   STATUS    RESTARTS   AGE\nbusybox   1/1     Running   0          10s\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/\\\ngatekeeper/master/deploy/gatekeeper.yaml\n```", "```\n$ kubectl get namespaces\nNAME                STATUS   AGE\ndefault             Active   29h\ngatekeeper-system   Active   4s\n...\n```", "```\napiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srequiredlabels\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRequiredLabels ![1](assets/1.png)\n      validation:\n        openAPIV3Schema: ![2](assets/2.png)\n          type: object\n          properties:\n            labels:\n              type: array\n              items:\n                type: string\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: | ![3](assets/3.png)\n        package k8srequiredlabels\n\n        violation[{\"msg\": msg, \"details\": {\"missing_labels\": missing}}] {\n          provided := {label | input.review.object.metadata.labels[label]}\n          required := {label | label := input.parameters.labels[_]}\n          missing := required - provided\n          count(missing) > 0\n          msg := sprintf(\"you must provide labels: %v\", [missing])\n        }\n```", "```\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sRequiredLabels ![1](assets/1.png)\nmetadata:\n  name: ns-must-have-app-label-key\nspec:\n  match: ![2](assets/2.png)\n    kinds:\n      - apiGroups: [\"\"]\n        kinds: [\"Namespace\"]\n  parameters: ![3](assets/3.png)\n    labels: [\"app\"]\n```", "```\n$ kubectl apply -f constraint-template-labels.yaml\nconstrainttemplate.templates.gatekeeper.sh/k8srequiredlabels created\n$ kubectl apply -f constraint-ns-labels.yaml\nk8srequiredlabels.constraints.gatekeeper.sh/ns-must-have-app-label-key created\n```", "```\n$ kubectl create ns governed-ns\nError from server (Forbidden): admission webhook \"validation.gatekeeper.sh\" \\\ndenied the request: [ns-must-have-app-label-key] you must provide labels: {\"app\"}\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    app: orion\n  name: governed-ns\n```", "```\n$ kubectl apply -f namespace-app-label.yaml\nnamespace/governed-ns created\n```", "```\n$ kubectl create secret generic app-config --from-literal=password=passwd123\nsecret/app-config created\n```", "```\n$ sudo ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt \\\n--cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/\\\netcd/server.key get /registry/secrets/default/app-config | hexdump -C\n00000000  2f 72 65 67 69 73 74 72  79 2f 73 65 63 72 65 74  |/registry/secret|\n00000010  73 2f 64 65 66 61 75 6c  74 2f 61 70 70 2d 63 6f  |s/default/app-co|\n00000020  6e 66 69 67 0a 6b 38 73  00 0a 0c 0a 02 76 31 12  |nfig.k8s.....v1.|\n00000030  06 53 65 63 72 65 74 12  d9 01 0a b7 01 0a 0a 61  |.Secret........a|\n00000040  70 70 2d 63 6f 6e 66 69  67 12 00 1a 07 64 65 66  |pp-config....def|\n00000050  61 75 6c 74 22 00 2a 24  36 38 64 65 65 34 34 38  |ault\".*$68dee448|\n00000060  2d 34 39 62 37 2d 34 34  32 66 2d 39 62 32 66 2d  |-49b7-442f-9b2f-|\n00000070  33 66 39 62 39 62 32 61  66 66 36 64 32 00 38 00  |3f9b9b2aff6d2.8.|\n00000080  42 08 08 97 f8 a4 9b 06  10 00 7a 00 8a 01 65 0a  |B.........z...e.|\n00000090  0e 6b 75 62 65 63 74 6c  2d 63 72 65 61 74 65 12  |.kubectl-create.|\n000000a0  06 55 70 64 61 74 65 1a  02 76 31 22 08 08 97 f8  |.Update..v1\"....|\n000000b0  a4 9b 06 10 00 32 08 46  69 65 6c 64 73 56 31 3a  |.....2.FieldsV1:|\n000000c0  31 0a 2f 7b 22 66 3a 64  61 74 61 22 3a 7b 22 2e  |1./{\"f:data\":{\".|\n000000d0  22 3a 7b 7d 2c 22 66 3a  70 61 73 73 77 6f 72 64  |\":{},\"f:password|\n000000e0  22 3a 7b 7d 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |\":{}},\"f:type\":{|\n000000f0  7d 7d 42 00 12 15 0a 08  70 61 73 73 77 6f 72 64  |}}B.....password|\n00000100  12 09 70 61 73 73 77 64  31 32 33 1a 06 4f 70 61  |..passwd123..Opa|\n00000110  71 75 65 1a 00 22 00 0a                           |que..\"..|\n```", "```\n$ head -c 32 /dev/urandom | base64\nW68xlPT/VXcOSEZJvWeIvkGJnGfQNFpvZYfT9e+ZYuY=\n```", "```\napiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n  - resources:\n      - secrets ![1](assets/1.png)\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: W68xlPT/VXcOSEZJvWeIvkGJnGfQNFpvZYfT9e+ZYuY= ![2](assets/2.png)\n      - identity: {}\n```", "```\n$ sudo vim /etc/kubernetes/manifests/kube-apiserver.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: \\\n    192.168.56.10:6443\n  creationTimestamp: null\n  labels:\n    component: kube-apiserver\n    tier: control-plane\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --encryption-provider-config=/etc/kubernetes/enc/enc.yaml\n    volumeMounts:\n    ...\n    - name: enc\n      mountPath: /etc/kubernetes/enc\n      readonly: true\n  volumes:\n  ...\n  - name: enc\n    hostPath:\n      path: /etc/kubernetes/enc\n      type: DirectoryOrCreate\n...\n```", "```\n$ kubectl get pods -n kube-system\nNAME                           READY   STATUS    RESTARTS   AGE\n...\nkube-apiserver-control-plane   1/1     Running   0          69s\n```", "```\n$ kubectl get secrets --all-namespaces -o json | kubectl replace -f -\n...\nsecret/app-config replaced\n```", "```\n$ sudo ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt \\\n--cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/\\\netcd/server.key get /registry/secrets/default/app-config | hexdump -C\n00000000  2f 72 65 67 69 73 74 72  79 2f 73 65 63 72 65 74  |/registry/secret|\n00000010  73 2f 64 65 66 61 75 6c  74 2f 61 70 70 2d 63 6f  |s/default/app-co|\n00000020  6e 66 69 67 0a 6b 38 73  3a 65 6e 63 3a 61 65 73  |nfig.k8s:enc:aes|\n00000030  63 62 63 3a 76 31 3a 6b  65 79 31 3a ae 26 e9 c2  |cbc:v1:key1:.&..|\n00000040  7b fd a2 74 30 24 85 61  3c 18 1e 56 00 a1 24 65  |{..t0$.a<..V..$e|\n00000050  52 3c 3f f1 24 43 9f 6d  de 5f b0 84 32 18 84 47  |R<?.$C.m._..2..G|\n00000060  d5 30 e9 64 84 22 f5 d0  0b 6f 02 af db 1d 51 34  |.0.d.\"...o....Q4|\n00000070  db 57 c8 17 93 ed 9e 00  ea 9a 7b ec 0e 75 0c 49  |.W........{..u.I|\n00000080  6a e9 97 cd 54 d4 ae 6b  b6 cb 65 8a 5d 4c 3c 9c  |j...T..k..e.]L<.|\n00000090  db 9b ed bc ce bf 3c ef  f6 2e cb 6d a2 53 25 49  |......<....m.S%I|\n000000a0  d4 26 c5 4c 18 f3 65 bb  a8 4c 0f 8d 6e be 7b d3  |.&.L..e..L..n.{.|\n000000b0  24 9b a8 09 9c bb a3 f9  53 49 78 86 f5 24 e7 10  |$.......SIx..$..|\n000000c0  ad 05 45 b8 cb 31 bd 38  b6 5c 00 02 b2 a4 62 13  |..E..1.8.\\....b.|\n000000d0  d5 82 6b 73 79 97 7e fa  2f 5d 3b 91 a0 21 50 9d  |..ksy.~./];..!P.|\n000000e0  77 1a 32 44 e1 93 9b 9c  be bf 49 d2 f9 dc 56 23  |w.2D......I...V#|\n000000f0  07 a8 ca a5 e3 e7 d1 ae  9c 22 1f 98 b1 63 b8 73  |.........\"...c.s|\n00000100  66 3f 9f a5 6a 45 60 a7  81 eb 32 e5 42 4d 2b fd  |f?..jE`...2.BM+.|\n00000110  65 6c c2 c7 74 9f 1d 6a  1c 24 32 0e 7a 94 a2 60  |el..t..j.$2.z..`|\n00000120  22 77 58 c9 69 c3 55 72  e8 fb 0b 63 9d 7f 04 31  |\"wX.i.Ur...c...1|\n00000130  00 a2 07 76 af 95 4e 03  0a 92 10 b8 bb 1e 89 94  |...v..N.........|\n00000140  45 60 01 45 bf d7 95 df  ff 2e 9e 31 0a           |E`.E.......1.|\n0000014d\n```", "```\n$ sudo apt-get update && \\\n  sudo apt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg\n```", "```\n$ curl -fsSL https://gvisor.dev/archive.key | sudo gpg --dearmor -o /usr/share/\\\nkeyrings/gvisor-archive-keyring.gpg\n$ echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/\\\ngvisor-archive-keyring.gpg] https://storage.googleapis.com/gvisor/releases \\\nrelease main\" | sudo tee /etc/apt/sources.list.d/gvisor.list > /dev/null\n```", "```\n$ sudo apt-get update && sudo apt-get install -y runsc\n```", "```\n$ cat <<EOF | sudo tee /etc/containerd/config.toml\nversion = 2\n[plugins.\"io.containerd.runtime.v1.linux\"]\n  shim_debug = true\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n  runtime_type = \"io.containerd.runc.v2\"\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runsc]\n  runtime_type = \"io.containerd.runsc.v1\"\nEOF\n```", "```\n$ sudo systemctl restart containerd\n```", "```\napiVersion: node.k8s.io/v1\nkind: RuntimeClass\nmetadata:\n  name: gvisor\nhandler: runsc\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  runtimeClassName: gvisor\n  containers:\n  - name: nginx\n    image: nginx:1.23.2\n```", "```\n$ kubectl apply -f runtimeclass.yaml\nruntimeclass.node.k8s.io/gvisor created\n$ kubectl apply -f pod.yaml\npod/nginx created\n```", "```\n$ kubectl exec nginx -- dmesg\n[    0.000000] Starting gVisor...\n[    0.123202] Preparing for the zombie uprising...\n[    0.415862] Rewriting operating system in Javascript...\n[    0.593368] Reading process obituaries...\n[    0.741642] Segmenting fault lines...\n[    0.797360] Daemonizing children...\n[    0.831010] Creating bureaucratic processes...\n[    1.313731] Searching for needles in stacks...\n[    1.455084] Constructing home...\n[    1.834278] Gathering forks...\n[    1.928142] Mounting deweydecimalfs...\n[    2.109973] Setting up VFS...\n[    2.157224] Ready!\n```"]