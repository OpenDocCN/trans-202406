- en: Chapter 1\. Getting Started with Kubernetes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章 Kubernetes 入门
- en: In this first chapter we present recipes that will help you get started with
    Kubernetes. We show you how to use Kubernetes without installing it and introduce
    components such as the command-line interface (CLI) and the dashboard, which allow
    you to interact with a cluster, as well as Minikube, an all-in-one solution you
    can run on your laptop.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了一些可以帮助你开始使用 Kubernetes 的配方。我们向你展示了如何在不安装 Kubernetes 的情况下使用它，并介绍了诸如命令行界面（CLI）和仪表板之类的组件，这些组件允许你与集群交互，以及
    Minikube，一个可以在笔记本电脑上运行的一体化解决方案。
- en: 1.1 Installing the Kubernetes CLI, kubectl
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.1 安装 Kubernetes 命令行工具 kubectl
- en: Problem
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to install the Kubernetes command-line interface so you can interact
    with your Kubernetes cluster.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望安装 Kubernetes 命令行界面，以便与 Kubernetes 集群交互。
- en: Solution
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'The easiest option is to download the latest official release. For example,
    on a Linux system, to get the latest stable version, enter the following:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的选择是下载最新的官方版本。例如，在 Linux 系统上获取最新稳定版本，请输入以下命令：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Using the [Homebrew package manager](https://brew.sh), Linux and macOS users
    can also install `kubectl`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[Homebrew 软件包管理器](https://brew.sh)，Linux 和 macOS 用户也可以安装 `kubectl`：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After installation, make sure you have a working `kubectl` by listing its version:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，请通过列出其版本来确保 `kubectl` 可正常工作：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Discussion
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: '`kubectl` is the official Kubernetes CLI and is available as open source software,
    which means you could build the `kubectl` binary yourself if you needed. See [Recipe
    15.1](ch15.html#compiling_source) to learn about compiling the Kubernetes source
    code locally.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubectl` 是官方的 Kubernetes 命令行工具，并且是开源软件，这意味着如果需要的话，你可以自行构建 `kubectl` 的可执行文件。详见[配方
    15.1](ch15.html#compiling_source)以了解如何在本地编译 Kubernetes 源代码。'
- en: 'It’s useful to note that Google Kubernetes Engine users (see [Recipe 2.11](ch02.html#gke_start))
    can install `kubectl` using `gcloud`:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，Google Kubernetes Engine 用户（参见[配方 2.11](ch02.html#gke_start)）可以使用 `gcloud`
    安装 `kubectl`：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Also note that in the latest versions of Minikube (see [Recipe 1.2](#minikube_install)),
    you can invoke `kubectl` as a subcommand of `minikube` to run a `kubectl` binary
    that matches the cluster version:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请注意，在最新版本的 Minikube 中（参见[配方 1.2](#minikube_install)），你可以将 `kubectl` 作为 `minikube`
    的子命令来运行一个与集群版本匹配的 `kubectl` 可执行文件：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: See Also
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: Documentation on [installing `kubectl`](https://oreil.ly/DgK8a)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关[安装 `kubectl`](https://oreil.ly/DgK8a)的文档
- en: 1.2 Installing Minikube to Run a Local Kubernetes Instance
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.2 安装 Minikube 以运行本地 Kubernetes 实例
- en: Problem
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to use Kubernetes for testing or development or for training purposes
    on your local machine.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望在本地机器上用于测试、开发或培训目的使用 Kubernetes。
- en: Solution
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: '[Minikube](https://oreil.ly/97IFg) is a tool that lets you easily use Kubernetes
    on your local machine.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[Minikube](https://oreil.ly/97IFg) 是一个工具，可以让你在本地机器上轻松使用 Kubernetes。'
- en: 'To install the Minikube CLI locally, you can get the latest prebuilt release
    or build from source. To install the latest release of `minikube` on a Linux-based
    machine, do this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要在本地安装 Minikube CLI，你可以获取最新的预构建版本或从源代码构建。要在基于 Linux 的机器上安装最新版本的 `minikube`，请执行以下操作：
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will put the `minikube` binary in your path and make it accessible from
    everywhere.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把 `minikube` 可执行文件放在你的路径中，并使其可以从任何位置访问。
- en: 'Once it’s installed, you can verify the Minikube version with the following
    command:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，你可以使用以下命令验证 Minikube 的版本：
- en: '[PRE6]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Discussion
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Minikube can be deployed as a virtual machine, a container, or bare metal. This
    is configured using the `--driver` flag while creating a cluster on Minikube.
    When this flag is not specified, Minikube will automatically select the best available
    runtime environment.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube 可以部署为虚拟机、容器或裸金属。在创建 Minikube 集群时，可以使用 `--driver` 标志进行配置。当未指定此标志时，Minikube
    将自动选择最佳的运行时环境。
- en: A *hypervisor* is a software or hardware component that creates and manages
    virtual machines. It is responsible for allocating and managing the physical resources
    (CPU, memory, storage, network) of a host system and allowing multiple virtual
    machines (VMs) to run concurrently on the same physical hardware. Minikube supports
    a range of hypervisors, such as [VirtualBox](https://oreil.ly/-tbK7), [Hyperkit](https://oreil.ly/djLvh),
    [Docker Desktop](https://oreil.ly/xQ-mj), [Hyper-V](https://oreil.ly/5EAe0), and
    so on. The [drivers](https://oreil.ly/Y1jpt) page gives an overview of the supported
    runtimes.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*虚拟化管理程序*是创建和管理虚拟机的软件或硬件组件。它负责分配和管理主机系统的物理资源（CPU、内存、存储、网络），允许多个虚拟机（VM）在同一物理硬件上并发运行。Minikube
    支持多种虚拟化管理程序，例如[VirtualBox](https://oreil.ly/-tbK7)、[Hyperkit](https://oreil.ly/djLvh)、[Docker
    Desktop](https://oreil.ly/xQ-mj)、[Hyper-V](https://oreil.ly/5EAe0)等。[驱动程序](https://oreil.ly/Y1jpt)页面提供了支持的运行时概述。'
- en: Minikube can also use a container runtime to create a cluster on a host machine.
    This driver is available only on a Linux-based host, where it’s possible to run
    Linux containers natively without having to use a VM. While a container-based
    runtime does not offer the same level of isolation as a virtual machine, it does
    offer the best performance and resource utilization. At the time of writing, Minikube
    has support for [Docker Engine](https://oreil.ly/7gZPf) and [Podman](https://oreil.ly/y6N3t)
    (experimental).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube 还可以使用容器运行时在主机上创建集群。此驱动仅在基于 Linux 的主机上可用，在这些主机上可以本地运行 Linux 容器，无需使用虚拟机。虽然基于容器的运行时不像虚拟机那样提供相同级别的隔离，但它确实提供了最佳的性能和资源利用率。在撰写本文时，Minikube
    支持[Docker 引擎](https://oreil.ly/7gZPf)和[Podman](https://oreil.ly/y6N3t)（实验性支持）。
- en: 'Other tools that can be used for running local Kubernetes clusters using Linux
    containers are as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 其他可用于在 Linux 容器上运行本地 Kubernetes 集群的工具如下：
- en: Kubernetes in Docker Desktop (see [Recipe 1.6](#install_docker_desktop_kubernetes))
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Desktop 中的 Kubernetes（参见[配方 1.6](#install_docker_desktop_kubernetes)）
- en: kind (see [Recipe 1.5](#install_kind))
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 种类（参见[配方 1.5](#install_kind)）
- en: '[k3d](https://k3d.io)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[k3d](https://k3d.io)'
- en: See Also
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: '[Minikube Get Started! guide](https://oreil.ly/2b1fA)'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Minikube 入门指南！](https://oreil.ly/2b1fA)'
- en: '[Minikube drivers](https://oreil.ly/HAZgT)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Minikube 驱动程序](https://oreil.ly/HAZgT)'
- en: '`minikube` source on [GitHub](https://oreil.ly/HmCEJ)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`minikube` 的源码在[GitHub](https://oreil.ly/HmCEJ)'
- en: 1.3 Using Minikube Locally for Development
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.3 在本地使用 Minikube 进行开发
- en: Problem
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to use Minikube locally for testing and development of your Kubernetes
    application. You have installed and started `minikube` (see [Recipe 1.2](#minikube_install))
    and want to know a few extra commands to simplify your development experience.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望在本地使用 Minikube 进行 Kubernetes 应用程序的测试和开发。您已经安装并启动了 `minikube`（参见[配方 1.2](#minikube_install)），并且想知道一些额外的命令来简化开发体验。
- en: Solution
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use the `minikube start` command to create a Kubernetes cluster locally:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `minikube start` 命令在本地创建 Kubernetes 集群：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'By default the cluster will be allocated 2 GB of RAM. If you don’t like the
    defaults, you can override parameters such as the memory and number of CPUs, as
    well as picking a certain Kubernetes version for the Minikube VM—​for example:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，集群将分配 2 GB 的 RAM。如果您不喜欢默认设置，可以覆盖参数，例如内存和 CPU 数量，并选择特定的 Kubernetes 版本为
    Minikube VM——例如：
- en: '[PRE8]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Additionally, you can specify the number of cluster nodes by overriding the
    default value of one node:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以通过覆盖默认值来指定集群节点的数量为一个节点：
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To inspect the status of the Minikube cluster, do this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查 Minikube 集群的状态，请执行以下操作：
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Similarly, to inspect the status of the Kubernetes cluster running inside Minikube,
    do this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，要检查运行在 Minikube 内的 Kubernetes 集群的状态，请执行以下操作：
- en: '[PRE11]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The Kubernetes cluster created with Minikube utilizes resources of the host
    machine, so you need to make sure your host has the resources available. More
    importantly, when you are done, do not forget to stop it with `minikube stop`
    to release the system resources.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Minikube 创建的 Kubernetes 集群利用主机机器的资源，因此在完成后，请不要忘记使用 `minikube stop` 停止它，以释放系统资源。
- en: Discussion
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'The Minikube CLI offers commands that make your life easier. The CLI has built-in
    help that you can use to discover the subcommands on your own—​here’s a snippet:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube CLI 提供了一些命令，可以让您的生活更轻松。CLI 提供了内置帮助，您可以使用它自行发现子命令——以下是一小部分：
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Aside from `start`, `stop`, and `delete`, you should become familiar with the
    `ip`, `ssh`, `tunnel`, `dashboard`, and `docker-env` commands.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 `start`、`stop` 和 `delete`，您还应该熟悉 `ip`、`ssh`、`tunnel`、`dashboard` 和 `docker-env`
    命令。
- en: Tip
  id: totrans-61
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: If for any reason your Minikube becomes unstable or you want to start fresh,
    you can remove it with `minikube stop` and `minikube delete`. Then `minikube start`
    will give you a fresh installation.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于任何原因你的Minikube变得不稳定，或者你想重新开始，你可以使用`minikube stop`和`minikube delete`来删除它。然后`minikube
    start`将给你一个新的安装。
- en: 1.4 Starting Your First Application on Minikube
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.4 在Minikube上启动你的第一个应用程序
- en: Problem
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You’ve started Minikube (see [Recipe 1.3](#minikube_manage)), and now you want
    to launch your first application on Kubernetes.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经启动了Minikube（参见[Recipe 1.3](#minikube_manage)），现在你想在Kubernetes上启动你的第一个应用程序。
- en: Solution
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'As an example, you can start the [Ghost](https://ghost.org) microblogging platform
    on Minikube using two `kubectl` commands:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以使用两个`kubectl`命令在Minikube上启动[Ghost](https://ghost.org)微博平台：
- en: '[PRE13]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Monitor the pod manually to see when it starts running:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 手动监视Pod，查看其何时开始运行：
- en: '[PRE14]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Now you can use the `minikube service` command to automatically load the application
    service URL in the web browser:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用`minikube service`命令在Web浏览器中自动加载应用程序服务的URL：
- en: '[PRE15]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Discussion
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: The `kubectl run` command is called a *generator*; it is a convenience command
    to create a `Pod` object (see [Recipe 4.4](ch04.html#pod_manifest)). The `kubectl
    expose` command is also a generator, a convenience command to create a `Service`
    object (see [Recipe 5.1](ch05.html#simple_service)) that routes network traffic
    to the containers started by your deployment.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubectl run`命令被称为*生成器*；它是一个便利命令，用于创建`Pod`对象（参见[Recipe 4.4](ch04.html#pod_manifest)）。`kubectl
    expose`命令也是一个生成器，一个便利命令，用于创建`Service`对象（参见[Recipe 5.1](ch05.html#simple_service)），将网络流量路由到你的部署启动的容器。'
- en: 'When you do not need the application anymore, you can remove the `Pod` to release
    the cluster resources:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当你不再需要该应用程序时，可以删除`Pod`以释放集群资源：
- en: '[PRE16]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Additionally, you should delete the `ghost` service that was created by the
    `kubectl expose` command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，你应该删除由`kubectl expose`命令创建的`ghost`服务：
- en: '[PRE17]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 1.5 Using kind to Run Kubernetes Locally
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.5 使用kind在本地运行Kubernetes
- en: Problem
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: '[kind](https://kind.sigs.k8s.io) is an alternative way to run Kubernetes locally.
    It was originally designed for testing Kubernetes but is now also often used as
    a way to try Kubernetes-native solutions on a laptop with minimal fuss. You want
    to use kind locally for testing and developing your Kubernetes application.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '[kind](https://kind.sigs.k8s.io)是一种在本地运行Kubernetes的替代方法。它最初设计用于测试Kubernetes，但现在也经常用于在笔记本上轻松尝试基于Kubernetes的解决方案。你可以在本地使用kind来测试和开发你的Kubernetes应用程序。'
- en: Solution
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'The minimum requirements for using kind are Go and a Docker runtime. kind is
    [easy to install](https://oreil.ly/1MxZo) on any platform, for example using `brew`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用kind的最低要求是Go和一个Docker运行时。kind在任何平台上都很[容易安装](https://oreil.ly/1MxZo)，例如使用`brew`：
- en: '[PRE18]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, creating a cluster is as simple as doing this:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建集群就像这样简单：
- en: '[PRE19]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Deleting it is just as easy:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 删除它同样很容易：
- en: '[PRE20]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Discussion
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Because kind was originally developed for testing Kubernetes, one of its [core
    design principles](https://oreil.ly/jNTNx) is that it should lend itself well
    to automation. You might want to consider using kind if you plan on automatically
    deploying Kubernetes clusters for testing purposes.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 因为kind最初是为了测试Kubernetes而开发的，其[核心设计原则](https://oreil.ly/jNTNx)之一是它应该很好地支持自动化。如果你计划自动部署用于测试目的的Kubernetes集群，你可能考虑使用kind。
- en: See Also
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The official kind [Quick Start guide](https://oreil.ly/aXjcY)
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方的[快速入门指南](https://oreil.ly/aXjcY)
- en: 1.6 Using Kubernetes in Docker Desktop
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.6 在Docker Desktop中使用Kubernetes
- en: Problem
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: Docker Desktop is an offering built on top of Docker Engine that provides a
    number of useful developer tools, including a built-in version of Kubernetes and
    an associated load balancer to route traffic into the cluster. This means you
    can install a single tool and have access to pretty much everything you need to
    get started locally. You want to use Docker Desktop locally for testing and developing
    your Kubernetes application.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Desktop是建立在Docker Engine之上的一个提供多种有用开发者工具的产品，包括内置版本的Kubernetes和一个关联的负载均衡器来将流量路由到集群中。这意味着你可以安装一个单一工具，并且可以访问几乎你需要的所有内容。你可以在本地使用Docker
    Desktop来测试和开发你的Kubernetes应用程序。
- en: Solution
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: '[Install Docker Desktop](https://oreil.ly/HKVaR) and make sure to enable Kubernetes
    during the installation process.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[安装Docker Desktop](https://oreil.ly/HKVaR)并确保在安装过程中启用了Kubernetes。'
- en: You can activate and deactivate Kubernetes from Docker Desktop’s settings panel,
    as shown in [Figure 1-1](#docker_desktop_settings). You might want to do this
    if you’re using Docker Desktop for its Docker Engine but aren’t using Kubernetes,
    as this will save resources on your computer. As shown here, the settings panel
    also shows you which version of Kubernetes is provided by Docker Desktop, which
    can be useful when debugging as certain solutions might have requirements on the
    minimum or maximum version of Kubernetes that they can run on.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 Docker Desktop 的设置面板中激活和停用 Kubernetes，如 [图 1-1](#docker_desktop_settings)
    所示。如果您仅使用 Docker Desktop 的 Docker 引擎而不使用 Kubernetes，可以执行此操作以节省计算机资源。正如所示，设置面板还显示了
    Docker Desktop 提供的 Kubernetes 版本，这在调试时可能很有用，因为某些解决方案可能对可以运行的 Kubernetes 的最低或最高版本有要求。
- en: '![Snapshot of the Docker Desktop Kubernetes settings panel](assets/kcb2_0101.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![Docker Desktop Kubernetes 设置面板快照](assets/kcb2_0101.png)'
- en: Figure 1-1\. Snapshot of the Docker Desktop Kubernetes settings panel
  id: totrans-100
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-1\. Docker Desktop Kubernetes 设置面板快照
- en: It is worth noting that the version of Kubernetes embedded into Docker Desktop
    lags behind the latest Kubernetes release by a few versions, whereas Minikube
    tends to be more up to date.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，嵌入 Docker Desktop 的 Kubernetes 版本落后于最新版本几个版本，而 Minikube 更倾向于保持更新。
- en: As shown in [Figure 1-2](#docker_desktop_context), the Docker Desktop toolbar
    menu lets you easily switch `kubectl` contexts between different local clusters,
    which means you can have Minikube and Docker Desktop’s Kubernetes running at the
    same time but switch between them (not that we recommend doing this). For information
    on how to do this directly from `kubectl`, see [Recipe 1.7](#switch_contexts).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如 [图 1-2](#docker_desktop_context) 所示，Docker Desktop 工具栏菜单允许您轻松在不同的本地集群之间切换
    `kubectl` 上下文，这意味着您可以同时运行 Minikube 和 Docker Desktop 的 Kubernetes，但可以在它们之间切换（尽管我们不建议这样做）。有关如何直接从
    `kubectl` 执行此操作的信息，请参阅[配方 1.7](#switch_contexts)。
- en: '![Snapshot of the Docker Desktop context switcher for kubectl](assets/kcb2_0102.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![kubectl 的 Docker Desktop 上下文切换器快照](assets/kcb2_0102.png)'
- en: Figure 1-2\. Snapshot of the Docker Desktop context switcher for `kubectl`
  id: totrans-104
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-2\. Docker Desktop 的 `kubectl` 上下文切换器快照
- en: Discussion
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Although it is a quick and easy way to get started with Kubernetes, be aware
    that Docker Desktop is not open source, and that the free version is restricted
    for use by individuals, small businesses, students and educators, and non-commercial
    open source developers.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这是一个快速且简便的开始 Kubernetes 的方式，但请注意 Docker Desktop 不是开源的，而且免费版本仅限个人、小型企业、学生和教育工作者以及非商业开源开发者使用。
- en: Docker Engine, on the other hand, which can be used to run Minikube, has an
    Apache 2.0 license, as does Minikube itself.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，用于运行 Minikube 的 Docker 引擎具有 Apache 2.0 许可证，Minikube 本身也是如此。
- en: 1.7 Switching kubectl Contexts
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.7 切换 kubectl 上下文
- en: Problem
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: '`kubectl` is always configured to speak to a given Kubernetes cluster by default,
    and this configuration is part of something called the *context*. If you’ve forgotten
    which cluster `kubectl` is set to, want to switch between clusters, or want to
    change other context-related parameters, then this recipe is for you.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`kubectl` 总是配置为与特定的 Kubernetes 集群通信，这个配置是 *上下文* 的一部分。如果您忘记了 `kubectl`
    设置为哪个集群，想要在不同集群之间切换，或者想要更改其他与上下文相关的参数，则可以使用本文提供的方法。
- en: Solution
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'To view the contexts available to `kubectl`, use the `kubectl config get-contexts`
    command:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看 `kubectl` 可用的上下文，请使用 `kubectl config get-contexts` 命令：
- en: '[PRE21]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: As you can see from the output, in this case there are three Kubernetes clusters
    available to `kubectl`, and the current context is set to speak to the `minikube`
    cluster.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您从输出中看到的，在这种情况下，`kubectl` 可用于三个 Kubernetes 集群，并且当前上下文设置为与 `minikube` 集群通信。
- en: 'To switch to the `kind-kind` cluster, execute the following command:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 要切换到 `kind-kind` 集群，请执行以下命令：
- en: '[PRE22]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Discussion
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: If you want to use your local `kubectl` to access a remote cluster, you can
    do so by editing the kubeconfig file. Learn more about the kubeconfig file in
    the [official documentation](https://oreil.ly/jMZ3h).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望使用本地的 `kubectl` 访问远程集群，可以通过编辑 kubeconfig 文件来实现。在[官方文档](https://oreil.ly/jMZ3h)中了解更多关于
    kubeconfig 文件的信息。
- en: 1.8 Switching Contexts and Namespaces Using kubectx and kubens
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1.8 使用 kubectx 和 kubens 切换上下文和命名空间
- en: Problem
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to find an easier way to switch contexts (i.e., clusters) and namespaces
    with `kubectl`, as the commands for switching contexts are long and quite hard
    to remember.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望找到一个更简单的方法来切换上下文（即集群）和命名空间，因为切换上下文的命令很长，而且很难记住。
- en: Solution
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: '`kubectx` and `kubens` are a couple of popular open source scripts that make
    it much easier to switch contexts for `kubectl` and to switch namespaces so that
    you don’t have to explicitly set the namespace name for every command.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubectx` 和 `kubens` 是一对流行的开源脚本，可以大大简化 `kubectl` 切换上下文和切换命名空间的操作，这样你就不必为每个命令显式设置命名空间名字。'
- en: 'There are plenty of available installation options. If you’re able to use `brew`,
    then you can try this:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多可用的安装选项。如果你能使用 `brew`，那么你可以尝试这样做：
- en: '[PRE23]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can then easily list the available `kubectl` contexts like so:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然后您可以像这样轻松列出可用的 `kubectl` 上下文：
- en: '[PRE24]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'and switch contexts just as easily:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 并且同样简单地切换上下文：
- en: '[PRE25]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Similarly, `kubens` lets you easily list and switch namespaces:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，`kubens` 允许您轻松列出和切换命名空间：
- en: '[PRE26]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'All commands from then onward will be performed in the context of the chosen
    namespace:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 从那时起，所有的命令都将在所选命名空间的上下文中执行：
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: See Also
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: The [repository for the `kubectl` and `kubens` tools](https://oreil.ly/QBH3N)
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[kubectl 和 kubens 工具的存储库](https://oreil.ly/QBH3N)'
