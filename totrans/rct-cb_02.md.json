["```\n$ npm install react-router-dom\n```", "```\n$ npm install react-media\n```", "```\n<Media queries={{\n        small: \"(max-width: 700px)\"\n    }}>\n  ...\n</Media>\n```", "```\n<Media queries={{\n        small: \"(max-width: 700px)\"\n    }}>\n  {\n    size => size.small ? [SMALL SCREEN COMPONENTS] : [BIG SCREEN COMPONENTS]\n  }\n</Media>\n```", "```\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\nimport PeopleContainer from './PeopleContainer'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/people\">\n          <PeopleContainer />\n        </Route>\n        <Link to=\"/people\">People</Link>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n```", "```\n<Media queries={{\n        small: \"(max-width: 700px)\"\n    }}>\n  {\n    size => size.small ? [SMALL SCREEN COMPONENTS]\n        <Switch>\n          <Route path='/people/:id'>\n            <Person/>\n          </Route>\n          <PeopleList/>\n        </Switch>\n        : [BIG SCREEN COMPONENTS]\n  }\n</Media>\n```", "```\n<div style={{display: 'flex'}}>\n  <PeopleList/>\n  <Person/>\n</div>\n```", "```\n<div style={{display: 'flex'}}>\n    <PeopleList/>\n    <Switch>\n        <Route path='/people/:id'>\n            <Person/>\n        </Route>\n        <Redirect to={`/people/${people[0].id}`}/>\n    </Switch>\n</div>\n```", "```\nimport Media from 'react-media'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Person from './Person'\nimport PeopleList from './PeopleList'\nimport people from './people'\n\nconst PeopleContainer = () => {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 700px)',\n      }}\n    >\n      {(size) =>\n        size.small ? (\n          <Switch>\n            <Route path=\"/people/:id\">\n              <Person />\n            </Route>\n            <PeopleList />\n          </Switch>\n        ) : (\n          <div style={{ display: 'flex' }}>\n            <PeopleList />\n            <Switch>\n              <Route path=\"/people/:id\">\n                <Person />\n              </Route>\n              <Redirect to={`/people/${people[0].id}`} />\n            </Switch>\n          </div>\n        )\n      }\n    </Media>\n  )\n}\n\nexport default PeopleContainer\n```", "```\nimport { useState } from 'react'\nimport People from './People'\nimport Offices from './Offices'\n\nimport './About.css'\n\nconst OldAbout = () => {\n  const [tabId, setTabId] = useState('people')\n\n  return (\n    <div className=\"About\">\n      <div className=\"About-tabs\">\n        <div\n          onClick={() => setTabId('people')}\n          className={\n            tabId === 'people' ? 'About-tab active' : 'About-tab'\n          }\n        >\n          People\n        </div>\n        <div\n          onClick={() => setTabId('offices')}\n          className={\n            tabId === 'offices' ? 'About-tab active' : 'About-tab'\n          }\n        >\n          Offices\n        </div>\n      </div>\n      {tabId === 'people' && <People />}\n      {tabId === 'offices' && <Offices />}\n    </div>\n  )\n}\n\nexport default OldAbout\n```", "```\n$ npm install react-router-dom\n```", "```\n<Switch>\n    <Route path=\"/oldabout\">\n        <OldAbout/>\n    </Route>\n    <p>Choose an option</p>\n</Switch>\n```", "```\n<Switch>\n    <Route path=\"/oldabout\">\n        <OldAbout/>\n    </Route>\n    <Route path=\"/about/:tabId?\">\n        <About/>\n    </Route>\n    <p>Choose an option</p>\n</Switch>\n```", "```\n<div onClick={() => setTabId(\"people\")}\n     className={tabId === \"people\" ? \"About-tab active\" : \"About-tab\"}\n>\n    People\n</div>\n<div onClick={() => setTabId(\"offices\")}\n     className={tabId === \"offices\" ? \"About-tab active\" : \"About-tab\"}\n>\n    Offices\n</div>\n```", "```\n<NavLink to=\"/about/people\"\n         className=\"About-tab\"\n         activeClassName=\"active\">\n    People\n</NavLink>\n<NavLink to=\"/about/offices\"\n         className=\"About-tab\"\n         activeClassName=\"active\">\n    Offices\n</NavLink>\n```", "```\n{tabId === \"people\" && <People/>}\n{tabId === \"offices\" && <Offices/>}\n```", "```\n<Switch>\n    <Route path='/about/people'>\n        <People/>\n    </Route>\n    <Route path='/about/offices'>\n        <Offices/>\n    </Route>\n</Switch>\n```", "```\nconst [tabId, setTabId] = useState(\"people\")\n```", "```\n<Switch>\n    <Route path='/about/people'>\n        <People/>\n    </Route>\n    <Route path='/about/offices'>\n        <Offices/>\n    </Route>\n    <Redirect to='/about/people'/>\n</Switch>\n```", "```\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom'\nimport './About.css'\nimport People from './People'\nimport Offices from './Offices'\n\nconst About = () => (\n  <div className=\"About\">\n    <div className=\"About-tabs\">\n      <NavLink\n        to=\"/about/people\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        People\n      </NavLink>\n      <NavLink\n        to=\"/about/offices\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        Offices\n      </NavLink>\n    </div>\n    <Switch>\n      <Route path=\"/about/people\">\n        <People />\n      </Route>\n      <Route path=\"/about/offices\">\n        <Offices />\n      </Route>\n      <Redirect to=\"/about/people\" />\n    </Switch>\n  </div>\n)\n\nexport default About\n```", "```\ndescribe('About component', () => {\n  it('should show people', () => {\n    render(<About />)\n    expect(screen.getByText('Kip Russel')).toBeInTheDocument()\n  })\n})\n```", "```\nconsole.error node_modules/jsdom/lib/jsdom/virtual-console.js:29\n    Error: Uncaught [Error: Invariant failed: You should not use <NavLink>\n        outside a <Router>]\n```", "```\ndescribe('About component', () => {\n  it('should show people', () => {\n    render(\n      <MemoryRouter>\n        <About />\n      </MemoryRouter>\n    )\n\n    expect(screen.getByText('Kip Russel')).toBeInTheDocument()\n  })\n})\n```", "```\ndescribe('About component', () => {\n  it('should show offices if in route', () => {\n    render(\n      <MemoryRouter initialEntries={[{ pathname: '/about/offices' }]}>\n        <About />\n      </MemoryRouter>\n    )\n\n    expect(screen.getByText('South Dakota')).toBeInTheDocument()\n  })\n})\n```", "```\nnpm install react-router-dom\n```", "```\nimport React, { useEffect, useState } from 'react'\n\nconst Important = () => {\n  const initialValue = 'Initial value'\n\n  const [data, setData] = useState(initialValue)\n  const [dirty, setDirty] = useState(false)\n\n  useEffect(() => {\n    if (data !== initialValue) {\n      setDirty(true)\n    }\n  }, [data, initialValue])\n\n  return (\n    <div className=\"Important\">\n      <textarea\n        onChange={(evt) => setData(evt.target.value)}\n        cols={40}\n        rows={12}\n      >\n        {data}\n      </textarea>\n      <br />\n      <button onClick={() => setDirty(false)} disabled={!dirty}>\n        Save\n      </button>\n    </div>\n  )\n}\n\nexport default Important\n```", "```\nreturn (\n  <div className=\"Important\">\n    <textarea\n      onChange={(evt) => setData(evt.target.value)}\n      cols={40}\n      rows={12}\n    >\n      {data}\n    </textarea>\n    <br />\n    <button onClick={() => setDirty(false)} disabled={!dirty}>\n      Save\n    </button>\n    <Prompt\n      when={dirty}\n      message={() => 'Do you really want to leave?'}\n    />\n  </div>\n)\n```", "```\n$ npm install '@material-ui/core'\n```", "```\n<div className=\"App\">\n    <BrowserRouter\n        getUserConfirmation={(message, callback) => {\n          // Custom code goes here\n        }}\n    >\n        <Switch>\n            <Route path='/important'>\n                <Important/>\n            </Route>\n        </Switch>\n    </BrowserRouter>\n</div>\n```", "```\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst Alert = ({ open, title, message, onOK, onCancel }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={onCancel}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {message}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={onOK} color=\"primary\" autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default Alert\n```", "```\nconst [confirmOpen, setConfirmOpen] = useState(false)\nconst [confirmMessage, setConfirmMessage] = useState()\nconst [confirmCallback, setConfirmCallback] = useState()\n\nreturn (\n  <div className=\"App\">\n    <BrowserRouter\n      getUserConfirmation={(message, callback) => {\n        setConfirmMessage(message)\n        // Use this setter form because callback is a function\n        setConfirmCallback(() => callback)\n        setConfirmOpen(true)\n      }}\n    >\n  .....\n```", "```\nimport { useState } from 'react'\nimport './App.css'\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\nimport Important from './Important'\nimport Alert from './Alert'\n\nfunction App() {\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const [confirmMessage, setConfirmMessage] = useState()\n  const [confirmCallback, setConfirmCallback] = useState()\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter\n        getUserConfirmation={(message, callback) => {\n          setConfirmMessage(message)\n          // Use this setter form because callback is a function\n          setConfirmCallback(() => callback)\n          setConfirmOpen(true)\n        }}\n      >\n        <Alert\n          open={confirmOpen}\n          title=\"Leave page?\"\n          message={confirmMessage}\n          onOK={() => {\n            confirmCallback(true)\n            setConfirmOpen(false)\n          }}\n          onCancel={() => {\n            confirmCallback(false)\n            setConfirmOpen(false)\n          }}\n        />\n        <Switch>\n          <Route path=\"/important\">\n            <Important />\n          </Route>\n          <div>\n            <h1>Home page</h1>\n            <Link to=\"/important\">Go to important page</Link>\n          </div>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n```", "```\n$ npm install react-router-dom\n$ npm install react-transition-group\n```", "```\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom'\nimport './About.css'\nimport People from './People'\nimport Offices from './Offices'\n\nconst About = () => (\n  <div className=\"About\">\n    <div className=\"About-tabs\">\n      <NavLink\n        to=\"/about/people\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        People\n      </NavLink>\n      <NavLink\n        to=\"/about/offices\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        Offices\n      </NavLink>\n    </div>\n    <Switch>\n      <Route path=\"/about/people\">\n        <People />\n      </Route>\n      <Route path=\"/about/offices\">\n        <Offices />\n      </Route>\n      <Redirect to=\"/about/people\" />\n    </Switch>\n  </div>\n)\n\nexport default About\n```", "```\nconst location = useLocation()\n```", "```\nimport {\n  NavLink,\n  Redirect,\n  Route,\n  Switch,\n  useLocation,\n} from 'react-router-dom'\nimport People from './People'\nimport Offices from './Offices'\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group'\n\nimport './About.css'\nimport './fade.css'\n\nconst About = () => {\n  const location = useLocation()\n\n  return (\n    <div className=\"About\">\n      <div className=\"About-tabs\">\n        <NavLink\n          to=\"/about/people\"\n          className=\"About-tab\"\n          activeClassName=\"active\"\n        >\n          People\n        </NavLink>\n        <NavLink\n          to=\"/about/offices\"\n          className=\"About-tab\"\n          activeClassName=\"active\"\n        >\n          Offices\n        </NavLink>\n      </div>\n      <TransitionGroup className=\"About-tabContent\">\n        <CSSTransition\n          key={location.key}\n          classNames=\"fade\"\n          timeout={500}\n        >\n          <Switch location={location}>\n            <Route path=\"/about/people\">\n              <People />\n            </Route>\n            <Route path=\"/about/offices\">\n              <Offices />\n            </Route>\n            <Redirect to=\"/about/people\" />\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    </div>\n  )\n}\n\nexport default About\n```", "```\n.fade-enter {\n    opacity: 0;\n}\n.fade-enter-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n}\n.fade-exit {\n    opacity: 1;\n}\n.fade-exit-active {\n    opacity: 0;\n    transition: opacity 250ms ease-in;\n}\n```", "```\nimport React from 'react'\nimport './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Public from './Public'\nimport Private1 from './Private1'\nimport Private2 from './Private2'\nimport Home from './Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/private1\">\n            <Private1 />\n          </Route>\n          <Route path=\"/private2\">\n            <Private2 />\n          </Route>\n          <Route exact path=\"/public\">\n            <Public />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n```", "```\nimport React from 'react'\n\nconst SecurityContext = React.createContext({})\n\nexport default SecurityContext\n```", "```\nimport { useState } from 'react'\nimport SecurityContext from './SecurityContext'\n\nconst SecurityProvider = (props) => {\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  return (\n    <SecurityContext.Provider\n      value={{\n        login: (username, password) => {\n          // Note to engineering team:\n          // Maybe make this more secure...\n          if (username === 'fred' && password === 'password') {\n            setLoggedIn(true)\n          }\n        },\n        logout: () => setLoggedIn(false),\n        loggedIn,\n      }}\n    >\n      {props.children}\n    </SecurityContext.Provider>\n  )\n}\n\nexport default SecurityProvider\n```", "```\nimport SecurityContext from './SecurityContext'\nimport { useContext } from 'react'\n\nconst useSecurity = () => useContext(SecurityContext)\n\nexport default useSecurity\n```", "```\nimport Login from './Login'\nimport { Route } from 'react-router-dom'\nimport useSecurity from './useSecurity'\n\nconst SecureRoute = (props) => {\n  const { loggedIn } = useSecurity()\n\n  return (\n    <Route {...props}>{loggedIn ? props.children : <Login />}</Route>\n  )\n}\n\nexport default SecureRoute\n```", "```\nimport './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Public from './Public'\nimport Private1 from './Private1'\nimport Private2 from './Private2'\nimport Home from './Home'\nimport SecurityProvider from './SecurityProvider'\nimport SecureRoute from './SecureRoute'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <SecurityProvider>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <SecureRoute path=\"/private1\">\n              <Private1 />\n            </SecureRoute>\n            <SecureRoute path=\"/private2\">\n              <Private2 />\n            </SecureRoute>\n            <Route exact path=\"/public\">\n              <Public />\n            </Route>\n          </Switch>\n        </SecurityProvider>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n```"]