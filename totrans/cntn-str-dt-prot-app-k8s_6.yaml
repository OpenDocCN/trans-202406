- en: Chapter 5\. Moving to Kubernetes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章。迁移到Kubernetes
- en: In today’s world, consumers and business customers alike demand increasing speed.
    Complex, modern applications must deliver better results more quickly in areas
    like personalization, artificial intelligence, and fraud detection across verticals.
    Centrally managed and human-operated applications are a drain on struggling IT
    teams and provide diminishing returns; traditional application architecture can’t
    keep up with today’s huge data volume, global deployment, and demand for horizontal
    scale.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今世界，消费者和企业客户都要求更快的速度。复杂的现代应用程序在个性化、人工智能和各个行业的欺诈检测等领域必须更快地提供更好的结果。集中管理和人工操作的应用程序对苦苦挣扎的IT团队构成负担，并且提供回报逐渐减少；传统应用架构无法跟上当今巨大的数据量、全球部署需求以及对水平扩展的需求。
- en: 'PaaS and SaaS are paradigms that work best when they are elastic, scaling up
    and down to meet unpredictable demand. Unlike traditional monolithic on-premises
    applications, PaaS and SaaS must scale horizontally, adding physical or virtual
    resources immediately when needed. Because adding physical on-premises servers
    is often a slow process with a long lead time, this means that modern applications
    must be able to run anywhere: in on-premises environments, in cloud environments,
    or in hybrid environments that consist of a combination of the two.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS和SaaS是在面对不可预测需求时效果最佳的范式。与传统的单体式本地应用程序不同，PaaS和SaaS必须进行水平扩展，在需要时立即添加物理或虚拟资源。由于在本地添加物理服务器通常是一个缓慢且时间长的过程，这意味着现代应用程序必须能够在任何地方运行：在本地环境、云环境或二者组合的混合环境中。
- en: The answer that has emerged is to break up applications into microservices running
    in containers. This introduces complexity beyond what IT teams can be asked to
    manage manually, necessitating automated management, provisioning, load balancing,
    and fault resolution. These requirements are essentially the feature list of Kubernetes.
    Kubernetes is a platform that orchestrates collections of containers in a variety
    of environments, making it possible to build cloud native, microservices-based
    apps and run them anywhere. For this reason, Kubernetes has become the dominant
    way that companies deploy applications at scale.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 出现的答案是将应用程序分解为在容器中运行的微服务。这引入了超出IT团队手动管理能力的复杂性，需要自动化管理、配置、负载平衡和故障解决。这些需求本质上构成了Kubernetes的功能列表。Kubernetes是一个平台，能够在各种环境中编排容器集合，使得构建基于云原生、微服务的应用程序并在任何地方运行成为可能。因此，Kubernetes已成为企业大规模部署应用程序的主要方式。
- en: Even when DevOps teams have all the skills they need to run a production Kubernetes
    cluster, data storage remains challenging. Every application and service has its
    own storage needs, metadata, and way of handling state. Every kind of data has
    its own requirements around security, scalability, compliance, and availability.
    If that isn’t enough, the sheer number of applications and data types required
    for the enterprise means exponentially more complexity.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 即使DevOps团队拥有运行生产Kubernetes集群所需的所有技能，数据存储仍然具有挑战性。每个应用程序和服务都有自己的存储需求、元数据以及处理状态的方式。每种数据都有其围绕安全性、可扩展性、合规性和可用性的要求。如果这还不够，企业所需的应用程序和数据类型数量庞大，意味着复杂性呈指数级增加。
- en: Challenges of Kubernetes Adoption
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes采用的挑战
- en: Few enterprises are starting from scratch. A typical enterprise runs large numbers
    of legacy applications originally designed to run on physical servers or VMs.
    While cloud native, containerized applications are the clear path forward, it
    isn’t practical to immediately abandon all the legacy applications that are powering
    the organization.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有企业是从头开始的。典型的企业运行大量最初设计为在物理服务器或虚拟机上运行的遗留应用程序。尽管云原生、容器化应用程序是明确的前进路径，但立即放弃支持组织运行的所有遗留应用程序并不现实。
- en: 'Adopting Kubernetes means investing in cloud native, containerized applications
    while supporting more traditional application architectures. Providing separate
    storage for both types of software is impractical both because of operational
    cost and because it slows down data processing. There are two approaches that
    can help: running containers inside VMs, or running VMs inside containers. An
    advantage of the latter approach is that it allows Kubernetes to manage the VMs
    where traditional applications are running, moving them as needed.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 采用 Kubernetes 意味着投资于云原生、容器化应用程序，同时支持更传统的应用程序架构。为两种软件提供单独的存储既因操作成本高昂又因其减慢数据处理速度而不切实际。有两种方法可以帮助解决问题：在
    VM 内部运行容器，或在容器内部运行 VM。后一种方法的优势在于允许 Kubernetes 管理传统应用程序运行的 VM，并根据需要移动它们。
- en: Persistent storage is paramount for every organization as data volume grows.
    The enterprise requires seamless management of vast quantities of data, with stringent
    needs around data security, high availability, and disaster recovery. Data must
    be available in multiple locations, geographically controllable for compliance,
    and highly performant. Designed originally for stateless processes, Kubernetes
    isn’t natively suited to the data needs of enterprise companies.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个组织来说，持久存储在数据量增长时至关重要。企业需要无缝管理大量数据，且在数据安全性、高可用性和灾难恢复方面具有严格的需求。数据必须在多个位置可用，并且在地理上可控以符合合规要求，并具有高性能。最初设计为无状态进程的
    Kubernetes 并不是企业公司数据需求的本能适配器。
- en: To run applications at scale, the enterprise needs Kubernetes. But to run Kubernetes
    at scale, companies also need strategies to provide an underlying storage layer,
    decoupled from compute containers, which can support the needs of complex, large-scale
    business applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要在规模上运行应用程序，企业需要 Kubernetes。但要在规模上运行 Kubernetes，公司还需要制定策略，提供一个与计算容器解耦的底层存储层，以支持复杂的大规模业务应用程序的需求。
- en: Running Large-Scale Systems on Kubernetes
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Kubernetes 上运行大规模系统
- en: The key to running Kubernetes at scale is the ability to optimize resource allocation
    as demand changes, automatically scaling resources and services up and down as
    needed. Although Kubernetes lets you declaratively automate cluster management
    and compute resources, you still need additional tools to efficiently manage storage.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在规模化运行 Kubernetes 的关键在于能够根据需求优化资源分配，根据需要自动缩放资源和服务。虽然 Kubernetes 允许您声明式地自动化集群管理和计算资源，但仍然需要额外的工具来有效管理存储。
- en: An important factor is to ensure that storage is allocated properly and not
    wasted. Because block storage was not originally designed for use by massive numbers
    of containers, resource efficiency in Kubernetes can be challenging. Out of the
    box, Kubernetes offers a limited number of volumes per host and doesn’t provide
    a wide range of tools for capabilities such as failover, backup, and disaster
    recovery. This often leads to overprovisioning of block storage by a factor of
    two or three, and a resultant decrease in application efficiency.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要因素是确保存储被适当地分配并且不被浪费。因为块存储最初并不是为大量容器使用而设计的，所以在 Kubernetes 中实现资源效率可能具有挑战性。开箱即用，Kubernetes
    每个主机提供的卷数量有限，并且不提供广泛的工具来实现故障转移、备份和灾难恢复等功能。这经常导致块存储的过度配置，通常是两到三倍，并导致应用程序效率降低。
- en: On the public cloud, providers generally limit the number of block devices that
    can be attached to a single VM, leading to another kind of overprovisioning. If
    a VM has enough compute power to serve more containers than the provider allows,
    it becomes necessary at some point to provision an additional VM for storage.
    This drives up compute cost and increases management overhead.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在公共云上，供应商通常限制单个虚拟机可以附加的块设备数量，从而导致另一种过度配置。如果虚拟机的计算能力足以为更多容器提供服务，超出了供应商允许的限制，那么在某些时候就必须为存储预留额外的虚拟机。这会增加计算成本并增加管理开销。
- en: Data portability becomes a more important part of managing storage resources
    at scale. To maximize operational storage efficiency, it must be possible to move
    workloads to the most cost-effective storage. This means the enterprise must be
    able to move data and applications nimbly between environments, across providers,
    or from one team to another. Hyperconverged topology can help reduce cost and
    complexity, making it easier to scale.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理大规模存储资源时，数据可移植性变得更加重要。为了最大化运营存储效率，必须能够将工作负载移动到成本最低的存储中。这意味着企业必须能够在环境之间、提供商之间或从一个团队到另一个团队之间敏捷地移动数据和应用程序。超融合拓扑结构可以帮助降低成本和复杂性，使扩展变得更加容易。
- en: 'Software-defined storage, which abstracts away individual hardware and presents
    all available storage as a single pool, is one important component in running
    Kubernetes efficiently at scale, because it can support traditional applications
    as well as containerized workloads. You still need to make decisions about the
    underlying compute and storage hardware. Just running the compute and storage
    platforms requires a minimum set of resources on every node. Above that floor,
    you must make decisions about how much work each node should be capable of, such
    as:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 软件定义存储将所有可用存储抽象为单一池，是在大规模高效运行Kubernetes中的一个重要组成部分，因为它可以支持传统应用程序和容器化工作负载。您仍然需要就底层计算和存储硬件做出决策。仅仅运行计算和存储平台需要每个节点的最低资源集。在此基础上，您必须做出有关每个节点应具备多少工作能力的决策，例如：
- en: How many apps will run on each node
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个节点将运行多少个应用程序
- en: How many containers each node will support
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个节点将支持多少个容器
- en: How much CPU each container gets
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个容器获得多少CPU
- en: For the same total cluster workload, you must decide whether to run a smaller
    number of more powerful nodes, or a larger number of less powerful nodes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于相同总集群工作负载，您必须决定是运行少量更强大的节点还是更多数量的性能较弱的节点。
- en: Cloud and hybrid environments make these questions easier to answer, because
    they allow you to start small and grow as needed by provisioning more compute
    and storage resources. There is no way to anticipate the needs of every possible
    application and workload. It’s impossible to plan a cluster that will work for
    everyone. By provisioning only what’s needed and scaling as you grow, you can
    continually tailor Kubernetes at scale to meet the needs of the enterprise.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 云和混合环境使得这些问题更容易解决，因为它们允许您从小规模开始，并根据需要提供更多的计算和存储资源。无法预料每种可能应用程序和工作负载的需求。无法为每个人都适用的集群进行规划。通过仅提供所需的内容并随着业务增长进行扩展，您可以持续地调整规模化的Kubernetes以满足企业的需求。
- en: One of the most time-intensive and disruptive aspects of Kubernetes in production
    is storage capacity management. In highly dynamic environments, storage needs
    can be extremely volatile, making storage nearly impossible to manage without
    sophisticated tools and automation. The right storage management solution can
    help you provision storage intelligently to avoid waste while scaling on demand.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes在生产环境中最耗时且破坏性最大的一个方面是存储容量管理。在高度动态的环境中，存储需求可能非常不稳定，使得没有复杂工具和自动化几乎无法管理存储。正确的存储管理解决方案可以帮助您智能地配置存储，避免浪费，同时根据需求进行扩展。
- en: Ultimately, the goal of running large-scale Kubernetes deployments is to serve
    enterprise applications, including PaaS and SaaS. These deployments must meet
    demands for data security, portability, compliance, locality, and availability,
    among others. Kubernetes can’t meet these business-critical needs without help.
    To meet the data needs of the marketplace, you need a coordinated storage layer
    that can manage the reliability and performance of container volumes, providing
    high availability, replication, storage tiering, disaster recovery, backup, and
    the other features that the modern enterprise application demands.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，大规模运行Kubernetes部署的目标是为企业应用提供服务，包括PaaS和SaaS。这些部署必须满足数据安全性、可移植性、合规性、本地性和可用性等需求。没有帮助，Kubernetes无法满足这些业务关键需求。为了满足市场数据需求，您需要一个协调的存储层，可以管理容器卷的可靠性和性能，提供高可用性、复制、存储分层、灾难恢复、备份以及现代企业应用所需的其他功能。
