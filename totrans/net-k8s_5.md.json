["```\nkubectl apply -f database.yaml\nservice/postgres created\nconfigmap/postgres-config created\nstatefulset.apps/postgres created\n```", "```\nkubectl apply -f dnsutils.yaml\n\npod/dnsutils created\n\nkubectl get pods\nNAME       READY   STATUS    RESTARTS   AGE\ndnsutils   1/1     Running   0          9s\n```", "```\nkubectl get pods -o wide\nNAME         READY   STATUS    RESTARTS   AGE   IP           NODE\ndnsutils     1/1     Running   0          15m   10.244.3.2   kind-worker3\npostgres-0   1/1     Running   0          15m   10.244.1.3   kind-worker2\npostgres-1   1/1     Running   0          14m   10.244.2.3   kind-worker\n```", "```\nkubectl get svc postgres\nNAME       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\npostgres   ClusterIP                    <none>        5432/TCP   23m\n```", "```\nkubectl exec dnsutils -- host postgres-0.postgres.default.svc.cluster.local.\npostgres-0.postgres.default.svc.cluster.local has address 10.244.1.3\n\nkubectl exec dnsutils -- host postgres-1.postgres.default.svc.cluster.local.\npostgres-1.postgres.default.svc.cluster.local has address 10.244.2.3\n\nkubectl exec dnsutils -- host postgres\npostgres.default.svc.cluster.local has address 10.105.214.153\n```", "```\napiVersion: v1\nkind: Endpoints\nmetadata:\n  labels:\n    name: demo-endpoints\nsubsets:\n- addresses:\n  - ip: 10.0.0.1\n- notReadyAddresses:\n  - ip: 10.0.0.2\n  ports:\n  - port: 8080\n    protocol: TCP\n```", "```\nkubectl get endpoints clusterip-service\nNAME                ENDPOINTS\nclusterip-service   10.244.1.5:8080,10.244.2.7:8080,10.244.2.8:8080 + 1 more...\n```", "```\n kubectl describe endpoints clusterip-service\nName:         clusterip-service\nNamespace:    default\nLabels:       app=app\nAnnotations:  endpoints.kubernetes.io/last-change-trigger-time:\n2021-01-30T18:51:36Z\nSubsets:\n  Addresses:          10.244.1.5,10.244.2.7,10.244.2.8,10.244.3.9\n  NotReadyAddresses:  <none>\n  Ports:\n    Name     Port  Protocol\n    ----     ----  --------\n    <unset>  8080  TCP\n\nEvents:\n  Type     Reason                  Age   From                 Message\n  ----     ------                  ----  ----                 -------\n```", "```\nkubectl get pods -w\n```", "```\nkubectl get endpoints -w\n```", "```\n kubectl get pods -l app=app -o wide\nNAME                  READY   STATUS   RESTARTS  AGE  IP           NODE\napp-5586fc9d77-7frts  1/1     Running  0         19m  10.244.1.5   kind-worker2\napp-5586fc9d77-mxhgw  1/1     Running  0         19m  10.244.3.9   kind-worker3\napp-5586fc9d77-qpxwk  1/1     Running  0         20m  10.244.2.7   kind-worker\napp-5586fc9d77-tpz8q  1/1     Running  0         19m  10.244.2.8   kind-worker\n```", "```\n kubectl label pod app-5586fc9d77-7frts app=nope --overwrite\npod/app-5586fc9d77-7frts labeled\n```", "```\nkubectl get pods -w\nNAME                   READY   STATUS             RESTARTS   AGE\napp-5586fc9d77-7frts   1/1     Running            0          21m\napp-5586fc9d77-mxhgw   1/1     Running            0          21m\napp-5586fc9d77-qpxwk   1/1     Running            0          22m\napp-5586fc9d77-tpz8q   1/1     Running            0          21m\ndnsutils               1/1     Running            3          3h1m\npostgres-0             1/1     Running            0          3h\npostgres-1             1/1     Running            0          3h\napp-5586fc9d77-7frts   1/1     Running            0          22m\napp-5586fc9d77-7frts   1/1     Running            0          22m\napp-5586fc9d77-6dcg2   0/1     Pending            0          0s\napp-5586fc9d77-6dcg2   0/1     Pending            0          0s\napp-5586fc9d77-6dcg2   0/1     ContainerCreating  0          0s\napp-5586fc9d77-6dcg2   0/1     Running            0          2s\napp-5586fc9d77-6dcg2   1/1     Running            0          7s\n```", "```\nkubectl get pods\nNAME                   READY   STATUS    RESTARTS   AGE\napp-5586fc9d77-6dcg2   1/1     Running   0          4m51s\napp-5586fc9d77-7frts   1/1     Running   0          27m\napp-5586fc9d77-mxhgw   1/1     Running   0          27m\napp-5586fc9d77-qpxwk   1/1     Running   0          28m\napp-5586fc9d77-tpz8q   1/1     Running   0          27m\ndnsutils               1/1     Running   3          3h6m\npostgres-0             1/1     Running   0          3h6m\npostgres-1             1/1     Running   0          3h6m\n```", "```\nkubectl get pods app-5586fc9d77-6dcg2 -o wide\nNAME                  READY  STATUS   RESTARTS  AGE   IP           NODE\napp-5586fc9d77-6dcg2  1/1    Running  0         3m6s  10.244.1.6   kind-worker2\n```", "```\n kubectl describe endpoints clusterip-service\nName:         clusterip-service\nNamespace:    default\nLabels:       app=app\nAnnotations:  endpoints.kubernetes.io/last-change-trigger-time:\n2021-01-30T19:14:23Z\nSubsets:\n  Addresses:          10.244.1.6,10.244.2.7,10.244.2.8,10.244.3.9\n  NotReadyAddresses:  <none>\n  Ports:\n    Name     Port  Protocol\n    ----     ----  --------\n    <unset>  8080  TCP\n\nEvents:\n  Type     Reason                  Age   From                 Message\n  ----     ------                  ----  ----                 -------\n```", "```\napiVersion: discovery.k8s.io/v1beta1\nkind: EndpointSlice\nmetadata:\n  name: demo-slice-1\n  labels:\n    kubernetes.io/service-name: demo\naddressType: IPv4\nports:\n  - name: http\n    protocol: TCP\n    port: 80\nendpoints:\n  - addresses:\n      - \"10.0.0.1\"\n    conditions:\n      ready: true\n```", "```\nkubectl get endpointslice\nNAME                      ADDRESSTYPE   PORTS   ENDPOINTS\nclusterip-service-l2n9q   IPv4          8080    10.244.2.7,10.244.2.8,10.244.1.5\n+ 1 more...\n```", "```\nkubectl describe endpointslice clusterip-service-l2n9q\nName:         clusterip-service-l2n9q\nNamespace:    default\nLabels:\nendpointslice.kubernetes.io/managed-by=endpointslice-controller.k8s.io\nkubernetes.io/service-name=clusterip-service\nAnnotations:  endpoints.kubernetes.io/last-change-trigger-time:\n2021-01-30T18:51:36Z\nAddressType:  IPv4\nPorts:\n  Name     Port  Protocol\n  ----     ----  --------\n  <unset>  8080  TCP\nEndpoints:\n  - Addresses:  10.244.2.7\n    Conditions:\n      Ready:    true\n    Hostname:   <unset>\n    TargetRef:  Pod/app-5586fc9d77-qpxwk\n    Topology:   kubernetes.io/hostname=kind-worker\n  - Addresses:  10.244.2.8\n    Conditions:\n      Ready:    true\n    Hostname:   <unset>\n    TargetRef:  Pod/app-5586fc9d77-tpz8q\n    Topology:   kubernetes.io/hostname=kind-worker\n  - Addresses:  10.244.1.5\n    Conditions:\n      Ready:    true\n    Hostname:   <unset>\n    TargetRef:  Pod/app-5586fc9d77-7frts\n    Topology:   kubernetes.io/hostname=kind-worker2\n  - Addresses:  10.244.3.9\n    Conditions:\n      Ready:    true\n    Hostname:   <unset>\n    TargetRef:  Pod/app-5586fc9d77-mxhgw\n    Topology:   kubernetes.io/hostname=kind-worker3\nEvents:         <none>\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo-service\nspec:\n  selector:\n    app: demo\n```", "```\n kubectl apply -f web.yaml\ndeployment.apps/app created\n\nkubectl get pods -o wide\nNAME                  READY  STATUS    RESTARTS  AGE  IP           NODE\napp-9cc7d9df8-ffsm6   1/1    Running   0         49s  10.244.1.4   kind-worker2\ndnsutils              1/1    Running   0         49m  10.244.3.2   kind-worker3\npostgres-0            1/1    Running   0         48m  10.244.1.3   kind-worker2\npostgres-1            1/1    Running   0         48m  10.244.2.3   kind-worker\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo-service\nspec:\n  type: NodePort\n  selector:\n    app: demo\n  ports:\n    - port: 80\n      targetPort: 80\n      nodePort: 30000\n```", "```\n kubectl scale deployment app --replicas 4\ndeployment.apps/app scaled\n\n kubectl get pods -l app=app -o wide\nNAME                  READY   STATUS      IP           NODE\napp-9cc7d9df8-9d5t8   1/1     Running     10.244.2.4   kind-worker\napp-9cc7d9df8-ffsm6   1/1     Running     10.244.1.4   kind-worker2\napp-9cc7d9df8-srxk5   1/1     Running     10.244.3.4   kind-worker3\napp-9cc7d9df8-zrnvb   1/1     Running     10.244.3.5   kind-worker3\n```", "```\n kubectl get pods -o wide -l app=app\nNAME                   READY   STATUS     IP           NODE\napp-5586fc9d77-7frts   1/1     Running    10.244.1.5   kind-worker2\napp-5586fc9d77-mxhgw   1/1     Running    10.244.3.9   kind-worker3\napp-5586fc9d77-qpxwk   1/1     Running    10.244.2.7   kind-worker\napp-5586fc9d77-tpz8q   1/1     Running    10.244.2.8   kind-worker\n```", "```\nkubectl apply -f services-nodeport.yaml\nservice/nodeport-service created\n\nkubectl describe svc nodeport-service\nName:                     nodeport-service\nNamespace:                default\nLabels:                   <none>\nAnnotations:              Selector:  app=app\nType:                     NodePort\nIP:                       10.101.85.57\nPort:                     echo 8080/TCP\nTargetPort:               8080/TCP\nNodePort:                 echo 30040/TCP\nEndpoints:                10.244.1.5:8080,10.244.2.7:8080,10.244.2.8:8080\n+ 1 more...\nSession Affinity:         None\nExternal Traffic Policy:  Cluster\nEvents:                   <none>\n```", "```\nkubectl get nodes -o wide\nNAME                 STATUS   ROLES   INTERNAL-IP OS-IMAGE\nkind-control-plane   Ready    master  172.18.0.5  Ubuntu 19.10\nkind-worker          Ready    <none>  172.18.0.3  Ubuntu 19.10\nkind-worker2         Ready    <none>  172.18.0.4  Ubuntu 19.10\nkind-worker3         Ready    <none>  172.18.0.2  Ubuntu 19.10\n```", "```\nkubectl exec -it dnsutils -- wget -q -O-  172.18.0.5:30040/host\nNODE: kind-worker2, POD IP:10.244.1.5\n\nkubectl exec -it dnsutils -- wget -q -O-  172.18.0.3:30040/host\nNODE: kind-worker, POD IP:10.244.2.8\n\nkubectl exec -it dnsutils -- wget -q -O-  172.18.0.4:30040/host\nNODE: kind-worker2, POD IP:10.244.1.5\n```", "```\nkubectl apply -f service-clusterip.yaml\nservice/clusterip-service created\n\nkubectl describe svc clusterip-service\nName:              clusterip-service\nNamespace:         default\nLabels:            app=app\nAnnotations:       Selector:  app=app\nType:              ClusterIP\nIP:                10.98.252.195\nPort:              <unset>  80/TCP\nTargetPort:        8080/TCP\nEndpoints:         <none>\nSession Affinity:  None\nEvents:            <none>\n```", "```\nkubectl exec dnsutils -- host clusterip-service\nclusterip-service.default.svc.cluster.local has address 10.98.252.195\n```", "```\nkubectl exec dnsutils -- wget -q -O- clusterip-service/host\nNODE: kind-worker2, POD IP:10.244.1.4\n\nkubectl exec dnsutils -- wget -q -O- 10.98.252.195/host\nNODE: kind-worker2, POD IP:10.244.1.4\n\nkubectl exec dnsutils -- wget -q -O- 10.244.1.4:8080/host\nNODE: kind-worker2, POD IP:10.244.1.4\n```", "```\nkubectl get pods -o wide --field-selector spec.nodeName=kind-worker2 -l app=app\nNAME                  READY   STATUS    RESTARTS   AGE     IP           NODE\napp-9cc7d9df8-ffsm6   1/1     Running   0          7m23s   10.244.1.4   kind-worker2\n\n```", "```\n\ndocker ps\nCONTAINER ID  COMMAND                  PORTS                      NAMES\ndf6df0736958  \"/usr/local/bin/entr…\"                               kind-worker2\ne242f11d2d00  \"/usr/local/bin/entr…\"                               kind-worker\na76b32f37c0e  \"/usr/local/bin/entr…\"                               kind-worker3\n07ccb63d870f  \"/usr/local/bin/entr…\"   0.0.0.0:80->80/tcp,         kind-control-plane\n                                       0.0.0.0:443->443/tcp,\n                                       127.0.0.1:52321->6443/tcp\n\n```", "```\nkubectl exec app-9cc7d9df8-ffsm6 ip r\ndefault via 10.244.1.1 dev eth0\n10.244.1.0/24 via 10.244.1.1 dev eth0 src 10.244.1.4\n10.244.1.1 dev eth0 scope link src 10.244.1.4\n```", "```\nkubectl exec app-9cc7d9df8-ffsm6 ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default\nqlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: tunl0@NONE: <NOARP> mtu 1480 qdisc noop state DOWN\ngroup default qlen 1000\n    link/ipip 0.0.0.0 brd 0.0.0.0\n3: ip6tnl0@NONE: <NOARP> mtu 1452 qdisc noop state DOWN group default qlen 1000\n    link/tunnel6 :: brd ::\n5: eth0@if5: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP\ngroup default\n    link/ether 3e:57:42:6e:cd:45 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 10.244.1.4/24 brd 10.244.1.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::3c57:42ff:fe6e:cd45/64 scope link\n       valid_lft forever preferred_lft forever\n\n```", "```\n docker exec -it kind-worker2 ip a\n<trimmerd>\n5: veth45d1f3e8@if5: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue\nstate UP group default\n    link/ether 3e:39:16:38:3f:23 brd <>\n    link-netns cni-ec37f6e4-a1b5-9bc9-b324-59d612edb4d4\n    inet 10.244.1.1/32 brd 10.244.1.1 scope global veth45d1f3e8\n       valid_lft forever preferred_lft forever\n```", "```\ndocker exec -it kind-worker2 /usr/sbin/ip netns list\ncni-ec37f6e4-a1b5-9bc9-b324-59d612edb4d4 (id: 2)\ncni-c18c44cb-6c3e-c48d-b783-e7850d40e01c (id: 1)\n```", "```\n docker exec -it kind-worker2 /usr/sbin/ip netns pid\n cni-ec37f6e4-a1b5-9bc9-b324-59d612edb4d4\n4687\n4737\n```", "```\ndocker exec -it kind-worker2 ps aux | grep 4687\nroot      4687  0.0  0.0    968     4 ?        Ss   17:00   0:00 /pause\n\ndocker exec -it kind-worker2 ps aux | grep 4737\nroot      4737  0.0  0.0 708376  6368 ?        Ssl  17:00   0:00 /opt/web-server\n```", "```\ndocker exec -it kind-worker2 iptables -L\nChain INPUT (policy ACCEPT)\ntarget                  prot opt source destination\n/* kubernetes service portals */\nKUBE-SERVICES           all  --  anywhere   anywhere    ctstate NEW\n/* kubernetes externally-visible service portals */\nKUBE-EXTERNAL-SERVICES  all  --  anywhere   anywhere    ctstate NEW\nKUBE-FIREWALL           all  --  anywhere   anywhere\n\nChain FORWARD (policy ACCEPT)\ntarget        prot opt source destination\n/* kubernetes forwarding rules */\nKUBE-FORWARD  all  --  anywhere   anywhere\n/* kubernetes service portals */\nKUBE-SERVICES all  --  anywhere   anywhere             ctstate NEW\n\nChain OUTPUT (policy ACCEPT)\ntarget          prot opt source destination\n/* kubernetes service portals */\nKUBE-SERVICES   all  --  anywhere             anywhere             ctstate NEW\nKUBE-FIREWALL   all  --  anywhere             anywhere\n\nChain KUBE-EXTERNAL-SERVICES (1 references)\ntarget     prot opt source destination\n\nChain KUBE-FIREWALL (2 references)\ntarget     prot opt source destination\n/* kubernetes firewall for dropping marked packets */\nDROP       all  --  anywhere  anywhere   mark match 0x8000/0x8000\n\nChain KUBE-FORWARD (1 references)\ntarget  prot opt source destination\nDROP    all  --  anywhere  anywhere    ctstate INVALID\n/*kubernetes forwarding rules*/\nACCEPT  all  --  anywhere  anywhere     mark match 0x4000/0x4000\n/*kubernetes forwarding conntrack pod source rule*/\nACCEPT  all  --  anywhere  anywhere     ctstate RELATED,ESTABLISHED\n/*kubernetes forwarding conntrack pod destination rule*/\nACCEPT  all  --  anywhere  anywhere     ctstate RELATED,ESTABLISHED\n\nChain KUBE-KUBELET-CANARY (0 references)\ntarget     prot opt source destination\n\nChain KUBE-PROXY-CANARY (0 references)\ntarget     prot opt source destination\n\nChain KUBE-SERVICES (3 references)\ntarget     prot opt source destination\n```", "```\nkubectl get svc clusterip-service\nNAME                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nclusterip-service   ClusterIP   10.98.252.195    <none>        80/TCP     57m\n```", "```\ndocker exec -it  kind-worker2 iptables -L -t nat | grep 10.98.252.195\n/* default/clusterip-service: cluster IP */\nKUBE-MARK-MASQ  tcp  -- !10.244.0.0/16        10.98.252.195 tcp dpt:80\n/* default/clusterip-service: cluster IP */\nKUBE-SVC-V7R3EVKW3DT43QQM  tcp  --  anywhere  10.98.252.195 tcp dpt:80\n```", "```\ndocker exec -it  kind-worker2 iptables -t nat -L KUBE-SVC-V7R3EVKW3DT43QQM\nChain KUBE-SVC-V7R3EVKW3DT43QQM (1 references)\ntarget     prot opt source destination\n/* default/clusterip-service: */\nKUBE-SEP-THJR2P3Q4C2QAEPT  all  --  anywhere             anywhere\n```", "```\ndocker exec -it kind-worker2 iptables -L KUBE-SEP-THJR2P3Q4C2QAEPT -t nat\nChain KUBE-SEP-THJR2P3Q4C2QAEPT (1 references)\ntarget          prot opt source destination\n/* default/clusterip-service: */\nKUBE-MARK-MASQ  all  --  10.244.1.4      anywhere\n/* default/clusterip-service: */\nDNAT            tcp  --  anywhere        anywhere    tcp to:10.244.1.4:8080\n```", "```\nkubectl get ep clusterip-service\nNAME                ENDPOINTS                         AGE\nclusterip-service   10.244.1.4:8080                   62m\n\nkubectl describe ep clusterip-service\nName:         clusterip-service\nNamespace:    default\nLabels:       app=app\nAnnotations:  <none>\nSubsets:\n  Addresses:          10.244.1.4\n  NotReadyAddresses:  <none>\n  Ports:\n    Name     Port  Protocol\n    ----     ----  --------\n    <unset>  8080  TCP\n\nEvents:  <none>\n```", "```\n kubectl scale deployment app --replicas 4\ndeployment.apps/app scaled\n\n kubectl get pods -l app=app -o wide\nNAME                  READY   STATUS      IP           NODE\napp-9cc7d9df8-9d5t8   1/1     Running     10.244.2.4   kind-worker\napp-9cc7d9df8-ffsm6   1/1     Running     10.244.1.4   kind-worker2\napp-9cc7d9df8-srxk5   1/1     Running     10.244.3.4   kind-worker3\napp-9cc7d9df8-zrnvb   1/1     Running     10.244.3.5   kind-worker3\n```", "```\nkubectl apply -f service-headless.yml\nservice/headless-service created\n```", "```\nkubectl exec dnsutils -- host -v -t a headless-service\nTrying \"headless-service.default.svc.cluster.local\"\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 45294\n;; flags: qr aa rd; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;headless-service.default.svc.cluster.local. IN A\n\n;; ANSWER SECTION:\nheadless-service.default.svc.cluster.local. 30 IN A 10.244.2.4\nheadless-service.default.svc.cluster.local. 30 IN A 10.244.3.5\nheadless-service.default.svc.cluster.local. 30 IN A 10.244.1.4\nheadless-service.default.svc.cluster.local. 30 IN A 10.244.3.4\n\nReceived 292 bytes from 10.96.0.10#53 in 0 ms\n```", "```\n kubectl describe endpoints headless-service\nName:         headless-service\nNamespace:    default\nLabels:       service.kubernetes.io/headless\nAnnotations:  endpoints.kubernetes.io/last-change-trigger-time:\n2021-01-30T18:16:09Z\nSubsets:\n  Addresses:          10.244.1.4,10.244.2.4,10.244.3.4,10.244.3.5\n  NotReadyAddresses:  <none>\n  Ports:\n    Name     Port  Protocol\n    ----     ----  --------\n    <unset>  8080  TCP\n\nEvents:  <none>\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: ext-service\nspec:\n  type: ExternalName\n  externalName: database.mycompany.com\n```", "```\n kubectl exec -it dnsutils -- host -v -t a github.com\nTrying \"github.com.default.svc.cluster.local\"\nTrying \"github.com.svc.cluster.local\"\nTrying \"github.com.cluster.local\"\nTrying \"github.com\"\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 55908\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;github.com.                    IN      A\n\n;; ANSWER SECTION:\ngithub.com.             30      IN      A       140.82.112.3\n\nReceived 54 bytes from 10.96.0.10#53 in 18 ms\n```", "```\nkubectl apply -f service-external.yml\nservice/external-service created\n```", "```\nkubectl exec -it dnsutils -- host -v -t a external-service\nTrying \"external-service.default.svc.cluster.local\"\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 11252\n;; flags: qr aa rd; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;external-service.default.svc.cluster.local. IN A\n\n;; ANSWER SECTION:\nexternal-service.default.svc.cluster.local. 24 IN CNAME github.com.\ngithub.com.             24      IN      A       140.82.112.3\n\nReceived 152 bytes from 10.96.0.10#53 in 0 ms\n```", "```\nkubectl exec -it dnsutils -- host -v -t cname external-service\nTrying \"external-service.default.svc.cluster.local\"\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 36874\n;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n\n;; QUESTION SECTION:\n;external-service.default.svc.cluster.local. IN CNAME\n\n;; ANSWER SECTION:\nexternal-service.default.svc.cluster.local. 30 IN CNAME github.com.\n\nReceived 126 bytes from 10.96.0.10#53 in 0 ms\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo-service\nspec:\n  selector:\n    app: demo\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n  clusterIP: 10.0.5.1\n  type: LoadBalancer\n```", "```\nkubectl apply -f mlb-ns.yaml\nnamespace/metallb-system created\n```", "```\nkubectl create secret generic -n metallb-system memberlist\n--from-literal=secretkey=\"$(openssl rand -base64 128)\"\nsecret/memberlist created\n```", "```\n kubectl apply -f ./metallb.yaml\npodsecuritypolicy.policy/controller created\npodsecuritypolicy.policy/speaker created\nserviceaccount/controller created\nserviceaccount/speaker created\nclusterrole.rbac.authorization.k8s.io/metallb-system:controller created\nclusterrole.rbac.authorization.k8s.io/metallb-system:speaker created\nrole.rbac.authorization.k8s.io/config-watcher created\nrole.rbac.authorization.k8s.io/pod-lister created\nclusterrolebinding.rbac.authorization.k8s.io/metallb-system:controller created\nclusterrolebinding.rbac.authorization.k8s.io/metallb-system:speaker created\nrolebinding.rbac.authorization.k8s.io/config-watcher created\nrolebinding.rbac.authorization.k8s.io/pod-lister created\ndaemonset.apps/speaker created\ndeployment.apps/controller created\n```", "```\nkubectl get pods -n metallb-system --watch\nNAME                          READY   STATUS              RESTARTS   AGE\ncontroller-5df88bd85d-mvgqn   0/1     ContainerCreating   0          10s\nspeaker-5knqb                 1/1     Running             0          10s\nspeaker-k79c9                 1/1     Running             0          10s\nspeaker-pfs2p                 1/1     Running             0          10s\nspeaker-sl7fd                 1/1     Running             0          10s\ncontroller-5df88bd85d-mvgqn   1/1     Running             0          12s\n```", "```\ndocker network inspect -f '{{.IPAM.Config}}' kind\n[{172.18.0.0/16  172.18.0.1 map[]} {fc00:f853:ccd:e793::/64  fc00:f853:ccd:e793::1 map[]}]\n\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - 172.18.255.200-172.18.255.250\n```", "```\nkubectl apply -f ./metallb-configmap.yaml\n```", "```\nkubectl apply -f services-loadbalancer.yaml\nservice/loadbalancer-service created\n```", "```\nkubectl scale deployment app --replicas 10\n\n kubectl get pods -o wide\nNAME                  READY  STATUS    RESTARTS  AGE   IP           NODE\napp-7bdb9ffd6c-b5x7m  2/2    Running   0         26s   10.244.3.15  kind-worker\napp-7bdb9ffd6c-bqtf8  2/2    Running   0         26s   10.244.2.13  kind-worker2\napp-7bdb9ffd6c-fb9sf  2/2    Running   0         26s   10.244.3.14  kind-worker\napp-7bdb9ffd6c-hrt7b  2/2    Running   0         26s   10.244.2.7   kind-worker2\napp-7bdb9ffd6c-l2794  2/2    Running   0         26s   10.244.2.9   kind-worker2\napp-7bdb9ffd6c-l4cfx  2/2    Running   0         26s   10.244.3.11  kind-worker2\napp-7bdb9ffd6c-rr4kn  2/2    Running   0         23m   10.244.3.10  kind-worker\napp-7bdb9ffd6c-s4k92  2/2    Running   0         26s   10.244.3.13  kind-worker\napp-7bdb9ffd6c-shmdt  2/2    Running   0         26s   10.244.1.12  kind-worker3\napp-7bdb9ffd6c-v87f9  2/2    Running   0         26s   10.244.1.11  kind-worker3\napp2-658bcd97bd-4n888 1/1    Running   0         35m   10.244.2.6   kind-worker3\napp2-658bcd97bd-mnpkp 1/1    Running   0         35m   10.244.3.7   kind-worker\napp2-658bcd97bd-w2qkl 1/1    Running   0         35m   10.244.3.8   kind-worker\ndnsutils              1/1    Running   1         75m   10.244.1.2   kind-worker3\npostgres-0            1/1    Running   0         75m   10.244.1.4   kind-worker3\npostgres-1            1/1    Running   0         75m   10.244.3.4   kind-worker\n```", "```\nkubectl get svc loadbalancer-service\nNAME                   TYPE           CLUSTER-IP     EXTERNAL-IP\nPORT(S)        AGE\nloadbalancer-service   LoadBalancer   10.99.24.220   172.18.255.200\n80:31276/TCP   52s\n\nkubectl get svc/loadbalancer-service -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'\n172.18.255.200\n\n```", "```\ndocker run --network kind -a stdin -a stdout -i -t nicolaka/netshoot\ncurl 172.18.255.200/host\nNODE: kind-worker, POD IP:10.244.2.7\n\ndocker run --network kind -a stdin -a stdout -i -t nicolaka/netshoot\ncurl 172.18.255.200/host\nNODE: kind-worker, POD IP:10.244.2.9\n\ndocker run --network kind -a stdin -a stdout -i -t nicolaka/netshoot\ncurl 172.18.255.200/host\nNODE: kind-worker3, POD IP:10.244.3.11\n\ndocker run --network kind -a stdin -a stdout -i -t nicolaka/netshoot\ncurl 172.18.255.200/host\nNODE: kind-worker2, POD IP:10.244.1.6\n\ndocker run --network kind -a stdin -a stdout -i -t nicolaka/netshoot\ncurl 172.18.255.200/host\nNODE: kind-worker, POD IP:10.244.2.9\n```", "```\n kubectl describe endpoints loadbalancer-service\nName:         loadbalancer-service\nNamespace:    default\nLabels:       app=app\nAnnotations:  endpoints.kubernetes.io/last-change-trigger-time:\n2021-01-30T19:59:57Z\nSubsets:\n  Addresses:\n  10.244.1.6,\n  10.244.1.7,\n  10.244.1.8,\n  10.244.2.10,\n  10.244.2.7,\n  10.244.2.8,\n  10.244.2.9,\n  10.244.3.11,\n  10.244.3.12,\n  10.244.3.9\n  NotReadyAddresses:  <none>\n  Ports:\n    Name          Port  Protocol\n    ----          ----  --------\n    service-port  8080  TCP\n\nEvents:  <none>\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: basic-ingress\nspec:\n  rules:\n  - http:\n      paths:\n      # Send all /demo requests to demo-service.\n      - path: /demo\n        pathType: Prefix\n        backend:\n          service:\n            name: demo-service\n            port:\n              number: 80\n  # Send all other requests to main-service.\n  defaultBackend:\n    service:\n      name: main-service\n      port:\n        number: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: multi-host-ingress\nspec:\n  rules:\n  - host: a.example.com\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/\"\n        backend:\n          service:\n            name: service-a\n            port:\n              number: 80\n  - host: b.example.com\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/\"\n        backend:\n          service:\n            name: service-b\n            port:\n              number: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo-ingress-secure\nspec:\n  tls:\n  - hosts:\n      - https-example.com\n    secretName: demo-tls\n  rules:\n  - host: https-example.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: demo-service\n            port:\n              number: 80\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: demo-tls\ntype: kubernetes.io/tls\ndata:\n  tls.crt: cert, encoded in base64\n  tls.key: key, encoded in base64\n```", "```\nkubectl apply -f ingress.yaml\nnamespace/ingress-nginx created\nserviceaccount/ingress-nginx created\nconfigmap/ingress-nginx-controller created\nclusterrole.rbac.authorization.k8s.io/ingress-nginx created\nclusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created\nrole.rbac.authorization.k8s.io/ingress-nginx created\nrolebinding.rbac.authorization.k8s.io/ingress-nginx created\nservice/ingress-nginx-controller-admission created\nservice/ingress-nginx-controller created\ndeployment.apps/ingress-nginx-controller created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/\ningress-nginx-admission created\nserviceaccount/ingress-nginx-admission created\nclusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created\nclusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created\nrole.rbac.authorization.k8s.io/ingress-nginx-admission created\nrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created\njob.batch/ingress-nginx-admission-create created\njob.batch/ingress-nginx-admission-patch created\n```", "```\nkubectl wait --namespace ingress-nginx \\\n>   --for=condition=ready pod \\\n>   --selector=app.kubernetes.io/component=controller \\\n>   --timeout=90s\npod/ingress-nginx-controller-76b5f89575-zps4k condition met\n```", "```\nkubectl apply -f ingress-rule.yaml\ningress.extensions/ingress-resource created\n\nkubectl get ingress\nNAME               CLASS    HOSTS   ADDRESS   PORTS   AGE\ningress-resource   <none>   *                 80      4s\n```", "```\nkubectl describe ingress\nName:             ingress-resource\nNamespace:        default\nAddress:\nDefault backend:  default-http-backend:80 (<error:\nendpoints \"default-http-backend\" not found>)\nRules:\n  Host        Path  Backends\n  ----        ----  --------\n  *\n              /host  clusterip-service:8080 (\n10.244.1.6:8080,10.244.1.7:8080,10.244.1.8:8080)\nAnnotations:  kubernetes.io/ingress.class: nginx\nEvents:\n  Type    Reason  Age   From                      Message\n  ----    ------  ----  ----                      -------\n  Normal  Sync    17s   nginx-ingress-controller  Scheduled for sync\n```", "```\ncurl localhost/host\nNODE: kind-worker2, POD IP:10.244.1.6\ncurl localhost/healthz\n```", "```\nkubectl apply -f ingress-example-2.yaml\ndeployment.apps/app2 created\nservice/clusterip-service-2 configured\ningress.extensions/ingress-resource-2 configured\n```", "```\ncurl localhost/host\nNODE: kind-worker2, POD IP:10.244.1.6\n\ncurl localhost/data\nDatabase Connected\n```", "```\ncurl -sL https://run.linkerd.io/install | sh\n\nOR\n\nbrew install linkerd\n\nlinkerd version\nClient version: stable-2.9.2\nServer version: unavailable\n```", "```\n linkerd check --pre\nkubernetes-api\n--------------\n√ can initialize the client\n√ can query the Kubernetes API\n\nkubernetes-version\n------------------\n√ is running the minimum Kubernetes API version\n√ is running the minimum kubectl version\n\npre-kubernetes-setup\n--------------------\n√ control plane namespace does not already exist\n√ can create non-namespaced resources\n√ can create ServiceAccounts\n√ can create Services\n√ can create Deployments\n√ can create CronJobs\n√ can create ConfigMaps\n√ can create Secrets\n√ can read Secrets\n√ can read extension-apiserver-authentication configmap\n√ no clock skew detected\n\npre-kubernetes-capability\n-------------------------\n√ has NET_ADMIN capability\n√ has NET_RAW capability\n\nlinkerd-version\n---------------\n√ can determine the latest version\n√ cli is up-to-date\n\nStatus check results are √\n```", "```\nlinkerd install | kubectl apply -f -\nnamespace/linkerd created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-identity created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-identity created\nserviceaccount/linkerd-identity created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-controller created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-controller created\nserviceaccount/linkerd-controller created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-destination created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-destination created\nserviceaccount/linkerd-destination created\nrole.rbac.authorization.k8s.io/linkerd-heartbeat created\nrolebinding.rbac.authorization.k8s.io/linkerd-heartbeat created\nserviceaccount/linkerd-heartbeat created\nrole.rbac.authorization.k8s.io/linkerd-web created\nrolebinding.rbac.authorization.k8s.io/linkerd-web created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-web-check created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-web-check created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-web-admin created\nserviceaccount/linkerd-web created\ncustomresourcedefinition.apiextensions.k8s.io/serviceprofiles.linkerd.io created\ncustomresourcedefinition.apiextensions.k8s.io/trafficsplits.split.smi-spec.io\ncreated\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-proxy-injector created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-proxy-injector\ncreated\nserviceaccount/linkerd-proxy-injector created\nsecret/linkerd-proxy-injector-k8s-tls created\nmutatingwebhookconfiguration.admissionregistration.k8s.io\n /linkerd-proxy-injector-webhook-config created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-sp-validator created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-sp-validator\ncreated\nserviceaccount/linkerd-sp-validator created\nsecret/linkerd-sp-validator-k8s-tls created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io\n /linkerd-sp-validator-webhook-config created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-tap created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-tap-admin created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-tap created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-tap-auth-delegator\ncreated\nserviceaccount/linkerd-tap created\nrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-tap-auth-reader created\nsecret/linkerd-tap-k8s-tls created\napiservice.apiregistration.k8s.io/v1alpha1.tap.linkerd.io created\npodsecuritypolicy.policy/linkerd-linkerd-control-plane created\nrole.rbac.authorization.k8s.io/linkerd-psp created\nrolebinding.rbac.authorization.k8s.io/linkerd-psp created\nconfigmap/linkerd-config created\nsecret/linkerd-identity-issuer created\nservice/linkerd-identity created\nservice/linkerd-identity-headless created\ndeployment.apps/linkerd-identity created\nservice/linkerd-controller-api created\ndeployment.apps/linkerd-controller created\nservice/linkerd-dst created\nservice/linkerd-dst-headless created\ndeployment.apps/linkerd-destination created\ncronjob.batch/linkerd-heartbeat created\nservice/linkerd-web created\ndeployment.apps/linkerd-web created\ndeployment.apps/linkerd-proxy-injector created\nservice/linkerd-proxy-injector created\nservice/linkerd-sp-validator created\ndeployment.apps/linkerd-sp-validator created\nservice/linkerd-tap created\ndeployment.apps/linkerd-tap created\nserviceaccount/linkerd-grafana created\nconfigmap/linkerd-grafana-config created\nservice/linkerd-grafana created\ndeployment.apps/linkerd-grafana created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-prometheus created\nclusterrolebinding.rbac.authorization.k8s.io/linkerd-linkerd-prometheus created\nserviceaccount/linkerd-prometheus created\nconfigmap/linkerd-prometheus-config created\nservice/linkerd-prometheus created\ndeployment.apps/linkerd-prometheus created\nsecret/linkerd-config-overrides created\n```", "```\nlinkerd check\nkubernetes-api\n--------------\n√ can initialize the client\n√ can query the Kubernetes API\n\nkubernetes-version\n------------------\n√ is running the minimum Kubernetes API version\n√ is running the minimum kubectl version\n\nlinkerd-existence\n-----------------\n√ 'linkerd-config' config map exists\n√ heartbeat ServiceAccount exists\n√ control plane replica sets are ready\n√ no unschedulable pods\n√ controller pod is running\n√ can initialize the client\n√ can query the control plane API\n\nlinkerd-config\n--------------\n√ control plane Namespace exists\n√ control plane ClusterRoles exist\n√ control plane ClusterRoleBindings exist\n√ control plane ServiceAccounts exist\n√ control plane CustomResourceDefinitions exist\n√ control plane MutatingWebhookConfigurations exist\n√ control plane ValidatingWebhookConfigurations exist\n√ control plane PodSecurityPolicies exist\n\nlinkerd-identity\n----------------\n√ certificate config is valid\n√ trust anchors are using supported crypto algorithm\n√ trust anchors are within their validity period\n√ trust anchors are valid for at least 60 days\n√ issuer cert is using supported crypto algorithm\n√ issuer cert is within its validity period\n√ issuer cert is valid for at least 60 days\n√ issuer cert is issued by the trust anchor\n\nlinkerd-webhooks-and-apisvc-tls\n-------------------------------\n√ tap API server has valid cert\n√ tap API server cert is valid for at least 60 days\n√ proxy-injector webhook has valid cert\n√ proxy-injector cert is valid for at least 60 days\n√ sp-validator webhook has valid cert\n√ sp-validator cert is valid for at least 60 days\n\nlinkerd-api\n-----------\n√ control plane pods are ready\n√ control plane self-check\n√ [kubernetes] control plane can talk to Kubernetes\n√ [prometheus] control plane can talk to Prometheus\n√ tap api service is running\n\nlinkerd-version\n---------------\n√ can determine the latest version\n√ cli is up-to-date\n\ncontrol-plane-version\n---------------------\n√ control plane is up-to-date\n√ control plane and cli versions match\n\nlinkerd-prometheus\n------------------\n√ prometheus add-on service account exists\n√ prometheus add-on config map exists\n√ prometheus pod is running\n\nlinkerd-grafana\n---------------\n√ grafana add-on service account exists\n√ grafana add-on config map exists\n√ grafana pod is running\n\nStatus check results are √\n```", "```\nkubectl -n linkerd get deploy\nNAME                     READY   UP-TO-DATE   AVAILABLE   AGE\nlinkerd-controller       1/1     1            1           3m17s\nlinkerd-destination      1/1     1            1           3m17s\nlinkerd-grafana          1/1     1            1           3m16s\nlinkerd-identity         1/1     1            1           3m17s\nlinkerd-prometheus       1/1     1            1           3m16s\nlinkerd-proxy-injector   1/1     1            1           3m17s\nlinkerd-sp-validator     1/1     1            1           3m17s\nlinkerd-tap              1/1     1            1           3m17s\nlinkerd-web              1/1     1            1           3m17s\n```", "```\nlinkerd viz install | kubectl apply -f -\nlinkerd viz dashboard\nLinkerd dashboard available at:\nhttp://localhost:50750\nGrafana dashboard available at:\nhttp://localhost:50750/grafana\nOpening Linkerd dashboard in the default browser\n```", "```\nkubectl delete -f ingress-example-2.yaml\ndeployment.apps \"app2\" deleted\nservice \"clusterip-service-2\" deleted\ningress.extensions \"ingress-resource-2\" deleted\n\nkubectl delete pods app-5586fc9d77-7frts\npod \"app-5586fc9d77-7frts\" deleted\n\nkubectl delete -f ingress-rule.yaml\ningress.extensions \"ingress-resource\" deleted\n```", "```\ncat web.yaml | linkerd inject - | kubectl apply -f -\n\ndeployment \"app\" injected\n\ndeployment.apps/app configured\n```", "```\nkubectl describe deployment app\nName:                   app\nNamespace:              default\nCreationTimestamp:      Sat, 30 Jan 2021 13:48:47 -0500\nLabels:                 <none>\nAnnotations:            deployment.kubernetes.io/revision: 3\nSelector:               app=app\nReplicas:               1 desired | 1 updated | 1 total | 1 available |\n0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:       app=app\n  Annotations:  linkerd.io/inject: enabled\n  Containers:\n   go-web:\n    Image:      strongjz/go-web:v0.0.6\n    Port:       8080/TCP\n    Host Port:  0/TCP\n    Liveness:   http-get http://:8080/healthz delay=5s timeout=1s period=5s\n    Readiness:  http-get http://:8080/ delay=5s timeout=1s period=5s\n    Environment:\n      MY_NODE_NAME:             (v1:spec.nodeName)\n      MY_POD_NAME:              (v1:metadata.name)\n      MY_POD_NAMESPACE:         (v1:metadata.namespace)\n      MY_POD_IP:                (v1:status.podIP)\n      MY_POD_SERVICE_ACCOUNT:   (v1:spec.serviceAccountName)\n      DB_HOST:                 postgres\n      DB_USER:                 postgres\n      DB_PASSWORD:             mysecretpassword\n      DB_PORT:                 5432\n    Mounts:                    <none>\n  Volumes:                     <none>\nConditions:\n Type           Status  Reason\n ----           ------  ------\n Available      True    MinimumReplicasAvailable\n Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   app-78dfbb4854 (1/1 replicas created)\nEvents:\n Type   Reason            Age   From                   Message\n ----   ------            ----  ----                   -------\n Normal ScalingReplicaSet 4m4s  deployment-controller  Scaled down app-5586fc9d77\n Normal ScalingReplicaSet 4m4s  deployment-controller  Scaled up app-78dfbb4854\n Normal Injected          4m4s  linkerd-proxy-injector Linkerd sidecar injected\n Normal ScalingReplicaSet 3m54s deployment-controller  Scaled app-5586fc9d77\n```", "```\nlinkerd stat deployments -n default\nNAME  MESHED  SUCCESS    RPS LATENCY_P50 LATENCY_P95 LATENCY_P99 TCP_CONN\napp      1/1  100.00% 0.4rps         1ms         1ms         1ms              1\n```", "```\nkubectl scale deploy app --replicas 10\ndeployment.apps/app scaled\n```", "```\nkubectl run tmp-shell --rm -i --tty --image nicolaka/netshoot -- /bin/bash\nIf you don't see a command prompt, try pressing enter.\nbash-5.0#\n```", "```\nbash-5.0#for i in `seq 1 100`;\ndo curl http://clusterip-service/host && sleep 2;\ndone\n```", "```\nlinkerd viz stat deploy\nNAME   MESHED   SUCCESS     RPS  LATENCY_P50  LATENCY_P95  LATENCY_P99  TCP_CONN\napp       1/1   100.00%  0.7rps          1ms          1ms          1ms         3\n```"]