["```\n# bpftool --version\nbpftool v5.1.0\n```", "```\n# bpftool feature\n```", "```\nScanning system configuration...\nbpf() syscall for unprivileged users is enabled\nJIT compiler is enabled\n...\nScanning eBPF program types...\neBPF program_type socket_filter is available\neBPF program_type kprobe is NOT available\n...\nScanning eBPF map types...\neBPF map_type hash is available\neBPF map_type array is available\n```", "```\n# echo 1 > /proc/sys/net/core/bpf_jit_enable\n```", "```\n52: cgroup_skb  tag 7be49e3934a125ba\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 52,53\n53: cgroup_skb  tag 2a142ef67aaad174\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 52,53\n54: cgroup_skb  tag 7be49e3934a125ba\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 54,55\n```", "```\n# bpftool prog show --json id 52 | jq\n{\n  \"id\": 52,\n  \"type\": \"cgroup_skb\",\n  \"tag\": \"7be49e3934a125ba\",\n  \"gpl_compatible\": false,\n  \"loaded_at\": 1553816764,\n  \"uid\": 0,\n  \"bytes_xlated\": 296,\n  \"jited\": true,\n  \"bytes_jited\": 229,\n  \"bytes_memlock\": 4096,\n  \"map_ids\": [\n    52,\n    53\n  ]\n}\n```", "```\n# bpftool prog show --json id 52 | jq -c '[.id, .type, .loaded_at]'\n[52,\"cgroup_skb\",1553816764]\n```", "```\n# bpftool prog dump xlated id 52\n   0: (bf) r6 = r1\n   1: (69) r7 = *(u16 *)(r6 +192)\n   2: (b4) w8 = 0\n   3: (55) if r7 != 0x8 goto pc+14\n   4: (bf) r1 = r6\n   5: (b4) w2 = 16\n   6: (bf) r3 = r10\n   7: (07) r3 += -4\n   8: (b4) w4 = 4\n   9: (85) call bpf_skb_load_bytes#7151872\n   ...\n```", "```\n# bpftool prog dump xlated id 52 visual &> output.out\n# dot -Tpng output.out -o visual-graph.png\n```", "```\n# sysctl -w kernel.bpf_stats_enabled=1\n```", "```\n52: cgroup_skb  tag 7be49e3934a125ba  run_time_ns 14397 run_cnt 39\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 52,53\n```", "```\n# bpftool prog load bpf_prog.o /sys/fs/bpf/bpf_prog\n```", "```\n# bpftool prog show\n52: cgroup_skb  tag 7be49e3934a125ba\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 52,53\n53: cgroup_skb  tag 2a142ef67aaad174\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 52,53\n54: cgroup_skb  tag 7be49e3934a125ba\n        loaded_at 2019-03-28T16:46:04-0700  uid 0\n        xlated 296B  jited 229B  memlock 4096B  map_ids 54,55\n60: perf_event  name bpf_prog  tag c6e8e35bea53af79\n        loaded_at 2019-03-28T20:46:32-0700  uid 0\n        xlated 112B  jited 115B  memlock 4096B\n```", "```\n# bpftool map show\n52: lpm_trie  flags 0x1\n        key 8B  value 8B  max_entries 1  memlock 4096B\n53: lpm_trie  flags 0x1\n        key 20B  value 8B  max_entries 1  memlock 4096B\n54: lpm_trie  flags 0x1\n        key 8B  value 8B  max_entries 1  memlock 4096B\n55: lpm_trie  flags 0x1\n        key 20B  value 8B  max_entries 1  memlock 4096B\n```", "```\n# bpftool map create /sys/fs/bpf/counter\n    type array key 4 value 4 entries 5 name counter\n```", "```\n52: lpm_trie  flags 0x1\n        key 8B  value 8B  max_entries 1  memlock 4096B\n53: lpm_trie  flags 0x1\n        key 20B  value 8B  max_entries 1  memlock 4096B\n54: lpm_trie  flags 0x1\n        key 8B  value 8B  max_entries 1  memlock 4096B\n55: lpm_trie  flags 0x1\n        key 20B  value 8B  max_entries 1  memlock 4096B\n56: lpm_trie  flags 0x1\n        key 8B  value 8B  max_entries 1  memlock 4096B\n57: lpm_trie  flags 0x1\n        key 20B  value 8B  max_entries 1  memlock 4096B\n58: array  name counter  flags 0x0\n        key 4B  value 4B  max_entries 5  memlock 4096B\n```", "```\n# bpftool map update id 58 key 1 0 0 0 value 1 0 0 0\n```", "```\n# bpftool map update id 58 key 1 0 0 0 value 1 0 0\nError: value expected 4 bytes got 3\n```", "```\n# bpftool map dump id 58\nkey: 00 00 00 00  value: 00 00 00 00\nkey: 01 00 00 00  value: 01 00 00 00\nkey: 02 00 00 00  value: 00 00 00 00\nkey: 03 00 00 00  value: 00 00 00 00\nkey: 04 00 00 00  value: 00 00 00 00\n```", "```\n# bpftool prog load bpf_prog.o /sys/fs/bpf/bpf_prog_2 \\\n    map name counter /sys/fs/bpf/counter\n```", "```\n# bpftool cgroup tree\nCgroupPath\nID       AttachType      AttachFlags     Name\n/sys/fs/cgroup/unified/system.slice/systemd-udevd.service\n    5        ingress\n    4        egress\n/sys/fs/cgroup/unified/system.slice/systemd-journald.service\n    3        ingress\n    2        egress\n/sys/fs/cgroup/unified/system.slice/systemd-logind.service\n    7        ingress\n    6        egress\n```", "```\n# Create a new hash map\nmap create /sys/fs/bpf/hash_map type hash key 4 value 4 entries 5 name hash_map\n# Now show all the maps in the system\nmap show\n```", "```\n# bpftool batch file /tmp/batch_example.txt\n2: lpm_trie  flags 0x1\n\tkey 8B  value 8B  max_entries 1  memlock 4096B\n3: lpm_trie  flags 0x1\n\tkey 20B  value 8B  max_entries 1  memlock 4096B\n18: hash  name hash_map  flags 0x0\n\tkey 4B  value 4B  max_entries 5  memlock 4096B\nprocessed 2 commands\n```", "```\nBEGIN\n{\n  printf(\"starting BPFTrace program\\n\")\n}\n\nkprobe:do_sys_open\n{\n  printf(\"opening file descriptor: %s\\n\", str(arg1))\n}\n\nEND\n{\n  printf(\"exiting BPFTrace program\\n\")\n}\n```", "```\n# bpftrace /tmp/example.bt\n```", "```\n# bpftrace -e \"kprobe:do_sys_open { @opens[str(arg1)] = count() }\"\n```", "```\nkprobe:do_sys_open /str(arg1) == \"/tmp/example.bt\"/\n{\n  printf(\"opening file descriptor: %s\\n\", str(arg1))\n}\n```", "```\n# bpftrace /tmp/example.bt\nAttaching 3 probes...\nstarting BPFTrace program\nopening file descriptor: /tmp/example.bt\nopening file descriptor: /tmp/example.bt\nopening file descriptor: /tmp/example.bt\n^Cexiting BPFTrace program\n```", "```\nkprobe:do_sys_open\n{\n  @opens[str(arg1)] = count()\n}\n```", "```\n# bpftrace /tmp/example.bt\nAttaching 3 probes...\nstarting BPFTrace program\n^Cexiting BPFTrace program\n\n@opens[/var/lib/snapd/lib/gl/haswell/libdl.so.2]: 1\n@opens[/var/lib/snapd/lib/gl32/x86_64/libdl.so.2]: 1\n...\n@opens[/usr/lib/locale/en.utf8/LC_TIME]: 10\n@opens[/usr/lib/locale/en_US/LC_TIME]: 10\n@opens[/usr/share/locale/locale.alias]: 12\n@opens[/proc/8483/cmdline]: 12\n```", "```\ngo get -u github.com/iovisor/kubectl-trace/cmd/kubectl-trace\n```", "```\n# kubectl trace run node/node_identifier -e \\\n  \"kprobe:do_sys_open { @opens[str(arg1)] = count() }\"\n```", "```\n# kubectl trace run pod/pod_identifier -n application_name -e <<PROGRAM\nuretprobe:/proc/$container_pid/exe:\"main.main\" {\n  printf(\"exit: %d\\n\", retval)\n}\nPROGRAM\n```", "```\ngo get -u github.com/cloudflare/ebpf_exporter/...\n```", "```\nprograms:\n  - name: timers\n    metrics:\n      counters:\n        - name: timer_start_total\n          help: Timers fired in the kernel\n          table: counts\n          labels:\n            - name: function\n              size: 8\n              decoders:\n                - name: ksym\n```", "```\n    tracepoints:\n      timer:timer_start: tracepoint__timer__timer_start\n```", "```\n    code: |\n      BPF_HASH(counts, u64);\n      // Generates function tracepoint__timer__timer_start\n      TRACEPOINT_PROBE(timer, timer_start) {\n          counts.increment((u64) args->function);\n          return 0;\n      }\n```"]