["```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    `app``:` `demo`\n```", "```\napiVersion: v1\nkind: Service\n...\nspec:\n  ...\n  `selector``:`\n    `app``:` `demo`\n```", "```\n`kubectl get pods --all-namespaces --selector app=demo`\nNAMESPACE   NAME                    READY     STATUS    RESTARTS   AGE demo        demo-5cb7d6bfdd-9dckm   1/1       Running   0          20s\n```", "```\n`kubectl get pods --show-labels`\nNAME                    ... LABELS demo-5cb7d6bfdd-9dckm   ... app=demo,environment=development\n```", "```\n`kubectl get pods -l app=demo,environment=production`\n```", "```\nselector:\n  `app``:` `demo`\n  `environment``:` `production`\n```", "```\n`kubectl get pods -l app!=demo`\n```", "```\nkubectl get pods -l `` `*environment in (staging, production)*` ``\n```", "```\nselector:\n  `matchExpressions``:`\n  `-` `{``key``:` `environment``,` `operator``:` `In``,` `values``:` `[``staging``,` `production``]``}`\n```", "```\nkubectl get pods -l `` `*environment notin (production)*` ``\n```", "```\nselector:\n  `matchExpressions``:`\n  `-` `{``key``:` `environment``,` `operator``:` `NotIn``,` `values``:` `[``production``]``}`\n```", "```\nselector:\n  app: demo\n  environment: production\n```", "```\nmetadata:\n  labels:\n    app: demo\n    tier: frontend\n    environment: production\n    version: v1.12.0\n    role: primary\n```", "```\napiVersion: v1\nkind: Pod\n...\nspec:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: \"topology.kubernetes.io/zone\"\n            operator: In\n            values: [\"us-central1-a\"]\n```", "```\npreferredDuringSchedulingIgnoredDuringExecution:\n- `weight``:` `10`\n  preference:\n    matchExpressions:\n    - key: \"topology.kubernetes.io/zone\"\n      operator: In\n      values: [\"us-central1-a\"]\n- `weight``:` `100`\n  preference:\n    matchExpressions:\n    - key: \"topology.kubernetes.io/zone\"\n      operator: In\n      values: [\"us-central1-b\"]\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: server\n  labels:\n    app: server\n...\nspec:\n  affinity:\n    `podAffinity``:`\n      `requiredDuringSchedulingIgnoredDuringExecution``:`\n        `labelSelector``:`\n        `-` `matchExpressions``:`\n          `-` `key``:` `app`\n            `operator``:` `In`\n            `values``:` `[``\"``cache``\"``]`\n        `topologyKey``:` `kubernetes.io/hostname`\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: server\n  labels:\n    app: server\n...\nspec:\n  affinity:\n    `podAntiAffinity``:`\n      `requiredDuringSchedulingIgnoredDuringExecution``:`\n        `labelSelector``:`\n        `-` `matchExpressions``:`\n          `-` `key``:` `app`\n            `operator``:` `In`\n            `values``:` `[``\"``server``\"``]`\n        `topologyKey``:` `kubernetes.io/hostname`\n```", "```\naffinity:\n  `podAntiAffinity``:`\n    `preferredDuringSchedulingIgnoredDuringExecution``:`\n    `-` `weight``:` `1`\n      `podAffinityTerm``:`\n        `labelSelector``:`\n        `-` `matchExpressions``:`\n          `-` `key``:` `app`\n            `operator``:` `In`\n            `values``:` `[``\"``server``\"``]`\n        `topologyKey``:` `kubernetes.io/hostname`\n```", "```\n`kubectl taint nodes docker-for-desktop dedicated=true:NoSchedule`\n```", "```\n`kubectl taint nodes docker-for-desktop dedicated:NoSchedule-`\n```", "```\napiVersion: v1\nkind: Pod\n...\nspec:\n  `tolerations``:`\n  `-` `key``:` `\"``dedicated``\"`\n    `operator``:` `\"``Equal``\"`\n    `value``:` `\"``true``\"`\n    `effect``:` `\"``NoSchedule``\"`\n```", "```\nWarning  FailedScheduling  4s (x10 over 2m)  default-scheduler  0/1 nodes are\navailable: 1 node(s) had taints that the pod didn't tolerate.\n```", "```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd-elasticsearch\n  ...\nspec:\n  ...\n  template:\n    ...\n    spec:\n      containers:\n      - name: fluentd-elasticsearch\n        ...\n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  serviceName: \"redis\"\n  replicas: 3\n  template:\n    ...\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: queue-worker\nspec:\n  completions: 10\n  template:\n    metadata:\n      name: queue-worker\n    spec:\n      containers:\n        ...\n```", "```\napiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: demo-cron\nspec:\n  schedule: \"*/1 * * * *\"\n  jobTemplate:\n    spec:\n      containers:\n      ...\n```", "```\napiVersion: autoscaling/v2beta2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: demo-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: demo\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 80\n```", "```\napiVersion: batch/v1\nkind: CronJob\n...\nargs:\n  - \"kubectl patch hpa service-hpa --patch *`{``\\\"``spec``\\\"``:{``\\\"``minReplicas``\\\"``:20}}`*\"\n...\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo-ingress\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: demo-service\n                port:\n                  number: 8888\n```", "```\n...\nkind: Ingress\nmetadata:\n  name: demo-aws-ingress\n  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/scheme: internet-facing\n...\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: fanout-ingress\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /hello\n        backend:\n          serviceName: hello\n          servicePort: 80\n      - path: /goodbye\n        backend:\n          serviceName: goodbye\n          servicePort: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo-ingress\nspec:\n  tls:\n  - secretName: demo-tls-secret\n  backend:\n    serviceName: demo-service\n    servicePort: 80\n...\n---\napiVersion: v1\nkind: Secret\ntype: kubernetes.io/tls\nmetadata:\n  name: demo-tls-secret\ndata:\n  tls.crt: LS0tLS1CRUdJTiBDRV...LS0tCg==\n  tls.key: LS0tLS1CRUdJTiBSU0...LS0tCg==\n```"]