["```\napiVersion: projectcalico.org/v3\nkind: NetworkPolicy\nmetadata:\n  name: back-end-policy\n  namespace: production\nspec:\n  selector: app == 'back-end'\n  ingress:\n  - action: Allow\n    protocol: TCP\n    source:\n      selector: app == 'front-end'\n    destination:\n      ports:\n        - 80\n  egress:\n  - action: Allow\n    protocol: TCP\n    destination:\n      selector: app == 'database'\n      ports:\n        - 80\n```", "```\napiVersion: projectcalico.org/v3\nkind: NetworkPolicy\nmetadata:\n  name: database-policy\n  namespace: production\nspec:\n  selector: app == 'database'\n  ingress:\n  - action: Allow\n    protocol: TCP\n    source:\n      selector: database-client == 'true'\n    destination:\n      ports:\n        - 80\n  egress:\n  - action: Deny\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny\n  Namespace: my-namespace\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  - Egress\n```", "```\napiVersion: projectcalico.org/v3\nkind: GlobalNetworkPolicy\nmetadata:\n  name: default-deny\nspec:\n  selector: all()\n  types:\n  - Ingress\n  - Egress\n```", "```\napiVersion: projectcalico.org/v3\nkind: GlobalNetworkPolicy\nmetadata:\n  name: default-app-policy\nspec:\n  namespaceSelector: has(projectcalico.org/name) &&\nprojectcalico.org/name not in {\"kube-system\", \"calico-system\"}\n  types:\n  - Ingress\n  - Egress\n  egress:\n    - action: Allow\n      protocol: UDP\n      destination:\n        selector: k8s-app == \"kube-dns\"\n        ports:\n        - 53\n```"]