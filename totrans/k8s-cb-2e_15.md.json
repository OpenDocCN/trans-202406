["```\n$ git clone https://github.com/kubernetes/kubernetes.git\n$ cd kubernetes\n$ make quick-release\n\n```", "```\n$ git clone https://github.com/kubernetes/kubernetes.git\n$ cd kubernetes\n$ make\n\n```", "```\n$ make kubectl kubeadm kubelet\n\n```", "```\n$ pip install kubernetes\n\n```", "```\nfrom kubernetes import client, config\n\nconfig.load_kube_config()\n\nv1 = client.CoreV1Api()\nres = v1.list_pod_for_all_namespaces(watch=False)\nfor pod in res.items:\n    print(pod.metadata.name)\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: functions.example.com\nspec:\n  group: example.com\n  versions:\n  - name: v1\n    served: true\n    storage: true\n    schema:\n      openAPIV3Schema:\n        type: object\n        properties:\n          spec:\n            type: object\n            properties:\n              code:\n                type: string\n              ram:\n                type: string\n  scope:              Namespaced\n  names:\n    plural: functions\n    singular: function\n    kind: Function\n```", "```\n$ kubectl apply -f functions-crd.yaml\ncustomresourcedefinition.apiextensions.k8s.io/functions.example.com created\n\n```", "```\napiVersion: example.com/v1\nkind: Function\nmetadata:\n  name: myfaas\nspec:\n  code: \"http://src.example.com/myfaas.js\"\n  ram: 100Mi\n```", "```\n$ kubectl apply -f myfaas.yaml\nfunction.example.com/myfaas created\n\n$ kubectl get crd functions.example.com -o yaml\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  creationTimestamp: \"2023-05-02T12:12:03Z\"\n  generation: 1\n  name: functions.example.com\n  resourceVersion: \"2494492251\"\n  uid: 5e0128b3-95d9-412b-b84d-b3fac030be75\nspec:\n  conversion:\n    strategy: None\n  group: example.com\n  names:\n    kind: Function\n    listKind: FunctionList\n    plural: functions\n    shortNames:\n    - fn\n    singular: function\n  scope: Namespaced\n  versions:\n  - name: v1\n    schema:\n      openAPIV3Schema:\n        properties:\n          spec:\n            properties:\n              code:\n                type: string\n              ram:\n                type: string\n            type: object\n        type: object\n    served: true\n    storage: true\nstatus:\n  acceptedNames:\n    kind: Function\n    listKind: FunctionList\n    plural: functions\n    shortNames:\n    - fn\n    singular: function\n  conditions:\n  - lastTransitionTime: \"2023-05-02T12:12:03Z\"\n    message: no conflicts found\n    reason: NoConflicts\n    status: \"True\"\n    type: NamesAccepted\n  - lastTransitionTime: \"2023-05-02T12:12:03Z\"\n    message: the initial names have been accepted\n    reason: InitialNamesAccepted\n    status: \"True\"\n    type: Established\n  storedVersions:\n  - v1\n\n$ kubectl describe functions.example.com/myfaas\nName:         myfaas\nNamespace:    triggermesh\nLabels:       <none>\nAnnotations:  <none>\nAPI Version:  example.com/v1\nKind:         Function\nMetadata:\n  Creation Timestamp:  2023-05-02T12:13:07Z\n  Generation:          1\n  Resource Version:    2494494012\n  UID:                 bed83736-6c40-4039-97fb-2730c7a4447a\nSpec:\n  Code:  http://src.example.com/myfaas.js\n  Ram:   100Mi\nEvents:  <none>\n\n```", "```\n$ curl 127.0.0.1:8001/apis/example.com/v1/ | jq .\n{\n  \"kind\": \"APIResourceList\",\n  \"apiVersion\": \"v1\",\n  \"groupVersion\": \"example.com/v1\",\n  \"resources\": [\n    {\n      \"name\": \"functions\",\n      \"singularName\": \"function\",\n      \"namespaced\": true,\n      \"kind\": \"Function\",\n      \"verbs\": [\n        \"delete\",\n        \"deletecollection\",\n        \"get\",\n        \"list\",\n        \"patch\",\n        \"create\",\n        \"update\",\n        \"watch\"\n      ],\n      \"shortNames\": [\n        \"fn\"\n      ],\n      \"storageVersionHash\": \"FLWxvcx1j74=\"\n    }\n  ]\n}\n\n```", "```\n$ kubectl delete functions.example.com/myfaas\nfunction.example.com \"myfaas\" deleted\n\n```"]