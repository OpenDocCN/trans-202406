["```\n$ helm create firstchart\n```", "```\n$ helm package firstchart\n\nSuccessfully packaged chart and saved it to:\n/Users/bradtopol/go/k8s.io/helmexample/firstchart-0.1.0.tgz\n```", "```\n$ helm install firstchart_release1 firstchart-0.1.0.tgz\n```", "```\nsecretGenerator:\n- name: sample-secret\n literals:\n - username=admin\n - password=letbradin\n```", "```\n$ kubectl kustomize ./generateSecret\n```", "```\napiVersion: v1\ndata:\n password: bGV0YnJhZGlu\n username: YWRtaW4=\nkind: Secret\nmetadata:\n name: sample-secret-dh2bm897df\ntype: Opaque\n```", "```\nusername=admin\npassword=letbradin\n```", "```\nsecretGenerator:\n- name: sample-secret2\n files:\n - password.txt\n```", "```\n$ kubectl kustomize ./generateSecret2\n```", "```\napiVersion: v1\ndata:\n password.txt: CnVzZXJuYW1lPWFkbWluCnBhc3N3b3JkPWxldGJyYWRpbgo=\nkind: Secret\nmetadata:\n name: sample-secret2-77bf8kf96f\ntype: Opaque\n```", "```\nkind: Deployment\nmetadata:\n name: nginx\n labels:\n  app: webserver\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\nspec:\n replicas: 3\n selector:\n  matchLabels:\n   app: webserver\n strategy:\n  rollingUpdate:\n   maxSurge: 1\n   maxUnavailable: 1\n  type: RollingUpdate\n template:\n  metadata:\n   labels:\n    app: webserver\n  spec:\n   containers:\n   - name: nginx\n     image: nginx:1.7.9\n     ports:\n     - containerPort: 80\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n name: nginx\n labels:\n  app: webserver\nspec:\n ports:\n - port: 80\n   protocol: TCP\n selector:\n   app: webserver\n```", "```\nresources:\n- deploymentset.yaml\n- service.yaml\n```", "```\n$ kubectl kustomize ./composition\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n labels:\n  app: webserver\n name: nginx\nspec:\n ports:\n - port: 80\n   protocol: TCP\n selector:\n   app: webserver\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\n labels:\n  app: webserver\n name: nginx\nspec:\n replicas: 3\n selector:\n  matchLabels:\n   app: webserver\n strategy:\n  rollingUpdate:\n   maxSurge: 1\n   maxUnavailable: 1\n  type: RollingUpdate\n template:\n  metadata:\n   labels:\n    app: webserver\n  spec:\n   containers:\n   - image: nginx:1.7.9\n     name: nginx\n     ports:\n     - containerPort: 80\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: nginx\n labels:\n  app: webserver\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\nspec:\n replicas: 3\n selector:\n  matchLabels:\n   app: webserver\n strategy:\n  rollingUpdate:\n   maxSurge: 1\n   maxUnavailable: 1\n  type: RollingUpdate\n template:\n  metadata:\n   labels:\n    app: webserver\n  spec:\n   containers:\n   - name: nginx\n     image: nginx:1.7.9\n     ports:\n     - containerPort: 80\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: nginx\nspec:\n replicas: 6\n```", "```\nresources:\n- deploymentset.yaml\npatchesStrategicMerge:\n- update_replicas.yaml\n```", "```\n$ kubectl kustomize ./patch\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\n labels:\n  app: webserver\n name: nginx\nspec:\n replicas: 6\n selector:\n  matchLabels:\n   app: webserver\n strategy:\n  rollingUpdate:\n   maxSurge: 1\n   maxUnavailable: 1\n  type: RollingUpdate\n template:\n  metadata:\n   labels:\n    app: webserver\n  spec:\n   containers:\n   - image: nginx:1.7.9\n     name: nginx\n     ports:\n     - containerPort: 80\n```", "```\nresources:\n- deploymentset.yaml\n- service.yaml\n```", "```\ncommonLabels:\n env: development\nbases:\n- ../base\nnamePrefix: dev-\npatchesStrategicMerge:\n- update_replicas.yaml\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: nginx\nspec:\n replicas: 2\n```", "```\n$ `kubectl` `kustomize` `./development`\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n labels:\n  app: webserver\n  env: development\n name: dev-nginx\nspec:\n ports:\n - port: 80\n   protocol: TCP\n selector:\n  app: webserver\n  env: development\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\n labels:\n  app: webserver\n  env: development\n name: dev-nginx\nspec:\n replicas: 2\n selector:\n  matchLabels:\n   app: webserver\n   env: development\n strategy:\n  rollingUpdate:\n   maxSurge: 1\n   maxUnavailable: 1\n  type: RollingUpdate\n template:\n  metadata:\n   labels:\n    app: webserver\n    env: development\n  spec:\n   containers:\n   - image: nginx:1.7.9\n     name: nginx\n     ports:\n     - containerPort: 80\n```", "```\ncommonLabels:\n env: staging\nbases:\n- ../base\nnamePrefix: staging-\npatchesStrategicMerge:\n- update_replicas.yaml\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: nginx\nspec:\n replicas: 5\n```", "```\n$ kubectl kustomize ./staging\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n labels:\n  app: webserver\n  env: staging\n name: staging-nginx\nspec:\n ports:\n - port: 80\n   protocol: TCP\n selector:\n  app: webserver\n  env: staging\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\n labels:\n  app: webserver\n  env: staging\n name: staging-nginx\nspec:\n replicas: 5\n selector:\n  matchLabels:\n   app: webserver\n   env: staging\n  strategy:\n   rollingUpdate:\n    maxSurge: 1\n    maxUnavailable: 1\n   type: RollingUpdate\n  template:\n   metadata:\n    labels:\n     app: webserver\n     env: staging\n   spec:\n    containers:\n    - image: nginx:1.7.9\n      name: nginx\n      ports:\n      - containerPort: 80\n```", "```\ncommonLabels:\n env: production\nbases:\n- ../base\nnamePrefix: prod-\npatchesStrategicMerge:\n- update_replicas.yaml\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n name: nginx\nspec:\n replicas: 20\n```", "```\n$ kubectl kustomize ./production\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n labels:\n  app: webserver\n  env: production\n name: prod-nginx\nspec:\n ports:\n - port: 80\n   protocol: TCP\n selector:\n  app: webserver\n  env: production\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n annotations:\n  deployment.kubernetes.io/revision: \"1\"\n labels:\n  app: webserver\n  env: production\n name: prod-nginx\nspec:\n replicas: 20\n selector:\n  matchLabels:\n   app: webserver\n   env: production\n strategy:\n  rollingUpdate:\n   maxSurge: 1\n   maxUnavailable: 1\n  type: RollingUpdate\n template:\n  metadata:\n   labels:\n    app: webserver\n    env: production\n  spec:\n   containers:\n   - image: nginx:1.7.9\n     name: nginx\n     ports:\n     - containerPort: 80\n```", "```\n$ kubectl apply -k ./production/\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n name: simple-task-example\nspec:\n steps:\n - name: echo\n   image: ubuntu\n   command:\n   - echo\n   args:\n   - \"This is step one of our first simple task example\"\n - name: echo2\n   image: ubuntu\n   command:\n   - echo\n   args:\n   - \"This is step two of our first simple task example\"\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n name: simple-task-example-run\nspec:\n taskRef:\n  name: simple-task-example\n```", "```\n$ kubectl apply -f simpleexample.yaml\n$ kubectl apply -f simpleexamplerun.yaml\n```", "```\ntask.tekton.dev/simple-task-example created\ntaskrun.tekton.dev/simple-task-example-run created\n```", "```\n$ tkn taskrun logs --last -f\n[echo] This is step one of our first simple task example\n\n[echo2] This is step two of our first simple task example\n```", "```\n$ tkn taskrun describe simple-task-example-run\nName: simple-task-example-run\nNamespace: default\nTask Ref: simple-task-example\nTimeout: 1h0m0s\nLabels:\n app.kubernetes.io/managed-by=tekton-pipelines\n tekton.dev/task=simple-task-example\n\nStatus\n\nSTARTED      DURATION   STATUS\n1 minute ago 16 seconds Succeeded\n Input Resources\nNo input resources\n\nOutput Resources\n No output resources\n Params\n\n No params\n\n Steps\n\n NAME    STATUS\n ∙ echo  Completed\n ∙ echo2 Completed\n\nSidecars\n\nNo sidecars\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n name: simple-task-example2\nspec:\n steps:\n - name: echo\n image: ubuntu\n command:\n - echo\n args:\n - \"This is step one of our second simple task example\"\n - name: echo2\n image: ubuntu\n command:\n - echo\n args:\n - \"This is step two of our second simple task example\"\n```", "```\n$ kubectl apply -f simpleexample2.yaml\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n name: simple-pipeline\nspec:\n tasks:\n - name: simple-task\n   taskRef:\n    name: simple-task-example\n - name: simple-task2\n   taskRef:\n    name: simple-task-example2\n```", "```\n$ kubectl apply -f simplepipeline.yaml\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n generateName: run-simple-tasks\nspec:\n pipelineRef:\n  name: simple-pipeline\n```", "```\n$ kubectl create -f simplepipelinerun.yaml\n```", "```\n$ tkn pipelinerun logs --last -f\n[simple-task2 : echo] This is step one of our second simple task example\n[simple-task : echo] This is step one of our first simple task example\n\n[simple-task2 : echo2] This is step two of our second simple task example\n\n[simple-task : echo2] This is step two of our first simple task example\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n name: simple-pipeline\nspec:\n tasks:\n - name: simple-task\n   taskRef:\n    name: simple-task-example\n - name: simple-task2\n   runAfter: \n   - simple-task\n  taskRef:\n   name: simple-task-example2\n```", "```\n$ tkn clustertasks ls\nNAME DESCRIPTION AGE\nbuildah 25 minutes ago\nbuildah-v0-11-3 25 minutes ago\ngit-clone 25 minutes ago\njib-maven 25 minutes ago\nkn 25 minutes ago\nmaven 25 minutes ago\nopenshift-client 25 minutes ago\nopenshift-client-v0-11-3 25 minutes ago\ns2i 25 minutes ago\ns2i-dotnet-3 25 minutes ago\ns2i-dotnet-3-v0-11-3 25 minutes ago\ns2i-go 25 minutes ago\ns2i-go-v0-11-3 25 minutes ago\ns2i-java-11 25 minutes ago\ns2i-java-11-v0-11-3 25 minutes ago\ns2i-java-8 25 minutes ago\ns2i-java-8-v0-11-3 25 minutes ago\ns2i-nodejs 25 minutes ago\ns2i-nodejs-v0-11-3 25 minutes ago\ns2i-perl 25 minutes ago\ns2i-perl-v0-11-3 25 minutes ago\ns2i-php 25 minutes ago\ns2i-php-v0-11-3 25 minutes ago\ns2i-python-3 25 minutes ago\ns2i-python-3-v0-11-3 25 minutes ago\ns2i-ruby 25 minutes ago\ns2i-ruby-v0-11-3 25 minutes ago\ns2i-v0-11-3 25 minutes ago\ntkn 25 minutes ago\n```", "```\n$ oc new-project pipelines-tutorial\n```", "```\n$ oc project pipelines-tutorial\n```", "```\n$ oc get pipelines -n pipelines-tutorial\n```", "```\n    $ kubectl create secret docker-registry \\\n     --docker-server=\"quay.io\" \\\n     --docker-username=\"YOUR_USERNAME\" \\\n     --docker-password=\"YOUR_PASSWORD\" \\\n     --docker-email=\"YOUR_EMAIL\" \\\n     quay-registry-secret\n    ```", "```\n    $ oc patch sa pipeline -p '{\"secrets\":[{\"name\":\"quay-registry-secret\"}]}'\n    ```", "```\npipelines/01-pipeline-build-pacman.yaml \n\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n name: build-pacman\nspec:\n workspaces:\n - name: shared-workspace\n resources:\n - name: source-repo\n type: git\n - name: image\n type: image\n params:\n - name: dockerfile-path\n type: string\n description: The path to your Dockerfile\n default: \"Dockerfile\"\n tasks:\n - name: build-image\n taskRef:\n name: buildah\n kind: ClusterTask\n resources:\n inputs:\n - name: source\n resource: source-repo\n outputs:\n - name: image\n resource: image\n params:\n - name: TLSVERIFY\n value: \"false\"\n - name: DOCKERFILE\n value: \"$(params.dockerfile-path)\"\n```", "```\n$ oc apply -f 01-pipeline-build-pacman.yaml \npipeline.tekton.dev/build-and-deploy-pacman created\n```", "```\n$ oc get pipelines\nNAME                    AGE\nbuild-and-deploy-pacman 8s\n```", "```\n$ tkn pipelines ls\nNAME                    AGE            LAST RUN STARTED DURATION STATUS\nbuild-and-deploy-pacman 21 seconds ago ---      ---     ---      ---\n```", "```\npipelines/02-resource-git-repo-pacman.yaml\n\napiVersion: tekton.dev/v1alpha1\nkind: PipelineResource\nmetadata:\n name: pacman-git\nspec:\n type: git\n params:\n - name: revision\n value: master\n - name: url\n value: https://github.com/hybrid-cloud-apps-openshift-k8s-book/k8s-example-apps/\n\npipelines/03-resource-pacman-image.yaml\n\napiVersion: tekton.dev/v1alpha1\nkind: PipelineResource\nmetadata:\n name: pacman-image\nspec:\n type: image\n params:\n - name: url\n value: quay.io/mdelder/pacman\n```", "```\n$ oc apply -f 02-resource-git-repo-pacman.yaml \\\n -f 03-resource-pacman-image.yaml\n```", "```\npipelines/04-pipelinerun-build-pacman-01.yaml\n\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n generateName: pipelinerun-build-pacman-\nspec:\n serviceAccountName: pipeline\n pipelineRef:\n name: build-pacman\n resources:\n - name: source-repo\n resourceRef:\n name: pacman-git\n - name: image\n resourceRef:\n name: pacman-image\n workspaces:\n - name: shared-workspace\n emptyDir: {}\n params:\n - name: dockerfile-path\n value: \"pacman-nodejs-app/docker/Dockerfile\"\n```", "```\n$ oc create -f pipelines/04-pipelinerun-build-pacman-01.yaml\n```", "```\n$ tkn pipelinerun ls\nNAME                           STARTED        DURATION STATUS\npipelinerun-build-pacman-qk5lw 23 seconds ago ---      Running\n```", "```\n$ tkn pipelinerun logs -f\n```", "```\n[build-image : git-source-pacman-git-s2mxf]\n{\"level\":\"info\",\"ts\":1598817082.1290805,\"caller\":\"git/git.go:105\",\"msg\":\n\"Successfully cloned https://github.com/hybrid-cloud-apps-openshift-k8s-book/\nk8s-example-apps/ @ master in path /workspace/source\"}\n...\n\n[build-image : build] STEP 1: FROM node:boron\n[build-image : build] Getting image source signatures\n[build-image : build] Copying blob \nsha256:3b7ca19181b24b87e24423c01b490633bc1e47d2fcdc1987bf2e37949d6789b5\n\n...\n\n[build-image : push] Getting image source signatures\n[build-image : push] Copying blob \nsha256:ec62f19bb3aa1dcfacc9864be06f0af635c18021893d42598da1564beed97448\n\n...\n\n[build-image : push] Writing manifest to image destination\n[build-image : push] Copying config \nsha256:854daaf20193c74d16a68ba8c1301efa4d02e133d383f04fedc9532ae34e8929\n[build-image : push] Writing manifest to image destination\n[build-image : push] Storing signatures\n\n...\n```", "```\npipelines/00-pvc-shared-workspace.yaml\n\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n name: shared-workspace\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n requests:\n storage: 1Gi\n\n$ oc apply -f 00-pvc-shared-workspace.yaml \npersistentvolumeclaim/shared-workspace created\n```", "```\n$ oc adm policy add-role-to-user edit --namespace pacman \\\n system:serviceaccount:pipelines-tutorial:pipeline\n```", "```\n$ oc auth can-i get deployments \\\n --namespace pacman \\\n --as system:serviceaccount:pipelines-tutorial:pipeline\n```", "```\npipelines/05-pipeline-deploy-pacman.yaml\n\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n name: build-and-deploy-pacman\nspec:\n workspaces:\n - name: shared-workspace\n resources:\n - name: source-repo\n type: git\n - name: image\n type: image\n params:\n - name: kustomization-path\n type: string\n default: kustomization\n - name: kustomization-git-repo-url\n type: string\n - name: kustomization-git-revision\n type: string\n default: master\n - name: dockerfile-path\n type: string\n description: The path to your Dockerfile\n default: \"Dockerfile\"\n tasks:\n - name: build-image\n taskRef:\n name: buildah\n kind: ClusterTask\n resources:\n inputs:\n - name: source\n resource: source-repo\n outputs:\n - name: image\n resource: image\n params:\n - name: TLSVERIFY\n value: \"false\"\n - name: DOCKERFILE\n value: \"$(params.dockerfile-path)\"\n - name: fetch-repository\n taskRef:\n name: git-clone\n kind: ClusterTask\n workspaces:\n - name: output\n workspace: shared-workspace\n params:\n - name: url\n value: \"$(params.kustomization-git-repo-url)\"\n - name: subdirectory\n value: \"\"\n - name: deleteExisting\n value: \"true\"\n - name: revision\n value: \"$(params.kustomization-git-revision)\"\n runAfter:\n - build-image\n - name: apply-config\n params:\n - name: kustomization-path\n value: \"$(params.kustomization-path)\"\n workspaces:\n - name: source\n workspace: shared-workspace\n taskSpec:\n params:\n - name: kustomization-path\n default: \"kustomization\"\n workspaces:\n - name: source\n steps:\n - name: apply-kustomization\n image: quay.io/openshift/origin-cli:latest\n workingDir: /workspace/source\n command: ['/bin/bash', '-c']\n args:\n - |-\n echo \"Applying kustomization in DIR \\\"$(params.kustomization-path)\\\"\"\n oc apply -k $(params.kustomization-path)\n runAfter:\n - fetch-repository\n\n$ oc apply -f 05-pipeline-deploy-pacman.yaml\n```", "```\n$ oc create -f 06-pipelinerun-build-and-deploy-pacman-01.yaml \npipelinerun.tekton.dev/pipelinerun-build-and-deploy-pacman-cjc7b created\n```", "```\n$ tkn pipelinerun ls\nNAME                                      STARTED        DURATION  STATUS\npipelinerun-build-and-deploy-pacman-cjc7b 3 minutes ago  2 minutes Succeeded\npipelinerun-build-pacman-qk5lw            57 minutes ago 2 minutes Succeeded\n```", "```\n$ tkn pipelinerun logs -f pipelinerun-build-and-deploy-pacman-cjc7b\n```", "```\n$ oc get route pacman --namespace pacman \\\n -ojsonpath=\"{.status.ingress[0].host}\"\n```", "```\n    $ oc new-project open-cluster-management\n\n    $ oc create -f - <<EOF\n    apiVersion: operator.open-cluster-management.io/v1\n    kind: MultiClusterHub\n    metadata:\n     namespace: open-cluster-management\n     name: multiclusterhub\n    spec: {}\n    EOF\n    ```", "```\nCluster 1:\n apps/pacman: deployed\n environment: dev\n region: us-east\n\nCluster 2:\n apps/pacman: deployed\n environment: dev\n region: europe-west3\n```", "```\n$ oc get managedclusters -o yaml\napiVersion: v1\nitems:\n- apiVersion: cluster.open-cluster-management.io/v1\n kind: ManagedCluster\n metadata:\n labels:\n apps/pacman: deployed\n cloud: Amazon\n clusterID: 7de6ab45-58ac-47f7-897d-b742b7197653\n environment: dev\n name: cluster1-aws-east\n region: us-east\n vendor: OpenShift\n name: cluster1-aws-east\n spec:\n hubAcceptsClient: true\n leaseDurationSeconds: 60\n status:\n ...\n version:\n kubernetes: v1.18.3+b0068a8\n- apiVersion: cluster.open-cluster-management.io/v1\n kind: ManagedCluster\n metadata:\n labels:\n apps/pacman: deployed\n cloud: Google\n clusterID: 9e170dd8-a463-44c7-a59f-39b7459964ec\n environment: dev\n name: cluster3-gcp-europe-west3\n region: europe-west3\n vendor: OpenShift\n name: cluster3-gcp-europe-west3\n spec:\n hubAcceptsClient: true\n leaseDurationSeconds: 60\n status:\n ...\n version:\n kubernetes: v1.18.3+b0068a8\nkind: List\nmetadata:\n resourceVersion: \"\"\n selfLink: \"\"\n```", "```\napiVersion: app.k8s.io/v1beta1\nkind: Application\nmetadata:\n name: pacman-app\n namespace: pacman-app\nspec:\n componentKinds:\n - group: apps.open-cluster-management.io\n kind: Subscription\n descriptor: {}\n selector:\n matchExpressions:\n - key: app.kubernetes.io/name\n operator: In\n values:\n - pacman\n```", "```\napiVersion: apps.open-cluster-management.io/v1\nkind: Channel\nmetadata:\n name: pacman-app-latest\n namespace: pacman-app\n annotations:\n apps.open-cluster-management.io/github-path: kustomization\nspec:\n type: GitHub\n pathname: https://github.com/hybrid-cloud-apps-openshift-k8s-book/\nopenshift-pipeline-example-pacman.git\n # secretRef:\n # name: github-credentials\n```", "```\napiVersion: apps.open-cluster-management.io/v1\nkind: Subscription\nmetadata:\n annotations:\n apps.open-cluster-management.io/git-branch: main\n apps.open-cluster-management.io/github-path: kustomization\n name: pacman-app\n namespace: pacman-app\n labels:\n app.kubernetes.io/name: pacman\nspec:\n channel: pacman-app/pacman-app-latest\n placement:\n placementRef:\n kind: PlacementRule\n name: pacman-dev-clusters\n # timewindow:\n # windowtype: blocked\n # location: America/Toronto\n # weekdays: [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\"]\n # hours:\n # - start: \"06:00AM\"\n # end: \"05:00PM\"\n```", "```\napiVersion: apps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: pacman-dev-clusters\n namespace: pacman-app\nspec:\n clusterConditions:\n - status: \"True\"\n type: ManagedClusterConditionAvailable\n clusterReplicas: 2\n clusterSelector:\n\n matchExpressions:\n - key: region\n operator: In\n values:\n - us-east\n - us-west\n - europe-west3\n matchLabels:\n environment: dev\n apps/pacman: deployed\n```", "```\n$ git clone git@github.com:hybrid-cloud-apps-openshift-k8s-book/\nopenshift-pipeline-example-pacman.git\n$ cd openshift-pipeline-example-pacman\n$ oc new-project pacman-app\n$ oc apply -f deploy/pacman-app.yaml\n```", "```\n$ oc get managedclusters --show-labels\nNAME HUB ACCEPTED MANAGED CLUSTER URLS JOINED AVAILABLE AGE LABELS\nlocal-cluster true True True 55m \n  cloud=Amazon,clusterID=65333a32-ba14-4711-98db-28c2aa0153d6,\n  installer.name=multiclusterhub,installer.\n  namespace=open-\ncluster-management,local-cluster=true,vendor=OpenShift\n\ncluster1-aws-east true True True 52m \n  apps/pacman=deployed,cloud=Amazon,\n  clusterID=7de6ab45-58ac-47f7-897d-\nb742b7197653,environment=dev,\n  name=cluster1-aws-east,region=us-east,vendor=OpenShift\n\ncluster3-gcp-europe-west3 true True True 52m \n  apps/pacman=deployed,cloud=Google,\n  clusterID=9e170dd8-a463-44c7-a59f-\n39b7459964ec,environment=dev,name=cluster3-gcp-europe-west3,\n  region=europe-west3,vendor=OpenShift\n```", "```\n$ oc get placementrule -n pacman-app pacman-dev-clusters -oyamlapiVersion: \napps.open-cluster-management.io/v1\nkind: PlacementRule\nmetadata:\n name: pacman-dev-clusters\n namespace: pacman-app\n resourceVersion: \"3954663\"\n selfLink: /apis/apps.open-cluster-management.io/v1/namespaces/pacman-\napp/placementrules/pacman-dev-clusters\n uid: 4baae9ee-520c-407e-9cbd-645465e122ea\nspec:\n clusterConditions:\n - status: \"True\"\n type: ManagedClusterConditionAvailable\n clusterSelector:\n clusterReplicas: 2\n matchExpressions:\n - key: region\n operator: In\n values:\n - us-east\n - us-west\n - europe-west3\n matchLabels:\n apps/pacman: deployed\n environment: dev\nstatus:\n decisions:\n - clusterName: cluster1-aws-east\n clusterNamespace: cluster1-aws-east\n - clusterName: cluster3-gcp-europe-west3\n clusterNamespace: cluster3-gcp-europe-west3\n```"]