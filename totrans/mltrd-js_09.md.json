["```\n#!/usr/bin/env node\n\nconst { Worker } = require('worker_threads');\nconst count = Number(process.argv[2]) || 0;\n\nfor (let i = 0; i < count; i++) {\n  new Worker(__dirname + '/worker.js');\n}\n\nconsole.log(`PID: ${process.pid}, ADD THREADS: ${count}`);\nsetTimeout(() => {}, 1 * 60 * 60 * 1000);\n```", "```\n# Terminal 1\n$ node leader.js 0\n# PID 10000\n\n# Terminal 2\n$ pstree 10000 -pa # Linux only\n$ ps -p 10000 -o pid,vsz,rss,pmem,comm,args\n```", "```\nnode,10000 ./leader.js\n  ├─{node},10001\n  ├─{node},10002\n  ├─{node},10003\n  ├─{node},10004\n  ├─{node},10005\n  └─{node},10006\n```", "```\n  PID    VSZ   RSS  %MEM COMMAND    COMMAND\n66766 1409260 48212   0.1 node      node ./leader.js\n```", "```\nconsole.log(`WPID: ${process.pid}`);\nsetTimeout(() => {}, 1 * 60 * 60 * 1000);\n```", "```\n$ THREADS=2 STRATEGY=leastbusy node main.js\n```", "```\n$ npx autocannon http://localhost:1337/\n```", "```\n# Linux only command\n$ THREADS=2 STRATEGY=leastbusy taskset -c 0 node main.js\n```", "```\npid 211154's current affinity list: 0-15\npid 211154's new affinity list: 0\n```", "```\n$ npx autocannon http://localhost:1337/\n```", "```\n$ npm init -y\n$ npm install fastify@3 mustache@4\n```", "```\n#!/usr/bin/env node\n// npm install fastify@3 mustache@4\n\nconst Fastify = require('fastify');\nconst RpcWorkerPool = require('./rpc-worker.js');\nconst worker = new RpcWorkerPool('./worker.js', 4, 'leastbusy');\nconst template = require('./template.js');\nconst server = Fastify();\n```", "```\nserver.get('/main', async (request, reply) =>\n  template.renderLove({ me: 'Thomas', you: 'Katelyn' }));\n\nserver.get('/offload', async (request, reply) =>\n  worker.exec('renderLove', { me: 'Thomas', you: 'Katelyn' }));\n\nserver.listen(3000, (err, address) => {\n  if (err) throw err;\n  console.log(`listening on: ${address}`);\n});\n```", "```\nconst timer = process.hrtime.bigint;\nsetInterval(() => {\n  const start = timer();\n  setImmediate(() => {\n    console.log(`delay: ${(timer() - start).toLocaleString()}ns`);\n  });\n}, 1000);\n```", "```\nconst { parentPort } = require('worker_threads');\nconst template = require('./template.js');\n\nfunction asyncOnMessageWrap(fn) {\n  return async function(msg) {\n    parentPort.postMessage(await fn(msg));\n  }\n}\n\nconst commands = {\n  renderLove: (data) => template.renderLove(data)\n};\n\nparentPort.on('message', asyncOnMessageWrap(async ({ method, params, id }) => ({\n  result: await commands[method](...params), id\n})));\n```", "```\nconst Mustache = require('mustache');\nconst love_template = \"<em>{{me}} loves {{you}}</em> \".repeat(80);\n\nmodule.exports.renderLove = (data) => {\n  const result = Mustache.render(love_template, data);\n  // Mustache.clearCache();\n  return result;\n};\n```", "```\n# Terminal 1\n$ node server.js\n\n# Terminal 2\n$ npx autocannon -d 60 http://localhost:3000/main\n$ npx autocannon -d 60 http://localhost:3000/offload\n```"]