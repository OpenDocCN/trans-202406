- en: Appendix F. TSC Compiler Flags for Safety
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For a complete list of available compiler flags, head over to the [TypeScript
    Handbook website](http://bit.ly/2JWfsgY).
  prefs: []
  type: TYPE_NORMAL
- en: Each TypeScript release introduces new checks that you can enable to squeeze
    even more safety out of your code. Some of these flags—prefixed with `strict`—are
    included as part of the `strict` flag; or, you can opt into `strict` flags one
    at a time. [Table F-1](#ts-safety-flag-table) lists the compiler flags related
    to safety that are available at the time of writing.
  prefs: []
  type: TYPE_NORMAL
- en: Table F-1\. TSC safety flags
  prefs: []
  type: TYPE_NORMAL
- en: '| Flag | Description |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| `alwaysStrict` | Emit `''use strict''`. |'
  prefs: []
  type: TYPE_TB
- en: '| `noEmitOnError` | Don’t emit JavaScript when your code has type errors. |'
  prefs: []
  type: TYPE_TB
- en: '| `noFallthroughCasesInSwitch` | Make sure that every `switch` case either
    returns a value or breaks. |'
  prefs: []
  type: TYPE_TB
- en: '| `noImplicitAny` | Error when a variable’s type is inferred as `any`. |'
  prefs: []
  type: TYPE_TB
- en: '| `noImplicitReturns` | Make sure that every code path in every function explicitly
    returns. See [“Totality”](ch06.html#totality). |'
  prefs: []
  type: TYPE_TB
- en: '| `noImplicitThis` | Error when you use `this` in a function without explicitly
    annotating the `this` type. See [“Typing this”](ch04.html#typing-this). |'
  prefs: []
  type: TYPE_TB
- en: '| `noUnusedLocals` | Warn about unused local variables. |'
  prefs: []
  type: TYPE_TB
- en: '| `noUnusedParameters` | Warn about unused function parameters. Prefix your
    parameter name with `_` to ignore this error. |'
  prefs: []
  type: TYPE_TB
- en: '| `strictBindCallApply` | Enforce type safety for `bind`, `call`, and `apply`.
    See [“call, apply, and bind”](ch04.html#call-apply-bind). |'
  prefs: []
  type: TYPE_TB
- en: '| `strictFunctionTypes` | Enforce that functions are contravariant in their
    parameter and `this` types. See [“Function variance”](ch06.html#function-variance).
    |'
  prefs: []
  type: TYPE_TB
- en: '| `strictNullChecks` | Promote `null` to a type. See [“null, undefined, void,
    and never”](ch03.html#null-undefined). |'
  prefs: []
  type: TYPE_TB
- en: '| `strictPropertyInitialization` | Enforce that class properties are either
    nullable or initialized. See [Chapter 5](ch05.html#classes). |'
  prefs: []
  type: TYPE_TB
