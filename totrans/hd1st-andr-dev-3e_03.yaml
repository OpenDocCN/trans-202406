- en: 'Chapter 1\. Getting Started: *Diving In*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![image](Images/f0001-01.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
- en: '**Android is the world’s most popular mobile operating system.**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'And there are billions of Android users worldwide, all waiting to download
    your next great idea. In this chapter, you’ll find out how to start turning your
    ideas into reality by is the world’s most popular mobile operating system.**building
    a basic Android app**, and updating it. You’ll learn how to run it on physical
    and virtual devices. Along the way, you’ll meet two of the core components of
    all Android apps: **activities** and **layouts**. Let’s dive in…'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to Androidville
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Android is the world’s most popular mobile platform. At last count, there were
    over *three billion* active Android devices worldwide, and that number is still
    growing.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Android is a comprehensive open source platform based on Linux and championed
    by Google. It’s a powerful development framework that includes everything you
    need to build great apps. What’s more, it enables you to deploy those apps to
    a wide variety of devices—phones, tablets, and more.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: So what makes up a typical Android app?
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: '**We’re going to build Android apps using Kotlin and XML. We’ll explain things
    along the way, but you’ll need some understanding of Kotlin to get the most out
    of this book.**'
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Activities define what the app does
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each Android app includes one or more **activities**. An activity is a special
    class —usually written in Kotlin—that controls the app’s behavior, and decides
    how to respond to the user. If the app includes a button, for example, you add
    code to the activity that says what the button should do when the user taps or
    clicks on it.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0002-01.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
- en: Layouts define what each screen looks like
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A typical Android app is composed of one or more screens. You define what each
    screen looks like using a **layout** file, or more activity code. Layouts are
    usually defined using XML, and each screen can include components such as buttons,
    text, and images.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0002-02.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
- en: There may be extra files too
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In addition to activities and layouts, Android apps often need extra resources
    such as image files and application data. You can add any extra files you need
    to the app.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0002-03.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
- en: Android apps are really just a bunch of files in particular directories. When
    you build your app, these files get bundled together, giving you an app you can
    run on your device.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Activities and layouts form the backbone of your app
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a typical app, activities and layouts work together to define the app’s user
    interface. The layouts tell Android how the different screen elements should be
    arranged, and the activities control the app’s behavior. If the app features a
    button, for example, the layout specifies its position, and the activity controls
    what happens when the user clicks on it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0003-01.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
- en: 'Here’s how activities and layouts work together when you run an app on your
    device:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0003-02.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
- en: '**Android starts the app’s main activity.**'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The activity tells Android to use a specific layout.**'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The layout is displayed on the device.**'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The user interacts with the layout.**'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The activity responds to these interactions, and updates the display…**'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**…which the user sees on the device.**'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that you have an idea about how Android apps are put together, let’s go
    ahead and build a basic Android app.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Here’s what we’re going to do
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So let’s dive in and create an Android app. There are just a few things we
    need to do:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '**Set up a development environment.**'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We need to install Android Studio, which includes all the tools you need to
    develop Android apps.
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Build a basic app.**'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ll build a simple app using Android Studio that will display some sample
    text on the screen.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Run the app.**'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ll run the app on a physical device, and a virtual one, to see it up and
    running.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Change the app.**'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, we’ll tweak the app we created, and run it again.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![image](Images/f0004-01.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: 'Android Studio: your development environment'
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![image](Images/f0005-01.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: The best way of developing Android apps is to use **Android Studio**, the official
    IDE for Android app development.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Android Studio is based on IntelliJ IDEA, which you may already be familiar
    with. It includes a set of code editors, UI tools and templates, which are all
    designed to make your life in Androidville easier.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: It also includes the **Android SDK**—or Android Software Development Kit—which
    is required for all Android app development. The Android SDK includes Android
    source files, and a compiler that’s used to compile your code into an Android
    format.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the main components of the Android SDK:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0005-02.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
- en: You need to install Android Studio
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As Android Studio includes all the tools and features you need in order to develop
    Android apps, we’re going to use it to build all of the apps featured in this
    book.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Before we go any further, **you need to install Android Studio on your machine**.
    There are more details about how to do this on the next page.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Install Android Studio
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To get the most out of this book, you need to install Android Studio. We’re
    not including the full installation instructions here as they can get out of date
    pretty quickly, but you’ll be fine if you follow the online instructions.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'First, check the Android Studio system requirements here:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.android.com/studio#Requirements](https://developer.android.com/studio#Requirements)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-56
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: These URLs sometimes change. If they don’t work, search for Android Studio and
    you should find the appropriate pages.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Then download Android Studio from here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[https://developer.android.com/studio](https://developer.android.com/studio)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: These URLs sometimes change. If they don’t work, search for Android Studio and
    you should find the appropriate pages.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: and follow the installation instructions
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve installed Android Studio, open it and follow the instructions to
    add the latest SDK tools and Support Libraries.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '**In this book, we’re using Android Studio 2020.3.1 (known as Arctic Fox).
    Make sure you install at least this version.**'
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**If you’ve previously installed an earlier version of Android Studio, we recommend
    that you restore the IDE’s default settings.** To do this, go to the File menu,
    choose Manage IDE Settings, and then select the Restore Default Settings option.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This resets any old settings Android Studio might be holding on to that could
    stop your code from running.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'When you’re done, you should see the Android Studio welcome screen like this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0006-04.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
- en: Let’s build a basic app
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![image](Images/f0007-01.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
- en: 'Now that you’ve set up your development environment, you’re ready to create
    your first Android app. Here’s what it will look like:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0007-02.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
- en: Let’s go ahead and build the app.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: How to build the app
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whenever you create a new app, you need to create a new project for it. Make
    sure you have Android Studio open, and follow along with us.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Create a new project
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Android Studio welcome screen gives you a number of options. We want to
    create a new project, so make sure the Projects option is selected, then click
    on “New Project.”
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0008-02.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
- en: 2\. Select a project template
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You next need to specify the type of Android Studio project you want to create.
    We’re going to create an app with an empty activity that runs on a phone or tablet,
    so make sure the Phone and Tablet option is selected, and choose the Empty Activity
    option. You’ll find out more about what the Empty Activity option gives you a
    few pages ahead, but for now, click the Next button to move to the next step.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0009-02.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
- en: 3\. Configure your project
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You now need to configure the project by specifying an app name, package name,
    and save location. Enter a name of “My First App” and a package name of “com.hfad.myfirstapp”
    and accept the default save location.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'You also need to tell Android Studio which programming language you want to
    use, and specify a minimum SDK. This refers to the lowest version of Android the
    app will support: there’s more about SDK levels on the next page.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Select Kotlin for the language and choose a minimum SDK of API 21 so that the
    app will run on most devices. When you click on the Finish button, Android Studio
    will create the project. We’ll look at what this involves a couple of pages ahead.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0010-02.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
- en: You’ve created your first Android project
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you’ve been through the New Project wizard, it takes Android Studio a
    minute or so to create the project. During this time, it does the following:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](Images/star.png) **It configures the project to your specifications.**'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android Studio looks at the minimum SDK you want the app to support, and includes
    all of the files and folders needed for a basic valid app. It also sets up the
    package structure and names the app.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Android Studio 查看您希望应用程序支持的最低 SDK，并包含所需的所有文件和文件夹以生成基本的有效应用程序。它还设置包结构并命名应用程序。
- en: '![Images](Images/star.png) **It adds some template code.**'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![图片](Images/star.png) **它添加了一些模板代码。**'
- en: The template code is comprised of a layout written in XML and an activity written
    in Kotlin. You’ll find out more about these later in the chapter.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 模板代码包括使用 XML 编写的布局和使用 Kotlin 编写的活动。在本章的后续部分将详细介绍这些内容。
- en: When Android Studio has finished creating the project, it automatically opens
    it for you.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Android Studio 完成项目创建后，它会自动为您打开该项目。
- en: 'Here’s what our project looks like (don’t worry if it looks complicated—we’ll
    break it down over the next few pages):'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们项目的外观（如果看起来复杂，不要担心——我们将在接下来的几页中逐步分解它）：
- en: '![image](Images/f0012-02.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0012-02.png)'
- en: Dissecting your new project
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解剖你的新项目
- en: An Android app is really just a bunch of valid files in a particular folder
    structure, and Android Studio sets all of this up for you when you create a new
    app. The easiest way of looking at this folder structure is to use the explorer
    in the leftmost column of Android Studio.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Android 应用程序实际上只是位于特定文件夹结构中的一堆有效文件，当您创建新应用程序时，Android Studio 会为您设置所有这些内容。查看这个文件夹结构最简单的方法是使用
    Android Studio 最左侧列中的资源管理器。
- en: The folder structure includes different types of files
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件夹结构包括不同类型的文件
- en: The explorer contains all of the projects that you currently have open. Here,
    we have a single project named MyFirstApp, which is the one we’ve just created.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 资源管理器包含当前打开的所有项目。这里，我们只有一个名为 MyFirstApp 的项目，这是我们刚刚创建的项目。
- en: 'If you browse through the various folders in the explorer, you’ll see that
    the wizard has created various types of files and folders for you like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您浏览资源管理器中的各种文件夹，您会看到向您创建了各种类型的文件和文件夹，例如：
- en: '![Images](Images/star.png) **Kotlin and XML source files**'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![图片](Images/star.png) **Kotlin 和 XML 源文件**'
- en: Android Studio automatically created an activity file named *MainActivity.kt*,
    and a layout named *activity_main.xml*.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Android Studio 自动创建了一个名为 *MainActivity.kt* 的活动文件和一个名为 *activity_main.xml* 的布局。
- en: '![Images](Images/star.png) **Resource files**'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![图片](Images/star.png) **资源文件**'
- en: These include default image files, themes the app might use, and any common
    `String` values used by the app.
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这些文件包括默认的图像文件、应用程序可能使用的主题以及应用程序使用的任何常见`String`值。
- en: '![Images](Images/star.png) **Android libraries**'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![图片](Images/star.png) **Android 库**'
- en: In the wizard, you specified the minimum SDK you want the app to be compatible
    with. Android Studio makes sure the app includes the relevant Android libraries
    for that version.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在向导中，您指定了希望应用程序兼容的最低 SDK 版本。Android Studio 确保应用程序包含该版本的相关 Android 库。
- en: '![Images](Images/star.png) **Configuration files**'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![图片](Images/star.png) **配置文件**'
- en: The configuration files tell Android what’s included in the app, and how the
    app should run.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 配置文件告诉 Android 应用程序包含什么内容以及应用程序应如何运行。
- en: '![image](Images/f0013-02.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0013-02.png)'
- en: Let’s take a closer look at some of the key files and folders in your project.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看项目中一些关键的文件和文件夹。
- en: Introducing the key files in your project
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍项目中的关键文件
- en: Android Studio projects use the Gradle build system to compile and deploy apps,
    and Gradle projects have a standard structure. Below are some of the key files
    and folders in that structure you’ll be working with.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio 项目使用 Gradle 构建系统来编译和部署应用程序，Gradle 项目具有标准结构。以下是您将要使用的该结构中的一些关键文件和文件夹。
- en: To see this view of the folder structure, change the explorer view in Android
    Studio from Android to Project. You do this by clicking on the arrow at the top
    of the explorer pane, and selecting the Project option.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此文件夹结构视图，请在 Android Studio 的资源管理器中将视图从 Android 更改为 项目。方法是单击资源管理器窗格顶部的箭头，然后选择项目选项。
- en: '![image](Images/f0014-02.png)![image](Images/f0014-03.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0014-02.png)![图片](Images/f0014-03.png)'
- en: Edit code with the Android Studio editors
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Android Studio 编辑器编辑代码
- en: You view and edit files using the Android Studio editors. Double-click on the
    file you want to work with, and the file’s contents will appear in the middle
    of the Android Studio window.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Android Studio 编辑器查看和编辑文件。双击要处理的文件，文件内容将显示在 Android Studio 窗口的中间位置。
- en: The code editor
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码编辑器
- en: Most files get displayed in the code editor, which is just like a text editor,
    but with extra features such as syntax highlighting and code checking.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数文件显示在代码编辑器中，它类似于文本编辑器，但具有额外的功能，如语法高亮和代码检查。
- en: The design editor
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计编辑器
- en: If you’re editing a layout (for example *activity_main.xml*), you have an extra
    option. Rather than edit the code, you can use the design editor, which allows
    you to drag GUI components onto the layout, and arrange them how you want. The
    code editor and design editor give different views of the same file, so you can
    switch back and forth between the two.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在编辑布局（例如*activity_main.xml*），您有另外一个选择。与其编辑代码，您可以使用设计编辑器，它允许您将GUI组件拖放到布局中，并按您的意愿排列它们。代码编辑器和设计编辑器展示了同一文件的不同视图，因此您可以在两者之间切换。
- en: '![image](Images/f0015-02.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/f0015-02.png)'
- en: The story so far
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 到目前为止的故事
- en: 'In the chapter so far, we’ve done two things:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经完成了两件事：
- en: '**We set up the development environment.**'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**我们设置了开发环境。**'
- en: We’re using Android Studio to develop Android apps, so you needed to install
    it on a machine.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们正在使用Android Studio开发Android应用程序，因此您需要在计算机上安装它。
- en: '**We’ve built a basic app.**'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**我们已经构建了一个基本的应用程序。**'
- en: We used Android Studio to create a new Android project.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们使用Android Studio创建了一个新的Android项目。
- en: You’ve had a glimpse of what the app looks like in Android Studio, and got a
    feel for how it hangs together. But what you *really* want is to see it running,
    right?
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经在Android Studio中看到了应用程序的样子，并对它的运行方式有了一定了解。但是您*真正*想要的是看到它运行起来，对吧？
- en: 'Android Studio lets you run an app in two ways: on a physical Android device,
    and on a virtual one. We’ll show you each approach a few pages ahead.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio允许您以两种方式运行应用程序：在物理Android设备上和在虚拟设备上。我们将在接下来的几页中展示每种方法。
- en: How to run the app on a physical device
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在物理设备上运行应用程序
- en: '![image](Images/f0019-01.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/f0019-01.png)'
- en: If you have an Android device that’s running Lollipop or above, you can use
    it to run the app we’ve just created.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是运行Lollipop或更高版本的Android设备，则可以使用它来运行我们刚刚创建的应用程序。
- en: Note
  id: totrans-134
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: You can check this by looking at the Android version in the device settings.
    Lollipop is version 5.0, so it needs to 5.0 or higher.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过查看设备设置中的Android版本来检查此问题。Lollipop是版本5.0，因此需要达到或高于5.0版本。
- en: 'Here are the steps to run the app on a physical device:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 运行应用程序在物理设备上的步骤如下：
- en: 1\. Enable USB debugging on your device
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 在您的设备上启用USB调试
- en: To allow Android Studio to run apps on your device, you need to enable USB debugging.
    This feature is available in the “Developer options” setting, which is disabled
    by default.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要允许Android Studio在您的设备上运行应用程序，您需要启用USB调试。此功能在“开发者选项”设置中可用，默认情况下处于禁用状态。
- en: On your device, go to Settings → About Phone and tap the build number seven
    times. This enables the developer options. Then, go to Settings → System → Advanced
    → Developer options, and turn on USB debugging.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的设备上，转到设置 → 关于手机，点击版本号七次。这将启用开发者选项。然后，转到设置 → 系统 → 高级 → 开发者选项，并启用USB调试。
- en: Note
  id: totrans-140
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Yep, seriously.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，说真的。
- en: '![image](Images/f0019-04.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/f0019-04.png)'
- en: 2\. Set up your computer to detect the device
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 配置计算机以检测设备
- en: If you’re using a Mac, you can skip this step.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Mac，您可以跳过此步骤。
- en: 'If you’re using Windows, you’ll need to install a USB driver if one isn’t already
    there. The latest instructions are here:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Windows，如果尚未安装USB驱动程序，则需要安装一个USB驱动程序。最新的说明在这里：
- en: '*[https://developer.android.com/studio/run/oem-usb](https://developer.android.com/studio/run/oem-usb)*'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*[https://developer.android.com/studio/run/oem-usb](https://developer.android.com/studio/run/oem-usb)*'
- en: 'If you’re using Ubuntu Linux, you need to create a `udev` rules file. The latest
    instructions on how to do this are here:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Ubuntu Linux，您需要创建一个`udev`规则文件。如何执行此操作的最新说明在这里：
- en: '*[https://developer.android.com/studio/run/device#setting-up](https://developer.android.com/studio/run/device#setting-up)*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*[https://developer.android.com/studio/run/device#setting-up](https://developer.android.com/studio/run/device#setting-up)*'
- en: 3\. Use a USB cable to plug your device into your computer
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 使用USB电缆将您的设备连接到计算机
- en: You will probably be asked if want to allow USB debugging. If so, check the
    “Always allow from this computer” option and choose OK.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会被要求是否允许USB调试。如果是，请选中“始终允许此计算机”，然后选择“确定”。
- en: '**When we created the app, we specified a minimum API level of 21 (Lollipop).
    Your device needs this version of Android or above for the app to run.**'
  id: totrans-151
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**创建应用程序时，我们指定了最低API级别为21（Lollipop）。您的设备需要Android版本达到或高于此才能运行该应用程序。**'
- en: 4\. Run the app
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 运行应用程序
- en: Finally, select the device from the list of devices in Android Studio’s top
    toolbar (if it’s not there, on your device go to Settings → Connected devices,
    select USB, and choose the “File transfer” option). Then run the app by choosing
    “Run ‘app’” from the Run menu. Android Studio will build the project, install
    the app on your device, and launch it.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0019-05.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
- en: We’ll look at the app a few pages ahead, after we’ve seen how to run it on a
    virtual device.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: How to run the app on a virtual device
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you don’t have an Android device on hand, or it doesn’t have the right version
    of Android, you can run the app on a virtual device instead. Running the app on
    a virtual device is useful if you want to see how the app looks on a type of device
    you don’t own, or test how it behaves on a different version of Android.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: The Android SDK features a built-in emulator that you can use to set up one
    or more **Android Virtual Devices** (AVDs). Once you’ve set up an AVD, you can
    run the app on it as though it’s running on a physical device.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-159
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'You can find system requirements for using the emulator here: [https://developer.android.com/studio/run/emulator#requirements](https://developer.android.com/studio/run/emulator#requirements)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: 'The emulator recreates the exact hardware environment of an Android device:
    from its CPU and memory through to the sound chips and the video display. The
    emulator is built on an existing emulator called QEMU (pronounced “queue em you”),
    which is similar to other virtual machine applications you may have used, like
    VirtualBox or VMWare.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: The exact appearance and behavior of the AVD depends on how you set it up. If,
    say, you create an AVD based on a Pixel 3 running Android 11, it will look and
    behave just like a Pixel 3 running this version of Android on your computer.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0020-03.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
- en: Let’s set up an AVD so that you can see the app running in the emulator.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Create an Android Virtual Device (AVD)
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a few steps you need to go through in order to set up an AVD within
    Android Studio. We’ll set up a Pixel 3 AVD running API level 30 (Android 11) so
    that you can see how the app looks and behaves running on this type of device.
    The steps are pretty much identical no matter what type of virtual device you
    want to set up.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Open the Android Virtual Device Manager
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The AVD Manager allows you to set up new AVDs, and view and edit ones you’ve
    already created. Open it by selecting AVD Manager on the Tools menu.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: If you have no AVDs set up already, you’ll be presented with a screen prompting
    you to create one. Click on the Create Virtual Device button.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0021-02.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
- en: Select the hardware
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On the next screen, you’ll be prompted to choose a device definition. This is
    the type of device your AVD will emulate. You can choose a variety of phone, tablet,
    wear, or TV devices.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: We’re going to see what the app looks like running on a Pixel 3 phone. Choose
    Phone from the Category menu and Pixel 3 from the list. Then click on the Next
    button.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0021-03.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
- en: Select a system image
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, you need to select a system image. This specifies which version of Android
    you want to be on the AVD.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: You need to choose a version of Android that’s compatible with the app you’re
    building. It must be *at least* the minimum SDK that the app supports.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: When you created your Android project, you specified that the minimum SDK is
    API level 21\. This means that you need to choose a system image that’s for API
    level 21 (Lollipop) or above. If you choose an older version of Android than this,
    the app won’t be able to run on the device.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: Here, we’re going to see what the app looks like on a relatively new version
    of Android, so choose the system image with a release name of R and a target of
    Android 11.0 (API level 30). Then click Next.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0022-02.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
- en: Verify the AVD configuration
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On the next screen, you’ll be asked to verify the configuration. This screen
    summarizes the options you chose over the last few screens, and gives you the
    option of changing them. Accept the options, and click on the Finish button.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0023-02.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
- en: The virtual device gets created
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you click on the Finish button, the Device Manager creates the virtual
    device for you, and displays it in the AVD Manager’s list of virtual devices like
    this:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0024-02.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
- en: Check the new AVD is listed, then close the AVD Manager.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: Run the app on the AVD
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you’ve created the AVD, you can run the app on it.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: To run the app, make sure that the virtual device is selected in the list of
    devices in Android Studio’s top toolbar, then run the app by choosing the “Run
    ‘app’” command from the Run menu.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: The AVD can take a while to load, so while we wait, let’s take a look at what
    happens behind the scenes when you use the Run command.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0024-03.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
- en: Compile, package, deploy, run
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Run command doesn’t just run your app. It also handles all the preliminary
    tasks that are needed for the app to run.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s an overview of what happens:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '**An APK file is an Android application package. It’s like a ZIP or JAR file
    for Android applications.**'
  id: totrans-196
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![image](Images/f0025-02.png)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
- en: '**The Kotlin source files get compiled to bytecode.**'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**An Android application package, or APK file, gets created.**'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The APK file includes the compiled Kotlin files, along with any libraries and
    resources needed by the app.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The APK is installed on the device.**'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the device is virtual, Android Studio launches the emulator and waits until
    the AVD is active before installing the APK.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If the device is physical, it just installs the APK.
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**The device starts the app’s main activity.**'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The app is displayed on the device screen, and it’s all ready for you to play
    with.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now that you know what happens when you use the Run command, let’s see what
    the app we’ve built looks like.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: '![Images](Images/car.png) Test Drive'
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '![图片](Images/car.png) 测试驾驶'
- en: Make sure you’ve run the app on a physical or virtual device by choosing the
    “Run ‘app’” command from the Run menu.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 确保通过从运行菜单中选择“运行‘应用程序’”命令在物理或虚拟设备上运行应用程序。
- en: Android Studio loads the app onto the device and starts it. The app name “My
    First App” appears at the top of the screen, and the text “Hello World!” is displayed
    in the center.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio将应用程序加载到设备上并启动它。屏幕顶部显示应用程序名称“My First App”，中心显示文本“Hello World!”。
- en: '![image](Images/f0026-03.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0026-03.png)'
- en: Let’s run through what just happened.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾刚才发生的事情。
- en: What just happened?
  id: totrans-212
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'Let’s break down what happens when you run the app:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解运行应用程序时发生的事情：
- en: '**Android Studio installs the app on the device.**'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Android Studio将应用程序安装在设备上。**'
- en: If the device is virtual, it waits for the emulator to start before installing
    the app.
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果设备是虚拟的，在安装应用程序之前会等待模拟器启动。
- en: '![image](Images/f0027-02.png)'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](Images/f0027-02.png)'
- en: '**Android starts the app’s main activity.**'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Android启动应用程序的主活动。**'
- en: It uses the code in *MainActivity.kt* (which Android Studio automatically included
    in the project) to create a `MainActivity` object.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 它使用*MainActivity.kt*中的代码（Android Studio自动包含在项目中）来创建一个`MainActivity`对象。
- en: '![image](Images/f0027-03.png)'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](Images/f0027-03.png)'
- en: '**MainActivity specifies that it uses the layout activity_main.xml.**'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**MainActivity指定使用布局activity_main.xml。**'
- en: '![image](Images/f0027-04.png)'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](Images/f0027-04.png)'
- en: '**The layout is displayed on the screen.**'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**布局显示在屏幕上。**'
- en: The text “Hello World!” appears in the center of the screen.
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文本“Hello World!”显示在屏幕中央。
- en: '![image](Images/f0027-05.png)'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图片](Images/f0027-05.png)'
- en: Let’s refine the app
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让我们优化应用程序
- en: '![image](Images/f0028-01.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0028-01.png)'
- en: So far in this chapter, you’ve built a basic Android app and seen it running
    on a physical or virtual device. Next, we’re going to refine the app.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本章中，您已经构建了一个基本的Android应用程序，并在物理或虚拟设备上看到它运行。接下来，我们将对应用程序进行优化。
- en: At the moment, the app displays the sample text “Hello World!” that the wizard
    put in as a placeholder. You’re going to change that text to say something else
    instead. So what do we need to change in order to achieve that?
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，应用程序显示向导放置的示例文本“Hello World!”作为占位符。您将更改该文本以显示其他内容。那么我们需要更改什么才能实现这一点呢？
- en: To answer that question, let’s take a step back and see how the app is currently
    built.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 要回答这个问题，让我们退一步看看应用程序当前是如何构建的。
- en: '![image](Images/f0028-02.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0028-02.png)'
- en: The app has one activity and one layout
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用程序有一个活动和一个布局
- en: When we built the app, we told Android Studio how to configure it, and the wizard
    did the rest. The wizard created an activity for us, and also a default layout.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们构建应用程序时，我们告诉Android Studio如何配置它，向导完成了其余工作。向导为我们创建了一个活动，还创建了一个默认布局。
- en: The activity controls what the app does
  id: totrans-233
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动控制应用程序的功能
- en: Android Studio created an activity for us named *MainActivity.kt*. The activity
    specifies what the app **does** and how it should respond to the user.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio为我们创建了一个名为*MainActivity.kt*的活动。该活动指定了应用程序**的功能**以及如何响应用户。
- en: The layout controls the app’s appearance
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布局控制应用程序的外观
- en: '*MainActivity.kt* uses the layout Android Studio created for us named *activity_main.xml*.
    The layout specifies what the app **looks like**.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '*MainActivity.kt*使用Android Studio为我们创建的名为*activity_main.xml*的布局。布局指定了应用程序**的外观**。'
- en: '![image](Images/f0028-03.png)'
  id: totrans-237
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0028-03.png)'
- en: We want to change the appearance of the app by updating the text that’s displayed.
    This means that we need to update the file that controls what the app looks like,
    so we need to take a closer look at the *layout*.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望通过更新显示的文本来更改应用程序的外观。这意味着我们需要更新控制应用程序外观的文件，因此我们需要更仔细地查看*布局*。
- en: What’s in the layout?
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 布局中有什么？
- en: We want to change the sample “Hello World!” text that Android Studio created
    for us, so let’s start with the layout file *activity_main.xml*. Open it now (if
    it’s not already open) by finding the file in the *app/src/main/res/layout* folder
    in the explorer and double-clicking on it.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要更改Android Studio为我们创建的示例“Hello World!”文本，因此让我们从布局文件*activity_main.xml*开始。如果尚未打开，请在资源管理器中的*app/src/main/res/layout*文件夹中找到该文件并双击打开。
- en: '![image](Images/f0029-02.png)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0029-02.png)'
- en: The design editor
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计编辑器
- en: 'As you learned earlier, there are two ways of viewing and editing layout files
    in Android Studio: through the **design editor** and through the **code editor**.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您之前了解的，Android Studio有两种查看和编辑布局文件的方式：通过**设计编辑器**和**代码编辑器**。
- en: When you choose the design option, you can see that the sample text “Hello World!”
    appears in the layout as you might expect. But what’s in the underlying XML?
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see by switching to the code editor.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0029-03.png)'
  id: totrans-246
  prefs: []
  type: TYPE_IMG
- en: The code editor
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Switch to the code editor by clicking on the Code option at the top of the editor.
    This shows you the layout’s underlying XML.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a closer look at the code.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: activity_main.xml has two elements
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Below is the code from *activity_main.xml* that Android Studio generated for
    us. We’ve left out some of the details you don’t need to think about just yet;
    we’ll cover them in more detail through the rest of the book.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s the code:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0030-02.png)![image](Images/f0030-03.png)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
- en: As you can see, the code contains two elements.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: The first is a `<…ConstraintLayout>` element. This is a type of layout element
    that tells Android how to display components on the device screen. There are various
    types of layout available for you to use, and you’ll find out more about these
    later in the book.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: The most important element for now is the second element, the `<TextView>`.
    This element is used to display text to the user, in this case the text “Hello
    World!”
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: 'The key part of the code within the `<TextView>` element is the line starting
    with `android:text`. This is a `text` attribute that describes the text that should
    be displayed:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0030-05.png)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
- en: We’ll change the text to something else after you’ve had a go at the following
    exercise.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: Update the text displayed in the layout
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We want to change the text in *activity_main.xml* so that when we run the app,
    it displays something other than “Hello World!” We can do this by changing the
    `text` attribute in the layout’s `<TextView>` element:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0033-02.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
- en: The `text` attribute is defined inside the `<TextView>` element using the code
    `android:text`. It specifies what text should be displayed, in this case “Hello
    World!”
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0033-03.png)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
- en: 'To update the text that’s displayed in the layout, simply change the value
    of the `text` attribute from `"Hello World!"` to some other text, such as `"Pow!"`.
    The new code for the `<TextView>` element should look like this:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/f0033-04.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
- en: That’s the only change you need to make in order to update the text. Let’s see
    what happens when the code runs.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: What the code does
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we take the app for a test drive, let’s go through what the code does.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: '**Android uses MainActivity.kt to create the activity object MainActivity.**'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](Images/f0034-02.png)'
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**MainActivity specifies that it uses the layout activity_main.xml.**'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](Images/f0034-03.png)'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**The layout displays the text “Pow!” in the center of the app on the device.**'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](Images/f0034-04.png)'
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '![Images](Images/car.png) Test Drive'
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve edited the file, try running the app in the emulator again by choosing
    the “Run ‘app’” command from the Run menu, or clicking on the Run button. You
    should see that the app now says “Pow!” instead of “Hello World!”
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑完文件后，尝试再次在模拟器中运行应用程序，方法是从运行菜单中选择“运行‘app’”命令，或者点击运行按钮。您应该看到应用程序现在显示“Pow！”而不是“Hello
    World！”
- en: '![image](Images/f0035-02.png)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0035-02.png)'
- en: Congratulations! You’ve now built and updated your first app, and learned how
    Android apps hang together in the process. We’ll build on this further in the
    next chapter by creating an app you can interact with.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您现在已经构建并更新了您的第一个应用程序，并在此过程中了解了Android应用程序是如何组合在一起的。在下一章中，我们将进一步构建一个您可以与之交互的应用程序。
- en: Your Android Toolbox
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您的Android工具箱
- en: '![image](Images/f0036-01.png)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0036-01.png)'
- en: '**You’ve got [Chapter 1](#getting_startedcolon_diving_in) under your belt and
    now you’ve added Android basic concepts to your toolbox.**'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '**您已经掌握了[第一章](#getting_startedcolon_diving_in)，现在您已经将Android基本概念添加到您的工具箱中。**'
- en: '![image](Images/f0036-02.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0036-02.png)'
