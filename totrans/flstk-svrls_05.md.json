["```\nimport React, { useEffect } from 'react'\nimport { Auth } from 'aws-amplify'\n\nconst protectedRoute = (Comp, route = '/profile') => (props) => {\n  async function checkAuthState() {\n    try {\n      await Auth.currentAuthenticatedUser()\n    } catch (err) {\n      props.history.push(route)\n    }\n  }\n  useEffect(() => {\n    checkAuthState()\n  }, [])\n  return <Comp {...props} />\n}\n\nexport default protectedRoute\n```", "```\n// Default redirect route\nexport default protectedRoute(App)\n\n// Custom redirect route\nexport default protectedRoute(App, '/about-us')\n```", "```\nimport React from 'react';\nimport Container from './Container'\nimport protectedRoute from './protectedRoute'\n\nfunction Protected() {\n  return (\n    <Container>\n      <h1>Protected route</h1>\n    </Container>\n  );\n}\n\nexport default protectedRoute(Protected)\n```", "```\nButton.js\nForm.js\nSignUp.js\nConfirmSignUp.js\nSignIn.js\nForgotPassword.js\nForgotPasswordSubmit.js\n```", "```\nimport React from 'react'\n\nexport default function Button({ onClick, title }) {\n  return (\n    <button style={styles.button} onClick={onClick}>\n      {title}\n    </button>\n  )\n}\n\nconst styles = {\n  button: {\n    backgroundColor: '#006bfc',\n    color: 'white',\n    width: 316,\n    height: 45,\n    fontWeight: '600',\n    fontSize: 14,\n    cursor: 'pointer',\n    border:'none',\n    outline: 'none',\n    borderRadius: 3,\n    marginTop: '25px',\n    boxShadow: '0px 1px 3px rgba(0, 0, 0, .3)',\n  },\n}\n```", "```\n/* src/Form.js */\nimport React, { useState } from 'react'\nimport { Auth } from 'aws-amplify'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport ConfirmSignUp from './ConfirmSignUp'\nimport ForgotPassword from './ForgotPassword'\nimport ForgotPasswordSubmit from './ForgotPasswordSubmit'\n\nconst initialFormState = {\n  username: '', password: '', email: '', confirmationCode: ''\n}\n\nfunction Form(props) {\n  const [formType, updateFormType] = useState('signIn')\n  const [formState, updateFormState] = useState(initialFormState)\n  function renderForm() {}\n  return (\n    <div>\n      {renderForm()}\n    </div>\n  )\n}\n```", "```\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 150,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 45,\n    marginTop: 8,\n    width: 300,\n    maxWidth: 300,\n    padding: '0px 8px',\n    fontSize: 16,\n    outline: 'none',\n    border: 'none',\n    borderBottom: '2px solid rgba(0, 0, 0, .3)'\n  },\n  toggleForm: {\n    fontWeight: '600',\n    padding: '0px 25px',\n    marginTop: '15px',\n    marginBottom: 0,\n    textAlign: 'center',\n    color: 'rgba(0, 0, 0, 0.6)'\n  },\n  resetPassword: {\n    marginTop: '5px',\n  },\n  anchor: {\n    color: '#006bfc',\n    cursor: 'pointer'\n  }\n}\n\nexport { styles, Form as default }\n```", "```\n/* src/SignIn.js */\nimport React from 'react'\nimport Button from './Button'\nimport { styles } from './Form'\n\nfunction SignIn({ signIn, updateFormState }) {\n  return (\n    <div style={styles.container}>\n      <input\n        name='username'\n        onChange={e => {e.persist();updateFormState(e)}}\n        style={styles.input}\n        placeholder='username'\n      />\n      <input\n        type='password'\n        name='password'\n        onChange={e => {e.persist();updateFormState(e)}}\n        style={styles.input}\n        placeholder='password'\n      />\n      <Button onClick={signIn} title=\"Sign In\" />\n    </div>\n  )\n}\n\nexport default SignIn\n```", "```\n/* src/SignUp.js */\nimport React from 'react'\nimport Button from './Button'\nimport { styles } from './Form'\n\nfunction SignUp({ updateFormState, signUp }) {\n  return (\n    <div style={styles.container}>\n      <input\n        name='username'\n        onChange={e => {e.persist();updateFormState(e)}}\n        style={styles.input}\n        placeholder='username'\n      />\n      <input\n        type='password'\n        name='password'\n        onChange={e => {e.persist();updateFormState(e)}}\n        style={styles.input}\n        placeholder='password'\n      />\n      <input\n        name='email'\n        onChange={e => {e.persist();updateFormState(e)}}\n        style={styles.input}\n        placeholder='email'\n      />\n      <Button onClick={signUp} title=\"Sign Up\" />\n    </div>\n  )\n}\n\nexport default SignUp\n```", "```\n/* src/ConfirmSignUp.js */\nimport React from 'react'\nimport Button from './Button'\nimport { styles } from './Form'\n\nfunction ConfirmSignUp(props) {\n  return (\n    <div style={styles.container}>\n      <input\n        name='confirmationCode'\n        placeholder='Confirmation Code'\n        onChange={e => {e.persist();props.updateFormState(e)}}\n        style={styles.input}\n      />\n      <Button onClick={props.confirmSignUp} title=\"Confirm Sign Up\" />\n    </div>\n  )\n}\n\nexport default ConfirmSignUp\n```", "```\n/* src/ForgotPassword.js */\nimport React from 'react'\nimport Button from './Button'\nimport { styles } from './Form'\n\nfunction ForgotPassword(props) {\n  return (\n    <div style={styles.container}>\n      <input\n        name='username'\n        placeholder='Username'\n        onChange={e => {e.persist();props.updateFormState(e)}}\n        style={styles.input}\n      />\n      <Button onClick={props.forgotPassword} title=\"Reset password\" />\n    </div>\n  )\n}\n\nexport default ForgotPassword\n```", "```\n/* src/ForgotPasswordSubmit.js */\nimport React from 'react'\nimport Button from './Button'\nimport { styles } from './Form'\n\nfunction ForgotPasswordSubmit(props) {\n  return (\n    <div style={styles.container}>\n      <input\n        name='confirmationCode'\n        placeholder='Confirmation code'\n        onChange={e => {e.persist();props.updateFormState(e)}}\n        style={styles.input}\n      />\n      <input\n        name='password'\n        placeholder='New password'\n        type='password'\n        onChange={e => {e.persist();props.updateFormState(e)}}\n        style={styles.input}\n      />\n      <Button onClick={props.forgotPasswordSubmit} title=\"Save new password\" />\n    </div>\n  )\n}\n\nexport default ForgotPasswordSubmit\n```", "```\n/* src/Form.js */\nasync function signIn({ username, password }, setUser) {\n  try {\n    const user = await Auth.signIn(username, password)\n    const userInfo = { username: user.username, ...user.attributes }\n    setUser(userInfo)\n  } catch (err) {\n    console.log('error signing up..', err)\n  }\n}\n\nasync function signUp({ username, password, email }, updateFormType) {\n  try {\n    await Auth.signUp({\n      username, password, attributes: { email }\n    })\n    console.log('sign up success!')\n    updateFormType('confirmSignUp')\n  } catch (err) {\n    console.log('error signing up..', err)\n  }\n}\n\nasync function confirmSignUp({ username, confirmationCode }, updateFormType) {\n  try {\n    await Auth.confirmSignUp(username, confirmationCode)\n    updateFormType('signIn')\n  } catch (err) {\n    console.log('error signing up..', err)\n  }\n}\n\nasync function forgotPassword({ username }, updateFormType) {\n  try {\n    await Auth.forgotPassword(username)\n    updateFormType('forgotPasswordSubmit')\n  } catch (err) {\n    console.log('error submitting username to reset password...', err)\n  }\n}\n\nasync function forgotPasswordSubmit(\n    { username, confirmationCode, password }, updateFormType\n  ) {\n  try {\n    await Auth.forgotPasswordSubmit(username, confirmationCode, password)\n    updateFormType('signIn')\n  } catch (err) {\n    console.log('error updating password... :', err)\n  }\n}\n```", "```\nconst initialFormState = {\n  username: '', password: '', email: '', confirmationCode: ''\n}\n```", "```\nconst [formState, updateFormState] = useState(initialFormState)\n```", "```\nfunction updateForm(event) {\n  const newFormState = {\n    ...formState, [event.target.name]: event.target.value\n  }\n  updateFormState(newFormState)\n}\n```", "```\nfunction renderForm() {\n  switch(formType) {\n    case 'signUp':\n      return (\n        <SignUp\n          signUp={() => signUp(formState, updateFormType)}\n          updateFormState={e => updateForm(e)}\n        />\n      )\n    case 'confirmSignUp':\n      return (\n        <ConfirmSignUp\n          confirmSignUp={() => confirmSignUp(formState, updateFormType)}\n          updateFormState={e => updateForm(e)}\n        />\n      )\n    case 'signIn':\n      return (\n        <SignIn\n          signIn={() => signIn(formState, props.setUser)}\n          updateFormState={e => updateForm(e)}\n        />\n      )\n    case 'forgotPassword':\n      return (\n        <ForgotPassword\n        forgotPassword={() => forgotPassword(formState, updateFormType)}\n        updateFormState={e => updateForm(e)}\n        />\n      )\n    case 'forgotPasswordSubmit':\n      return (\n        <ForgotPasswordSubmit\n          forgotPasswordSubmit={\n            () => forgotPasswordSubmit(formState, updateFormType)}\n          updateFormState={e => updateForm(e)}\n        />\n      )\n    default:\n      return null\n  }\n}\n```", "```\nreturn (\n  <div>\n    {renderForm()}\n    {\n      formType === 'signUp' && (\n        <p style={styles.toggleForm}>\n          Already have an account? <span\n            style={styles.anchor}\n            onClick={() => updateFormType('signIn')}\n          >Sign In</span>\n        </p>\n      )\n    }\n    {\n      formType === 'signIn' && (\n        <>\n          <p style={styles.toggleForm}>\n            Need an account? <span\n              style={styles.anchor}\n              onClick={() => updateFormType('signUp')}\n            >Sign Up</span>\n          </p>\n          <p style={{ ...styles.toggleForm, ...styles.resetPassword}}>\n            Forget your password? <span\n              style={styles.anchor}\n              onClick={() => updateFormType('forgotPassword')}\n            >Reset Password</span>\n          </p>\n        </>\n      )\n    }\n  </div>\n)\n```", "```\nimport React, { useState, useEffect } from 'react'\nimport { Button } from 'antd'\nimport { Auth, Hub } from 'aws-amplify'\nimport Container from './Container'\nimport Form from './Form'\n\nfunction Profile() {\n  useEffect(() => {\n    checkUser()\n    Hub.listen('auth', (data) => {\n      const { payload } = data\n      if (payload.event === 'signOut') {\n        setUser(null)\n      }\n    })\n  }, [])\n  const [user, setUser] = useState(null)\n  async function checkUser() {\n    try {\n      const data = await Auth.currentUserPoolUser()\n      const userInfo = { username: data.username, ...data.attributes, }\n      setUser(userInfo)\n    } catch (err) { console.log('error: ', err) }\n  }\n  function signOut() {\n    Auth.signOut()\n      .catch(err => console.log('error signing out: ', err))\n  }\n  if (user) {\n    return (\n      <Container>\n        <h1>Profile</h1>\n        <h2>Username: {user.username}</h2>\n        <h3>Email: {user.email}</h3>\n        <h4>Phone: {user.phone_number}</h4>\n        <Button onClick={signOut}>Sign Out</Button>\n      </Container>\n    );\n  }\n  return <Form setUser={setUser} />\n}\n\nexport default Profile\n```", "```\nnpm start\n```"]