["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: rate-limiter\nspec:\n  containers:\n  - name: business-app\n    image: bmuschko/nodejs-business-app:1.0.0\n    ports:\n    - containerPort: 8080\n    resources:\n      requests:\n        memory: \"256Mi\"\n        cpu: \"1\"\n  - name: ambassador\n    image: bmuschko/nodejs-ambassador:1.0.0\n    ports:\n    - containerPort: 8081\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n```", "```\n$ kubectl get nodes\nNAME           STATUS   ROLES                  AGE   VERSION\nminikube       Ready    control-plane,master   12d   v1.21.2\nminikube-m02   Ready    <none>                 42m   v1.21.2\nminikube-m03   Ready    <none>                 41m   v1.21.2\n```", "```\n$ kubectl create -f rate-limiter-pod.yaml\npod/rate-limiter created\n$ kubectl get pod rate-limiter -o yaml | grep nodeName:\n  nodeName: minikube-m03\n```", "```\n$ kubectl describe node minikube-m03\n...\nCapacity:\n  cpu:                2\n  ephemeral-storage:  17784752Ki\n  hugepages-2Mi:      0\n  memory:             2186612Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  17784752Ki\n  hugepages-2Mi:      0\n  memory:             2186612Ki\n  pods:               110\n...\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                CPU Requests  CPU Limits  \\\n  Memory Requests  Memory Limits  AGE\n  ---------                   ----                ------------  ----------  \\\n  ---------------  -------------  ---\n  default                     rate-limiter        1250m (62%)   0 (0%)      \\\n  320Mi (14%)      0 (0%)         9m\n...\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: rate-limiter\nspec:\n  containers:\n  - name: business-app\n    image: bmuschko/nodejs-business-app:1.0.0\n    ports:\n    - containerPort: 8080\n    resources:\n      limits:\n        memory: \"512Mi\"\n        cpu: \"2\"\n  - name: ambassador\n    image: bmuschko/nodejs-ambassador:1.0.0\n    ports:\n    - containerPort: 8081\n    resources:\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n```", "```\n$ kubectl describe node minikube-m03\n...\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                CPU Requests  CPU Limits  \\\n   Memory Requests  Memory Limits  AGE\n  ---------                   ----                ------------  ----------  \\\n  ---------------  -------------  ---\n  default                     rate-limiter        1250m (62%)   1250m (62%) \\\n  320Mi (14%)      320Mi (14%)    11s\n...\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: rate-limiter\nspec:\n  containers:\n  - name: business-app\n    image: bmuschko/nodejs-business-app:1.0.0\n    ports:\n    - containerPort: 8080\n    resources:\n      requests:\n        memory: \"256Mi\"\n        cpu: \"1\"\n      limits:\n        memory: \"512Mi\"\n        cpu: \"2\"\n  - name: ambassador\n    image: bmuschko/nodejs-ambassador:1.0.0\n    ports:\n    - containerPort: 8081\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n```", "```\n$ kubectl describe node minikube-m03\n...\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                CPU Requests  CPU Limits   \\\n   Memory Requests  Memory Limits  AGE\n  ---------                   ----                ------------  ----------   \\\n  ---------------  -------------  ---\n  default                     rate-limiter        1250m (62%)   2500m (125%) \\\n  320Mi (14%)      640Mi (29%)    3s\n...\n```", "```\n.\n├── app-stack\n│   ├── mysql-pod.yaml\n│   ├── mysql-service.yaml\n│   ├── web-app-pod.yaml\n│   └── web-app-service.yaml\n├── nginx-deployment.yaml\n└── web-app\n    ├── config\n    │   ├── db-configmap.yaml\n    │   └── db-secret.yaml\n    └── web-app-pod.yaml\n```", "```\n$ kubectl apply -f nginx-deployment.yaml\ndeployment.apps/nginx-deployment created\n```", "```\n$ kubectl apply -f app-stack/\npod/mysql-db created\nservice/mysql-service created\npod/web-app created\nservice/web-app-service created\n```", "```\n$ kubectl apply -f web-app/ -R\nconfigmap/db-config configured\nsecret/db-creds created\npod/web-app created\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/bmuschko/cka-study-guide/ \\\n  master/ch04/object-management/nginx-deployment.yaml\ndeployment.apps/nginx-deployment created\n```", "```\n$ kubectl get pod web-app -o yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{}, \\\n      \"labels\":{\"app\":\"web-app\"},\"name\":\"web-app\",\"namespace\":\"default\"}, \\\n      \"spec\":{\"containers\":[{\"envFrom\":[{\"configMapRef\":{\"name\":\"db-config\"}}, \\\n      {\"secretRef\":{\"name\":\"db-creds\"}}],\"image\":\"bmuschko/web-app:1.0.1\", \\\n      \"name\":\"web-app\",\"ports\":[{\"containerPort\":3000,\"protocol\":\"TCP\"}]}], \\\n      \"restartPolicy\":\"Always\"}}\n...\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\n    team: red\nspec:\n  replicas: 5\n...\n```", "```\n$ kubectl apply -f nginx-deployment.yaml\ndeployment.apps/nginx-deployment configured\n$ kubectl get deployments,pods\nNAME                               READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/nginx-deployment   5/5     5            5           10m\n\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/nginx-deployment-66b6c48dd5-79j6t   1/1     Running   0          35s\npod/nginx-deployment-66b6c48dd5-bkkgb   1/1     Running   0          10m\npod/nginx-deployment-66b6c48dd5-d26c8   1/1     Running   0          10m\npod/nginx-deployment-66b6c48dd5-fcqrs   1/1     Running   0          10m\npod/nginx-deployment-66b6c48dd5-whfnn   1/1     Running   0          35s\n$ kubectl get deployment nginx-deployment -o yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{}, \\\n      \"labels\":{\"app\":\"nginx\",\"team\":\"red\"},\"name\":\"nginx-deployment\", \\\n      \"namespace\":\"default\"},\"spec\":{\"replicas\":5,\"selector\":{\"matchLabels\": \\\n      {\"app\":\"nginx\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx\"}}, \\\n      \"spec\":{\"containers\":[{\"image\":\"nginx:1.14.2\",\"name\":\"nginx\", \\\n      \"ports\":[{\"containerPort\":80}]}]}}}}\n...\n```", "```\n$ kubectl delete -f nginx-deployment.yaml\ndeployment.apps \"nginx-deployment\" deleted\n$ kubectl get deployments,replicasets,pods\nNo resources found in default namespace.\n```", "```\n$ kubectl kustomize <target>\n```", "```\n$ kubectl apply -k <target>\n```", "```\n.\n├── kustomization.yaml\n├── web-app-deployment.yaml\n└── web-app-service.yaml\n```", "```\nresources:\n- web-app-deployment.yaml\n- web-app-service.yaml\n```", "```\n$ kubectl kustomize ./\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: web-app-service\n  name: web-app-service\nspec:\n  ports:\n  - name: web-app-port\n    port: 3000\n    protocol: TCP\n    targetPort: 3000\n  selector:\n    app: web-app\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: web-app-deployment\n  name: web-app-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web-app\n  template:\n    metadata:\n      labels:\n        app: web-app\n    spec:\n      containers:\n      - env:\n        - name: DB_HOST\n          value: mysql-service\n        - name: DB_USER\n          value: root\n        - name: DB_PASSWORD\n          value: password\n        image: bmuschko/web-app:1.0.1\n        name: web-app\n        ports:\n        - containerPort: 3000\n```", "```\n.\n├── config\n│   ├── db-config.properties\n│   └── db-secret.properties\n├── kustomization.yaml\n└── web-app-pod.yaml\n```", "```\nconfigMapGenerator:\n- name: db-config\n  files:\n  - config/db-config.properties\nsecretGenerator:\n- name: db-creds\n  files:\n  - config/db-secret.properties\nresources:\n- web-app-pod.yaml\n```", "```\n$ kubectl apply -k ./\nconfigmap/db-config-t4c79h4mtt unchanged\nsecret/db-creds-4t9dmgtf9h unchanged\npod/web-app created\n```", "```\n$ kubectl kustomize ./\napiVersion: v1\ndata:\n  db-config.properties: |-\n    DB_HOST: mysql-service\n    DB_USER: root\nkind: ConfigMap\nmetadata:\n  name: db-config-t4c79h4mtt\n---\napiVersion: v1\ndata:\n  db-secret.properties: REJfUEFTU1dPUkQ6IGNHRnpjM2R2Y21RPQ==\nkind: Secret\nmetadata:\n  name: db-creds-4t9dmgtf9h\ntype: Opaque\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: web-app\n  name: web-app\nspec:\n  containers:\n  - envFrom:\n    - configMapRef:\n        name: db-config-t4c79h4mtt\n    - secretRef:\n        name: db-creds-4t9dmgtf9h\n    image: bmuschko/web-app:1.0.1\n    name: web-app\n    ports:\n    - containerPort: 3000\n      protocol: TCP\n  restartPolicy: Always\n```", "```\nnamespace: persistence\ncommonLabels:\n  team: helix\nresources:\n- web-app-deployment.yaml\n- web-app-service.yaml\n```", "```\n$ kubectl create namespace persistence\nnamespace/persistence created\n$ kubectl apply -k ./\nservice/web-app-service created\ndeployment.apps/web-app-deployment created\n```", "```\n$ kubectl kustomize ./\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: web-app-service\n    team: helix\n  name: web-app-service\n  namespace: persistence\nspec:\n  ports:\n  - name: web-app-port\n    port: 3000\n    protocol: TCP\n    targetPort: 3000\n  selector:\n    app: web-app\n    team: helix\n  type: NodePort\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: web-app-deployment\n    team: helix\n  name: web-app-deployment\n  namespace: persistence\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web-app\n      team: helix\n  template:\n    metadata:\n      labels:\n        app: web-app\n        team: helix\n    spec:\n      containers:\n      - env:\n        - name: DB_HOST\n          value: mysql-service\n        - name: DB_USER\n          value: root\n        - name: DB_PASSWORD\n          value: password\n        image: bmuschko/web-app:1.0.1\n        name: web-app\n        ports:\n        - containerPort: 3000\n```", "```\nresources:\n- nginx-deployment.yaml\npatchesStrategicMerge:\n- security-context.yaml\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  template:\n    spec:\n      containers:\n      - name: nginx\n        securityContext:\n          runAsUser: 1000\n          runAsGroup: 3000\n          fsGroup: 2000\n```", "```\n$ kubectl kustomize ./\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - image: nginx:1.14.2\n        name: nginx\n        ports:\n        - containerPort: 80\n        securityContext:\n          fsGroup: 2000\n          runAsGroup: 3000\n          runAsUser: 1000\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: spring-boot-app\nspec:\n  containers:\n  - image: bmuschko/spring-boot-app:1.5.3\n    name: spring-boot-app\n    env:\n    - name: SPRING_PROFILES_ACTIVE\n      value: prod\n    - name: VERSION\n      value: '1.5.3'\n```", "```\n$ yq e *.metadata.name* pod.yaml\nspring-boot-app\n$ yq e *.spec.containers[0].env[1].value* pod.yaml\n1.5.3\n```", "```\n$ yq e -i *.spec.containers[0].env[1].value = \"1.6.0\"* pod.yaml\n$ cat pod.yaml\n...\n    env:\n    - name: SPRING_PROFILES_ACTIVE\n      value: prod\n    - name: VERSION\n      value: *1.6.0*\n```", "```\nspec:\n  containers:\n  - image: envoyproxy/envoy:v1.19.1\n    name: proxy-container\n    ports:\n    - containerPort: 80\n```", "```\n$ yq eval-all 'select(fileIndex == 0) *+ select(fileIndex == 1)' pod.yaml \\\n  sidecar.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: spring-boot-app\nspec:\n  containers:\n  - image: bmuschko/spring-boot-app:1.5.3\n    name: spring-boot-app\n    env:\n    - name: SPRING_PROFILES_ACTIVE\n      value: prod\n    - name: VERSION\n      value: '1.5.3'\n  - image: envoyproxy/envoy:v1.19.1\n    name: proxy-container\n    ports:\n    - containerPort: 80\n\n```", "```\n$ tree\n.\n├── Chart.yaml\n├── templates\n│   ├── web-app-pod-template.yaml\n│   └── web-app-service-template.yaml\n└── values.yaml\n```", "```\napiVersion: 1.0.0\nname: web-app\nversion: 2.5.4\n```", "```\ndb_host: mysql-service\ndb_user: root\ndb_password: password\nservice_port: 3000\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: web-app\n  name: web-app\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: web-app\n    env:\n    - name: DB_HOST\n      value: {{ .Values.db_host }}\n    - name: DB_USER\n      value: {{ .Values.db_user }}\n    - name: DB_PASSWORD\n      value: {{ .Values.db_password }}\n    ports:\n    - containerPort: 3000\n      protocol: TCP\n  restartPolicy: Always\n```", "```\n$ helm template .\n---\n# Source: Web Application/templates/web-app-service-template.yaml\n...\n---\n# Source: Web Application/templates/web-app-pod-template.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: web-app\n  name: web-app\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: web-app\n    env:\n    - name: DB_HOST\n      value: mysql-service\n    - name: DB_USER\n      value: root\n    - name: DB_PASSWORD\n      value: password\n    ports:\n    - containerPort: 3000\n      protocol: TCP\n  restartPolicy: Always\n```", "```\n$ helm package .\nSuccessfully packaged chart and saved it to: /Users/bmuschko/dev/projects/ \\\ncka-study-guide/ch04/templating-tools/helm/web-app-2.5.4.tgz\n```"]