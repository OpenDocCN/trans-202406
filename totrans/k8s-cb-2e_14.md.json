["```\n$ kubectl apply -f https://github.com/knative/operator/releases/download/\nknative-v1.11.4/operator.yaml\n\n```", "```\n$ kubectl get deployment knative-operator\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nknative-operator   1/1     1            1           13s\n\n```", "```\n$ kubectl create ns knative-serving\nnamespace/knative-serving created\n\n```", "```\napiVersion: operator.knative.dev/v1beta1\nkind: KnativeServing\nmetadata:\n  name: knative-serving\n  namespace: knative-serving\nspec:\n  ingress:\n    kourier:\n      enabled: true\n  config:\n    network:\n      ingress-class: \"kourier.ingress.networking.knative.dev\"\n\n```", "```\n$ kubectl apply -f serving.yaml\nknativeserving.operator.knative.dev/knative-serving created\n\n```", "```\n$ kubectl -n knative-serving get KnativeServing knative-serving -w\nNAME              VERSION   READY   REASON\nknative-serving   1.11.0    False   NotReady\nknative-serving   1.11.0    False   NotReady\nknative-serving   1.11.0    True\n\n```", "```\n$ kubectl apply -f https://github.com/knative/serving/releases/download/\nknative-v1.11.0/serving-crds.yaml\n$ kubectl apply -f https://github.com/knative/serving/releases/download/\nknative-v1.11.0/serving-core.yaml\n\n```", "```\n$ kubectl -n knative-serving get service kourier\nNAME      TYPE           CLUSTER-IP     EXTERNAL-IP    PORT(S)         AGE\nkourier   LoadBalancer   10.99.62.226   10.99.62.226   80:30227/T...   118s\n\n```", "```\n$ kubectl apply -f https://github.com/knative/serving/releases/download/\nknative-v1.11.0/serving-default-domain.yaml\njob.batch/default-domain created\nservice/default-domain-service created\n\n```", "```\n$ wget https://github.com/knative/client/releases/download/knative-v1.11.0/\nkn-darwin-amd64\n\n$ sudo install -m 755 kn-darwin-amd64 /usr/local/bin/kn\n\n```", "```\n$ brew install knative/client/kn\n\n```", "```\n$ kn help\nkn is the command line interface for managing Knative Serving and Eventing\n\nFind more information about Knative at: https://knative.dev\n\nServing Commands:\n  service      Manage Knative services\n  revision     Manage service revisions\n  ...\n\nEventing Commands:\n  source       Manage event sources\n  broker       Manage message brokers\n  ...\n\nOther Commands:\n  plugin       Manage kn plugins\n  completion   Output shell completion code\n  version      Show the version of this client\n\n```", "```\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: nodeinfo\nspec:\n  template:\n    spec:\n      containers:\n        - image: functions/nodeinfo:latest\n\n```", "```\n$ kubectl apply -f nodeinfo.yaml\nservice.serving.knative.dev/nodeinfo created\n\n```", "```\n$ kubectl get ksvc nodeinfo\nNAME       URL                          LATESTCREATED    LATESTREADY      READY\nnodeinfo   http://nodeinfo...sslip.io   nodeinfo-00001   nodeinfo-00001   True\n\n```", "```\n$ kubectl get po -l serving.knative.dev/service=nodeinfo -w\nNAME                       READY   STATUS    RESTARTS   AGE\nnodeinfo-00001-deploy...   0/2     Pending   0          0s\nnodeinfo-00001-deploy...   0/2     Pending   0          0s\nnodeinfo-00001-deploy...   0/2     ContainerCreating   0          0s\nnodeinfo-00001-deploy...   1/2     Running             0          2s\nnodeinfo-00001-deploy...   2/2     Running             0          2s\n\n```", "```\n$ kubectl get po -l serving.knative.dev/service=nodeinfo\nNo resources found in default namespace.\n\n```", "```\n$ kn service create nodeinfo --image functions/nodeinfo:latest --port 8080\nCreating service 'nodeinfo' in namespace 'default':\n\n  0.054s The Route is still working to reflect the latest desired specification.\n  0.068s Configuration \"nodeinfo\" is waiting for a Revision to become ready.\n  3.345s ...\n  3.399s Ingress has not yet been reconciled.\n  3.481s Waiting for load balancer to be ready\n  3.668s Ready to serve.\n\nService 'nodeinfo' created to latest revision 'nodeinfo-00001' is available at\nURL: http://nodeinfo.default.10.96.170.166.sslip.io\n\n```", "```\n$ kubectl create ns knative-eventing\nnamespace/knative-eventing created\n\n```", "```\napiVersion: operator.knative.dev/v1beta1\nkind: KnativeEventing\nmetadata:\n  name: knative-eventing\n  namespace: knative-eventing\n\n```", "```\n$ kubectl apply -f eventing.yaml\nknativeeventing.operator.knative.dev/knative-eventing created\n\n```", "```\n$ kubectl --namespace knative-eventing get KnativeEventing knative-eventing -w\nNAME               VERSION   READY   REASON\nknative-eventing   1.11.1    False   NotReady\nknative-eventing   1.11.1    False   NotReady\nknative-eventing   1.11.1    False   NotReady\nknative-eventing   1.11.1    True\n\n```", "```\n$ kubectl apply -f https://github.com/knative/eventing/releases/download/\nknative-v1.11.1/eventing-crds.yaml\n$ kubectl apply -f https://github.com/knative/eventing/releases/download/\nknative-v1.11.1/eventing-core.yaml\n\n```", "```\n$ kubectl apply -f https://github.com/knative/eventing/releases/download/\nknative-v1.11.1/in-memory-channel.yaml\n$ kubectl apply -f https://github.com/knative/eventing/releases/download/\nknative-v1.11.1/mt-channel-broker.yaml\n\n```", "```\n$ kubectl api-resources --api-group='sources.knative.dev'\nNAME              SHORTNAMES  APIVERSION           NAMESPACED   KIND\napiserversources              sources.kn...dev/v1  true         ApiServerSource\ncontainersources              sources.kn...dev/v1  true         ContainerSource\npingsources                   sources.kn...dev/v1  true         PingSource\nsinkbindings                  sources.kn...dev/v1  true         SinkBinding\n\n```", "```\n$ kubectl apply -f https://github.com/n3wscott/sockeye/releases/download/\nv0.7.0/release.yaml\nservice.serving.knative.dev/sockeye created\n\n```", "```\n$ kubectl get ksvc sockeye\nNAME      URL                         LATESTCREATED   LATESTREADY     READY\nsockeye   http://sockeye...sslip.io   sockeye-00001   sockeye-00001   True\n\n```", "```\napiVersion: sources.knative.dev/v1\nkind: PingSource\nmetadata:\n  name: ping-source\nspec:\n  schedule: \"* * * * *\"\n  contentType: \"application/json\"\n  data: '{ \"message\": \"Hello, world!\" }'\n  sink:\n    ref:\n      apiVersion: serving.knative.dev/v1\n      kind: Service\n      name: sockeye\n\n```", "```\n$ kubectl apply -f pingsource.yaml\npingsource.sources.knative.dev/ping-source created\n\n```", "```\n$ kubectl get pingsource ping-source -w\nNAME          ...   AGE   READY   REASON\nping-source   ...   52s   False   MinimumReplicasUnavailable\nping-source   ...   59s   True\n\n```", "```\n$ kubectl get ksvc sockeye  -o jsonpath={.status.url}\nhttp://sockeye.default.10.99.62.226.sslip.io\n\n```", "```\n$ kn service create sockeye --image docker.io/n3wscott/sockeye:v0.7.0\n\n```", "```\n$ kn source ping create ping-source --data '{ \"message\": \"Hello, world!\" }' \\\n    --schedule '* * * * *' --sink sockeye\n\n```", "```\napiVersion: operator.knative.dev/v1beta1\nkind: KnativeEventing\nmetadata:\n  name: knative-eventing\n  namespace: knative-eventing\nspec:\n  source:\n    github:\n      enabled: true\n\n```", "```\n$ kubectl apply -f eventing.yaml\nknativeeventing.operator.knative.dev/knative-eventing configured\n\n```", "```\n$ kubectl -n knative-eventing get KnativeEventing knative-eventing -w\nNAME               VERSION   READY   REASON\nknative-eventing   1.11.1    False   NotReady\nknative-eventing   1.11.1    True\n\n```", "```\n$ kubectl api-resources --api-group='sources.knative.dev'\nNAME                 APIVERSION                  NAMESPACED    KIND\napiserversources     sources.kn..dev/v1          true          ApiServerSource\ncontainersources     sources.kn..dev/v1          true          ContainerSource\ngithubsources        sources.kn..dev/v1alpha1    true          GitHubSource\npingsources          sources.kn..dev/v1          true          PingSource\nsinkbindings         sources.kn..dev/v1          true          SinkBinding\n\n```", "```\n$ kubectl apply -f https://github.com/triggermesh/triggermesh/releases/\ndownload/v1.26.0/triggermesh-crds.yaml\n...k8s.io/awscloudwatchlogssources.sources.triggermesh.io created\n...k8s.io/awscloudwatchsources.sources.triggermesh.io created\n...k8s.io/awscodecommitsources.sources.triggermesh.io create\n...\n\n$ kubectl apply -f https://github.com/triggermesh/triggermesh/releases/\ndownload/v1.26.0/triggermesh.yaml\nnamespace/triggermesh created\nclusterrole.rbac.authorization.k8s.io/triggermesh-namespaced-admin created\nclusterrole.rbac.authorization.k8s.io/triggermesh-namespaced-edit created\nclusterrole.rbac.authorization.k8s.io/triggermesh-namespaced-view created\n...\n\n```", "```\n$ kubectl api-resources --api-group='sources.triggermesh.io'\nNAME                     APIVERSION       NAMESPACED  KIND\nawscloudwatchlog...      sources.tri...   true        AWSCloudWatchLogsSource\nawscloudwatchsou...      sources.tri...   true        AWSCloudWatchSource\nawscodecommitsou...      sources.tri...   true        AWSCodeCommitSource\n...\n\n```", "```\n$ kubectl api-resources --api-group='targets.triggermesh.io'\nNAME                 SHORT...  APIVERSION       NAMESPACED  KIND\nawscomprehendtar...            targets.tri...   true        AWSComprehendTarget\nawsdynamodbtarge...            targets.tri...   true        AWSDynamoDBTarget\nawseventbridgeta...            targets.tri...   true        AWSEventBridgeTarget\n...\n\n```"]