["```\n$ curl -s https://falco.org/repo/falcosecurity-packages.asc | apt-key add -\n$ echo \"deb https://download.falco.org/packages/deb stable main\" | tee -a \\\n  /etc/apt/sources.list.d/falcosecurity.list\n$ apt-get update -y\n```", "```\n$ apt-get -y install linux-headers-$(uname -r)\n```", "```\n$ apt-get install -y falco=0.33.1\n```", "```\n$ sudo systemctl status falco\n● falco.service - Falco: Container Native Runtime Security\n     Loaded: loaded (/lib/systemd/system/falco.service; enabled; vendor preset: \\\n             enabled)\n     Active: active (running) since Tue 2023-01-24 15:42:31 UTC; 43min ago\n       Docs: https://falco.org/docs/\n   Main PID: 8718 (falco)\n      Tasks: 12 (limit: 1131)\n     Memory: 30.2M\n     CGroup: /system.slice/falco.service\n             └─8718 /usr/bin/falco --pidfile=/var/run/falco.pid\n```", "```\n$ tree /etc/falco\n/etc/falco\n├── aws_cloudtrail_rules.yaml\n├── falco.yaml\n├── falco_rules.local.yaml\n├── falco_rules.yaml\n├── k8s_audit_rules.yaml\n├── rules.available\n│   └── application_rules.yaml\n└── rules.d\n```", "```\n$ sudo systemctl restart falco\n```", "```\n$ kubectl run nginx --image=nginx:1.23.3\npod/nginx created\n$ kubectl exec -it nginx -- bash\nroot@nginx:/# exit\n```", "```\n$ kubectl get pod nginx -o jsonpath='{.spec.nodeName}'\nkube-worker-1\n```", "```\n$ sudo journalctl -fu falco\n...\nJan 24 18:03:37 kube-worker-1 falco[8718]: 18:03:14.632368639: Notice A shell \\\nwas spawned in a container with an attached terminal (user=root user_loginuid=0 \\\nnginx (id=18b247adb3ca) shell=bash parent=runc cmdline=bash pid=47773 \\\nterminal=34816 container_id=18b247adb3ca image=docker.io/library/nginx)\n```", "```\nroot@nginx:/# apt update\nroot@nginx:/# apt install git\n```", "```\n$ sudo journalctl -fu falco\nJan 24 18:55:48 ubuntu-focal falco[8718]: 18:55:05.173895727: Error Package \\\nmanagement process launched in container (user=root user_loginuid=0 \\\ncommand=apt update pid=60538 container_id=18b247adb3ca container_name=nginx \\\nimage=docker.io/library/nginx:1.23.3)\nJan 24 18:55:48 ubuntu-focal falco[8718]: 18:55:11.050925982: Error Package \\\nmanagement process launched in container (user=root user_loginuid=0 \\\ncommand=apt install git-all pid=60823 container_id=18b247adb3ca \\\ncontainer_name=nginx image=docker.io/library/nginx:1.23.3)\n...\n```", "```\n- rule: access_camera\n  desc: a process other than skype/webex tries to access the camera\n  condition: evt.type = open and fd.name = /dev/video0 and not proc.name in \\\n             (skype, webex)\n  output: Unexpected process opening camera video device (command=%proc.cmdline)\n  priority: WARNING\n```", "```\n- macro: camera_process_access\n  condition: evt.type = open and fd.name = /dev/video0 and not proc.name in \\\n             (skype, webex)\n```", "```\n- rule: access_camera\n  desc: a process other than skype/webex tries to access the camera\n  condition: camera_process_access\n  output: Unexpected process opening camera video device (command=%proc.cmdline)\n  priority: WARNING\n```", "```\n- list: video_conferencing_software\n  items: [skype, webex]\n```", "```\n- macro: camera_process_access\n  condition: evt.type = open and fd.name = /dev/video0 and not proc.name in \\\n             (video_conferencing_software)\n```", "```\n- macro: spawned_process ![1](assets/1.png)\n  condition: (evt.type in (execve, execveat) and evt.dir=<)\n\n- macro: container ![1](assets/1.png)\n  condition: (container.id != host)\n\n- macro: container_entrypoint ![1](assets/1.png)\n  condition: (not proc.pname exists or proc.pname in (runc:[0:PARENT], \\\n              runc:[1:CHILD], runc, docker-runc, exe, docker-runc-cur))\n\n- macro: user_expected_terminal_shell_in_container_conditions ![1](assets/1.png)\n  condition: (never_true)\n\n- rule: Terminal shell in container ![2](assets/2.png)\n  desc: A shell was used as the entrypoint/exec point into a container with an \\\n        attached terminal.\n  condition: > ![3](assets/3.png)\n    spawned_process and container\n    and shell_procs and proc.tty != 0\n    and container_entrypoint\n    and not user_expected_terminal_shell_in_container_conditions\n  output: > ![4](assets/4.png)\n    A shell was spawned in a container with an attached terminal (user=%user.name \\\n    user_loginuid=%user.loginuid %container.info\n    shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline pid=%proc.pid \\\n    terminal=%proc.tty container_id=%container.id image=%container.image.repository)\n  priority: NOTICE ![5](assets/5.png)\n  tags: [container, shell, mitre_execution] ![6](assets/6.png)\n```", "```\n- rule: Terminal shell in container\n  desc: A shell was used as the entrypoint/exec point into a container with an \\\n        attached terminal.\n  condition: >\n    spawned_process and container\n    and shell_procs and proc.tty != 0\n    and container_entrypoint\n    and not user_expected_terminal_shell_in_container_conditions\n  output: >\n    Opened shell: %evt.time,%user.name,%container.name ![1](assets/1.png)\n  priority: ALERT ![2](assets/2.png)\n  tags: [container, shell, mitre_execution]\n```", "```\n$ sudo systemctl restart falco\n```", "```\n$ sudo journalctl -fu falco\n...\nJan 24 21:19:13 kube-worker-1 falco[100017]: 21:19:13.961970887: Alert Opened \\\nshell: 21:19:13.961970887,<NA>,nginx\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:1.21.6\n    securityContext:\n      readOnlyRootFilesystem: true\n    volumeMounts:\n    - name: nginx-run\n      mountPath: /var/run\n    - name: nginx-cache\n      mountPath: /var/cache/nginx\n    - name: nginx-data\n      mountPath: /usr/local/nginx\n  volumes:\n  - name: nginx-run\n    emptyDir: {}\n  - name: nginx-data\n    emptyDir: {}\n  - name: nginx-cache\n    emptyDir: {}\n```", "```\napiVersion: audit.k8s.io/v1\nkind: Policy\nomitStages:\n  - \"RequestReceived\" ![1](assets/1.png)\nrules:\n  - level: RequestResponse ![2](assets/2.png)\n    resources:\n    - group: \"\"\n      resources: [\"pods\"]\n  - level: Metadata ![3](assets/3.png)\n    resources:\n    - group: \"\"\n      resources: [\"pods/log\", \"pods/status\"]\n```", "```\n...\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --audit-policy-file=/etc/kubernetes/audit-policy.yaml ![1](assets/1.png)\n    - --audit-log-path=/var/log/kubernetes/audit/audit.log ![1](assets/1.png)\n    ...\n    volumeMounts:\n    - mountPath: /etc/kubernetes/audit-policy.yaml ![2](assets/2.png)\n      name: audit\n      readOnly: true\n    - mountPath: /var/log/kubernetes/audit/ ![2](assets/2.png)\n      name: audit-log\n      readOnly: false\n  ...\n  volumes:\n  - name: audit ![3](assets/3.png)\n    hostPath:\n      path: /etc/kubernetes/audit-policy.yaml\n      type: File\n  - name: audit-log ![3](assets/3.png)\n    hostPath:\n      path: /var/log/kubernetes/audit/\n      type: DirectoryOrCreate\n```", "```\n$ kubectl run nginx --image=nginx:1.21.6\npod/nginx created\n```", "```\n$ sudo grep 'audit.k8s.io/v1' /var/log/kubernetes/audit/audit.log\n...\n{\"kind\":\"Event\",\"apiVersion\":\"audit.k8s.io/v1\",\"level\":\"RequestResponse\", \\\n\"auditID\":\"285f4b99-951e-405b-b5de-6b66295074f4\",\"stage\":\"ResponseComplete\", \\\n\"requestURI\":\"/api/v1/namespaces/default/pods/nginx\",\"verb\":\"get\", \\\n\"user\":{\"username\":\"system:node:node01\",\"groups\":[\"system:nodes\", \\\n\"system:authenticated\"]},\"sourceIPs\":[\"172.28.116.6\"],\"userAgent\": \\\n\"kubelet/v1.26.0 (linux/amd64) kubernetes/b46a3f8\",\"objectRef\": \\\n{\"resource\":\"pods\",\"namespace\":\"default\",\"name\":\"nginx\",\"apiVersion\":\"v1\"}, \\\n\"responseStatus\":{\"metadata\":{},\"code\":200},\"responseObject\":{\"kind\":\"Pod\", \\\n\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"nginx\",\"namespace\":\"default\", \\\n...\n{\"kind\":\"Event\",\"apiVersion\":\"audit.k8s.io/v1\",\"level\":\"Metadata\",\"auditID\": \\\n\"5c8e5ecc-0ce0-49e0-8ab2-368284f2f785\",\"stage\":\"ResponseComplete\", \\\n\"requestURI\":\"/api/v1/namespaces/default/pods/nginx/status\",\"verb\":\"patch\", \\\n\"user\":{\"username\":\"system:node:node01\",\"groups\":[\"system:nodes\", \\\n\"system:authenticated\"]},\"sourceIPs\":[\"172.28.116.6\"],\"userAgent\": \\\n\"kubelet/v1.26.0 (linux/amd64) kubernetes/b46a3f8\",\"objectRef\": \\\n{\"resource\":\"pods\",\"namespace\":\"default\",\"name\":\"nginx\",\"apiVersion\":\"v1\", \\\n\"subresource\":\"status\"},\"responseStatus\":{\"metadata\":{},\"code\":200}, \\\n...\n\n```"]