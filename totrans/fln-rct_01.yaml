- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book is not for people who want to learn how to use React. If you’re unfamiliar
    with React and looking for a tutorial, a great place to start is the React documentation
    over at [*react.dev*](https://react.dev/). Instead, this book is for the curious:
    people who aren’t as interested in how to use React, but who are more interested
    in *how React works*.'
  prefs: []
  type: TYPE_NORMAL
- en: In our time together, we will go on a journey through a number of React concepts
    and understand their underlying mechanism, exploring how it all fits together
    to enable us to create applications using React more effectively. In our pursuit
    of understanding the underlying mechanism, we will develop the mental models necessary
    to reason about React and its ecosystem with a high degree of fidelity.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book assumes we have a satisfactory understanding of this statement: browsers
    render web pages. Web pages are HTML documents that are styled by CSS and made
    interactive with JavaScript. It also assumes we’re somewhat familiar with how
    to use React, and that we’ve built a React app or two in our time. Ideally, some
    of our React apps are in production.'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll start with an introduction to React and recap its history, casting our
    minds back to 2013 when it was first released as open source software. From there,
    we’ll explore the core concepts of React, including the component model, the virtual
    DOM, and reconciliation. We’ll dive into the compiler theory of how JSX works,
    talk about fibers, and understand its concurrent programming model in depth. This
    way we’ll glean powerful takeaways that will help us more fluently memoize what
    ought to be memoized and defer rendering work that ought to be deferred through
    powerful primitives like `React.memo` and `useTransition`.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the second half of this book, we’ll explore React frameworks: what problems
    they solve, and the mechanisms by which they solve them. We’ll do so by writing
    our own framework that solves three salient problems across nearly all web applications:
    server rendering, routing, and data fetching.'
  prefs: []
  type: TYPE_NORMAL
- en: Once we solve these problems for ourselves, understanding how frameworks solve
    them becomes far more approachable. We’ll also dive deep into React Server Components
    (RSCs) and server actions, understanding the role of next-generation tooling,
    like bundlers and isomorphic routers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we’ll zoom out from React and look at alternatives like Vue, Solid,
    Angular, Qwik, and more. We’ll explore signals and fine-grained reactivity in
    contrast to React’s coarser reactivity model. We’ll also explore React’s response
    to signals: the Forget toolchain and how it stacks up when compared to signals.'
  prefs: []
  type: TYPE_NORMAL
- en: There’s so much to get into, so let’s not waste any more time. Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`** and light gray text'
  prefs: []
  type: TYPE_NORMAL
- en: Used in Chapter 10 of the print edition to highlight diffs in code blocks.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-889-8969 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-827-7019 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*support@oreilly.com*](mailto:support@oreilly.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://www.oreilly.com/about/contact.html*](https://www.oreilly.com/about/contact.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/fluent-react*](https://oreil.ly/fluent-react).
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is the first book that I’ve ever written, and I am beyond thankful
    that I did not do it alone. What you’re about to read is the combined effort of
    a number of brilliant people who have worked in concert to make this possible.
    On this page, we acknowledge these people for their contributions to this body
    of text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Please do not skip this, because these people deserve your attention and your
    gratitude. Let’s start off with the people who have helped me directly with this
    book:'
  prefs: []
  type: TYPE_NORMAL
- en: Number one is always my wife, Lea. I’ve spent a lot of time writing this book,
    often at the cost of together time and family time. Because of my joy in the subject
    matter and my desire to share it with all of you, working on this book has slightly
    eaten into vacation time and other opportunities to spend time with my wife. She
    has been nothing but supportive and encouraging, and I am so thankful for her.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shira Evans, my development editor on this book. Shira from O’Reilly has been
    a joy to work with and has been nothing short of supportive, encouraging, and
    understanding, even when we were faced with a number of delays since new things
    kept coming up with React, like Forget and server actions. Shira patiently saw
    us through all of it, and I am so thankful for her.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: My dear friend and brother Kent C. Dodds (*@kentcdodds*) for his continued mentorship
    outside the capacities of this book, and for his foreword in this book. Kent has
    been a dear friend and mentor for years, and I am so thankful for his continued
    support and encouragement.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The reviewers. This book would not be possible without the incredible care
    and attention to detail by the reviewers who partnered with me on this book:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adam Rackis (*@adamrackis*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Daniel Afonso (*@danieljcafonso*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Fabien Bernard (*@fabien0102*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Kent C. Dodds (*@kentcdodds*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Mark Erikson (*@acemarke*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Lenz Weber-Tronic (*@phry*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rick Hanlon II (*@rickhanlonii*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Sergeii Kirianov (*@SergiiKirianov*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Matheus Albuquerque (*@ythecombinator*)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The React team at Meta for their continued work on React, continuing to push
    the boundaries of what’s possible with React and making it a joy to use through
    their brilliance, ingenuity, and engineering acumen. In particular, Dan Abramov
    (*@dan_abramov*), who took the time to explain the role of the bundler in the
    React Server Components architecture, as well as for contributing a significant
    portion of [Chapter 9](ch09.html#ch09) on React Server Components.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, I’d like to thank you, the reader, for your interest in this book.
    I hope you find it as rewarding to read as I have found it to write.
  prefs: []
  type: TYPE_NORMAL
