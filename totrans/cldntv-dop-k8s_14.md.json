["```\ndemo\n├── Chart.yaml\n├── production-values.yaml\n├── staging-values.yaml\n├── templates\n│   ├── deployment.yaml\n│   └── service.yaml\n└── values.yaml\n```", "```\nname: demo\nsources:\n  - https://github.com/cloudnativedevops/demo\nversion: 1.0.1\n```", "```\nenvironment: development\ncontainer:\n  name: demo\n  port: 8888\n  image: cloudnatived/demo\n  tag: hello\nreplicas: 1\n```", "```\n`ls k8s/demo/templates`\ndeployment.yaml service.yaml\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Values.container.name }}-{{ .Values.environment }}\nspec:\n  replicas: {{ .Values.replicas }}\n  selector:\n    matchLabels:\n      app: {{ .Values.container.name }}\n  template:\n    metadata:\n      labels:\n        app: {{ .Values.container.name }}\n        environment: {{ .Values.environment }}\n    spec:\n      containers:\n        - name: {{ .Values.container.name }}\n          image: {{ .Values.container.image }}:{{ .Values.container.tag }}\n          ports:\n            - containerPort: {{ .Values.container.port }}\n          env:\n            - name: ENVIRONMENT\n              value: {{ .Values.environment }}\n```", "```\n...\nmetadata:\n  name: `{``{` `.Values.container.name` `}``}``-{{` `.Values.environment` `}}`\n```", "```\n...\nmetadata:\n  name: `demo-development`\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: `{``{` `.Values.container.name` `}``}`-service-{{ .Values.environment }}\n  labels:\n    app: `{``{` `.Values.container.name` `}``}`\nspec:\n  ports:\n  - port: {{ .Values.container.port }}\n    protocol: TCP\n    targetPort: {{ .Values.container.port }}\n  selector:\n    app: `{``{` `.Values.container.name` `}``}`\n  type: ClusterIP\n```", "```\nname: {{.Values.MyName | quote }}\n```", "```\ndependencies:\n  - name: redis\n    version: ~15.4.1\n    repository: https://charts.bitnami.com/bitnami\n```", "```\n...\nenv:\n  - name: ENVIRONMENT\n    value: {{ .Values.environment }}\n```", "```\nenvironment: development\n...\n```", "```\nenvironment: staging\n```", "```\n`helm upgrade --install demo-staging` `--values=./k8s/demo/staging-values.yaml ./k8s/demo`\n```", "```\n`helm inspect values ./k8s/demo`\n```", "```\nreplicas: 1\n```", "```\nenvironment: staging\n`replicas``:` `2`\n```", "```\n`helm upgrade --install demo-staging` `--values=./k8s/demo/staging-values.yaml ./k8s/demo`\nRelease \"demo-staging\" has been upgraded. Happy Helming!\n```", "```\n`helm rollback demo-staging 1`\nRollback was a success! Happy Helming!\n```", "```\n`helm repo add myrepo http://myrepo.example.com`\n`helm install myrepo/myapp`\n```", "```\n`cd hello-sops`\n`tree`\n. ├── k8s │   └── demo │       ├── Chart.yaml │       ├── production-secrets.yaml │       ├── production-values.yaml │       ├── staging-secrets.yaml │       ├── staging-values.yaml │       ├── templates │       │   ├── deployment.yaml │       │   └── secrets.yaml │       └── values.yaml └── temp.yaml \n3 directories, 9 files\n```", "```\n`cat k8s/demo/production-secrets.yaml`\nsecret_one: ENC[AES256_GCM,data:ekH3xIdCFiS4j1I2ja8=,iv:C95KilXL...1g==,type:str] secret_two: ENC[AES256_GCM,data:0Xcmm1cdv3TbfM3mIkA=,iv:PQOcI9vX...XQ==,type:str] ...\n```", "```\n`cat k8s/demo/templates/secrets.yaml`\napiVersion: v1 kind: Secret metadata:\n name: {{ .Values.container.name }}-secrets type: Opaque data:\n {{ $environment := .Values.environment }} app_secrets.yaml: {{ .Files.Get (nospace (cat $environment \"-secrets.yaml\")) | b64enc }}\n```", "```\nsops -d k8s/demo/staging-secrets.yaml > temp-staging-secrets.yaml && \\\nhelm upgrade --install staging-demo --values staging-values.yaml \\\n--values temp-staging-secrets.yaml ./k8s/demo && rm temp-staging-secrets.yaml\n```", "```\nrepositories:\n  - name: prometheus-community\n    url: https://prometheus-community.github.io/helm-charts\n\nreleases:\n  - name: demo\n    namespace: demo\n    chart: ../hello-helm3/k8s/demo\n    values:\n      - \"../hello-helm3/k8s/demo/production-values.yaml\"\n\n  - name: kube-state-metrics\n    namespace: kube-state-metrics\n    chart: prometheus-community/kube-state-metrics\n\n  - name: prometheus\n    namespace: prometheus\n    chart: prometheus-community/prometheus\n    set:\n      - name: rbac.create\n        value: true\n```", "```\n- name: demo\n  namespace: demo\n  chart: ../hello-helm3/k8s/demo\n  values:\n    - \"../hello-helm3/k8s/demo/production-values.yaml\"\n```", "```\n- name: prometheus-community\n  url: https://prometheus-community.github.io/helm-charts/\n```", "```\n- name: prometheus\n  namespace: prometheus\n  chart: prometheus-community/prometheus\n  set:\n    - name: rbac.create\n      value: true\n```", "```\n`helmfile sync`\nAdding repo prometheus- community https://prometheus-community.github.io/helm-charts \"prometheus-community\" has been added to your repositories \nBuilding dependency release=demo, chart=../hello-helm3/k8s/demo Affected releases are:\n demo (../hello-helm3/k8s/demo) UPDATED kube-state-metrics (prometheus-community/kube-state-metrics) UPDATED prometheus (prometheus-community/prometheus) UPDATED prometheus-node- exporter (prometheus-community/prometheus-node-exporter) UPDATED ...\n```", "```\n`cd hello-kustomize/demo/base`\n`kubectl kustomize ./`\napiVersion: v1 kind: Service metadata:\n labels: app: demo org: acmeCorporation name: demo-service ... --- apiVersion: apps/v1 kind: Deployment metadata:\n labels: app: demo org: acmeCorporation name: demo spec:\n replicas: 1 ...\n```", "```\n`kubectl kustomize ../overlays/production`\n... apiVersion: apps/v1 kind: Deployment metadata:\n labels: app: demo org: acmeCorporation name: prod-demo spec:\n replicas: 3 ...\n```", "```\nlocal kube = import \"lib/kube.libjsonnet\";\nlocal kap = import \"lib/kapitan.libjsonnet\";\nlocal inventory = kap.inventory();\nlocal p = inventory.parameters;\n\n{\n    \"00_namespace\": kube.Namespace(p.namespace),\n    \"10_serviceaccount\": kube.ServiceAccount(\"default\")\n}\n```", "```\nkube_resource_configmaps:\n  my-resource-env: \"{{ lookup('template', template_dir +\n'/my-resource-env.j2') }}\"\nkube_resource_manifest_files: \"{{ lookup('fileglob', template_dir +\n'/*manifest.yml') }}\"\n- hosts: \"{{ application }}-{{ env }}-runner\"\n  roles:\n    - kube-resource\n```"]