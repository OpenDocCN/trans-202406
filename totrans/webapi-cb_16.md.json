["```\nconsole.log('%cHello world!', 'font-size: 2rem; color: red;');\nconsole.log('This console message uses %cstyled text. %cCool!',\n  'font-style: italic;',\n  'font-weight: bold;'\n);\n```", "```\nconsole.info('This is an info message');\nconsole.warn('This is a warning message');\nconsole.error('This is an error message');\n```", "```\nfunction createLogger(name, color) {\n  return console.log.bind(console, `%c${name}`, `color: ${color};`);\n}\n```", "```\nconst rendererLogger = createLogger('renderer', 'blue');\nconst dataLogger = createLogger('data', 'green');\n\n// Outputs with a blue \"renderer\" prefix\nrendererLogger('Rendering component');\n\n// Outputs with a green \"data\" prefix\ndataLogger('Fetching data');\n```", "```\nconst users = [\n  { firstName: \"John\", lastName: \"Smith\", department: \"Sales\" },\n  { firstName: \"Emily\", lastName: \"Johnson\", department: \"Marketing\" },\n  { firstName: \"Michael\", lastName: \"Davis\", department: \"Human Resources\" },\n  { firstName: \"Sarah\", lastName: \"Thompson\", department: \"Finance\" },\n  { firstName: \"David\", lastName: \"Wilson\", department: \"Engineering\" }\n];\n\nconsole.table(users);\n```", "```\nconsole.table({\n  name: 'sysadmin',\n  email: 'admin@example.com'\n});\n```", "```\nconst users = [\n  { firstName: \"John\", lastName: \"Smith\", department: \"Sales\" },\n  { firstName: \"Emily\", lastName: \"Johnson\", department: \"Marketing\" },\n  { firstName: \"Michael\", lastName: \"Davis\", department: \"Human Resources\" },\n  { firstName: \"Sarah\", lastName: \"Thompson\", department: \"Finance\" },\n  { firstName: \"David\", lastName: \"Wilson\", department: \"Engineering\" }\n];\n\nconsole.table(users, ['firstName', 'lastName']);\n```", "```\n// Start the' loadTransactions' timer.\nconsole.time('loadTransactions');\n\n// Load some data.\nconst data = await fetch('/api/users/123/transactions');\n\n// Stop the 'loadTransactions' timer.\n// Prints: \"loadTransactions: <elapsed time> ms\"\nconsole.timeEnd('loadTransactions');\n```", "```\nconst users = [\n  { id: 1, firstName: \"John\", lastName: \"Smith\", department: \"Sales\" },\n  { id: 2, firstName: \"Emily\", lastName: \"Johnson\", department: \"Marketing\" },\n  { id: 3, firstName: \"Michael\", lastName: \"Davis\", department: \"Human Resources\" },\n  { id: 4, firstName: \"Sarah\", lastName: \"Thompson\", department: \"Finance\" },\n  { id: 5, firstName: \"David\", lastName: \"Wilson\", department: \"Engineering\" }\n];\n\nconsole.log('Updating user data');\nfor (const user of users) {\n  console.group(`User: ${user.firstName} ${user.lastName}`);\n  console.log('Loading employee data from API');\n  const response = await fetch(`/api/users/${user.id}`);\n  const userData = await response.json();\n\n  console.log('Updating profile');\n  userData.lastUpdated = Date.now();\n\n  console.log('Saving user data');\n  await fetch(`/api/users/${user.id}`, {\n    method: 'POST',\n    body: JSON.stringify(userData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  console.groupEnd();\n}\n```", "```\nconst users = [\n  { id: 1, firstName: \"John\", lastName: \"Smith\", department: \"Sales\" },\n  { id: 2, firstName: \"Emily\", lastName: \"Johnson\", department: \"Marketing\" },\n  { id: 3, firstName: \"Michael\", lastName: \"Davis\", department: \"Human Resources\" },\n  { id: 4, firstName: \"Sarah\", lastName: \"Thompson\", department: \"Finance\" },\n  { id: 5, firstName: \"David\", lastName: \"Wilson\", department: \"Engineering\" }\n];\n\nusers.forEach(user => {\n  console.count('user');\n});\n```", "```\nuser: 1\nuser: 2\nuser: 3\nuser: 4\nuser: 5\n```", "```\nconst username = 'sysadmin';\n\n// logs { username: 'sysadmin' }\nconsole.log({ username });\n```", "```\nconst username = 'sysadmin';\n\nconsole.log('username', username);\n```", "```\nfunction foo() {\n  function bar() {\n    console.trace();\n  }\n  bar();\n}\n\nfoo();\n```", "```\nfunction updateUser(user) {\n  // Log an error if the user id is null.\n  console.assert(user.id !== null, 'user.id must not be null');\n\n  // Update the user.\n  return fetch(`/api/users/${user.id}`, {\n    method: 'PUT',\n    body: JSON.stringify(user),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n```", "```\nconsole.dir(console);\n```"]