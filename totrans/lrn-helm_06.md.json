["```\ndependencies:\n  - name: booster ![1](Images/1.png)\n    version: ^1.0.0 ![2](Images/2.png)\n    repository: https://raw.githubusercontent.com/Masterminds/learning-helm/main/\n      chapter6/repository/ ![3](Images/3.png)\n```", "```\n$ helm dependency update .\n```", "```\nSaving 1 charts\nDownloading booster from repo https://raw.githubusercontent.com/Masterminds/\n  learning-helm/main/chapter6/repository/\nDeleting outdated charts\n```", "```\nbooster:\n  image:\n    tag: 9.17.49\n```", "```\ndependencies:\n  - name: booster\n    version: ^1.0.0\n    condition: booster.enabled\n    repository: https://raw.githubusercontent.com/Masterminds/learning-helm/main/\n      chapter6/repository/\n```", "```\nbooster:\n  enabled: false\n```", "```\ndependencies:\n  - name: booster\n    tags:\n      - faster\n    version: ^1.0.0\n    repository: https://raw.githubusercontent.com/Masterminds/learning-helm/main/\n      chapter6/repository/\n  - name: rocket\n    tags:\n      - faster\n    version: ^1.0.0\n    repository: https://raw.githubusercontent.com/Masterminds/learning-helm/main/\n      chapter6/repository/\n```", "```\ntags:\n  faster: false\n```", "```\nexports:\n  types:\n    foghorn: rooster\n```", "```\ndependencies:\n  - name: example-child\n    version: ^1.0.0\n    repository: https://charts.example.com/\n    import-values:\n      - types\n```", "```\nfoghorn: rooster\n```", "```\ntypes:\n  foghorn: rooster\n```", "```\ndependencies:\n  - name: example-child\n    version: ^1.0.0\n    repository: https://charts.example.com/\n    import-values:\n      - child: types\n        parent: characters\n```", "```\ncharacters:\n  foghorn: rooster\n```", "```\ndata:\n  types:\n    foghorn: rooster\n```", "```\napiVersion: v2\nname: mylib\ntype: library\ndescription: an example library chart\nversion: 0.1.0\n```", "```\n{{- define \"mylib.configmap.tpl\" -}}\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ include \"mylib.fullname\" . }} ![1](Images/1.png)\n  labels:\n    {{- include \"mylib.labels\" . | nindent 4 }} ![2](Images/2.png)\ndata: {}\n{{- end -}}\n{{- define \"mylib.configmap\" -}} ![3](Images/3.png)\n{{- template \"mylib.util.merge\" (append . \"mylib.configmap.tpl\") -}}\n{{- end -}}\n```", "```\n{{- /*\nmylib.util.merge will merge two YAML templates and output the result.\nThis takes an array of three values:\n- the top context\n- the template name of the overrides (destination)\n- the template name of the base (source)\n*/ -}}\n{{- define \"mylib.util.merge\" -}}\n{{- $top := first . -}}\n{{- $overrides := fromYaml (include (index . 1) $top) | default (dict ) -}}\n{{- $tpl := fromYaml (include (index . 2) $top) | default (dict ) -}}\n{{- toYaml (merge $overrides $tpl) -}}\n{{- end -}}\n```", "```\n{{- include \"mylib.configmap\" (list . \"mychart.configmap\") -}} ![1](Images/1.png)\n{{- define \"mychart.configmap\" -}} ![2](Images/2.png)\ndata: ![3](Images/3.png)\n  myvalue: \"Hello Bosko\"\n{{- end -}}\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  labels:\n    app.kubernetes.io/instance: example\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/name: mychart\n    helm.sh/chart: mychart-0.1.0\n  name: example-mychart\ndata:\n  myvalue: Hello Bosko\n```", "```\nimage:\n  repository: ghcr.io/masterminds/learning-helm/anvil-app\n  pullPolicy: IfNotPresent\n  tag: \"\"\n```", "```\n{\n    \"$schema\": \"http://json-schema.org/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"image\": {\n            \"type\": \"object\", ![1](Images/1.png)\n            \"properties\": {\n                \"pullPolicy\": {\n                    \"type\": \"string\", ![2](Images/2.png)\n                    \"enum\": [\"Always\", \"IfNotPresent\"] ![3](Images/3.png)\n                },\n                \"repository\": {\n                    \"type\": \"string\"\n                },\n                \"tag\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}\n```", "```\n$ helm lint . --set image.pullPolicy=foo\n```", "```\n==> Linting .\n[ERROR] templates/: values don't meet the specifications of the schema(s) in the\nfollowing chart(s):\nbooster:\n- image.pullPolicy: image.pullPolicy must be one of the following: \"Always\",\n  \"IfNotPresent\"\n\nError: 1 chart(s) linted, 1 chart(s) failed\n```", "```\nannotations:\n  \"helm.sh/hook\": pre-install,pre-upgrade\n```", "```\nannotations:\n  \"helm.sh/hook\": pre-install,pre-upgrade\n  \"helm.sh/hook-weight\": \"1\"\n  \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: \"{{ include \"mychart.fullname\" . }}-post-install\"\n  labels:\n    {{- include \"mychart.labels\" . | nindent 4 }}\n  annotations:\n    \"helm.sh/hook\": post-install\n    \"helm.sh/hook-weight\": \"-1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\nspec:\n  containers:\n    - name: wget\n      image: busybox\n      command: [\"/bin/sleep\",\"{{ default \"10\" .Values.sleepTime }}\"]\n  restartPolicy: Never\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: \"{{ include \"booster.fullname\" . }}-test-connection\"\n  labels:\n    {{- include \"booster.labels\" . | nindent 4 }}\n  annotations:\n    \"helm.sh/hook\": test\nspec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"booster.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n```", "```\n$ helm install boost .\n```", "```\n$ helm test boost\n```", "```\nPod boost-booster-test-connection pending\nPod boost-booster-test-connection pending\nPod boost-booster-test-connection running\nPod boost-booster-test-connection succeeded\nNAME: boost\nLAST DEPLOYED: Tue Jul 21 06:47:05 2020\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE:     boost-booster-test-connection\nLast Started:   Tue Jul 21 06:47:12 2020\nLast Completed: Tue Jul 21 06:47:17 2020\nPhase:          Succeeded\nNOTES:\n1\\. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace default -l\n    \"app.kubernetes.io/name=booster,app.kubernetes.io/instance=boost\"\n    -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:8080 to use your application\"\n  kubectl --namespace default port-forward $POD_NAME 8080:80\n```", "```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\napiVersion: v2\ndescription: an example library chart\nname: mylib\ntype: library\nversion: 0.1.0\n\n...\nfiles:\n  mylib-0.1.0.tgz: sha256:d312aea39acf7026f39edebd315a11a52d29a9\n                          6a8d68737ead110ac0c0a1163d\n-----BEGIN PGP SIGNATURE-----\n\niQIzBAEBCgAdFiEEcR8o1RDh4Ly9X2v+lDboC/ukaQkFAl8yiesACgkQlDboC/uk\naQkG2BAAlIEgGI7uu9Kr8j4ZIxDseLmgphhPM1kgnIMPriLieBxFXSJQxciN3+dx\nOQpIfdsFQvW98EnJ4781Pm+leHY2iI/L08O1cQWUtzKhfPEWC65YQJPXkTKpHnC2\nwXYVUVYWvhx6BJ77RiS/f+hoXiC+i1aBqqS0TAG+AqXuwARO2tY/L7cF6EHjsUwD\npPuTNpYZ/OEWqh1KEYZYVDvLm6uN6QjV4pNTFfAgnvMckfoDLQ+kOPQVqCeUWG3F\ntZO3sBzUg+Ak2dDviSTOFQ7TCifc3tOOaWS1XtcooSOkUENmTeeWV56jZnhK1rT4\nyaIGT16zXZIdmkZ1t5o9VccuAhQ1Us2FhipdGqpD8yDoJABVz/ee9d2zoX8anfR7\nLZ7fwecgQ/THnj54RroyQlzf2aottFiL9ZV4MjUqs0CSoA9+SZ/CcJDd/rxBGI8C\nyxRqo0VoNdjT8Kr9hha13krfwD8IpLH8bv4kWt3Ckh6rgphjUL19xyTHJY7w2toY\nbAeZMl3Y05Ca76EA7XDdoltE57SUS1Zzd+wDRzRD0IZO8KVk+Z5/PzzvV4l9lnDJ\nX63fptInbJpyk0xYKLMFquOY7Yy5mlI9de7424CScePo9Nua3GAakfi4zk3i4Auz\n2eaoU/S5uXt605OydkSLLz99BAyJwmazzf/qPyYcPWMw/b+gHxw=\n=pRcC\n-----END PGP SIGNATURE-----\n```", "```\n$ helm package --sign --key 'bugs@acme.example.com' \\\n  --keyring path/to/keyring mychart\n```", "```\n$ helm verify --keyring path/to/keyring mychart-0.1.0.tgz\n```", "```\n$ helm verify mylib-0.1.0.tgz --keyring public.key\n```", "```\nSigned by: Matthew Farina\nUsing Key With Fingerprint: 672C657BE06B4B30969C4A57461449C25E36B98E\nChart Hash Verified: sha256:d312aea39acf7026f39edebd315a11a52d29a96a8d68737ead11\n                            0ac0c0a1163d\n```", "```\n$ helm install --verify --keyring public.key myrepo/mychart\n```"]