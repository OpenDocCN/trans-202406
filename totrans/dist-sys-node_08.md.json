["```\n$ minikube version\n$ kubectl version --client\n```", "```\n# Linux:\n$ minikube start\n# MacOS:\n$ minikube start --vm=true\n```", "```\n$ kubectl get pods\n```", "```\n$ kubectl get pods --namespace=kube-system\n```", "```\nNAME                               READY   STATUS    RESTARTS   AGE\ncoredns-66bff467f8-8j5mb           1/1     Running   6          95s\netcd-minikube                      1/1     Running   4          103s\nkube-scheduler-minikube            1/1     Running   5          103s\n```", "```\n$ kubectl get nodes\n```", "```\nNAME       STATUS   ROLES    AGE     VERSION\nminikube   Ready    master   3m11s   v1.18.0\n```", "```\nexport DOCKER_TLS_VERIFY=\"1\"\nexport DOCKER_HOST=\"tcp://172.17.0.3:2376\"\nexport DOCKER_CERT_PATH=\"/home/tlhunter/.minikube/certs\"\nexport MINIKUBE_ACTIVE_DOCKERD=\"minikube\"\n```", "```\n$ eval $(minikube -p minikube docker-env)\n```", "```\n$ minikube dashboard\n```", "```\n$ kubectl create deployment hello-minikube \\\n  --image=k8s.gcr.io/echoserver:1.10\n$ kubectl get deployments\n$ kubectl get pods\n$ kubectl get rs\n```", "```\n$ kubectl get deployments\n  NAME             READY   UP-TO-DATE   AVAILABLE   AGE\n  hello-minikube   0/1     1            0           3s\n$ kubectl get pods\n  NAME                            READY STATUS            RESTARTS AGE\n  hello-minikube-6f5579b8bf-rxhfl 0/1   ContainerCreating 0        4s\n$ kubectl get rs\n  NAME                        DESIRED   CURRENT   READY   AGE\n  hello-minikube-64b64df8c9   1         1         0       0s\n```", "```\n$ kubectl get deployments\n  NAME             READY   UP-TO-DATE   AVAILABLE   AGE\n  hello-minikube   1/1     1            1           7m19s\n$ kubectl get pods -L app\n  NAME                READY  STATUS   RESTARTS  AGE    APP\n  hello-minikube-123  1/1    Running  0         7m24s  hello-minikube\n$ kubectl get rs\n  NAME                        DESIRED   CURRENT   READY   AGE\n  hello-minikube-64b64df8c9   1         1         1       7m25s\n```", "```\n$ kubectl expose deployment hello-minikube \\\n  --type=NodePort --port=8080\n$ kubectl get services -o wide\n```", "```\nNAME           TYPE      ... PORT(S)        AGE  SELECTOR\nhello-minikube NodePort  ... 8080:31710/TCP 6s   app=hello-minikube\nkubernetes     ClusterIP ... 443/TCP        7d3h <none>\n```", "```\n$ minikube service hello-minikube --url\n$ curl `minikube service hello-minikube --url`\n```", "```\n$ kubectl delete services hello-minikube\n$ kubectl delete deployment hello-minikube\n```", "```\n$ kubectl get deployments\n$ kubectl get pods\n$ kubectl get rs\n```", "```\n$ cd recipe-api\n$ eval $(minikube -p minikube docker-env) # ensure Minikube docker\n$ docker build -t recipe-api:v1 .\n```", "```\napiVersion: apps/v1\nkind: Deployment ![1](assets/1.png)\nmetadata:\n  name: recipe-api ![2](assets/2.png)\n  labels:\n    app: recipe-api ![3](assets/3.png)\n```", "```\nspec:\n  replicas: 5 ![1](assets/1.png)\n  selector:\n    matchLabels:\n      app: recipe-api\n  template:\n    metadata:\n      labels:\n        app: recipe-api\n```", "```\n#### note the four space indent\n    spec:\n      containers:\n      - name: recipe-api\n        image: recipe-api:v1 ![1](assets/1.png)\n        ports:\n        - containerPort: 1337 ![2](assets/2.png)\n        livenessProbe: ![3](assets/3.png)\n          httpGet:\n            path: /recipes/42\n            port: 1337\n          initialDelaySeconds: 3\n          periodSeconds: 10\n```", "```\n$ kubectl apply -f recipe-api/recipe-api-deployment.yml\n```", "```\n$ kubectl get pods\n```", "```\nNAME                          READY   STATUS    RESTARTS   AGE\nrecipe-api-6fb656695f-clvtd   1/1     Running   0          2m\n... OUTPUT TRUNCATED ...\nrecipe-api-6fb656695f-zrbnf   1/1     Running   0          2m\n```", "```\n$ kubectl describe pods <POD_NAME> | grep Liveness\n```", "```\nLiveness: http-get http://:1337/recipes/42\n  delay=3s timeout=1s period=10s #success=1 #failure=3\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: recipe-api-service ![1](assets/1.png)\nspec:\n  type: NodePort\n  selector:\n    app: recipe-api\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 1337\n```", "```\n$ kubectl apply -f recipe-api/recipe-api-network.yml\n```", "```\n$ minikube addons enable ingress\n$ kubectl get pods --namespace kube-system | grep ingress\n```", "```\n$ cp recipe-api/Dockerfile web-api/Dockerfile\n$ cd web-api\n```", "```\nCMD [ \"node\", \"consumer-http-basic.js\" ]\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-api\n  labels:\n    app: web-api\n\nspec:\n  replicas: 3 ![1](assets/1.png)\n  selector:\n    matchLabels:\n      app: web-api\n  template:\n    metadata:\n      labels:\n        app: web-api\n```", "```\n#### note the four space indent\n    spec:\n      containers:\n      - name: web-api\n        image: web-api:v1\n        ports:\n        - containerPort: 1337\n        env: ![1](assets/1.png)\n        - name: TARGET\n          value: \"recipe-api-service\"\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: web-api-service\nspec:\n  type: NodePort\n  selector:\n    app: web-api\n  ports:\n    - port: 1337\n```", "```\n---\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: web-api-ingress\n  annotations: ![1](assets/1.png)\n    nginx.ingress.kubernetes.io/rewrite-target: /$1\nspec:\n  rules: ![2](assets/2.png)\n  - host: example.org\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: web-api-service\n          servicePort: 1337\n```", "```\n$ eval $(minikube -p minikube docker-env) # ensure Minikube docker\n$ docker build -t web-api:v1 .\n$ kubectl apply -f web-api-deployment.yml\n$ kubectl apply -f web-api-network.yml\n```", "```\n$ kubectl get ingress web-api-ingress\n```", "```\nNAME              CLASS    HOSTS         ADDRESS      PORTS   AGE\nweb-api-ingress   <none>   example.org   172.17.0.3   80      21s\n```", "```\n$ curl -H \"Host: example.org\" http://<INGRESS_IP>/\n```", "```\n$ kubectl get pods -l app=recipe-api\n$ kubectl scale deployment.apps/recipe-api --replicas=10\n$ kubectl get pods -l app=recipe-api\n```", "```\n$ kubectl apply -f recipe-api/recipe-api-deployment.yml\n```", "```\ndeployment.apps/recipe-api created\ndeployment.apps/recipe-api configured\ndeployment.apps/recipe-api unchanged\n```", "```\n$ cd web-api\n$ echo \"server.get('/hello', async () => 'Hello');\" \\\n  >> consumer-http-basic.js\n$ eval $(minikube -p minikube docker-env) # ensure Minikube docker\n$ docker build -t web-api:v2 .\n```", "```\n$ kubectl apply -f web-api-deployment.yml\n$ kubectl get pods -w -l app=web-api\n```", "```\n$ curl `minikube service web-api-service --url`/hello\n```", "```\n$ kubectl get rs -l app=web-api\n```", "```\nNAME                 DESIRED   CURRENT   READY   AGE\nweb-api-6cdc56746b   0         0         0       9m21s\nweb-api-999f78685    3         3         3       3m8s\n```", "```\n$ cd web-api\n$ echo \"server.get('/kill', async () => { process.exit(42); });\" \\\n  >> consumer-http-basic.js\n$ eval $(minikube -p minikube docker-env) # ensure Minikube docker\n$ docker build -t web-api:v3 .\n```", "```\n$ kubectl apply -f web-api-deployment.yml --record=true\n```", "```\n$ curl `minikube service web-api-service --url`/kill\n```", "```\nNAME                       READY   STATUS    RESTARTS   AGE\nweb-api-6bdcb55856-b6rtw   1/1     Running   0          6m3s\nweb-api-6bdcb55856-ctqmr   1/1     Running   1          6m7s\nweb-api-6bdcb55856-zfscv   1/1     Running   0          6m5s\n```", "```\n$ kubectl rollout history deployment.v1.apps/web-api\n```", "```\nREVISION  CHANGE-CAUSE\n7         <none>\n8         <none>\n9         kubectl apply --filename=web-api-deployment.yml --record=true\n```", "```\n$ kubectl rollout undo deployment.v1.apps/web-api \\\n  --to-revision=<RELEASE_NUMBER>\n```", "```\nREVISION  CHANGE-CAUSE\n7         <none>\n9         kubectl apply --filename=web-api-deployment.yml --record=true\n10        <none>\n```", "```\n$ kubectl delete services recipe-api-service\n$ kubectl delete services web-api-service\n$ kubectl delete deployment recipe-api\n$ kubectl delete deployment web-api\n$ kubectl delete ingress web-api-ingress\n$ minikube stop\n$ minikube delete\n```"]