- en: Part V. Security Patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security is a broad topic that has implications for all stages of the software
    development lifecycle, from development practices, to image scanning at build
    time, to cluster hardening through admission controllers at deployment time, to
    threat detection at runtime. Security also touches all the layers of the software
    stack, from cloud infrastructure security, to cluster security, to container security,
    to code security, also known as the 4C’s of cloud native security. In this section,
    we focus on the intersection of an application with Kubernetes from the security
    point of view, as demonstrated in [Figure V-1](#img-security).
  prefs: []
  type: TYPE_NORMAL
- en: '![Security patterns overview](assets/kup2_P501.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure V-1\. Security patterns
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'We start by describing the *Process Containment* pattern to contain and limit
    the actions an application is allowed to perform on the node it is running on.
    Then we explore the techniques to limit what other Pods a Pod can talk to by doing
    *Network Segmentation*. In the *Secure Configuration* pattern, we discuss how
    an application within a Pod can access and use configurations in a secure way.
    And finally, we describe the *Access Control* pattern—how an application can authenticate
    and talk to the Kubernetes API server and interact with it in more advanced scenarios.
    These give you an overview of the main security dimensions of an application running
    on Kubernetes, and we discuss the resulting patterns in the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 23, “Process Containment”](ch23.html#ProcessContainment), describes
    the ways to contain a process to the least privileges it is entitled to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 24, “Network Segmentation”](ch24.html#NetworkSegmentation), applies
    network controls to limit the traffic a Pod is allowed to participate in.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 25, “Secure Configuration”](ch25.html#SecureConfiguration), helps
    keep and use sensitive configuration data securely and safely.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 26, “Access Control”](ch26.html#AccessControl), allows users and application
    workloads to authenticate and interact with the Kubernetes API server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
