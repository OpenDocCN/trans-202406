["```\n$ curl -L -O \\\n https://download.falco.org/packages/bin/x86_64/falco-0.32.0-x86_64.tar.gz\n```", "```\n$ tar -xvf falco-0.32.0-x86_64.tar.gz\n```", "```\n$ sudo cp -R falco-0.32.0-x86_64/* /\n```", "```\n$ sudo falco-driver-loader\n* Running falco-driver-loader for: falco version=0.32.0, driver version=39ae...\n* Running falco-driver-loader with: driver=module, compile=yes, download=yes\n...\n* Looking for a falco module locally (kernel 5.18.1-arch1-1)\n* Trying to download a prebuilt falco module from https://download.falco.org/...\ncurl: (22) The requested URL returned error: 404\nUnable to find a prebuilt falco module\n* Trying to dkms install falco module with GCC /usr/bin/gcc\n```", "```\n$ sudo falco\nMon Jun  6 16:08:29 2022: Falco version 0.32.0 (driver version 39ae7d404967...\nMon Jun  6 16:08:29 2022: Falco initialized with configuration file /etc/fa...\nMon Jun  6 16:08:29 2022: Loading rules from file /etc/falco/falco_rules.yaml:\nMon Jun  6 16:08:29 2022: Loading rules from file /etc/falco/falco_rules.loc...\nMon Jun  6 16:08:29 2022: Starting internal webserver, listening on port 8765\n```", "```\n- rule: Write below binary dir\n  desc: an attempt to write to any file below a set of binary directories\n  condition: >\n    bin_dir and evt.dir = < and open_write\n  output: >\n    File below a known binary directory opened for writing\n    (user=%user.name user_loginuid=%user.lo command=%proc.cmdline\n    file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline\n    gparent=%proc.aname[2] container_id=%container.id\n    image=%container.image.repository)\n  priority: ERROR\n  source: syscall\n```", "```\n- macro: bin_dir\n  condition: fd.directory in (/bin, /sbin, /usr/bin, /usr/sbin)\n\n- macro: open_write\n  condition: >\n    evt.type in (open,openat,openat2) \n    and evt.is_open_write=true \n    and fd.typechar='f' \n    and fd.num>=0\n```", "```\n    evt.type in (open,openat,openat2) \n    and evt.is_open_write=true \n    and fd.typechar='f' \n    and fd.num>=0\n    and evt.dir = <\n    and fd.directory in (/bin, /sbin, /usr/bin, /usr/sbin)\n```", "```\n$ sudo falco\n```", "```\n$ sudo touch /bin/surprise\n```", "```\n16:52:09.350818073: Error File below a known binary directory opened for writing\n  (user=root user_loginuid=1000 command=touch /bin/surprise file=/bin/surprise \n  parent=sudo pcmdline=sudo touch /bin/surprise gparent=zsh container_id=host \n  image=<NA>)\n```", "```\n$ ./event-generator run syscall.ReadSensitiveFileUntrusted\n```", "```\n16:52:09.350818073: Error File below a known binary directory opened for writing \n  (user=root user_loginuid=1000 command=touch /bin/surprise file=/bin/surprise \n  parent=sudo pcmdline=sudo touch /bin/surprise gparent=zsh container_id=host \n  image=<NA>)\n```", "```\n{\n  \"output\": \"11:55:33.844042146: Error File below a known binary directory...\",\n  \"priority\": \"Error\",\n  \"rule\": \"Write below binary dir\",\n  \"time\": \"2021-09-13T09:55:33.844042146Z\",\n  \"output_fields\": {\n    \"container.id\": \"host\",\n    \"container.image.repository\": null,\n    \"evt.time\": 1631526933844042146,\n    \"fd.name\": \"/bin/surprise\",\n    \"proc.aname[2]\": \"zsh\",\n    \"proc.cmdline\": \"touch /bin/surprise\",\n    \"proc.pcmdline\": \"sudo touch /bin/surprise\",\n    \"proc.pname\": \"sudo\",\n    \"user.loginuid\": 1000,\n    \"user.name\": \"root\"\n  }\n}\n```", "```\n$ sudo falco -o json_output=true\n```", "```\nFalco initialized with configuration file /etc/falco/falco.yaml\n```", "```\nrules_file:\n  - /etc/falco/falco_rules.yaml\n  - /etc/falco/falco_rules.local.yaml\n  - /etc/falco/rules.d\n```", "```\n- rule: Write below binary dir\n  enabled: false\n```", "```\nstdout_output:\n  enabled: true\n\nsyslog_output:\n  enabled: true\n```", "```\nfile_output:\n  enabled: false\n  keep_alive: false\n  filename: ./events.txt\n```", "```\nprogram_output:\n  enabled: false\n  keep_alive: false\n  program: mail -s \"Falco Notification\" someone@example.com\n```", "```\nhttp_output:\n  enabled: false\n  url: http://some.url\n```"]