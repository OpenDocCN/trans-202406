- en: Chapter 15\. How to Contribute
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章 如何贡献
- en: Reaching this point in the book means you’re on your way to mastering all aspects
    of Falco. This chapter will give you some advice on contributing to The Falco
    Project. Contributing means much more than just writing code (a common misconception)—in
    fact, there are many valuable ways to contribute. We’ll explain where to start
    and how to satisfy the Falcosecurity organization’s specific contribution requirements.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到达本书的这一部分意味着你正在掌握 Falco 的所有方面。本章将为你提供一些建议，帮助你贡献给 Falco 项目。贡献意味着不仅仅是编写代码（这是一个常见的误解）
    —— 实际上，有许多有价值的贡献方式。我们将解释从何处开始以及如何满足 Falcosecurity 组织的特定贡献要求。
- en: Contributing to open source software is a rewarding experience. Not only will
    you improve Falco, but you’ll also meet people with similar interests, share feedback
    and ideas with others, and improve your own skills. If you are new to open source
    or want to learn more, we suggest taking a look at the [Open Source Guides](https://oreil.ly/ZBe39).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 参与开源软件是一种有益的体验。你不仅可以改进 Falco，还会结识志同道合的人，与他人分享反馈和想法，提升自己的技能。如果你是开源新手或者想了解更多，我们建议你参阅[开源指南](https://oreil.ly/ZBe39)。
- en: What Does It Mean to Contribute to Falco?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 贡献 Falco 意味着什么？
- en: 'Falco is a [Cloud Native Computing Foundation](https://www.cncf.io) project.
    The CNCF serves as a vendor-neutral place for cloud native software. It empowers
    self-governing models for its hosted projects and helps sustain healthy open source
    communities. Falco is primarily driven by its community, which includes users,
    maintainers, and developers who curate and continuously improve it by:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Falco 是一个[Cloud Native Computing Foundation](https://www.cncf.io)项目。CNCF 是云原生软件的供应商中立场所。它支持其托管项目的自治模型，并帮助维持健康的开源社区。Falco
    主要由社区驱动，包括用户、维护者和开发者，通过以下方式不断策划和改进：
- en: Sharing feedback to improve the design and existing features
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供反馈以改进设计和现有功能
- en: Testing Falco to discover issues
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试 Falco 以发现问题
- en: Reporting bugs
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报告漏洞
- en: Writing project documentation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 撰写项目文档
- en: Experimenting with new ideas
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试新的创意
- en: Test-driving new features
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试新功能
- en: Proposing changes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提议变更
- en: Writing code
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写代码
- en: And the list goes on. In summary, contributing means sharing knowledge and collaborating
    for the benefit of The Falco Project.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 列举不胜枚举。总之，贡献意味着分享知识，为了 Falco 项目的利益进行合作。
- en: Where Should I Start?
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我应该从哪里开始？
- en: You should start by joining the Falco community. You can do that by joining
    the [Falco Slack channel](https://oreil.ly/00Az6) and introducing yourself. The
    community is very welcoming. We recommend subscribing to the [official mailing
    list](https://oreil.ly/R5CSB). Community members, including maintainers, also
    get together in a weekly call, which everyone can join. You can find details about
    the weekly community call and other initiatives in the [community GitHub repository](https://oreil.ly/VMhp4).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该首先加入 Falco 社区。你可以通过加入[Falco Slack 频道](https://oreil.ly/00Az6)并进行自我介绍来做到这一点。社区非常欢迎你的加入。我们建议你订阅[官方邮件列表](https://oreil.ly/R5CSB)。社区成员，包括维护者，还会定期举行周会议，每个人都可以参加。你可以在[社区
    GitHub 存储库](https://oreil.ly/VMhp4)中找到关于周会议和其他活动的详细信息。
- en: 'As a friendly reminder, the community is made up of human beings: be kind with
    them, and they will do the same with you. Everyone participating in the community
    must adhere to its [Code of Conduct](https://oreil.ly/GgbyC), so make sure you
    read and understand it.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 友情提醒，社区是由人类组成的：善待他们，他们也会善待你。参与社区的每个人都必须遵守其[行为准则](https://oreil.ly/GgbyC)，所以请确保你已阅读并理解它。
- en: Contributing to Falcosecurity Projects
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 贡献给 Falcosecurity 项目
- en: As you know by now, Falco and all its related projects are hosted under the
    [Falco­se⁠curity organization on GitHub](https://oreil.ly/KNTDD). Each project
    has its own public repository—you can even find a repository with the [source
    code of the Falco website](https://oreil.ly/47j3K). If you don’t have a GitHub
    account yet, you’ll need to [create one](https://oreil.ly/F61GW). We also advise
    you to take your time and get familiar with how GitHub works. You’ll need a working
    knowledge of Git, particularly if you plan to contribute code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你现在所知，Falco 及其所有相关项目都托管在[GitHub 上的 Falco 安全组织](https://oreil.ly/KNTDD)下。每个项目都有自己的公共存储库
    —— 你甚至可以找到一个包含 [Falco 网站源代码](https://oreil.ly/47j3K)的存储库。如果你还没有 GitHub 账户，你需要[创建一个](https://oreil.ly/F61GW)。我们还建议你花些时间熟悉
    GitHub 的工作方式。如果你打算贡献代码，你需要对 Git 有一定的了解。
- en: The Falcosecurity organization has an automated support mechanism (or bot) to
    help you and make the contribution process easier. You will probably need a bit
    of time to get acquainted with it. If you need help, feel free to ask! An actual
    human from the community will be happy to help you.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Falcosecurity 组织有一个自动化的支持机制（或机器人）来帮助你并简化贡献过程。你可能需要一点时间来熟悉它。如果需要帮助，请随时询问！社区的真实人员将乐意帮助你。
- en: Before preparing any contribution, make sure to check out the [online contribution
    guidelines](https://oreil.ly/yRema), since they change from time to time. However,
    keep reading and we will explain the most important aspects.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备任何贡献之前，请务必查阅[在线贡献指南](https://oreil.ly/yRema)，因为这些指南会不时更新。不过，请继续阅读，我们将解释最重要的方面。
- en: Issues
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: '[GitHub issues](https://oreil.ly/cOTct) are the main way to interact with a
    project. Opening an issue to report a bug or propose an enhancement is one of
    the principal forms of contribution. Using issues correctly is also vital for
    the project, since most feedback comes from them.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[GitHub 问题](https://oreil.ly/cOTct)是与项目互动的主要方式。打开一个问题报告错误或提出改进建议是主要的贡献形式之一。正确使用问题对于项目非常重要，因为大多数反馈都来自它们。'
- en: 'Each Falcosecurity repository defines *kinds* of issues. The most common kinds
    are *Bug Report*, *Documentation Request*, *Failing Test*, and *Feature Request*.
    You select the kind when opening an issue. Depending on the kind you select, you
    will see an issue description along with a form for you to fill out. The form
    usually includes questions: for example, it might ask you to describe a bug, how
    to reproduce it, the Falco version that presents the bug, and so on. This information
    helps others understand your issue and work on it, so it’s crucial to answer all
    of the questions to save everyone time and increase the chances of successful
    resolution.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 Falcosecurity 仓库定义了*问题*的类型。最常见的类型包括*错误报告*、*文档请求*、*测试失败*和*功能请求*。在打开问题时选择类型。根据选择的类型，你会看到一个问题描述以及一个要填写的表单。通常表单包括问题，例如可能会要求你描述一个错误，如何重现它，出现错误的
    Falco 版本等等。这些信息帮助他人理解你的问题并进行处理，因此回答所有问题非常重要，这样可以节省时间并增加成功解决问题的机会。
- en: Once an issue has been opened, a collaborative process starts. Any community
    members interested in the topic can participate, not just maintainers. Participating
    in this process is a welcome way to get involved.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦问题被打开，协作过程就开始了。任何对该主题感兴趣的社区成员都可以参与，不仅限于维护者。参与这个过程是一个很好的方式来参与。
- en: The initial stage of this process is called *triaging*. It involves verifying
    and categorizing the information reported in the issue. For example, in the case
    of a bug, community members try to reproduce it and check if it appears in the
    manner described. In some cases, the process ends with someone correctly answering
    a question or simply pointing the reporter to resources that solve the problem.
    In other cases, someone volunteers to implement a requested feature or fix a bug
    and takes ownership of submitting a *pull request* (see the next section).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的初始阶段称为*分类*。它涉及验证和分类问题报告中的信息。例如，在错误的情况下，社区成员会尝试重现它，并检查是否如描述的那样出现。在某些情况下，过程会以正确回答问题或简单指向解决问题的资源而结束。在其他情况下，有人自愿实施请求的功能或修复错误，并负责提交*拉取请求*（见下一节）。
- en: You can be involved at any stage of this process. As long as it is constructive,
    everyone can contribute.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在任何阶段参与这个过程。只要是建设性的，每个人都可以做出贡献。
- en: Pull Requests
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pull Requests
- en: '[Pull requests (PRs)](https://oreil.ly/bcerI) are the only way to commit changes
    to a Falcosecurity project. When you want to submit a new feature or a fix, you
    have to [fork the related repository](https://oreil.ly/yfuIq), create a branch
    in your fork, and add your commits. Once you’re confident your change works as
    expected, you are ready to submit a PR. Similar to issues, PRs come with a predefined
    [template](https://oreil.ly/zqqJL) to fill out. Be sure to read the instructions
    carefully. The template also includes some commands to help you interact with
    the automation.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[拉取请求（PRs）](https://oreil.ly/bcerI)是将更改提交到 Falcosecurity 项目的唯一途径。当你想要提交新功能或修复时，你需要[分叉相关的仓库](https://oreil.ly/yfuIq)，在你的分支中创建分支，并添加你的提交。一旦你确信你的更改按预期工作，你就可以提交
    PR。与问题类似，PRs 使用预定义的[模板](https://oreil.ly/zqqJL)填写。务必仔细阅读说明。模板还包括一些命令，帮助你与自动化进行交互。'
- en: 'After you open a PR, you will need to wait for a maintainer to review it. Maintainers
    have a lot of ongoing issues and PRs to look at, so be patient if they do not
    reply quickly! They might approve the PR directly or ask you to change something
    in your code. The review process is collaborative: maintainers and the PR author
    (and sometimes other users) share feedback and comments until the PR gets approved
    and merged. Any time you’re in doubt, ask for support: the maintainers will explain
    how to proceed.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 提交 PR 后，你需要等待维护者进行审查。维护者有许多正在处理的问题和 PR，所以如果他们没有迅速回复，请耐心等待！他们可能会直接批准 PR 或要求你修改代码。审查过程是协作的：维护者和
    PR 作者（有时还有其他用户）分享反馈和评论，直到 PR 被批准和合并。任何时候如果你有疑问，请寻求支持：维护者会解释如何继续。
- en: 'There are a few general guidelines to follow when making a PR:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 制作 PR 时需要遵循一些通用指南：
- en: Each repository may have its own coding style and guidelines; make sure you
    read and understand them.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个仓库可能有自己的编码风格和指南；确保你已阅读并理解它们。
- en: Avoid proposing too many code changes in a single PR; submitting several smaller,
    self-contained PRs usually works better.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免在单个 PR 中提交过多的代码更改；通常提交几个较小且独立的 PR 效果更好。
- en: Maintainers highly recommend using the [Conventional Commits style](https://oreil.ly/BB160)
    in your Git commit messages.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维护者强烈推荐在你的 Git 提交消息中使用[约定式提交风格](https://oreil.ly/BB160)。
- en: You must sign off on all of your Git commits, and your PR must not include merge
    commits (which we’ll discuss in a moment).
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你必须在所有 Git 提交上签名，并且你的 PR 不得包含合并提交（稍后我们将讨论此问题）。
- en: The following subsections explain the main requirements you must satisfy when
    preparing your code using Git.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的小节解释了在使用 Git 准备代码时必须满足的主要要求。
- en: Git conflict resolution and linear history
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Git 冲突解决和线性历史
- en: Sometimes you may need to synchronize with the upstream (remote) branch when
    working on your PR. If the remote branch has diverged from your local one, conflicts
    might arise. Git allows you to synchronize and resolve conflicts by *merging*
    or *rebasing*. Both methods solve the same problem, but they produce different
    outcomes.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候在处理 PR 时，你可能需要与上游（远程）分支进行同步。如果远程分支与本地分支有分歧，可能会出现冲突。Git 允许你通过*合并*或*变基*来同步和解决冲突。这两种方法解决同样的问题，但会产生不同的结果。
- en: Merging happens when the histories of the local and remote branches have diverged,
    and you use the `git merge` command or the `git pull` command to reconcile nonlinear
    histories. However, merging has the drawback of not leaving the repository history
    clean, making it harder to navigate with commands like `git bisect` or `git log`.
    For these reasons, the Falcosecurity organization does not allow merging in its
    projects.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当本地和远程分支历史不一致时会发生合并，你可以使用`git merge`命令或`git pull`命令来调和非线性历史。然而，合并的缺点是不能保持仓库历史的清洁，这会使得像`git
    bisect`或`git log`等命令更难使用。因此，Falcosecurity 组织不允许在其项目中进行合并。
- en: 'In contrast, *rebasing* moves your commits, placing them on top of the history
    of the other branch (instead of introducing a merge commit). That ensures the
    Git history is always linear. When developing your PR, you must always use rebasing
    to synchronize with the upstream or resolve conflicts with the main branch. The
    following command works in both cases (replace `*<branch>*` with the name of the
    remote branch):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，*变基* 将你的提交移动到其他分支历史的顶部（而不是引入合并提交）。这确保了 Git 历史始终保持线性。在开发你的 PR 时，你必须始终使用变基来与上游同步或解决与主分支的冲突。下面的命令适用于这两种情况（将
    `*<branch>*` 替换为远程分支的名称）：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This command also removes merge commits if you have accidentally introduced
    them. You can use its shortened version, `git pull --rebase`, when you only need
    to pull changes from your remote branch (for example, when working with collaborators
    on the same branch).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不小心引入了合并提交，这个命令还会移除它们。当你只需从远程分支拉取变更时（例如与同一分支上的协作者合作时），可以使用其简短版本`git pull
    --rebase`。
- en: 'To reiterate: the Falcosecurity organization enforces a linear history and
    does not allow merge commits for any projects. If your PR has a merge commit,
    the automation will block the PR and maintainers will not be able to merge it
    until you fix the issue. Always use rebasing, or your changes will not be accepted.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 重申一下：Falcosecurity 组织执行线性历史，并且不允许任何项目使用合并提交。如果你的 PR 包含合并提交，自动化系统会阻止 PR，并且维护者将无法合并它，直到你修复问题。始终使用变基，否则你的更改将无法被接受。
- en: The Developer Certificate of Origin
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发者证书的起源
- en: 'In 2004, the Linux Foundation (the parent organization of the CNCF) introduced
    the [Developer Certificate of Origin (DCO)](https://oreil.ly/Qttlz), a lightweight
    way for contributors to state that they have written (or have the right to submit)
    a piece of code. Projects that enforce the DCO require contributors to sign off
    on their commits, indicating that they agree to the DCO’s terms for that single
    contribution. The Git CLI has an embedded sign-off functionality that you can
    use via the [`-s` option](https://oreil.ly/5VcWl) or by manually adding the following
    line to the commit message:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 2004年，Linux基金会（CNCF的母组织）推出了[开发者签署证书（DCO）](https://oreil.ly/Qttlz)，这是一种轻量级的方式，让贡献者声明他们已经编写（或有权提交）一段代码。要求遵守DCO的项目需要贡献者在提交时签署，表示他们同意DCO的条款。Git
    CLI提供了嵌入的签署功能，您可以通过[`-s`选项](https://oreil.ly/5VcWl)使用，或者手动在提交消息中添加以下行：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The line must follow this format and include your name and email address.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 行必须遵循这种格式，并包含您的姓名和电子邮件地址。
- en: As part of the CNCF, Falco and all its related projects require the DCO. The
    Falco­se⁠curity organization implements an automation mechanism to check the DCO
    on PRs. When it is missing in a commit, the automation blocks the PR. So, don’t
    forget to sign off on every single commit; otherwise, maintainers cannot accept
    your contributions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作为CNCF的一部分，Falco及其所有相关项目都需要DCO。Falco­se⁠curity组织实施了一个自动化机制来检查PR中的DCO。如果提交中缺少DCO，自动化将阻止该PR。因此，请不要忘记在每个提交上签署；否则，维护者无法接受您的贡献。
- en: 'If you submit a PR and the DCO check fails because you missed signing off on
    one or more commits, don’t worry. You can adjust it. If you just need to amend
    the last commit, use:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您提交了一个PR，并且DCO检查失败，因为您未在一个或多个提交上签署，不用担心。您可以进行调整。如果您只需修改最后一次提交，请使用：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If you need to fix all the commits in your PR, use:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要修复PR中的所有提交，请使用：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Conclusion
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations, you’ve reached the end of the book! It’s been a long journey
    that covered architecture, syntax, real-world usage, customization, code development,
    and many more interesting topics. We sincerely hope you’ve enjoyed reading it
    and, more importantly, that the content is valuable to you, whether you came to
    this book as a beginner or an advanced user.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已经完成了本书的阅读！这是一个涵盖架构、语法、实际应用、定制、代码开发以及许多其他有趣主题的漫长旅程。我们真诚希望您喜欢阅读本书，并且更重要的是，书中的内容对您有价值，无论您是初学者还是高级用户。
- en: For us, this is a bittersweet moment. While we are sad to say goodbye, we’re
    grateful we had a chance to go through this journey with you, and we are proud
    to contribute to making your software a little more secure.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 对我们来说，这是个苦乐参半的时刻。虽然我们很难过地告别，但我们很感激能有机会与您共同经历这段旅程，并且我们为能够帮助使您的软件更加安全感到自豪。
- en: You are now ready to start another incredible adventure. As Falco maintainers,
    we welcome you to the project and hope to meet you in one of the community forums.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经准备好开始另一场不可思议的冒险了。作为Falco的维护者，我们欢迎您加入项目，并希望能在社区论坛的其中一个见到您。
