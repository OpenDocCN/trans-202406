["```\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number: 1 (0x1)\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=US, ST=NY, L=New York, O=MongoDB, CN=CA-SIGNER\n        Validity\n            Not Before: Nov 11 22:00:03 2018 GMT\n            Not After : Nov 11 22:00:03 2019 GMT\n        Subject: C=US, ST=NY, L=New York, O=MongoDB, OU=MyServers, CN=server1\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:d3:1c:29:ba:3d:29:44:3b:2b:75:60:95:c8:83:\n                    fc:32:1a:fa:29:5c:56:f3:b3:66:88:7f:f9:f9:89:\n                    ff:c2:51:b9:ca:1d:4c:d8:b8:5a:fd:76:f5:d3:c9:\n                    95:9c:74:52:e9:8d:5f:2e:6b:ca:f8:6a:16:17:98:\n                    dc:aa:bf:34:d0:44:33:33:f3:9d:4b:7e:dd:7a:19:\n                    1b:eb:3b:9e:21:d9:d9:ba:01:9c:8b:16:86:a3:52:\n                    a3:e6:e4:5c:f7:0c:ab:7a:1a:be:c6:42:d3:a6:01:\n                    8e:0a:57:b2:cd:5b:28:ee:9d:f5:76:ca:75:7a:c1:\n                    7c:42:d1:2a:7f:17:fe:69:17:49:91:4b:ca:2e:39:\n                    b4:a5:e0:03:bf:64:86:ca:15:c7:b2:f7:54:00:f7:\n                    02:fe:cf:3e:12:6b:28:58:1c:35:68:86:3f:63:46:\n                    75:f1:fe:ac:1b:41:91:4f:f2:24:99:54:f2:ed:5b:\n                    fd:01:98:65:ac:7a:7a:57:2f:a8:a5:5a:85:72:a6:\n                    9e:fb:44:fb:3b:1c:79:88:3f:60:85:dd:d1:5c:1c:\n                    db:62:8c:6a:f7:da:ab:2e:76:ac:af:6d:7d:b1:46:\n                    69:c1:59:db:c6:fb:6f:e1:a3:21:0c:5f:2e:8e:a7:\n                    d5:73:87:3e:60:26:75:eb:6f:10:c2:64:1d:a6:19:\n                    f3:0b\n                Exponent: 65537 (0x10001)\n    Signature Algorithm: sha256WithRSAEncryption\n         5d:dd:b2:35:be:27:c2:41:4a:0d:c7:8c:c9:22:05:cd:eb:88:\n         9d:71:4f:28:c1:79:71:3c:6d:30:19:f4:9c:3d:48:3a:84:d0:\n         19:00:b1:ec:a9:11:02:c9:a6:9c:74:e7:4e:3c:3a:9f:23:30:\n         50:5a:d2:47:53:65:06:a7:22:0b:59:71:b0:47:61:62:89:3d:\n         cf:c6:d8:b3:d9:cc:70:20:35:bf:5a:2d:14:51:79:4b:7c:00:\n         30:39:2d:1d:af:2c:f3:32:fe:c2:c6:a5:b8:93:44:fa:7f:08:\n         85:f0:01:31:29:00:d4:be:75:7e:0d:f9:1a:f5:e9:75:00:9a:\n         7b:d0:eb:80:b1:01:00:c0:66:f8:c9:f0:35:6e:13:80:70:08:\n         5b:95:53:4b:34:ec:48:e3:02:88:5c:cd:a0:6c:b4:bc:65:15:\n         4d:c8:41:9d:00:f5:e7:f2:d7:f5:67:4a:32:82:2a:04:ae:d7:\n         25:31:0f:34:e8:63:a5:93:f2:b5:5a:90:71:ed:77:2a:a6:15:\n         eb:fc:c3:ac:ef:55:25:d1:a1:31:7a:2c:80:e3:42:c2:b3:7d:\n         5e:9a:fc:e4:73:a8:39:50:62:db:b1:85:aa:06:1f:42:27:25:\n         4b:24:cf:d0:40:ca:51:13:94:97:7f:65:3e:ed:d9:3a:67:08:\n         79:64:a1:ba\n-----BEGIN CERTIFICATE-----\nMIIDODCCAiACAQEwDQYJKoZIhvcNAQELBQAwWTELMAkGA1UEBhMCQ04xCzAJBgNV\nBAgMAkdEMREwDwYDVQQHDAhTaGVuemhlbjEWMBQGA1UECgwNTW9uZ29EQiBDaGlu\nYTESMBAGA1UEAwwJQ0EtU0lHTkVSMB4XDTE4MTExMTIyMDAwM1oXDTE5MTExMTIy\nMDAwM1owazELMAkGA1UEBhMCQ04xCzAJBgNVBAgMAkdEMREwDwYDVQQHDAhTaGVu\nemhlbjEWMBQGA1UECgwNTW9uZ29EQiBDaGluYTESMBAGA1UECwwJTXlTZXJ2ZXJz\nMRAwDgYDVQQDDAdzZXJ2ZXIxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEA0xwpuj0pRDsrdWCVyIP8Mhr6KVxW87NmiH/5+Yn/wlG5yh1M2Lha/Xb108mV\nnHRS6Y1fLmvK+GoWF5jcqr800EQzM/OdS37dehkb6zueIdnZugGcixaGo1Kj5uRc\n9wyrehq+xkLTpgGOCleyzVso7p31dsp1esF8QtEqfxf+aRdJkUvKLjm0peADv2SG\nyhXHsvdUAPcC/s8+EmsoWBw1aIY/Y0Z18f6sG0GRT/IkmVTy7Vv9AZhlrHp6Vy+o\npVqFcqae+0T7Oxx5iD9ghd3RXBzbYoxq99qrLnasr219sUZpwVnbxvtv4aMhDF8u\njqfVc4c+YCZ1628QwmQdphnzCwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBd3bI1\nvifCQUoNx4zJIgXN64idcU8owXlxPG0wGfScPUg6hNAZALHsqRECyaacdOdOPDqf\nIzBQWtJHU2UGpyILWXGwR2FiiT3Pxtiz2cxwIDW/Wi0UUXlLfAAwOS0dryzzMv7C\nxqW4k0T6fwiF8AExKQDUvnV+Dfka9el1AJp70OuAsQEAwGb4yfA1bhOAcAhblVNL\nNOxI4wKIXM2gbLS8ZRVNyEGdAPXn8tf1Z0oygioErtclMQ806GOlk/K1WpBx7Xcq\nphXr/MOs71Ul0aExeiyA40LCs31emvzkc6g5UGLbsYWqBh9CJyVLJM/QQMpRE5SX\nf2U+7dk6Zwh5ZKG6\n-----END CERTIFICATE-----\n```", "```\ndn_prefix=\"/C=US/ST=NY/L=New York/O=MongoDB\"\nou_member=\"MyServers\"\nou_client=\"MyClients\"\nmongodb_server_hosts=( \"server1\" \"server2\" \"server3\" )\nmongodb_client_hosts=( \"client1\" \"client2\" )\nmongodb_port=27017\n```", "```\n# !!! In production you will want to password-protect the keys\n# openssl genrsa -aes256 -out root-ca.key 4096\nopenssl genrsa -out root-ca.key 4096\n```", "```\n# For the CA policy\n[ policy_match ]\ncountryName = match\nstateOrProvinceName = match\norganizationName = match\norganizationalUnitName = optional\ncommonName = supplied\nemailAddress = optional\n\n[ req ]\ndefault_bits        = 4096\ndefault_keyfile     = server-key.pem\ndefault_md      = sha256\ndistinguished_name  = req_dn\nreq_extensions = v3_req\nx509_extensions = v3_ca # The extensions to add to the self-signed cert\n\n[ v3_req ]\nsubjectKeyIdentifier  = hash\nbasicConstraints = CA:FALSE\nkeyUsage = critical, digitalSignature, keyEncipherment\nnsComment = \"OpenSSL Generated Certificate\"\nextendedKeyUsage  = serverAuth, clientAuth\n\n[ req_dn ]\ncountryName = Country Name (2-letter code)\ncountryName_default = US\ncountryName_min = 2\ncountryName_max = 2\n\nstateOrProvinceName = State or Province Name (full name)\nstateOrProvinceName_default = NY\nstateOrProvinceName_max = 64\n\nlocalityName = Locality Name (eg, city)\nlocalityName_default = New York\nlocalityName_max = 64\n\norganizationName = Organization Name (eg, company)\norganizationName_default = MongoDB\norganizationName_max = 64\n\norganizationalUnitName = Organizational Unit Name (eg, section)\norganizationalUnitName_default = Education\norganizationalUnitName_max = 64\n\ncommonName = Common Name (eg, YOUR name)\ncommonName_max = 64\n\n[ v3_ca ]\n# Extensions for a typical CA\n\nsubjectKeyIdentifier = hash\nbasicConstraints = critical,CA:true\nauthorityKeyIdentifier = keyid:always,issuer:always\n\n# Key usage: this is typical for a CA certificate. However, since it will\n# prevent it being used as a test self-signed certificate it is best\n# left out by default.\nkeyUsage = critical,keyCertSign,cRLSign\n```", "```\nopenssl req -new -x509 -days 1826 -key root-ca.key -out root-ca.crt \\\n  -config openssl.cnf -subj \"$dn_prefix/CN=ROOTCA\"\n```", "```\nopenssl x509 -noout -text -in root-ca.crt\n```", "```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            1e:83:0d:9d:43:75:7c:2b:d6:2a:dc:7e:a2:a2:25:af:5d:3b:89:43\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, ST = NY, L = New York, O = MongoDB, CN = ROOTCA\n        Validity\n            Not Before: Sep 11 21:17:24 2019 GMT\n            Not After : Sep 10 21:17:24 2024 GMT\n        Subject: C = US, ST = NY, L = New York, O = MongoDB, CN = ROOTCA\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (4096 bit)\n                Modulus:\n                    00:e3:de:05:ae:ba:c9:e0:3f:98:37:18:77:02:35:\n                    e7:f6:62:bc:c3:ae:38:81:8d:04:88:da:6c:e0:57:\n                    c2:90:86:05:56:7b:d2:74:23:54:f8:ca:02:45:0f:\n                    38:e7:e2:0b:69:ea:f6:c8:13:8f:6c:2d:d6:c1:72:\n                    64:17:83:4e:68:47:cf:de:37:ed:6e:38:b2:ab:3a:\n                    e4:45:a8:fa:08:90:a0:f3:0d:3a:14:d8:9a:8d:69:\n                    e7:cf:93:1a:71:53:4f:13:29:50:b0:2f:b6:b8:19:\n                    2a:40:21:15:90:43:e7:d8:d8:f3:51:e5:95:58:87:\n                    6c:45:9f:61:fc:b5:97:cf:5b:4e:4a:1f:72:c9:0c:\n                    e9:8c:4c:d1:ca:df:b3:a4:da:b4:10:83:81:01:b1:\n                    c8:09:22:76:c7:1e:96:c7:e6:56:27:8d:bc:fb:17:\n                    ed:d9:23:3f:df:9c:ef:03:20:cc:c3:c4:55:cc:9f:\n                    ad:d4:8d:81:95:c3:f1:87:f8:d4:5a:5e:e0:a8:41:\n                    27:c8:0d:52:91:e4:2b:db:25:d6:b7:93:8d:82:33:\n                    7a:a7:b8:e8:cd:a8:e2:94:3d:d6:16:e1:4e:13:63:\n                    3f:77:08:10:cf:23:f6:15:7c:71:24:97:ef:1c:a2:\n                    68:0f:82:e2:f7:24:b3:aa:70:1a:4a:b4:ca:4d:05:\n                    92:5e:47:a2:3d:97:82:f6:d8:c8:04:a7:91:6c:a4:\n                    7d:15:8e:a8:57:70:5d:50:1c:0b:36:ba:78:28:f2:\n                    da:5c:ed:4b:ea:60:8c:39:e6:a1:04:26:60:b3:e2:\n                    ee:4f:9b:f9:46:3c:7e:df:82:88:29:c2:76:3e:1a:\n                    a4:81:87:1f:ce:9e:41:68:de:6c:f3:89:df:ae:02:\n                    e7:12:ee:93:20:f1:d2:d6:3d:36:58:ee:71:bf:b3:\n                    c5:e7:5a:4b:a0:12:89:ed:f7:cc:ec:34:c7:b2:28:\n                    a8:1a:87:c6:8b:5e:d2:c8:25:71:ba:ff:d0:82:1b:\n                    5e:50:a9:8a:c6:0c:ea:4b:17:a6:cc:13:0a:53:36:\n                    c6:9d:76:f2:95:cc:ac:b9:64:d5:72:fc:ab:ce:6b:\n                    59:b1:3a:f2:49:2f:2c:09:d0:01:06:e4:f2:49:85:\n                    79:82:e8:c8:bb:1a:ab:70:e3:49:97:9f:84:e0:96:\n                    c2:6d:41:ab:59:0c:2e:70:9a:2e:11:c8:83:69:4b:\n                    f1:19:97:87:c3:76:0e:bb:b0:2c:92:4a:07:03:6f:\n                    57:bf:a9:ec:19:85:d6:3d:f8:de:03:7f:1b:9a:2f:\n                    6c:02:72:28:b0:69:d5:f9:fb:3d:2e:31:8f:61:50:\n                    59:a6:dd:43:4b:89:e9:68:4b:a6:0d:9b:00:0f:9a:\n                    94:61:71\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Subject Key Identifier:\n                8B:D6:F8:BD:B7:82:FC:13:BC:61:3F:8B:FA:84:24:3F:A2:14:C8:27\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Authority Key Identifier:\n                keyid:8B:D6:F8:BD:B7:82:FC:13:BC:61:3F:8B:FA:84:24:3F:A2:14:C8:27\n                DirName:/C=US/ST=NY/L=New York/O=MongoDB/CN=ROOTCA\n                serial:1E:83:0D:9D:43:75:7C:2B:D6:2A:DC:7E:A2:A2:25:AF:5D:3B:89:43\n\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n    Signature Algorithm: sha256WithRSAEncryption\n         c2:cc:79:40:8b:7b:a1:87:3a:ec:4a:71:9d:ab:69:00:bb:6f:\n         56:0a:25:3b:8f:bd:ca:4d:4b:c5:27:28:3c:7c:e5:cf:84:ec:\n         2e:2f:0d:37:35:52:6d:f9:4b:07:fb:9b:da:ea:5b:31:0f:29:\n         1f:3c:89:6a:10:8e:ae:20:30:8f:a0:cf:f1:0f:41:99:6a:12:\n         5f:5c:ce:15:d5:f1:c9:0e:24:c4:81:70:df:ad:a0:e1:0a:cc:\n         52:d4:3e:44:0b:61:48:a9:26:3c:a3:3d:2a:c3:ca:4f:19:60:\n         da:f7:7a:4a:09:9e:26:42:50:05:f8:74:13:4b:0c:78:f1:59:\n         39:1e:eb:2e:e1:e2:6c:cc:4d:96:95:79:c2:8b:58:41:e8:7a:\n         e6:ad:37:e4:87:d7:ed:bb:7d:fa:47:dd:46:dd:e7:62:5f:e9:\n         fe:17:4b:e3:7a:0e:a1:c5:80:78:39:b7:6c:a6:85:cf:ba:95:\n         d2:8d:09:ab:2d:cb:be:77:9b:3c:22:12:ca:12:86:42:d8:c5:\n         3c:31:a0:ed:92:bc:7f:3f:91:2d:ec:db:01:bd:26:65:56:12:\n         a3:56:ba:d8:d3:6e:f3:c3:13:84:98:2a:c7:b3:22:05:68:fa:\n         8e:48:6f:36:8e:3f:e5:4d:88:ef:15:26:4c:b1:d3:7e:25:84:\n         8c:bd:5b:d2:74:55:cb:b3:fa:45:3f:ee:ef:e6:80:e9:f7:7f:\n         25:a6:6e:f2:c4:22:f7:b8:40:29:02:f1:5e:ea:8e:df:80:e0:\n         60:f1:e5:3a:08:81:25:d5:cc:00:8f:5c:ac:a6:02:da:27:c0:\n         cc:4e:d3:f3:14:60:c1:12:3b:21:b4:f7:29:9b:4c:34:39:3c:\n         2a:d1:4b:86:cc:c7:de:f3:f7:5e:8f:9d:47:2e:3d:fe:e3:49:\n         70:0e:1c:61:1c:45:a0:5b:d6:48:49:be:6d:f9:3c:49:26:d8:\n         8b:e6:a1:b2:61:10:fe:0c:e8:44:2c:33:cd:3c:1d:c2:de:c2:\n         06:98:7c:92:7b:c4:06:a5:1f:02:8a:03:53:ec:bd:b7:fc:31:\n         f3:2a:c1:0e:6a:a5:a8:e4:ea:4d:cc:1d:07:a9:3f:f6:0e:35:\n         5d:99:31:35:b3:43:90:f3:1c:92:8e:99:15:13:2b:8f:f6:a6:\n         01:c9:18:05:15:2a:e3:d0:cc:45:66:d3:48:11:a2:b9:b1:20:\n         59:42:f7:88:15:9f:e0:0c:1d:13:ae:db:09:3d:bf:7a:9d:cf:\n         b2:41:1e:7a:fa:6b:35:20:03:58:a1:6c:02:19:21:5f:25:fc:\n         ba:2f:fc:79:d7:92:e7:37:77:14:10:d9:33:b6:e5:fb:7a:46:\n         ab:d1:86:70:88:92:59:c3\n```", "```\n# again, in production you would want to password protect your signing key:\n# openssl genrsa -aes256 -out signing-ca.key 4096\nopenssl genrsa -out signing-ca.key 4096\n\nopenssl req -new -key signing-ca.key -out signing-ca.csr \\\n  -config openssl.cnf -subj \"$dn_prefix/CN=CA-SIGNER\"\nopenssl x509 -req -days 730 -in signing-ca.csr -CA root-ca.crt -CAkey \\\n  root-ca.key -set_serial 01 -out signing-ca.crt -extfile openssl.cnf \\\n  -extensions v3_ca\n```", "```\ncat root-ca.crt > root-ca.pem\ncat signing-ca.crt >> root-ca.pem\n```", "```\n# Pay attention to the OU part of the subject in \"openssl req\" command\nfor host in \"${mongodb_server_hosts[@]}\"; do\n    echo \"Generating key for $host\"\n    openssl genrsa -out ${host}.key 4096\n\topenssl req -new -key ${host}.key -out ${host}.csr -config openssl.cnf \\\n\t-subj \"$dn_prefix/OU=$ou_member/CN=${host}\"\n\topenssl x509 -req -days 365 -in ${host}.csr -CA signing-ca.crt -CAkey \\\n\tsigning-ca.key -CAcreateserial -out ${host}.crt -extfile openssl.cnf \\\n\t-extensions v3_req\n    cat ${host}.crt > ${host}.pem\n    cat ${host}.key >> ${host}.pem\ndone\n```", "```\n# Pay attention to the OU part of the subject in \"openssl req\" command\nfor host in \"${mongodb_client_hosts[@]}\"; do\n    echo \"Generating key for $host\"\n    openssl genrsa -out ${host}.key 4096\n    openssl req -new -key ${host}.key -out ${host}.csr -config openssl.cnf \\\n-subj \"$dn_prefix/OU=$ou_client/CN=${host}\"\n    openssl x509 -req -days 365 -in ${host}.csr -CA signing-ca.crt -CAkey \\\n      signing-ca.key -CAcreateserial -out ${host}.crt -extfile openssl.cnf \\\n      -extensions v3_req\n    cat ${host}.crt > ${host}.pem\n    cat ${host}.key >> ${host}.pem\ndone\n```", "```\nmport=$mongodb_port\nfor host in \"${mongodb_server_hosts[@]}\"; do\n    echo \"Starting server $host in non-auth mode\"   \n    mkdir -p ./db/${host}\n    mongod --replSet set509 --port $mport --dbpath ./db/$host \\\n        --fork --logpath ./db/${host}.log       \n    let \"mport++\"\ndone\n```", "```\nmyhostname=`hostname`\ncat > init_set.js <<EOF\nrs.initiate();\nmport=$mongodb_port;\nmport++;\nrs.add(\"localhost:\" + mport);\nmport++;\nrs.add(\"localhost:\" + mport);\nEOF\nmongo localhost:$mongodb_port init_set.js\n```", "```\nopenssl x509 -in client1.pem -inform PEM -subject -nameopt RFC2253 | grep subject\n```", "```\nsubject= CN=client1,OU=MyClients,O=MongoDB,L=New York,ST=NY,C=US\n```", "```\nmongo --norc localhost:27017\n```", "```\ndb.getSiblingDB(\"$external\").runCommand(\n    {\n        createUser: \"CN=client1,OU=MyClients,O=MongoDB,L=New York,ST=NY,C=US\",\n        roles: [\n             { role: \"readWrite\", db: 'test' },\n             { role: \"userAdminAnyDatabase\", db: \"admin\" },\n             { role: \"clusterAdmin\", db:\"admin\"}\n           ],\n        writeConcern: { w: \"majority\" , wtimeout: 5000 }\n    }\n);\n```", "```\nkill $(ps -ef | grep mongod | grep set509 | awk '{print $2}')\n```", "```\nmport=$mongodb_port\nfor host in \"${mongodb_server_hosts[@]}\"; do\n    echo \"Starting server $host\"\n    mongod --replSet set509 --port $mport --dbpath ./db/$host \\\n        --tlsMode requireTLS --clusterAuthMode x509 --tlsCAFile root-ca.pem \\\n        --tlsAllowInvalidHostnames --fork --logpath ./db/${host}.log \\\n        --tlsCertificateKeyFile ${host}.pem --tlsClusterFile ${host}.pem \\\n        --bind_ip 127.0.0.1\n    let \"mport++\"\ndone\n```", "```\nmongo --norc --tls --tlsCertificateKeyFile client1.pem --tlsCAFile root-ca.pem \\\n--tlsAllowInvalidHostnames --authenticationDatabase \"\\$external\" \\\n--authenticationMechanism MONGODB-X509\n```", "```\nmongo --norc --tls --tlsCertificateKeyFile client2.pem --tlsCAFile root-ca.pem \\\n--tlsAllowInvalidHostnames --authenticationDatabase \"\\$external\" \\\n--authenticationMechanism MONGODB-X509\nMongoDB shell version v4.2.0\n2019-09-11T23:18:31.696+0100 W  NETWORK  [js] The server certificate does not \nmatch the host name. Hostname: 127.0.0.1 does not match\n2019-09-11T23:18:31.702+0100 E  QUERY    [js] Error: Could not find user \n\"CN=client2,OU=MyClients,O=MongoDB,L=New York,ST=NY,C=US\" for db \"$external\" :\nconnect@src/mongo/shell/mongo.js:341:17\n@(connect):3:6\n2019-09-11T23:18:31.707+0100 F  -        [main] exception: connect failed\n2019-09-11T23:18:31.707+0100 E  -        [main] exiting with code 1\n```"]