- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'With the mainstream adoption of microservices and containers in recent years,
    the way we design, develop, and run software has changed radically. Today’s applications
    are optimized for availability, scalability, and speed-to-market. Driven by these
    new requirements, today’s modern applications require a different set of patterns
    and practices. This book aims to help developers discover and learn about the
    most common patterns for creating cloud native applications with Kubernetes. First,
    let’s take a brief look at the two primary ingredients of this book: Kubernetes
    and design patterns.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，微服务和容器的主流采用彻底改变了软件设计、开发和运行的方式。今天的应用程序优化了可用性、可扩展性和上市速度。在新需求的推动下，现代应用程序需要一组不同的模式和实践。本书旨在帮助开发人员探索和学习使用
    Kubernetes 创建云原生应用程序的最常见模式。首先，让我们简要了解本书的两个主要组成部分：Kubernetes 和设计模式。
- en: Kubernetes
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes
- en: '*Kubernetes* is a container orchestration platform. The origin of Kubernetes
    lies somewhere in the Google data centers where Google’s internal container orchestration
    platform, [Borg](https://oreil.ly/x12HH), was born. Google used Borg for many
    years to run its applications. In 2014, Google decided to transfer its experience
    with Borg into a new open source project called “Kubernetes” (Greek for “helmsman”
    or “pilot”). In 2015, it became the first project donated to the newly founded
    Cloud Native Computing Foundation (CNCF).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*Kubernetes* 是一个容器编排平台。Kubernetes 的起源可以追溯到谷歌数据中心，谷歌的内部容器编排平台 [Borg](https://oreil.ly/x12HH)。'
- en: From the start, Kubernetes gained a whole community of users, and the number
    of contributors grew incredibly fast. Today, Kubernetes is considered one of the
    most popular projects on GitHub. It is fair to claim that Kubernetes is the most
    commonly used and feature-rich container orchestration platform. Kubernetes also
    forms the foundation of other platforms built on top of it. The most prominent
    of those Platform-as-a-Service systems is Red Hat OpenShift, which provides various
    additional capabilities to Kubernetes. These are only some reasons we chose Kubernetes
    as the reference platform for the cloud native patterns in this book.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 从一开始就吸引了大量用户社区，并且贡献者数量增长迅速。今天，Kubernetes 被认为是 GitHub 上最受欢迎的项目之一。可以说，Kubernetes
    是最常用和功能最丰富的容器编排平台。Kubernetes 也构成了其他基于它构建的平台的基础。其中最著名的 Platform-as-a-Service 系统之一是
    Red Hat OpenShift，为 Kubernetes 提供各种附加功能。这些只是我们选择 Kubernetes 作为本书云原生模式参考平台的一些原因。
- en: This book assumes you have some basic knowledge of Kubernetes. In [Chapter 1](ch01.html#kubernetes-core-concepts),
    we recapitulate the core Kubernetes concepts and lay the foundation for the following
    patterns.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书假设你已经掌握了一些 Kubernetes 的基础知识。在[第一章](ch01.html#kubernetes-core-concepts)，我们回顾了核心
    Kubernetes 概念，并为后续的模式奠定了基础。
- en: Design Patterns
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计模式
- en: The concept of *design patterns* dates back to the 1970s and is from the field
    of architecture. Christopher Alexander, an architect and system theorist, and
    his team published the groundbreaking [*A Pattern Language*](https://oreil.ly/TKzwz)
    (Oxford University Press) in 1977, which describes architectural patterns for
    creating towns, buildings, and other construction projects. Sometime later, this
    idea was adopted by the newly formed software industry. The most famous book in
    this area is [*Design Patterns—Elements of Reusable Object-Oriented Software*](https://oreil.ly/k5toF)
    by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides—the Gang of Four
    (Addison-Wesley). When we talk about the famous Singleton, Factories, or Delegation
    patterns, it’s because of this defining work. Many other great pattern books have
    been written since then for various fields with different levels of granularity,
    like *[Enterprise Integration Patterns](https://oreil.ly/5aRjR)* by Gregor Hohpe
    and Bobby Woolf (Addison-Wesley) or [*Patterns of Enterprise Application Architecture*](https://oreil.ly/yOdWA)
    by Martin Fowler (Addison-Wesley).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*设计模式*的概念可以追溯到20世纪70年代，起源于建筑领域。建筑师和系统理论家克里斯托弗·亚历山大及其团队在1977年出版了开创性作品[*一种模式语言*](https://oreil.ly/TKzwz)（牛津大学出版社），描述了用于创建城镇、建筑和其他建设项目的建筑模式。后来，这个想法被新兴的软件行业采纳。在这个领域最著名的书籍是由Erich
    Gamma、Richard Helm、Ralph Johnson和John Vlissides合著的[*设计模式——可复用面向对象软件的元素*](https://oreil.ly/k5toF)（Addison-Wesley），被称为四人帮。当我们谈论著名的单例、工厂或委托模式时，正是因为这部定义性作品。自那以后，许多其他优秀的模式书籍已经为不同领域撰写，具有不同的粒度级别，例如由Gregor
    Hohpe和Bobby Woolf（Addison-Wesley）编写的[*企业集成模式*](https://oreil.ly/5aRjR)或由Martin
    Fowler（Addison-Wesley）编写的[*企业应用架构模式*](https://oreil.ly/yOdWA)。'
- en: In short, a *pattern* describes a *repeatable solution to a problem*.^([1](preface01.html#idm45902099359264))
    This definition works for the patterns we describe in this book, except that we
    probably don’t have as much variability in our solutions. A pattern is different
    from a recipe because instead of giving step-by-step instructions to solve a problem,
    it provides a blueprint for solving a whole class of similar problems. For example,
    the Alexandrian pattern *Beer Hall* describes how public drinking halls should
    be constructed where “strangers and friends are drinking companions” and not “anchors
    of the lonely.” All halls built after this pattern look different but share common
    characteristics, such as open alcoves for groups of four to eight and a place
    where a hundred people can meet to enjoy beverages, music, and other activities.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，*模式*描述了*问题的可重复解决方案*。^([1](preface01.html#idm45902099359264)) 这个定义适用于我们在本书中描述的模式，除了我们的解决方案可能没有那么多的变化。模式不同于配方，因为它不是提供解决问题的逐步说明，而是提供解决整个类似问题的蓝图。例如，亚历山大模式*啤酒厅*描述了应如何建造公共饮酒厅，其中“陌生人和朋友是喝酒的伙伴”，而不是“孤独者的锚”。按照这种模式建造的所有大厅看起来都不同，但共享共同特征，如为四到八人的小组提供的开放式凹室，以及一百人可以聚会享受饮料、音乐和其他活动的地方。
- en: However, a pattern does more than provide a solution. It is also about forming
    a language. The patterns in this book form a dense, noun-centric language in which
    each pattern carries a unique *name*. When this language is established, these
    names automatically evoke similar mental representations when people speak about
    these patterns. For example, when we talk about a table, anyone speaking English
    assumes we are talking about a piece of wood with four legs and a top on which
    you can put things. The same thing happens in software engineering when discussing
    a “factory.” In an object-oriented programming language context, we immediately
    associate with a “factory” an object that produces other objects. Because we immediately
    know the solution behind the pattern, we can move on to tackle yet-unsolved problems.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，一个模式不仅仅提供了一个解决方案。它还涉及形成一种语言。这本书中的模式形成了一种密集的、以名词为中心的语言，其中每个模式都有一个独特的*名称*。当这种语言确立时，这些名称在人们谈论这些模式时会自动唤起类似的心理表征。例如，当我们谈论一张桌子时，任何讲英语的人都会认为我们在谈论一块有四条腿和一个顶部的木头，你可以放东西的地方。在软件工程中，当讨论“工厂”时也会发生同样的事情。在面向对象编程语言的背景下，我们立刻将“工厂”与产生其他对象的对象联系起来。因为我们立刻知道模式背后的解决方案，我们可以继续解决尚未解决的问题。
- en: There are also other characteristics of a pattern language. For example, patterns
    are interconnected and can overlap so that they cover most of the problem space.
    Also, as already laid out in the original *A Pattern Language*, patterns have
    a different level of granularity and scope. More general patterns cover an extensive
    problem space and provide rough guidance on how to solve the problem. Granular
    patterns have a very concrete solution proposal but are less widely applicable.
    This book contains all sorts of patterns, and many patterns reference other patterns
    or may even include other patterns as part of the solution.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 模式语言还具有其他特征。例如，模式是相互关联的，可以重叠，从而覆盖大部分问题空间。另外，正如原著《模式语言》中所阐述的，模式具有不同的粒度和范围。更通用的模式涵盖广泛的问题空间，并提供解决问题的粗略指导。细粒度的模式提供非常具体的解决方案建议，但适用范围较窄。本书包含各种模式，许多模式相互引用，甚至可能包含其他模式作为解决方案的一部分。
- en: Another feature of patterns is that they follow a rigid format. However, each
    author defines a different form; unfortunately, there is no common standard for
    how patterns should be laid out. Martin Fowler gives an excellent overview of
    the formats used for pattern languages at [“Writing Software Patterns”](https://oreil.ly/6IA6k).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 模式的另一个特征是它们遵循严格的格式。然而，每个作者定义不同的形式；不幸的是，并没有关于如何布置模式的共同标准。Martin Fowler 在《编写软件模式》中对模式语言使用的格式给出了很好的概述。
- en: How This Book Is Structured
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书结构
- en: 'We chose a simple pattern format for this book. We do not follow any particular
    pattern description language. For each pattern, we use the following structure:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了本书的简单模式格式。我们没有遵循任何特定的模式描述语言。对于每个模式，我们使用以下结构：
- en: Name
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 名称
- en: Each pattern carries a name, which is also the chapter’s title. The name is
    the center of the pattern’s language.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每个模式都有一个名称，也是章节的标题。名称是模式语言的核心。
- en: Problem
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 问题
- en: This section gives the broader context and describes the pattern space in detail.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了更广泛的背景和详细描述模式空间。
- en: Solution
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案
- en: This section shows how the pattern solves the problem in a Kubernetes-specific
    way. This section also contains cross-references to other patterns that are either
    related or part of the given pattern.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本节展示了模式如何以 Kubernetes 特定方式解决问题。本节还包含了与其他相关模式的交叉引用，这些模式或者相关，或者作为给定模式的一部分。
- en: Discussion
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论
- en: This section includes a discussion about the advantages and disadvantages of
    the solution for the given context.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包括关于给定上下文中解决方案优缺点的讨论。
- en: More Information
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息
- en: This final section contains additional information sources related to the pattern.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这一最终部分包含了与模式相关的其他信息来源。
- en: 'We organized the patterns in this book as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们按以下方式组织了本书中的模式：
- en: '[Part I, “Foundational Patterns”](part01.html#part_foundational), covers the
    core concepts of Kubernetes. These are the underlying principles and practices
    for building container-based cloud native applications.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第一部分，“基础模式”](part01.html#part_foundational)，涵盖了 Kubernetes 的核心概念。这些是构建基于容器的云原生应用程序的基本原则和实践。'
- en: '[Part II, “Behavioral Patterns”](part02.html#part_behavioral), describes patterns
    that build on top of foundational patterns and add the runtime aspect concepts
    of managing various types of containers.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第二部分，“行为模式”](part02.html#part_behavioral)，描述了建立在基础模式之上的模式，并添加了管理各种类型容器的运行时概念。'
- en: '[Part III, “Structural Patterns”](part03.html#part_structural), contains patterns
    related to organizing containers within a *Pod*, which is the atom of the Kubernetes
    platform.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第三部分，“结构模式”](part03.html#part_structural)，包含与在 Kubernetes 平台的原子 Pod 中组织容器相关的模式。'
- en: '[Part IV, “Configuration Patterns”](part04.html#part_configuration), gives
    insight into the various ways application configuration can be handled in Kubernetes.
    These are granular patterns, including concrete recipes for connecting applications
    to their configuration.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第四部分，“配置模式”](part04.html#part_configuration)，深入探讨了在 Kubernetes 中处理应用程序配置的各种方式。这些是细粒度的模式，包括了连接应用程序到其配置的具体方法。'
- en: '[Part V, “Security Patterns”](part05.html#part_security), addresses various
    security concerns that arise when an application is containerized and deployed
    on Kubernetes.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第五部分，“安全模式”](part05.html#part_security)，讨论了将应用程序容器化并部署在 Kubernetes 上时出现的各种安全问题。'
- en: '[Part VI, “Advanced Patterns”](part06.html#part_advanced), is a collection
    of advanced concepts, such as how the platform itself can be extended or how to
    build container images directly within the cluster.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第六部分，“高级模式”](part06.html#part_advanced)，包含高级概念的集合，例如平台本身如何扩展或如何在集群内直接构建容器镜像。'
- en: Depending on the context, the same pattern might fit into several categories.
    Every pattern chapter is self-contained; you can read chapters in isolation and
    in any order.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上下文的不同，相同的模式可能适用于多个类别。每个模式章节都是独立完整的；您可以单独阅读章节，且顺序不限。
- en: Who This Book Is For
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合读者：
- en: This book is for *developers* who want to design and develop cloud native applications
    and use Kubernetes as the platform. It is most suitable for readers who have some
    basic familiarity with containers and Kubernetes concepts and want to take it
    to the next level. However, you don’t need to know the low-level details of Kubernetes
    to understand the use cases and patterns. Architects, consultants, and other technical
    personnel will also benefit from the repeatable patterns described here.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向希望设计和开发云原生应用，并将 Kubernetes 作为平台的*开发者*。对于那些对容器和 Kubernetes 概念有基本了解，并希望深入学习的读者来说，本书最为适合。然而，要理解用例和模式，并不需要了解
    Kubernetes 的低级细节。架构师、顾问和其他技术人员也会从这里描述的可重复使用模式中受益。
- en: The book is based on use cases and lessons learned from real-world projects.
    It is an accumulation of best practices and patterns after years of working in
    this space. We want to help you understand the Kubernetes-first mindset and create
    better cloud native applications—not reinvent the wheel. It is written in a relaxed
    style and is similar to a series of essays that can be read independently.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书基于真实项目的用例和经验教训。它是多年工作积累的最佳实践和模式的结晶。我们希望帮助您理解以 Kubernetes 为先的思维方式，并创建更好的云原生应用，而不是重复造轮子。它以轻松的风格撰写，类似于一系列可独立阅读的文章。
- en: 'Let’s briefly look at what this book is *not*:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要看看本书*不包括*的内容：
- en: This book is not an introduction to Kubernetes, nor is it a reference manual.
    We touch on many Kubernetes features and explain them in some detail, but we are
    focusing on the concepts behind those features. [Chapter 1, “Introduction”](ch01.html#kubernetes-core-concepts),
    offers a brief refresher on Kubernetes basics. If you are looking for a comprehensive
    book on Kubernetes, we highly recommend *Kubernetes in Action* by Marko Lukša
    (Manning Publications).
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书不是 Kubernetes 的介绍，也不是参考手册。我们涉及许多 Kubernetes 特性，并对其进行一些详细解释，但我们专注于这些特性背后的概念。[第一章，“介绍”](ch01.html#kubernetes-core-concepts)，简要回顾
    Kubernetes 基础知识。如果您正在寻找一本全面的 Kubernetes 书籍，我们强烈推荐由 Marko Lukša（Manning Publications）撰写的
    *Kubernetes in Action*。
- en: 'This book is not a step-by-step guide on how to set up a Kubernetes cluster
    itself. Every example assumes you have Kubernetes up and running. You have several
    options for trying out the examples. If you are interested in learning how to
    set up a Kubernetes cluster, we recommend [*Kubernetes: Up and Running*](https://learning.oreilly.com/library/view/kubernetes-up-and/9781098110192)
    by Brendan Burns, Joe Beda, Kelsey Hightower, and Lachlan Evenson (O’Reilly).'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '本书不是关于如何逐步设置 Kubernetes 集群的指南。每个示例假设您已经搭建好 Kubernetes。您可以尝试多种示例。如果您有兴趣学习如何设置
    Kubernetes 集群，我们推荐阅读[*Kubernetes: Up and Running*](https://learning.oreilly.com/library/view/kubernetes-up-and/9781098110192)，由
    Brendan Burns、Joe Beda、Kelsey Hightower 和 Lachlan Evenson（O’Reilly）共同撰写。'
- en: This book is not about operating and governing a Kubernetes cluster for other
    teams. We deliberately skipped administrative and operational aspects of Kubernetes
    and took a developer-first view into Kubernetes. This book can help operations
    teams understand how a developer uses Kubernetes, but it is not sufficient for
    administering and automating a Kubernetes cluster. If you are interested in learning
    how to operate a Kubernetes cluster, we recommend [*Kubernetes Best Practices*](https://learning.oreilly.com/library/view/kubernetes-best-practices/9781492056461/)
    by Brendan Burns, Eddie Villalba, Dave Strebel, and Lachlan Evenson (O’Reilly).
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本书不涉及为其他团队操作和管理 Kubernetes 集群。我们故意跳过 Kubernetes 的管理和运维方面，并从开发者的视角深入探讨 Kubernetes。本书可以帮助运维团队了解开发者如何使用
    Kubernetes，但不足以进行 Kubernetes 集群的管理和自动化。如果您有兴趣学习如何操作 Kubernetes 集群，我们推荐阅读[*Kubernetes
    最佳实践*](https://learning.oreilly.com/library/view/kubernetes-best-practices/9781492056461/)，由
    Brendan Burns、Eddie Villalba、Dave Strebel 和 Lachlan Evenson（O’Reilly）共同撰写。
- en: What You Will Learn
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您将学到什么
- en: There’s a lot to discover in this book. Some patterns may read like excerpts
    from a Kubernetes manual at first glance, but upon closer look, you’ll see the
    patterns are presented from a conceptual angle not found in other books on the
    topic. Other patterns are explained with detailed steps to solve a concrete problem,
    as in [Part IV, “Configuration Patterns”](part04.html#part_configuration). In
    some chapters, we explain Kubernetes features that don’t fit nicely into a pattern
    definition. Don’t get hung up on whether it is a pattern or a feature. In all
    chapters, we look at the forces involved from the first principles and focus on
    the use cases, lessons learned, and best practices. That is the valuable part.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书中有很多发现。一些模式乍一看可能像是 Kubernetes 手册的摘录，但仔细观察后，你会发现这些模式是从概念角度呈现的，这在其他相关主题的书籍中找不到。其他模式则通过详细的步骤解释如何解决具体问题，就像[第四部分，“配置模式”](part04.html#part_configuration)中的情况一样。在一些章节中，我们解释了
    Kubernetes 的一些特性，这些特性不太适合作为模式定义的一部分。不要过分纠结它是一个模式还是一个特性。在所有章节中，我们从第一原理出发看待所涉及的力量，并专注于用例、经验教训和最佳实践。这才是其中的有价值的部分。
- en: Regardless of the pattern granularity, you will learn everything Kubernetes
    offers for each particular pattern, with plenty of examples to illustrate the
    concepts. All these examples have been tested, and we tell you how to get the
    complete source code in [“Using Code Examples”](#preface-code-examples).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 无论模式的粒度如何，你都将学习每个特定模式所提供的 Kubernetes 的全部内容，同时提供大量例子来说明概念。所有这些例子都经过测试，我们告诉你如何获取完整的源代码在[“使用代码示例”](#preface-code-examples)中。
- en: What’s New in the Second Edition
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二版中的新内容
- en: The Kubernetes ecosystem has continued to grow since the first edition came
    out four years ago. As a result, there have been many Kubernetes releases, and
    more tools and patterns for using Kubernetes have become de facto standards.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 自四年前第一版问世以来，Kubernetes 生态系统一直在持续增长。因此，已经发布了许多 Kubernetes 版本，并且用于使用 Kubernetes
    的工具和模式已经成为事实上的标准。
- en: Fortunately, most of the patterns described in our book have stood the test
    of time and remain valid. Therefore, we have updated these patterns, added new
    features up to Kubernetes 1.26, and removed obsolete and deprecated parts. For
    the most part, only minor changes were necessary, except for [Chapter 29, “Elastic
    Scale”](ch29.html#ElasticScale), and [Chapter 30, “Image Builder”](ch30.html#ImageBuilder),
    which underwent significant changes due to new developments in these areas.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我们书中描述的大部分模式经受住了时间的考验并仍然有效。因此，我们更新了这些模式，增加了适用于 Kubernetes 1.26 版本的新功能，并移除了过时和废弃的部分。大部分情况下，只需要进行小的改动，除了[第29章，“弹性扩展”](ch29.html#ElasticScale)，以及[第30章，“镜像构建器”](ch30.html#ImageBuilder)，由于这些领域的新发展，它们经历了重大变化。
- en: Additionally, we have included five new patterns and introduced a new category,
    [Part V, “Security Patterns”](part05.html#part_security), which addresses a gap
    in the first edition and provides important security-related patterns for developers.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，我们还包含了五种新的模式，并引入了一个新的类别，[第五部分，“安全模式”](part05.html#part_security)，这填补了第一版的空白，并为开发人员提供了重要的安全相关模式。
- en: Our GitHub [examples](https://oreil.ly/kXGjC) have been updated and extended.
    And, lastly, we added 50% more content for our readers to enjoy.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 GitHub [示例](https://oreil.ly/kXGjC) 已经更新并扩展了。最后，我们为读者增加了50%的内容供他们享受。
- en: Conventions Used in This Book
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书中使用的约定
- en: 'The following typographical conventions are used in this book:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了以下排版约定：
- en: '*Italic*'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*斜体*'
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 指示新术语、URL、电子邮件地址、文件名和文件扩展名。
- en: '`Constant width`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`固定宽度`'
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 用于程序清单，以及段落中引用程序元素，如变量或函数名、数据库、数据类型、环境变量、语句和关键字。
- en: As mentioned, patterns form a simple, interconnected language. To emphasize
    this web of patterns, each pattern is capitalized and set in italics, (e.g., *Sidecar*).
    When a pattern name is also a Kubernetes core concept (such as *Init Container*
    or *Controller*), we use this specific formatting only when we directly reference
    the pattern itself. Where it makes sense, we also interlink pattern chapters for
    ease of navigation.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前文所述，模式形成了一个简单而相互连接的语言。为了强调这种模式的网络，每个模式都是大写并设置为斜体（例如，*Sidecar*）。当一个模式名称同时也是
    Kubernetes 的核心概念（比如 *Init Container* 或 *Controller*）时，我们仅在直接引用模式本身时使用这种特定格式。在有意义的情况下，我们还会将模式章节进行相互链接以便于导航。
- en: 'We also use the following conventions:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还使用以下约定：
- en: Everything you can type in a shell or editor is rendered in `constant width
    font`.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在Shell或编辑器中输入的所有内容都将以`constant width font`字体呈现。
- en: Kubernetes resource names are always rendered in uppercase (e.g., Pod). If the
    resource is a combined name like ConfigMap, we keep it like this in favor of the
    more natural “config map” for clarity and to make it clear that it refers to a
    Kubernetes concept.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kubernetes资源名称总是以大写字母显示（例如，Pod）。如果资源是像ConfigMap这样的组合名称，则保留其原样，以清楚表明它指的是Kubernetes概念，而不是更自然的“config
    map”。
- en: Sometimes, a Kubernetes resource name is identical to a common concept like
    “service” or “node.” In these cases, we use the resource name format only when
    referring to the resource itself.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时，Kubernetes资源名称与“service”或“node”等常见概念完全相同。在这些情况下，我们仅在引用资源本身时使用资源名称格式。
- en: Tip
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: This element signifies a tip or suggestion.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素表示一个提示或建议。
- en: Note
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: This element signifies a general note.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素表示一般性说明。
- en: Warning
  id: totrans-62
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: This element indicates a warning or caution.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素表示一个警告或注意事项。
- en: Using Code Examples
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码示例
- en: Every pattern is backed with fully executable examples, which you can find on
    the accompanying [web page](https://k8spatterns.io). You can find the link to
    each pattern’s example in each chapter’s “More Information” section.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 每个模式都配备了完全可执行的示例，你可以在附带的[网页](https://k8spatterns.io)中找到它们。你可以在每章的“更多信息”部分找到每个模式示例的链接。
- en: The “More Information” section also contains links to further information related
    to the pattern. We keep these lists updated in the example repository.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: “更多信息”部分还包含与模式相关的进一步信息的链接。我们会在示例存储库中更新这些列表。
- en: The source code for all examples in this book is available on [GitHub](https://oreil.ly/bmj-Y).
    The repository and the website also have pointers and instructions on how to get
    a Kubernetes cluster to try out the examples. Please look at the provided resource
    files when you go through the examples. They contain many valuable comments that
    will further your understanding of the example code.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中所有示例代码的源代码都可以在[GitHub](https://oreil.ly/bmj-Y)上找到。存储库和网站还提供指针和说明，说明如何获取一个Kubernetes集群来尝试这些示例。请查看提供的资源文件，它们包含许多有价值的注释，可以进一步帮助理解示例代码。
- en: Many examples use a REST service called *random-generator* that returns random
    numbers when called. It is uniquely crafted to play well with the examples in
    this book. Its source can be found on [GitHub](https://oreil.ly/WuYSu) as well,
    and its container image `k8spatterns/random-generator` is hosted on [Docker Hub](https://oreil.ly/N36MB).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 许多示例使用一个名为*random-generator*的REST服务，在调用时返回随机数。它是专门为本书的示例设计的。你可以在[GitHub](https://oreil.ly/WuYSu)找到其源代码，其容器镜像`k8spatterns/random-generator`托管在[Docker
    Hub](https://oreil.ly/N36MB)上。
- en: We use a JSON path notation to describe resource fields (e.g., `.spec.replicas`
    points to the `replicas` field of the resource’s `spec` section).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用JSON路径表示法来描述资源字段（例如，`.spec.replicas`指向资源的`spec`部分的`replicas`字段）。
- en: If you find an issue in the example code or documentation or have a question,
    don’t hesitate to open a ticket at the [GitHub issue tracker](https://oreil.ly/hCnmn).
    We monitor these GitHub issues and are happy to answer any questions.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在示例代码或文档中发现问题，或者有问题，请不要犹豫在[GitHub问题跟踪器](https://oreil.ly/hCnmn)上开启一个工单。我们会监视这些GitHub问题，并乐意回答任何问题。
- en: All example code is distributed under the [Creative Commons Attribution 4.0
    (CC BY 4.0)](https://oreil.ly/QuiQc) license. The code is free to use, and you
    can share and adapt it for commercial and noncommercial projects. However, you
    should give attribution back to this book if you copy or redistribute the example
    code.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 所有示例代码都按照[知识共享署名4.0国际许可证（CC BY 4.0）](https://oreil.ly/QuiQc)进行分发。该代码可供商业和非商业项目使用、分享和适应。但是，如果您复制或重新分发示例代码，应该将归属归还给本书。
- en: This attribution can be a reference to the book, including title, author, publisher,
    and ISBN, as in “*Kubernetes Patterns*, 2nd Edition, by Bilgin Ibryam and Roland
    Huß (O’Reilly). Copyright 2023 Bilgin Ibryam and Roland Huß, 978-1-098-13168-5.”
    Alternatively, add a link to the [accompanying website](https://k8spatterns.io)
    along with a copyright notice and link to the license.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此归属可以是对书籍的引用，包括书名、作者、出版社和ISBN，例如“*Kubernetes Patterns*，第2版，作者Bilgin Ibryam和Roland
    Huß（O’Reilly）。版权所有2023年Bilgin Ibryam和Roland Huß，978-1-098-13168-5。” 或者，附上一个链接到[相关网站](https://k8spatterns.io)，并加上版权声明和许可证链接。
- en: We love code contributions too! If you think we can improve our examples, we
    are happy to hear from you. Just open a GitHub issue or create a pull request,
    and let’s start a conversation.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也欢迎代码贡献！如果您认为我们可以改进我们的示例，我们很乐意听取您的意见。只需打开一个GitHub问题或创建一个拉取请求，让我们开始交流。
- en: O’Reilly Online Learning
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O’Reilly在线学习
- en: Note
  id: totrans-75
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For almost 40 years, [*O’Reilly Media*](http://oreilly.com) has provided technology
    and business training, knowledge, and insight to help companies succeed.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 近40年来，[*O’Reilly Media*](http://oreilly.com)为企业提供技术和商业培训、知识和见解，帮助公司取得成功。
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, conferences, and our online learning platform. O’Reilly’s
    online learning platform gives you on-demand access to live training courses,
    in-depth learning paths, interactive coding environments, and a vast collection
    of text and video from O’Reilly and 200+ other publishers. For more information,
    please visit [*http://oreilly.com*](http://oreilly.com).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们独特的专家和创新者网络通过图书、文章、会议和我们的在线学习平台分享他们的知识和专长。O’Reilly的在线学习平台为您提供按需访问实时培训课程、深入学习路径、交互式编码环境以及来自O’Reilly和其他200多家出版商的大量文本和视频。有关更多信息，请访问[*http://oreilly.com*](http://oreilly.com)。
- en: How to Contact Us
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何联系我们
- en: 'Please address comments and questions concerning this book to the publisher:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 请将有关本书的评论和问题发送至出版商：
- en: O’Reilly Media, Inc.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’Reilly Media, Inc.
- en: 1005 Gravenstein Highway North
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1005 Gravenstein Highway North
- en: Sebastopol, CA 95472
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加利福尼亚州塞巴斯托波尔95472
- en: 800-998-9938 (in the United States or Canada)
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 800-998-9938（美国或加拿大）
- en: 707-829-0515 (international or local)
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0515（国际或本地）
- en: 707-829-0104 (fax)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 707-829-0104（传真）
- en: We have a web page for this book where we list errata, examples, and additional
    information. You can access this page at [*https://oreil.ly/kubernetes_patterns-2e*](https://oreil.ly/kubernetes_patterns-2e).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为这本书创建了一个网页，列出勘误、示例和其他信息。您可以访问此页面[*https://oreil.ly/kubernetes_patterns-2e*](https://oreil.ly/kubernetes_patterns-2e)。
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 发送电子邮件至[*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com)以评论或询问有关本书的技术问题。
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有关我们的图书和课程的新闻和信息，请访问[*https://oreilly.com*](https://oreilly.com)。
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在LinkedIn上找到我们：[*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media)
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上关注我们：[*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia)
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在YouTube上观看我们：[*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia)
- en: 'Follow the authors on Twitter: [*https://twitter.com/bibryam*](https://twitter.com/bibryam),
    [*https://twitter.com/ro14nd*](https://twitter.com/ro14nd)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在Twitter上关注作者：[*https://twitter.com/bibryam*](https://twitter.com/bibryam)，[*https://twitter.com/ro14nd*](https://twitter.com/ro14nd)
- en: 'Follow the authors on Mastodon: [*https://fosstodon.org/@bilgin*](https://fosstodon.org/@bilgin),
    [*https://hachyderm.io/@ro14nd*](https://hachyderm.io/@ro14nd)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mastodon上关注作者：[*https://fosstodon.org/@bilgin*](https://fosstodon.org/@bilgin)，[*https://hachyderm.io/@ro14nd*](https://hachyderm.io/@ro14nd)
- en: 'Find the authors on GitHub: [*https://github.com/bibryam*](https://github.com/bibryam),
    [*https://github.com/rhuss*](https://github.com/rhuss)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub上找到作者：[*https://github.com/bibryam*](https://github.com/bibryam)，[*https://github.com/rhuss*](https://github.com/rhuss)
- en: 'Follow their blogs: [*https://www.ofbizian.com*](https://www.ofbizian.com),
    [*https://ro14nd.de*](https://ro14nd.de)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 关注他们的博客：[*https://www.ofbizian.com*](https://www.ofbizian.com)，[*https://ro14nd.de*](https://ro14nd.de)
- en: Acknowledgments
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: Bilgin is forever grateful to his wonderful wife, Ayshe, for her endless support
    and patience as he worked on yet another book. He is also thankful for his adorable
    daughters, Selin and Esin, who always know how to bring a smile to his face. You
    mean the world to him. Finally, Bilgin would like to thank his fantastic coauthor,
    Roland, for making this project a reality.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Bilgin对他美妙的妻子Ayshe永远感激，感谢她在他又一本书的创作过程中给予的无尽支持和耐心。他也感谢他可爱的女儿Selin和Esin，她们总是知道如何让他笑容满面。你们对他来说意义非凡。最后，Bilgin要感谢他的梦幻般的合著者Roland，使这个项目成为现实。
- en: Roland is deeply grateful for his wife Tanja’s unwavering support and forbearance
    throughout the writing process, and he also thanks his son Jakob for his encouragement.
    Furthermore, Roland wishes to extend special recognition to Bilgin for his exceptional
    insights and writing, without which the book would not have come to fruition.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Roland深深感谢妻子Tanja在写作过程中始终如一的支持和包容，他还感谢儿子Jakob的鼓励。此外，Roland希望特别感谢Bilgin，因为他出色的见解和写作让这本书得以完成。
- en: Creating two editions of this book was a long multiyear journey, and we want
    to thank our reviewers who kept us on the right track.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 创建这本书的两个版本是一段漫长的多年旅程，我们要感谢那些在这条正确道路上一直陪伴我们的审阅者。
- en: For the first edition, special kudos to Paolo Antinori and Andrea Tarocchi for
    helping us through the journey. Big thanks to Marko Lukša, Brandon Philips, Michael
    Hüttermann, Brian Gracely, Andrew Block, Jiri Kremser, Tobias Schneck, and Rick
    Wagner, who supported us with their expertise and advice. Last but not least,
    big thanks to our editors Virginia Wilson, John Devins, Katherine Tozer, Christina
    Edwards, and all the awesome folks at O’Reilly for helping us push this book over
    the finish line.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一版，特别感谢Paolo Antinori和Andrea Tarocchi在整个旅程中对我们的帮助。非常感谢Marko Lukša、Brandon
    Philips、Michael Hüttermann、Brian Gracely、Andrew Block、Jiri Kremser、Tobias Schneck和Rick
    Wagner，他们用他们的专业知识和建议支持了我们。最后但同样重要的是，要感谢我们的编辑Virginia Wilson、John Devins、Katherine
    Tozer、Christina Edwards以及O’Reilly的所有出色人士，他们帮助我们把这本书完成到最后。
- en: Completing the second edition was no easy feat, and we are grateful to all who
    supported us in finishing it. We extend our thanks to our technical reviewers,
    Ali Ok, Dávid Šimanský, Zbyněk Roubalík, Erkan Yanar, Christoph Stäbler, Andrew
    Block, and Adam Kaplan, as well as to our development editor, Rita Fernando, for
    her patience and encouragement throughout the whole process. Many kudos go out
    to the O’Reilly production team, especially Beth Kelly, Kim Sandoval, and Judith
    McConville, for their meticulous attention in finalizing the book.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 完成第二版绝非易事，我们感谢所有在完成中支持我们的人。我们要特别感谢我们的技术审阅者Ali Ok、Dávid Šimanský、Zbyněk Roubalík、Erkan
    Yanar、Christoph Stäbler、Andrew Block和Adam Kaplan，以及我们的开发编辑Rita Fernando，在整个过程中她们的耐心和鼓励。我们还要向O’Reilly的生产团队表示赞赏，特别是Beth
    Kelly、Kim Sandoval和Judith McConville，在完成书稿时他们的细致关注。
- en: We want to express a special thank you to Abhishek Koserwal for his tireless
    and dedicated efforts in [Chapter 26, “Access Control”](ch26.html#AccessControl).
    His contributions came at a time when we needed them the most and made an impact.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要特别感谢Abhishek Koserwal在《第26章，“访问控制”》（ch26.html#AccessControl）中不懈而专注的努力。他的贡献正是我们最需要的时候，并产生了深远影响。
- en: '^([1](preface01.html#idm45902099359264-marker)) Alexander and his team defined
    the original meaning in the context of architecture as follows: “Each pattern
    describes a problem which occurs over and over again in our environment, and then
    describes the core of the solution to that problem, in such a way that you can
    use this solution a million times over, without ever doing it the same way twice.”
    (*A Pattern Language*, Christopher Alexander et al., 1977.)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](preface01.html#idm45902099359264-marker)) Alexander和他的团队在建筑学的原始含义中定义如下：“每个模式描述了在我们的环境中反复出现的问题，然后描述了解决该问题的核心方法，使得您可以无数次地使用这个解决方案，而不必完全相同地再做一次。”（*A
    Pattern Language*，Christopher Alexander等人，1977年。）
