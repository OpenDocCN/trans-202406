["```\n$ npm install node-fetch\n```", "```\nconst fetch = require('node-fetch');\n\nfetch('https://oreilly.com')\n  .then(res => res.text())\n  .then(body => console.log(body));\n```", "```\nfetch('https://swapi.dev/api/people/1')\n  .then(res => res.json())\n  .then(json => console.log(json));\n```", "```\n(async () => {\n  try {\n    const response = await fetch('https://swapi.dev/api/people/3');\n    const json = await response.json();\n    console.log(json);\n  } catch (error) {\n    console.log(error);\n  }\n})();\n```", "```\nconst fs = require('fs');\nconst fetch = require('node-fetch');\n\nfetch('https://example.com/image.png')\n  .then(res => {\n    const dest = fs.createWriteStream('image.png');\n    res.body.pipe(dest);\n  });\n```", "```\n// example body for the request\nconst body = {\n  id: 1,\n  title: \"Example\"\n};\n\nfetch('https://example.com/post', {\n    method: 'post',\n    body:    JSON.stringify(body),\n    headers: { 'Content-Type': 'application/json' },\n  })\n  .then(res => res.json())\n  .then(json => console.log(json));\n```", "```\n$ npm install node-fetch cheerio\n```", "```\nconst fetch = require('node-fetch');\nconst cheerio = require('cheerio');\n\nfetch('https://example.com')\n  .then(res => res.text())\n  .then(body => {\n    const $ = cheerio.load(body);\n    $('h1').each((i, element) => {\n      console.log(element.children[0].data);\n    });\n  });\n```", "```\nconst fetch = require('node-fetch');\nconst cheerio = require('cheerio');\n\nfetch('https://www.oreilly.com/radar/posts/')\n  .then(res => res.text())\n  .then(body => {\n    const $ = cheerio.load(body);\n    $('main h2 a').each((i, element) => {\n      console.log(element.children[0].data);\n    });\n  });\n```", "```\nconst path =\n  'data-research/mortgage-performance-trends/mortgages-30-89-days-delinquent/';\nconst url = `https://www.consumerfinance.gov/${path}`;\n\n(async () => {\n  try {\n    const response = await fetch(url);\n    const body = await response.text();\n    const $ = cheerio.load(body);\n    $(\"a:contains('state')\").each(async (i, element) => {\n      const fetchFile = await fetch(element.attribs.href);\n      const dest = fs.createWriteStream(`data-${i}.csv`);\n      await fetchFile.body.pipe(dest);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n})();\n```", "```\nconst fetch = require('node-fetch');\n\n(async () => {\n  try {\n    const response = await fetch('https://swapi.dev/api/people/1/');\n    const json = await response.json();\n    console.log(json);\n  } catch (error) {\n    console.log(error);\n  }\n})();\n```", "```\nconst got = require('got');\n\n(async () => {\n  try {\n    const response = await got('https://swapi.dev/api/people/2/');\n    console.log(JSON.parse(response.body));\n  } catch (error) {\n    console.log(error.response.body);\n  }\n})();\n```", "```\nconst fetch = require('node-fetch');\nrequire('dotenv').config();\n\nconst id = process.env.APP_ID;\n\n(async () => {\n  try {\n    const moneyAPI1 = await fetch(\n      `https://openexchangerates.org/api/latest.json?app_id=${id}`\n    );\n    const moneyAPI2 = await fetch(\n      `http://openexchangerates.org/api/currencies.json?app_id=${id}`\n    );\n\n    const latest = await moneyAPI1.json();\n    const names = await moneyAPI2.json();\n    const keys = Object.keys(latest.rates);\n\n    keys.forEach((value, index) => {\n      const rate = latest.rates[keys[index]];\n      const name = names[keys[index]];\n      console.log(`${name} ${rate}`);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n})();\n```", "```\n\"Malawian Kwacha 394.899498\"\n\"Mexican Peso 13.15711\"\n\"Malaysian Ringgit 3.194393\"\n\"Mozambican Metical 30.3662\"\n\"Namibian Dollar 10.64314\"\n\"Nigerian Naira 162.163699\"\n\"Nicaraguan CÃ³rdoba 26.03978\"\n\"Norwegian Krone 6.186976\"\n\"Nepalese Rupee 98.07189\"\n\"New Zealand Dollar 1.185493\"\n```"]