["```\nWelcome to Cloud Shell! Type \"help\" to get started.\nTo set your Cloud Platform project in this session use “gcloud config set project\n[PROJECT_ID]”\n```", "```\ngenomics_book@cloudshell:~$ gcloud config set project ferrous-layout-260200\nUpdated property [core/project].\ngenomics_book@cloudshell:~ (ferrous-layout-260200)$\n```", "```\n$ ls\nREADME-cloudshell.txt\n```", "```\n$ cat README-cloudshell.txt\n```", "```\n$ gsutil ls gs://genomics-in-the-cloud\ngs://genomics-in-the-cloud/hello.txt\ngs://genomics-in-the-cloud/v1/\n```", "```\n$ gsutil cat gs://genomics-in-the-cloud/hello.txt\nHELLO, DEAR READER!\n```", "```\n$ gsutil cp gs://genomics-in-the-cloud/hello.txt .\nCopying gs://genomics-in-the-cloud/hello.txt...\n/ [1 files][   20.0 B/   20.0 B]\nOperation completed over 1 objects/20.0 B.\n```", "```\n$ ls\nhello.txt README-cloudshell.txt\n```", "```\n$ gsutil mb gs://my-bucket\n```", "```\nCreating gs://my-bucket/...\nServiceException: 409 Bucket my-bucket already exists.\n```", "```\n$ export BUCKET=\"gs://my-bucket\"\n```", "```\n$ echo $BUCKET\ngs://my-bucket\n```", "```\n$ gsutil cp gs://genomics-in-the-cloud/hello.txt $BUCKET/\n```", "```\n$ gsutil cp hello.txt $BUCKET/\n```", "```\n$ gsutil cp $BUCKET/hello.txt $BUCKET/my-directory/\n```", "```\n$ docker pull ubuntu\nUsing default tag: latest\nlatest: Pulling from library/ubuntu\n7413c47ba209: Pull complete\n0fe7e7cbb2e8: Pull complete\n1d425c982345: Pull complete\n344da5c95cec: Pull complete\nDigest: sha256:d91842ef309155b85a9e5c59566719308fab816b40d376809c39cf1cf4de3c6a\nStatus: Downloaded newer image for ubuntu:latest\ndocker.io/library/ubuntu:latest\n```", "```\n$ docker run ubuntu\n```", "```\n$ docker run ubuntu echo \"Hello World!\"\nHello World!\n```", "```\n$ docker run -it ubuntu /bin/bash\nroot@d84c079d0623:/#\n```", "```\n$ docker ps -a\nCONTAINER ID\tIMAGE\tCOMMAND                 CREATED     STATUS\t\t\t\nPORTS\t\tNAMES\nc2b4f8a0c7a6\tubuntu\t\"/bin/bash\"             5 minutes ago\t Up 5 minutes\t\nvigorous_rosalind\n9336068da866\tubuntu\t\"echo ’Hello World!’\"\t8 minutes ago\tExited (0) 8 minutes ago\nobjective_curie\n```", "```\n$ mkdir book\n$ mv hello.txt book/\n$ ls book\nhello.txt\n```", "```\n$ docker run -v ~/book:/home/book -it ubuntu /bin/bash\n```", "```\n# ls home/book\nhello.txt\n```", "```\n$ gcloud init\nWelcome! This command will take you through the configuration of gcloud.\nYour current configuration has been set to: [default]\nYou can skip diagnostics next time by using the following flag:\n gcloud init --skip-diagnostics\nNetwork diagnostic detects and fixes local network connection issues.\nChecking network connection...done.                                                                                                                                   \nReachability Check passed.\nNetwork diagnostic passed (1/1 checks passed).\nChoose the account you would like to use to perform operations for\nthis configuration:\n[1] XXXXXXXXXXX-compute@developer.gserviceaccount.com\n[2] Log in with a new account\nPlease enter your numeric choice:\n```", "```\nYou are running on a Google Compute Engine virtual machine.\nIt is recommended that you use service accounts for authentication.\nYou can run:\n $ gcloud config set account `ACCOUNT`\nto switch accounts if necessary.\nYour credentials may be visible to others with access to this\nvirtual machine. Are you sure you want to authenticate with\nyour personal account?\nDo you want to continue (Y/n)?\n```", "```\nGo to the following link in your browser:\n   https://accounts.google.com/o/oauth2/auth?redirect_uri=<...>\nEnter verification code:\n```", "```\n$ mkdir ~/book\n$ gsutil -m cp -r gs://genomics-in-the-cloud/v1/* ~/book/\n```", "```\n$ cd ~/book\n$ git clone https://github.com/broadinstitute/genomics-in-the-cloud.git code\n```", "```\n$ cd ~/book/code\n$ git pull\n```", "```\n$ docker\nCommand 'docker' not found, but can be installed with:\nsnap install docker     # version 18.09.9, or\napt  install docker.io\nSee 'snap info docker' for additional versions.\n```", "```\n$ curl -sSL https://get.docker.com/ | sh \n# Executing docker install script, commit: f45d7c11389849ff46a6b4d94e0dd1ffebca\n32c1 + sudo -E sh -c apt-get update -qq >/dev/null\n...\nClient: Docker Engine - Community\nVersion:           19.03.5\n...\nIf you would like to use Docker as a non-root user, you should now consider\nadding your user to the \"docker\" group with something like:\n sudo usermod -aG docker genomics_book\nRemember that you will have to log out and back in for this to take effect!\nWARNING: Adding a user to the \"docker\" group will grant the ability to run\n        containers which can be used to obtain root privileges on the\n        docker host.\n        Refer to https://docs.docker.com/engine/security/security/#docker-daemon-\n        attack-surface for more information.\n```", "```\n$ sudo usermod -aG docker $USER\n```", "```\n$ exit\n```", "```\n$ docker pull us.gcr.io/broad-gatk/gatk:4.1.3.0\n4.1.3.0: Pulling from us.gcr.io/broad-gatk/gatk\nae79f2514705: Pull complete\n5ad56d5fc149: Pull complete\n170e558760e8: Pull complete\n395460e233f5: Pull complete\n6f01dc62e444: Pull complete\nb48fdadebab0: Pull complete\n16fb14f5f7c9: Pull complete\nDigest: sha256:e37193b61536cf21a2e1bcbdb71eac3d50dcb4917f4d7362b09f8d07e7c2ae50\nStatus: Downloaded newer image for us.gcr.io/broad-gatk/gatk:4.1.3.0\nus.gcr.io/broad-gatk/gatk:4.1.3.0\n```", "```\n$ docker run -v ~/book:/home/book -it us.gcr.io/broad-gatk/gatk:4.1.3.0 /bin/bash\n```", "```\n# gatk\nUsage template for all tools (uses --spark-runner LOCAL when used with a Spark tool)\n   gatk AnyTool toolArgs\nUsage template for Spark tools (will NOT work on non-Spark tools)\n   gatk SparkTool toolArgs  [ -- --spark-runner <LOCAL | SPARK | GCS> sparkArgs ]\nGetting help\n   gatk --list       Print the list of available tools\n   gatk Tool --help  Print help on a particular tool\nConfiguration File Specification\n    --gatk-config-file                PATH/TO/GATK/PROPERTIES/FILE\ngatk forwards commands to GATK and adds some sugar for submitting spark jobs\n  --spark-runner <target>    controls how spark tools are run\n    valid targets are:\n    LOCAL:      run using the in-memory spark runner\n    SPARK:      run using spark-submit on an existing cluster\n                --spark-master must be specified\n                --spark-submit-command may be specified to control the Spark submit command\n                arguments to spark-submit may optionally be specified after --\n    GCS:        run using Google cloud dataproc\n                commands after the -- will be passed to dataproc\n                --cluster <your-cluster> must be specified after the --\n                spark properties and some common spark-submit parameters will be translated\n                to dataproc equivalents\n  --dry-run     may be specified to output the generated command line without running it\n  --java-options 'OPTION1[ OPTION2=Y ... ]''   optional - pass the given string of options to \n                 the java JVM at runtime. \n                Java options MUST be passed inside a single string with space-separated values\n\n```"]