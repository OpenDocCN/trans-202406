["```\n #include <iostream>\n#include <string>\nint main()\n{\n\tstd::cout << \"Hello World!\" << '\\n';\n\tstd::string person;\n\tstd::cout << \"To whom do you wish to say hello? \";\n\tstd::cin >> person;\n\tstd::cout << \"Hello \"<< person << \"!\" << '\\n';\n\treturn 0;\n}\n```", "```\nHello World!\nTo whom do you wish to say hello? Mom\nHello Mom!\n```", "```\n     #include <iostream>\n    using std::cout;\n    using std::cin;\n    using std::endl;\n    #include <string>\n    using std::string;\n    int main()\n    {\n    \tcout << \"Hello World!\" << endl;\n    \tstring person;\n    \tcout << \"To whom do you wish to say hello? \";\n    \tcin >> person;\n    \tcout << \"Hello \" << person << \"!\" << endl;\n    \treturn 0;\n    }\n    ```", "```\n    using namespace std;\n    ```", "```\n // Function declarations (\"//\" indicates a comment line)\nreturn_type function_01(input arguments);\nreturn_type function_02(input arguments);\nreturn_type function_03(input arguments);\n.\n.\n.\nint main()\n{\n  // Call each function \n  function_01(input arguments);\n  function_02(input arguments);\n  function_03(input arguments);\n.\n.\n.\n}\nreturn_type function_01(input arguments)\n{\n  // Do stuff\n  // Return something (or void return)\n}\nreturn_type function_02(input arguments)\n{\n  // Do stuff\n  // Return something (or void return)\n}\nreturn_type function_03(input arguments)\n{\n  // Do stuff\n  // Return something (or void return)\n}\n.\n.\n.\n```", "```\n void hello_world(); \n```", "```\ndouble twice_a_real(double x);    \n```", "```\nint add_three_ints(int i, int j, int k);    \n```", "```\n void hello_world()\n{\n  std::cout << \"Hello World!\\n\";\n}\n```", "```\ndouble twice_a_real(double x)\n{\n\tdouble y = 2.0 * x;\n\treturn y;\n}\nint add_three_ints(int i, int j, int k)\n{\n\treturn i + j + k;\n}\n```", "```\n#include <iostream>\n// Maybe put in using statements here(?)\nvoid hello_world();\ndouble twice_a_real(double x);\nint add_three_ints(int i, int j, int k);\nint main()\n{\n\thello_world();\n\tdouble prod = twice_a_real(2.5);\n\tstd::cout << \"2 x 2.5 = \" << prod << std::endl;\n\tstd::cout << \"1 + 2 + 3 = \" << add_three_ints(1, 2, 3) << std::endl;\n\tdouble r;\n\tstd::cout << \"Enter a real number: \";\n\tstd::cin >> r;\n\tstd::cout << \"2 x \" << r << \" = \" << twice_a_real(r) << std::endl;\n\treturn 0;\n}\nvoid hello_world()\n{\n\tstd::cout << \"Hello World!\\n\";\n}\ndouble twice_a_real(double x)\n{\n\tdouble y = 2.0 * x;\n\treturn y;\n}\nint add_three_ints(int i, int j, int k)\n{\n\treturn i + j + k;\n}\n```", "```\n double y = 2.0 * x;\n```", "```\ndouble x1 = 10.6;\nint k;\t// Defaults to zero\ndouble y1 = twice_a_real(x1);\n```", "```\n// This is a comment\n```", "```\n/*\n    Owl loved to rest quietly whilst no one was talking\n    Sitting on a fence one day, he was surprised when\n    suddenly a kangaroo ran close by.\n*/\n```", "```\n  int j = 1101;\n  int k=   603;\n  int sum = j +    k;\n  std::cout <<    \"j + k = \" <<   sum << \"\\n\";\n```", "```\n  int j = 1101;\n  int k = 603;\n  int sum = j + k;\n  std::cout << \"j + k = \" << sum << \"\\n\";\n```", "```\n  int j = 1101;\n  int k = \n          603;\n\n  int sum = j + k;\n  std::cout << \"j + k = \" \n            << sum \n            << \"\\n\";\n```", "```\n // integers:\t\t\nint i = 8;\t\t    \nint j = 5;\t\t    \nint k = i + 7;\t\t\nint v = j - 3;\t\t\nint u = i % j;\t\t\n  // double precision:\ndouble x1 = 30.6;\ndouble x2 = 8.74;\ndouble y = x1 + x2;\ndouble z = x1 - x2;\ndouble twice_x2 = 2.0 * x2;\n```", "```\ni + j - v\n```", "```\nx1 + twice_x2/x2\n```", "```\n(x1 + twice_x2)/x2\n```", "```\n #include <cmath>      // Put this at top of the file.\ndouble trig_fcn(double theta, double phi)\n{  \n  return = std::sin(theta) + std::cos(phi);\n} \n```", "```\n#include <cmath>      // Put this at top of the file.\nusing std::sin;\nusing std::cos;\ndouble trig_fcn(double theta, double phi)\n{  \n  return = sin(theta) + cos(phi);\n}\n```", "```\ndouble zero_coupon_bond(double face_value, double int_rate, double year_fraction)\n{  \n    return face_value * std::exp(-int_rate * year_fraction);\n}\n```", "```\n double f(double x)\n{  \n  return x * (x * (x * (8.0 * x + 7.0) + 4.0 * x) - 10.0) - 6.0;\n}\n```", "```\n double f(double x)\n{  \n  return 8.0 * std::pow(x, 4) + 7.0 * std::pow(x, 3) + \n    4.0 * std::pow(x, 2) + 10.0 * x - 6.0;\n}\n```", "```\ndouble g(double x, double y)\n{  \n  return std::pow(x, -1.368 * x) + 4.19 * y; \n}\n```", "```\nconst double grav_accel = 9.80665;\n```", "```\ngrav_accel = 1.625;\t// Gravitational constant for the moon\n```", "```\n #include <cmath>\n#include <numbers>\n. . . \ndouble some_fcn(double x, double y)\n{\n\tdouble math_inv_sqrt_two_pi = \n\t\tstd::numbers::inv_sqrtpi / std::numbers::sqrt2;\n\treturn math_inv_sqrt_two_pi*(std::sin(std::numbers::pi * x) + \n\t\tstd::cos(std::numbers::inv_pi*y));\n}\n```", "```\nstd::sqrt(2.0)\n```", "```\nstd::numbers::sqrt2\n```"]