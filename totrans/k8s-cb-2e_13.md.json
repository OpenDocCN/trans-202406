["```\n$ minikube start --memory=7851 --cpus=4\n\n```", "```\n$ minikube tunnel\n\n```", "```\n$ curl -L https://istio.io/downloadIstio | sh -\n\n```", "```\n$ cd istio-1.18.0\n\n```", "```\n$ export PATH=$PWD/bin:$PATH\n\n```", "```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: demo\n  components:\n    ingressGateways:\n    - name: istio-ingressgateway\n      enabled: false\n    egressGateways:\n    - name: istio-egressgateway\n      enabled: false\n\n```", "```\n$ istioctl install -f istio-demo-config.yaml -y\n✔ Istio core installed\n✔ Istiod installed\n✔ Installation complete\n\n```", "```\n$ kubectl label namespace default istio-injection=enabled\nnamespace/default labeled\n\n```", "```\n$ curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.18.0 \\\n    TARGET_ARCH=x86_64 sh -\n\n```", "```\n$ kubectl create deployment nginx --image nginx:1.25.2\ndeployment.apps/nginx created\n\n```", "```\n$ kubectl expose deploy/nginx --port 80\nservice/nginx exposed\n\n```", "```\n$ kubectl get po\nNAME                          READY   STATUS    RESTARTS   AGE\nnginx-77b4fdf86c-kzqvt        2/2     Running   0          27s\n\n```", "```\n$ kubectl get pods -l app=nginx -o yaml\napiVersion: v1\nitems:\n- apiVersion: v1\n  kind: Pod\n  metadata:\n    labels:\n      app: nginx\n      ...\n  spec:\n    containers:\n    - image: nginx:1.25.2\n      imagePullPolicy: IfNotPresent\n      name: nginx\n      resources: {}\n\n    ...\nkind: List\nmetadata:\n  resourceVersion: \"\"\n\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: nginx-vs\nspec:\n  hosts:\n  - nginx\n  http:\n  - route:\n    - destination:\n        host: nginx\n\n```", "```\n$ kubectl apply -f virtualservice.yaml\n\n```", "```\n$ kubectl run mycurlpod --image=curlimages/curl -i --tty -- sh\n\n```", "```\n$ kubectl exec -i --tty mycurlpod -- sh\n\n```", "```\n$ curl -v nginx\n*   Trying 10.152.183.90:80...\n* Connected to nginx (10.152.183.90) port 80 (#0)\n> GET / HTTP/1.1\n> Host: nginx\n> User-Agent: curl/8.1.2\n> Accept: */*\n>\n> HTTP/1.1 200 OK\n> server: envoy\n...\n\n```", "```\n$ curl -v nginx/legacypath\n*   Trying 10.152.183.90:80...\n* Connected to nginx (10.152.183.90) port 80 (#0)\n> GET /legacypath HTTP/1.1\n> Host: nginx\n> User-Agent: curl/8.1.2\n> Accept: */*\n>\n< HTTP/1.1 404 Not Found\n< server: envoy\n< date: Mon, 26 Jun 2023 09:37:43 GMT\n< content-type: text/html\n< content-length: 153\n< x-envoy-upstream-service-time: 20\n<\n<html>\n<head><title>404 Not Found</title></head>\n<body>\n<center><h1>404 Not Found</h1></center>\n<hr><center>nginx/1.25.1</center>\n</body>\n</html>\n\n```", "```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: nginx-vs\nspec:\n  hosts:\n  - nginx\n  http:\n  - match:\n    - uri:\n        prefix: /legacypath\n    rewrite:\n      uri: /\n    route:\n    - destination:\n        host: nginx\n  - route:\n    - destination:\n        host: nginx\n\n```", "```\n$ kubectl apply -f virtualservice.yaml\n\n```", "```\n$ curl -v nginx/legacypath\n*   Trying 10.152.183.90:80...\n* Connected to nginx (10.152.183.90) port 80 (#0)\n> GET /legacypath HTTP/1.1\n> Host: nginx\n> User-Agent: curl/8.1.2\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n\n```", "```\n$ curl --proto '=https' --tlsv1.2 -sSfL https://run.linkerd.io/install | sh\n\n```", "```\n...\nAdd the linkerd CLI to your path with:\n\n  export PATH=$PATH:/Users/jonathanmichaux/.linkerd2/bin\n\nNow run:\n\n  linkerd check --pre                     # validate that Linkerd can be inst...\n  linkerd install --crds | kubectl apply -f - # install the Linkerd CRDs\n  linkerd install | kubectl apply -f -    # install the control plane into the...\n  linkerd check                           # validate everything worked!\n...\n\n```", "```\nlinkerd install --set proxyInit.runAsRoot=true | kubectl apply -f -\n\n```", "```\n$ linkerd check\n...\nlinkerd-control-plane-proxy\n---------------------------\n√ control plane proxies are healthy\n√ control plane proxies are up-to-date\n√ control plane proxies and cli versions match\n\nStatus check results are √\n\n```", "```\n$ kubectl get pods -n linkerd\nNAME                                     READY   STATUS    RESTARTS   AGE\nlinkerd-destination-6b8c559b89-rx8f7     4/4     Running   0          9m23s\nlinkerd-identity-6dd765fb74-52plg        2/2     Running   0          9m23s\nlinkerd-proxy-injector-f54b7f688-lhjg6   2/2     Running   0          9m22s\n\n```", "```\n$ kubectl annotate namespace default linkerd.io/inject=enabled\nnamespace/default annotate\n\n```", "```\n$ kubectl create deployment nginx --image nginx:1.25.2\ndeployment.apps/nginx created\n\n```", "```\n$ kubectl expose deploy/nginx --port 80\nservice/nginx exposed\n\n```", "```\n$ kubectl get po\nNAME                     READY   STATUS    RESTARTS   AGE\nnginx-748c667d99-fjjm4   2/2     Running   0          13s\n\n```", "```\n$ kubectl describe pod -l app=nginx | grep Image:\n    Image:          cr.l5d.io/linkerd/proxy-init:v2.2.1\n    Image:          cr.l5d.io/linkerd/proxy:stable-2.13.5\n    Image:          nginx\n\n```", "```\n$ kubectl run mycurlpod --image=curlimages/curl -i --tty -- sh\nDefaulted container \"linkerd-proxy\" out of: linkerd-proxy, mycurlpod,\nlinkerd-init (init)\nerror: Unable to use a TTY - container linkerd-proxy did not allocate one\nIf you don't see a command prompt, try pressing enter.\n\n```", "```\n$ kubectl attach mycurlpod -c mycurlpod -i -t\n\n```", "```\n$ curl -v nginx\n*   Trying 10.111.17.127:80...\n* Connected to nginx (10.111.17.127) port 80 (#0)\n> GET / HTTP/1.1\n> Host: nginx\n> User-Agent: curl/8.1.2\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< server: nginx/1.25.1\n...\n<\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n\n```", "```\napiVersion: policy.linkerd.io/v1beta1\nkind: Server\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  podSelector:\n    matchLabels:\n      app: nginx\n  port: 80\n\n```", "```\n$ kubectl apply -f linkerd-server.yaml\nserver.policy.linkerd.io/nginx created\n\n```", "```\n$ curl -v nginx\n*   Trying 10.111.17.127:80...\n* Connected to nginx (10.111.17.127) port 80 (#0)\n> GET / HTTP/1.1\n> Host: nginx\n> User-Agent: curl/8.1.2\n> Accept: */*\n>\n< HTTP/1.1 403 Forbidden\n< l5d-proxy-error: client 10.244.0.24:53274: server: 10.244.0.23:80:\nunauthorized request on route\n< date: Wed, 05 Jul 2023 20:33:24 GMT\n< content-length: 0\n<\n\n```", "```\napiVersion: policy.linkerd.io/v1alpha1\nkind: AuthorizationPolicy\nmetadata:\n  name: nginx-policy\nspec:\n  targetRef:\n    group: policy.linkerd.io\n    kind: Server\n    name: nginx\n  requiredAuthenticationRefs:\n    - name: default\n      kind: ServiceAccount\n\n```", "```\n$ kubectl apply -f linkerd-auth-policy.yaml\nauthorizationpolicy.policy.linkerd.io/nginx-policy created\n\n```", "```\n$ curl -v nginx\n*   Trying 10.111.17.127:80...\n* Connected to nginx (10.111.17.127) port 80 (#0)\n> GET / HTTP/1.1\n> Host: nginx\n> User-Agent: curl/8.1.2\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n...\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n\n```"]