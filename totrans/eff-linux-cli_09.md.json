["```\n$ grep Nutshell animals.txt\n```", "```\n$ cut -f1 grades | sort | uniq -c | sort -nr\n```", "```\n$ cd dir            *Enter the directory*\n$ touch new.txt     *Make the file*\n```", "```\n$ cd dir && touch new.txt\n```", "```\n$ cp myfile.txt myfile.safe      *Make a backup copy*\n$ nano myfile.txt                *Change the original*\n$ rm myfile.safe                 *Delete the backup*\n```", "```\n$ cp myfile.txt myfile.safe && nano myfile.txt && rm myfile.safe\n```", "```\n$ git add . && git commit -m\"fixed a bug\" && git push\n```", "```\n$ cd dir || mkdir dir\n```", "```\n# If a directory can't be entered, exit with an error code of 1\ncd dir || exit 1\n```", "```\n$ cd dir || mkdir dir && cd dir || echo \"I failed\"\n```", "```\n$ sleep 7200; cp -a ~/important-files /mnt/backup_drive\n```", "```\n$ sleep 300; echo \"remember to walk the dog\" | mail -s reminder $USER\n```", "```\n$ mv file1 file2; mv file2 file3; mv file3 file4\n$ echo $?\n0                           *The exit code for \"mv file3 file4\"*\n```", "```\nTitle: Carry On Wayward Son\nArtist: Kansas\nAlbum: Leftoverture\n\nCarry on my wayward son\nThere'll be peace when you are done\n⋮\n```", "```\n$ grep -l \"Artist: Kansas\" *.txt\ncarry_on_wayward_son.txt\ndust_in_the_wind.txt\nbelexes.txt\n```", "```\n$ mkdir kansas\n$ mv carry_on_wayward_son.txt kansas\n$ mv dust_in_the_wind.txt kansas\n$ mv belexes.txt kansas\n```", "```\n$ mv $(grep -l \"Artist: Kansas\" *.txt) kansas\n```", "```\n$(*any command here*)\n```", "```\n$ mv carry_on_wayward_son.txt dust_in_the_wind.txt belexes.txt kansas\n```", "```\n$ ls eStmt*pdf | tail -n1\n```", "```\n$ okular $(ls eStmt*pdf | tail -n1)\n```", "```\n$ echo Today is $(date +%A).\nToday is Saturday.\n$ echo Today is `date +%A`.\nToday is Saturday.\n```", "```\n$ echo $(date +%A) | tr a-z A-Z                    *Single*\nSATURDAY\necho Today is $(echo $(date +%A) | tr a-z A-Z)!   *Nested*\nToday is SATURDAY!\n```", "```\n*VariableName*=$(*some command here*)\n```", "```\n$ kansasFiles=$(grep -l \"Artist: Kansas\" *.txt) \n```", "```\n$ echo \"$kansasFiles\"\n```", "```\n$ mkdir /tmp/jpegs && cd /tmp/jpegs\n$ touch {1..1000}.jpg\n$ rm 4.jpg 981.jpg\n```", "```\n$ ls -1 | sort -n | less\n1.jpg\n2.jpg\n3.jpg\n5.jpg            *4.jpg is missing*\n⋮\n```", "```\n$ ls *.jpg | sort -n > /tmp/original-list\n```", "```\n$ seq 1 1000 | sed 's/$/.jpg/' > /tmp/full-list\n```", "```\n$ diff /tmp/original-list /tmp/full-list\n3a4\n> 4.jpg\n979a981\n> 981.jpg\n$ rm /tmp/original-list /tmp/full-list       *Clean up afterwards*\n```", "```\n<(*any command here*)\n```", "```\n<(ls -1 | sort -n)\n```", "```\n$ cat <(ls -1 | sort -n)\n1.jpg\n2.jpg\n⋮\n```", "```\n$ cp <(ls -1 | sort -n) /tmp/listing\n$ cat /tmp/listing\n1.jpg\n2.jpg\n⋮\n```", "```\nls *.jpg | sort -n\nseq 1 1000 | sed 's/$/.jpg/'\n```", "```\n$ diff <(ls *.jpg | sort -n) <(seq 1 1000 | sed 's/$/.jpg/')\n3a4\n> 4.jpg\n979a981\n> 981.jpg\n```", "```\n$ diff <(ls *.jpg | sort -n) <(seq 1 1000 | sed 's/$/.jpg/') \\\n    | grep '>' \\\n    | cut -c3-\n4.jpg\n981.jpg\n```", "```\n$ bash -c \"ls -l\"\n-rw-r--r-- 1 smith smith 325 Jul  3 17:44 animals.txt\n```", "```\n$ pwd\n/home/smith\n$ touch /tmp/badfile                           *Create a temporary file*\n$ bash -c \"cd /tmp && rm badfile\"\n$ pwd\n/home/smith                                    *Current directory is unchanged*\n```", "```\n$ sudo echo \"New log file\" > /var/log/custom.log\nbash: /var/log/custom.log: Permission denied\n```", "```\n'echo \"New log file\" > /var/log/custom.log'\n```", "```\n$ sudo bash -c 'echo \"New log file\" > /var/log/custom.log'\n[sudo] password for smith: xxxxxxxx\n$ cat /var/log/custom.log\nNew log file\n```", "```\n$ echo \"ls -l\"\nls -l\n$ echo \"ls -l\" | bash\n-rw-r--r-- 1 smith smith 325 Jul  3 17:44 animals.txt\n```", "```\n$ ls -1 ??* \napple\nbanana\ncantaloupe\ncarrot\n⋮\n```", "```\n$ mkdir {a..z}\n```", "```\n^\\(.\\)\n```", "```\n\\(.*\\)$\n```", "```\n^\\(.\\)\\(.*\\)$\n```", "```\nmv \\1\\2 \\1\n```", "```\n$ ls -1 ??* | sed 's/^\\(.\\)\\(.*\\)$/mv \\1\\2 \\1/'\nmv apple a\nmv banana b\nmv cantaloupe c\nmv carrot c\n⋮\n```", "```\n$ ls -1 ??* | sed 's/^\\(.\\)\\(.*\\)$/mv \\1\\2\\t\\1/' | less\n```", "```\n$ ls -1 ??* | sed 's/^\\(.\\)\\(.*\\)$/mv \\1\\2\\t\\1/' | bash\n```", "```\n$ ssh myhost.example.com\n```", "```\n$ ssh myhost.example.com ls\nremotefile1\nremotefile2\nremotefile3\n```", "```\n$ ssh myhost.example.com ls > outfile       *Creates outfile on local host*\n$ ssh myhost.example.com \"ls > outfile\"     *Creates outfile on remote host*\n```", "```\n$ echo \"ls > outfile\" | ssh myhost.example.com\n```", "```\n    $ echo \"ls > outfile\" | ssh -T myhost.example.com\n    ```", "```\n    $ echo \"ls > outfile\" | ssh myhost.example.com bash\n    ```", "```\n$ ls -1\napple\nbanana\ncantaloupe\n```", "```\n$ ls -1 | xargs wc -l\n3 apple\n4 banana\n1 cantaloupe\n8 total\n```", "```\n$ ls -1 | xargs cat\n```", "```\n$ wc -l * \n3 apple\n4 banana\n1 cantaloupe\n8 total\n```", "```\n$ find . -type f -name \\*.py -print\nfruits/raspberry.py\nvegetables/leafy/lettuce.py\n⋮\n```", "```\n$ find . -type f -name \\*.py -print0 | xargs -0 wc -l\n6 ./fruits/raspberry.py\n3 ./vegetables/leafy/lettuce.py\n⋮\n```", "```\n$ ls | xargs echo                     *Fit as many input strings as possible:*\napple banana cantaloupe carrot          *echo apple banana cantaloupe carrot*\n$ ls | xargs -n1 echo                 *One argument per echo command:*\napple                                   *echo apple*\nbanana                                  *echo banana*\ncantaloupe                              *echo cantaloupe*\ncarrot                                  *echo carrot*\n$ ls | xargs -n2 echo                 *Two arguments per echo command:*\napple banana                            *echo apple banana*\ncantaloupe carrot                       *echo cantaloupe carrot*\n$ ls | xargs -n3 echo                 *Three arguments per echo command:*\napple banana cantaloupe                 *echo apple banana cantaloupe*\ncarrot                                  *echo carrot*\n```", "```\n$ ls | xargs -I XYZ echo XYZ is my favorite food      *Use XYZ as a placeholder*\napple is my favorite food\nbanana is my favorite food\ncantaloupe is my favorite food\ncarrot is my favorite food\n```", "```\n$ rm *.txt\nbash: /bin/rm: Argument list too long\n```", "```\n$ ls | grep '\\.txt$' | xargs rm\n```", "```\n$ find . -maxdepth 1 -name \\*.txt -type f -print0 \\\n  | xargs -0 rm\n```", "```\n$ wc -c my_extremely_huge_file.txt &     *Count characters in a huge file*\n[1] 74931                                *Cryptic-looking response*\n$\n```", "```\n59837483748 my_extremely_huge_file.txt\n[1]+  Done               wc -c my_extremely_huge_file.txt\n```", "```\n[1]+  Exit 1             wc -c my_extremely_huge_file.txt\n```", "```\n$ *command1* & *command2* & *command3* &   *All 3 commands*\n[1] 57351                            *in background*\n[2] 57352\n[3] 57353\n$ *command4* & *command5* & echo hi      *All in background*\n[1] 57431                            *but \"echo\"*\n[2] 57432\nhi\n```", "```\n$ wc -c my_extremely_huge_file.txt &\n[1] 74931\n```", "```\n$ sleep 20 &                        *Run in the background*\n[1] 126288\n$ jobs                              *List this shell's jobs*\n[1]+  Running          sleep 20 &\n$\n*...eventually...*\n[1]+  Done             sleep 20\n```", "```\n$ sleep 20 &                        *Run in the background*\n[1] 126362\n$ fg                                *Bring into the foreground*\nsleep 20\n*...eventually...*\n$\n```", "```\n$ sleep 20                          *Run in the foreground*\n^Z                                  *Suspend the job*\n[1]+  Stopped          sleep 20\n$ jobs                              *List this shell's jobs*\n[1]+  Stopped          sleep 20\n$ fg                                *Bring into the foreground*\nsleep 20\n*...eventually...*\n[1]+  Done             sleep 20\n```", "```\n$ sleep 20                          *Run in the foreground*\n^Z                                  *Suspend the job*\n[1]+  Stopped          sleep 20\n$ bg                                *Move to the background*\n[1]+ sleep 20 &\n$ jobs                              *List this shell's jobs*\n[1]+  Running          sleep 20 &\n$\n*...eventually...*\n[1]+  Done             sleep 20\n```", "```\n$ sleep 100 &                        *Run 3 commands in the background*\n[1] 126452\n$ sleep 200 &\n[2] 126456\n$ sleep 300 &\n[3] 126460\n$ jobs                               *List this shell's jobs*\n[1]   Running          sleep 100 &\n[2]-  Running          sleep 200 &\n[3]+  Running          sleep 300 &\n$ fg %2                              *Bring job 2 into the foreground*\nsleep 200\n^Z                                   *Suspend job 2*\n[2]+  Stopped          sleep 200\n$ jobs                               *See job 2 is suspended (\"stopped\")*\n[1]   Running          sleep 100 &\n[2]+  Stopped          sleep 200\n[3]-  Running          sleep 300 &\n$ kill %3                            *Terminate job 3*\n[3]+  Terminated       sleep 300\n$ jobs                               *See job 3 is gone*\n[1]-  Running          sleep 100 &\n[2]+  Stopped          sleep 200\n$ bg %2                              *Resume suspended job 2 in the background*\n[2]+ sleep 200 &\n$ jobs                               *See job 2 is running again*\n[1]-  Running          sleep 100 &\n[2]+  Running          sleep 200 &\n$\n```", "```\n$ sort /usr/share/dict/words | head -n2 &\n[1] 81089\n$\n```", "```\n$ sort /usr/share/dict/words | head -n2 &\n[1] 81089\n$ A\nA's\n```", "```\n[1]+  Done               sort /usr/share/dict/words | head -n2\n$\n```", "```\n$ sort /usr/share/dict/words | head -n2 > /tmp/results &\n[1] 81089\n$\n[1]+  Done               sort /usr/share/dict/words | head -n2 > /tmp/results\n$ cat /tmp/results\nA\nA's\n$\n```", "```\n$ cat &\n[1] 82455\n[1]+  Stopped            cat\n```", "```\n$ fg\ncat\nHere is some input\nHere is some input\n⋮\n```", "```\n$ *command1* && *command2* && *command3* &\n```", "```\n$ (cd /usr/local && ls)\nbin   etc   games   lib   man   sbin   share\n$ pwd\n/home/smith                   *\"cd /usr/local\" occurred in a subshell*\n```", "```\n$ tar xvf package.tar.gz\nMakefile\nsrc/\nsrc/defs.h\nsrc/main.c\n⋮\n```", "```\n$ cat package.tar.gz | (mkdir -p /tmp/other && cd /tmp/other && tar xzvf -)\n```", "```\n$ tar czf - dir1 | (cd /tmp/dir2 && tar xvf -)\n```", "```\n$ tar czf - dir1 | ssh myhost '(cd /tmp/dir2 && tar xvf -)'\n```", "```\n$ bash                   *Run a child shell*\n$ PS1=\"Doomed> \"         *Change the new shell's prompt*\nDoomed> echo hello       *Run any command you like*\nhello\n```", "```\nDoomed> exec ls          *ls replaces the child shell, runs, and exits*\nanimals.txt\n$                        *A prompt from the original (parent) shell*\n```", "```\n#!/bin/bash\necho \"My name is $USER\"                                 > /tmp/outfile\necho \"My current directory is $PWD\"                     >> /tmp/outfile\necho \"Guess how many lines are in the file /etc/hosts?\" >> /tmp/outfile\nwc -l /etc/hosts                                        >> /tmp/outfile\necho \"Goodbye for now\"                                  >> /tmp/outfile\n```", "```\n#!/bin/bash\n# Redirect stdout for this script\nexec > /tmp/outfile2\n# All subsequent commands print to /tmp/outfile2\necho \"My name is $USER\"\necho \"My current directory is $PWD\"\necho \"Guess how many lines are in the file /etc/hosts?\"\nwc -l /etc/hosts\necho \"Goodbye for now\"\n```", "```\n$ cat /tmp/outfile2\nMy name is smith\nMy current directory is /home/smith\nGuess how many lines are in the file /etc/hosts?\n122 /etc/hosts\nGoodbye for now\n```"]