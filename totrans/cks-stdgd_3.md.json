["```\n$ kubectl cluster-info\nKubernetes control plane is running at https://172.28.40.5:6443\n...\n```", "```\n$ kubectl get service kubernetes\nNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   32s\n```", "```\n$ kubectl get endpoints kubernetes\nNAME         ENDPOINTS          AGE\nkubernetes   172.28.40.5:6443   4m3s\n```", "```\n$ kubectl run kubernetes-envs --image=alpine:3.16.2 -it --rm --restart=Never \\\n  -- env\nKUBERNETES_SERVICE_HOST=10.96.0.1\nKUBERNETES_SERVICE_PORT=443\n```", "```\n$ curl https://172.28.40.5:6443/api/v1/namespaces -k\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"namespaces is forbidden: User \\\"system:anonymous\\\" cannot list \\\n              resource \\\"namespaces\\\" in API group \\\"\\\" at the cluster scope\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"kind\": \"namespaces\"\n  },\n  \"code\": 403\n}\n```", "```\n$ kubectl config view --raw\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tL... ![1](assets/1.png)\n    server: https://172.28.132.5:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin ![2](assets/2.png)\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tL... ![3](assets/3.png)\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktL... ![4](assets/4.png)\n```", "```\n$ echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tL... | base64 -d > ca\n$ echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tL... | base64 -d > kubernetes-admin.crt\n$ echo LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktL... | base64 - \\\n> kubernetes-admin.key\n```", "```\n$ curl --cacert ca --cert kubernetes-admin.crt --key kubernetes-admin.key \\\n  https://172.28.132.5:6443/api/v1/namespaces\n{\n  \"kind\": \"NamespaceList\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"resourceVersion\": \"2387\"\n  },\n  \"items\": [\n    ...\n  ]\n}\n```", "```\n$ openssl genrsa -out johndoe.key 2048\nGenerating RSA private key, 2048 bit long modulus\n...+\n......................................................................+\ne is 65537 (0x10001)\n```", "```\n$ openssl req -new -key johndoe.key -out johndoe.csr\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) []:\nState or Province Name (full name) []:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) []:\nOrganizational Unit Name (eg, section) []:\nCommon Name (eg, fully qualified host name) []:johndoe\nEmail Address []:\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\n```", "```\n$ cat johndoe.csr | base64 | tr -d \"\\n\"\nLS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tL...\n```", "```\n$ cat <<EOF | kubectl apply -f -\napiVersion: certificates.k8s.io/v1\nkind: CertificateSigningRequest\nmetadata:\n  name: johndoe\nspec:\n  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tL...\n  signerName: kubernetes.io/kube-apiserver-client\n  expirationSeconds: 86400\n  usages:\n  - client auth\nEOF\ncertificatesigningrequest.certificates.k8s.io/johndoe created\n```", "```\n$ kubectl get csr johndoe\nNAME        AGE   SIGNERNAME                            REQUESTOR     \\\n  REQUESTEDDURATION   CONDITION\njohndoe     6s    kubernetes.io/kube-apiserver-client   minikube-user \\\n  24h                 Pending\n```", "```\n$ kubectl certificate approve johndoe\ncertificatesigningrequest.certificates.k8s.io/johndoe approved\n$ kubectl get csr johndoe\nNAME        AGE   SIGNERNAME                            REQUESTOR     \\\n  REQUESTEDDURATION   CONDITION\njohndoe     17s   kubernetes.io/kube-apiserver-client   minikube-user \\\n  24h                 Approved,Issued\n```", "```\n$ kubectl get csr johndoe -o jsonpath=*{.status.certificate}*| base64 \\\n  -d > johndoe.crt\n```", "```\n$ kubectl create role developer --verb=create --verb=get --verb=list \\\n  --verb=update --verb=delete --resource=pods\nrole.rbac.authorization.k8s.io/developer created\n```", "```\n$ kubectl create rolebinding developer-binding-johndoe --role=developer \\\n  --user=johndoe\nrolebinding.rbac.authorization.k8s.io/developer-binding-johndoe created\n```", "```\n$ kubectl config set-credentials johndoe --client-key=johndoe.key \\\n  --client-certificate=johndoe.crt --embed-certs=true\nUser \"johndoe\" set.\n$ kubectl config set-context johndoe --cluster=minikube --user=johndoe\nContext \"johndoe\" created.\n```", "```\n$ kubectl config use-context johndoe\nSwitched to context \"johndoe\".\n```", "```\n$ kubectl get pods\nNo resources found in default namespace.\n```", "```\n$ kubectl get namespaces\nError from server (Forbidden): namespaces is forbidden: User \"johndoe\" cannot \\\nlist resource \"namespaces\" in API group \"\" at the cluster scope\n```", "```\n$ kubectl config use-context minikube\nSwitched to context \"minikube\".\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: k97\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: sa-api\n  namespace: k97\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: list-objects\n  namespace: k97\nspec:\n  serviceAccountName: sa-api\n  containers:\n  - name: pods\n    image: alpine/curl:3.14\n    command: ['sh', '-c', 'while true; do curl -s -k -m 5 -H \\\n              \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/ \\\n              serviceaccount/token)\" https://kubernetes.default.svc.cluster. \\\n              local/api/v1/namespaces/k97/pods; sleep 10; done']\n  - name: deployments\n    image: alpine/curl:3.14\n    command: ['sh', '-c', 'while true; do curl -s -k -m 5 -H \\\n              \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/ \\\n              serviceaccount/token)\" https://kubernetes.default.svc.cluster. \\\n              local/apis/apps/v1/namespaces/k97/deployments; sleep 10; done']\n```", "```\n$ kubectl apply -f setup.yaml\nnamespace/k97 created\nserviceaccount/sa-api created\npod/list-objects created\n```", "```\n$ kubectl logs list-objects -c pods -n k97\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"pods is forbidden: User \\\"system:serviceaccount:k97:sa-api\\\" \\\n              cannot list resource \\\"pods\\\" in API group \\\"\\\" in the \\\n              namespace \\\"k97\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"kind\": \"pods\"\n  },\n  \"code\": 403\n}\n$ kubectl logs list-objects -c deployments -n k97\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"deployments.apps is forbidden: User \\\n              \\\"system:serviceaccount:k97:sa-api\\\" cannot list resource \\\n              \\\"deployments\\\" in API group \\\"apps\\\" in the namespace \\\n              \\\"k97\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"group\": \"apps\",\n    \"kind\": \"deployments\"\n  },\n  \"code\": 403\n}\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: list-pods-clusterrole\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"list\"]\n```", "```\n$ kubectl apply -f clusterrole.yaml\nclusterrole.rbac.authorization.k8s.io/list-pods-clusterrole created\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: serviceaccount-pod-rolebinding\n  namespace: k97\nsubjects:\n- kind: ServiceAccount\n  name: sa-api\nroleRef:\n  kind: ClusterRole\n  name: list-pods-clusterrole\n  apiGroup: rbac.authorization.k8s.io\n```", "```\n$ kubectl apply -f rolebinding.yaml\nrolebinding.rbac.authorization.k8s.io/serviceaccount-pod-rolebinding created\n```", "```\n$ kubectl logs list-objects -c pods -n k97\n{\n  \"kind\": \"PodList\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"resourceVersion\": \"628\"\n  },\n  \"items\": [\n      {\n        \"metadata\": {\n          \"name\": \"list-objects\",\n          \"namespace\": \"k97\",\n          ...\n      }\n  ]\n}\n```", "```\n$ kubectl logs list-objects -c deployments -n k97\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"deployments.apps is forbidden: User \\\n              \\\"system:serviceaccount:k97:sa-api\\\" cannot list resource \\\n              \\\"deployments\\\" in API group \\\"apps\\\" in the namespace \\\n              \\\"k97\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"group\": \"apps\",\n    \"kind\": \"deployments\"\n  },\n  \"code\": 403\n}\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: sa-api\n  namespace: k97\nautomountServiceAccountToken: false\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: list-objects\n  namespace: k97\nspec:\n  serviceAccountName: sa-api\n  automountServiceAccountToken: false\n  ...\n```", "```\n$ kubectl create token sa-api\neyJhbGciOiJSUzI1NiIsImtpZCI6IjBtQkJzVWlsQjl...\n```", "```\n$ kubectl create token sa-api --duration 10m\neyJhbGciOiJSUzI1NiIsImtpZCI6IjBtQkJzVWlsQjl...\n```", "```\n$ kubectl get serviceaccount sa-api -n k97\nNAME     SECRETS   AGE\nsa-api   0         42m\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: sa-api-secret\n  namespace: k97\n  annotations:\n    kubernetes.io/service-account.name: sa-api\ntype: kubernetes.io/service-account-token\n```", "```\n$ kubectl create -f secret.yaml\nsecret/sa-api-secret created\n```", "```\n$ kubectl describe secret sa-api-secret -n k97\n...\nData\n====\nca.crt:     1111 bytes\nnamespace:  3 bytes\ntoken:      eyJhbGciOiJSUzI1NiIsImtpZCI6IjBtQkJzVWlsQjl...\n```"]