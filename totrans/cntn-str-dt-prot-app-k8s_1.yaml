- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Cloud native application architecture relies on Kubernetes, the leading container
    management platform. The enterprise needs a storage solution that can keep up
    with the scale and volume of data processed by these applications. On-premises
    and cloud-based storage solutions, which were designed for traditional monolithic
    applications running on virtual machines (VMs), weren’t designed to run in cloud
    native environments and aren’t flexible enough to meet the requirements of the
    enterprise today.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 云原生应用架构依赖于 Kubernetes，这是主要的容器管理平台。企业需要一种存储解决方案，能够跟上这些应用处理的数据规模和数据量。传统的基于虚拟机（VMs）运行的单片应用的本地和云端存储解决方案，并不适合在云原生环境中运行，并且不足以满足今天企业的需求。
- en: Modern applications are implemented as discrete services that can be packaged
    and deployed independently in their own containers running on separate machines.
    Cloud native infrastructure is *elastic*, meaning it is controlled programmatically
    or declaratively to proactively meet changing compute needs. This design enables
    applications to quickly scale up and down based on demand, but requires nimble
    distributed data storage that scales along with the application. Traditional storage
    is simply not up to the task. To meet the needs of the enterprise, Kubernetes
    storage must be dynamic, automated, and application aware, and it must provide
    data protection in the form of intelligent backup and recovery at the container
    level.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现代应用程序作为独立服务实现，可以打包并独立部署在各自的容器中，运行在不同的机器上。云原生基础设施是*弹性*的，意味着可以通过程序控制或声明式地预测性地满足不断变化的计算需求。这种设计使应用程序能够根据需求快速扩展和收缩，但需要灵活的分布式数据存储，能够与应用程序一起扩展。传统存储显然无法胜任这一任务。为了满足企业需求，Kubernetes
    存储必须是动态的、自动化的，具有应用程序意识，并且必须在容器级别提供智能备份和恢复的数据保护。
- en: As application architecture becomes distributed, ownership of application components
    becomes more dispersed. That’s one reason why storage policy, traditionally the
    domain of dedicated administrators and managers, is becoming a shared responsibility
    among teams including the application owners themselves. As a wider group takes
    on these tasks, the burden of managing the complexity of provisioning and maintaining
    storage must shift to automation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 随着应用架构的分布化发展，应用组件的所有权变得更加分散。这是存储策略成为团队共同责任的一个原因，传统上存储策略是专门管理员和经理的领域，现在包括应用所有者在内的团队共同承担。随着更广泛的团队承担这些任务，管理存储的复杂性的负担必须转向自动化。
- en: Traditional data platforms, which focus on the VM as the unit of compute and
    storage, can’t effectively manage or protect storage for distributed applications.
    What’s needed is a way to bring to data storage the dynamic, distributed approach
    that Kubernetes brought to compute. This report provides a foundation for understanding
    a storage paradigm that makes Kubernetes data highly available and secure, providing
    dynamic scale and data protection.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的数据平台以虚拟机作为计算和存储单元，无法有效地管理或保护分布式应用程序的存储。需要的是一种方法，将动态、分布式的 Kubernetes 带给数据存储，就像
    Kubernetes 带给计算的革新一样。本报告为理解使 Kubernetes 数据高度可用和安全的存储范式提供了基础，提供动态的扩展和数据保护。
