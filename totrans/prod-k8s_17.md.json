["```\napiVersion: examples.namespace-operator.io/v1\nkind: Team\nmetadata:\n  name: team-a\nspec:\n  owner: Alice\n  resourceQuotas:\n    pods: \"50\"\n    storage: \"300Gi\"\n```", "```\nports:\n  - name: http\n    port: {{ .Values.service.port }}\n    targetPort: http\n```", "```\n## Kubernetes configuration\n## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP\n##\nservice:\n  type: LoadBalancer\n  ## HTTP Port\n  ##\n  port: 80\n```", "```\nspec:\n  type: {{ .Values.service.type }}\n  {{- if (or (eq .Values.service.type \"LoadBalancer\")\n    (eq .Values.service.type \"NodePort\")) }}\n  externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | quote }}\n  {{- end }}\n  {{- if (and (eq .Values.service.type \"LoadBalancer\")\n    .Values.service.loadBalancerSourceRanges) }}\n  loadBalancerSourceRanges:\n  {{- with .Values.service.loadBalancerSourceRanges }}\n{{ toYaml . | indent 4 }}\n  {{- end }}\n  {{- end }}\n```", "```\napiVersion: pinterest.com/v1\nkind: PinterestService\nmetadata:\n  name: exampleservice\n  project: exampleproject\n  namespace: default\nspec:\n  iamrole: role1\n  loadbalancer:\n    port: 8080\n  replicas: 3\n  sidecarconfig:\n    sidecar1:\n      deps:\n      - example.dep\n    sidecar2:\n      log_level: info\n  template:\n    spec:\n      initcontainers:\n      - name: init\n        image: gcr.io/kuar-demo/kuard-amd64:1\n      containers:\n      - name: init\n        image: gcr.io/kuar-demo/kuard-amd64:1\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-app\n  annotations:\n    company.ingress.required: true\nspec:\n  rules:\n  - host: \"my-app\"\n    http:\n      paths:\n      - path: /\n        backend:\n          service:\n            name: my-app\n            port:\n              number: 8000\n```", "```\nproject = \"example-nodejs\"\n\napp \"example-nodejs\" {\n  labels = {\n      \"service\" = \"example-nodejs\",\n      \"env\" = \"dev\"\n  }\n\n  build {\n    use \"pack\" {}\n    registry {\n        use \"docker\" {\n          image = \"example-nodejs\"\n          tag = \"1\"\n          local = true\n        }\n    }\n }\n\n  deploy {\n    use \"kubernetes\" {\n    probe_path = \"/\"\n    }\n  }\n\n  release {\n    use \"kubernetes\" {\n    }\n  }\n}\n```"]