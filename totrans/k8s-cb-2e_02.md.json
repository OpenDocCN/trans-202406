["```\n$ cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOF\n\n$ sudo modprobe overlay\n$ sudo modprobe br_netfilter\n\n$ cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward = 1\nEOF\n\n$ sudo sysctl --system\n```", "```\n$ sudo apt install cron -y\n$ sudo swapoff -a\n$ (sudo crontab -l 2>/dev/null; echo \"@reboot /sbin/swapoff -a\") | sudo crontab -\n|| true\n```", "```\n$ VERSION=\"1.27\"\n$ OS=\"xUbuntu_22.04\"\n\n$ cat <<EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:\nstable.list\ndeb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:\n/stable/$OS/ /\nEOF\n\n$ cat <<EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:\nstable:cri-o:$VERSION.list\ndeb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:\n/stable:/cri-o:/$VERSION/$OS/ /\nEOF\n\n$ curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:\n/stable:/cri-o:/$VERSION/$OS/Release.key | \\\n    sudo apt-key add -\n$ curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:\n/stable/$OS/Release.key | \\\n    sudo apt-key add -\n\n$ sudo apt-get update\n\n$ sudo apt-get install cri-o cri-o-runc cri-tools -y\n```", "```\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable crio --now\n```", "```\n$ cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list\ndeb [signed-by=/etc/apt/keyrings/k8s-archive-keyring.gpg]\nhttps://apt.kubernetes.io/\nkubernetes-xenial main\nEOF\n\n$ sudo apt-get install -y apt-transport-https ca-certificates curl\n$ sudo curl -fsSLo /etc/apt/keyrings/k8s-archive-keyring.gpg \\\n    https://dl.k8s.io/apt/doc/apt-key.gpg\n\n$ sudo apt-get update\n```", "```\n$ sudo apt-get install -y kubelet kubeadm kubectl\n```", "```\n$ sudo apt-mark hold kubelet kubeadm kubectl\n```", "```\n$ NODENAME=$(hostname -s)\n$ IPADDR=$(ip route get 8.8.8.8 | sed -n 's/.*src \\([^\\ ]*\\).*/\\1/p')\n$ POD_CIDR=192.168.0.0/16\n```", "```\n$ sudo kubeadm init --apiserver-advertise-address=$IPADDR \\\n    --apiserver-cert-extra-sans=$IPADDR  \\\n    --pod-network-cidr=$POD_CIDR \\\n    --node-name $NODENAME \\\n    --ignore-preflight-errors Swap\n[init] Using Kubernetes version: v1.27.2\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n...\n```", "```\n$ kubectl get --raw='/readyz?verbose'\n```", "```\n$ kubectl cluster-info\n```", "```\n$ kubectl taint nodes --all node-role.kubernetes.io/control-plane-\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/\nv3.26.1/manifests/calico.yaml\n```", "```\n$ kubeadm token create --print-join-command\n```", "```\n$ sudo kubeadm join --token *<token>*\n```", "```\n$ kubectl get nodes\nNAME     STATUS   ROLES           AGE   VERSION\nmaster   Ready    control-plane   28m   v1.27.2\nworker   Ready    <none>          10s   v1.27.2\n\n```", "```\n$ minikube addons enable dashboard\n\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/\nv2.7.0/aio/deploy/recommended.yaml\n\n```", "```\n$ kubectl get deployment kubernetes-dashboard -n kubernetes-dashboard\nNAME                   READY   UP-TO-DATE   AVAILABLE   AGE\nkubernetes-dashboard   1/1     1            1           44s\n\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin-user\n  namespace: kubernetes-dashboard\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: admin-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: admin-user\n  namespace: kubernetes-dashboard\n```", "```\n$ kubectl apply -f sa.yaml\n\n```", "```\n$ kubectl -n kubernetes-dashboard create token admin-user\neyJhbGciOiJSUzI1NiIsImtpZCI6...\n\n```", "```\n$ kubectl proxy\n\n```", "```\n$ minikube dashboard\n\n```", "```\n$ kubectl get all\nNAME                         READY   STATUS    RESTARTS   AGE\npod/redis-584fd7c758-vwl52   1/1     Running   0          5m9s\n\nNAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   19m\n\nNAME                    READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/redis   1/1     1            1           5m9s\n\nNAME                               DESIRED   CURRENT   READY   AGE\nreplicaset.apps/redis-584fd7c758   1         1         1       5m9s\n\n```", "```\n$ kubectl logs redis-3215927958-4x88v\n...\n1:C 25 Aug 2023 06:17:23.934 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n1:C 25 Aug 2023 06:17:23.934 * Redis version=7.2.0, bits=64, commit=00000000,\nmodified=0, pid=1, just started\n1:C 25 Aug 2023 06:17:23.934 # Warning: no config file specified, using the\ndefault config. In order to specify a config file use redis-server\n/path/to/redis.conf\n1:M 25 Aug 2023 06:17:23.934 * monotonic clock: POSIX clock_gettime\n1:M 25 Aug 2023 06:17:23.934 * Running mode=standalone, port=6379.\n1:M 25 Aug 2023 06:17:23.935 * Server initialized\n1:M 25 Aug 2023 06:17:23.935 * Ready to accept connections tcp\n```", "```\n$ minikube addons enable metrics-server\n\n```", "```\n$ kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/\nlatest/download/components.yaml\n\n```", "```\n$ kubectl get deployment metrics-server -n kube-system\nNAME             READY   UP-TO-DATE   AVAILABLE   AGE\nmetrics-server   1/1     1            1           7m27s\n\n```", "```\n$ kubectl logs -f deployment/metrics-server -n kube-system\nI0707 05:06:19.537981   1 server.go:187] \"Failed probe\"\nprobe=\"metric-storage-ready\" err=\"no metrics to serve\"\nE0707 05:06:26.395852   1 scraper.go:140] \"Failed to scrape node\" err=\"Get\n\\\"https://192.168.64.50:10250/metrics/resource\\\": x509: cannot validate\ncertificate for 192.168.64.50 because it doesn't contain any IP SANs\"\nnode=\"minikube\"\n\n```", "```\n$ kubectl patch deployment metrics-server -n kube-system --type='json'\n-p='[{\"op\": \"add\", \"path\": \"/spec/template/spec/containers/0/args/-\", \"value\":\n\"--kubelet-insecure-tls\"}]'\n\n```", "```\n$ kubectl top pods -A\nNAMESPACE     NAME                               CPU(cores)   MEMORY(bytes)\nkube-system   coredns-5d78c9869d-5fh78           9m           9Mi\nkube-system   etcd-minikube                      164m         36Mi\nkube-system   kube-apiserver-minikube            322m         254Mi\nkube-system   kube-controller-manager-minikube   123m         35Mi\nkube-system   kube-proxy-rvl8v                   13m          12Mi\nkube-system   kube-scheduler-minikube            62m          15Mi\nkube-system   storage-provisioner                22m          7Mi\n\n```", "```\n$ kubectl top nodes\nNAME       CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%\nminikube   415m         10%    1457Mi          18%\n\n```", "```\n$ wget https://dl.k8s.io/v1.28.0/kubernetes.tar.gz\n```", "```\n$ sha512sum kubernetes.tar.gz\n9aaf7cc004d09297dc7bbc1f0149....  kubernetes.tar.gz\n\n```", "```\n$ tar -xvf kubernetes.tar.gz\n$ cd kubernetes/cluster\n$ ./get-kube-binaries.sh\n```", "```\n$ ls ../client/bin\nkubectl\t\tkubectl-convert\n```", "```\n$ ls ../server/kubernetes\nkubernetes-server-linux-amd64.tar.gz   kubernetes-manifests.tar.gz\t  README\n...\n```", "```\n$ systemctl status kubelet\n● kubelet.service - kubelet: The Kubernetes Node Agent\n     Loaded: loaded (/lib/systemd/system/kubelet.service; enabled;\n     vendor preset: enabled)\n    Drop-In: /etc/systemd/system/kubelet.service.d\n             └─10-kubeadm.conf\n     Active: active (running) since Tue 2023-05-30 04:21:29 UTC; 2h 49min ago\n       Docs: https://kubernetes.io/docs/home/\n   Main PID: 797 (kubelet)\n      Tasks: 11 (limit: 2234)\n     Memory: 40.2M\n        CPU: 5min 14.792s\n     CGroup: /system.slice/kubelet.service\n             └─797 /usr/bin/kubelet \\\n                --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf \\\n                --kubeconfig=/etc/kubernetes/kubelet.conf \\\n                --config=/var/lib/kubelet/config.yaml \\\n                --container-runtime-endpoint=unix:///var/run/crio/crio.sock \\\n                --pod-infra-container-image=registry.k8s.io/pause:3.9\n```", "```\n[Unit]\nDescription=kubelet: The Kubernetes Node Agent\nDocumentation=https://kubernetes.io/docs/home/\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nExecStart=/usr/bin/kubelet\nRestart=always\nStartLimitInterval=0\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n```", "```\n[Service]\nEnvironment=\"KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/\nbootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf\"\nEnvironment=\"KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml\"\nEnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env\nEnvironmentFile=-/etc/default/kubelet\n\nExecStart=\nExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS\n$KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS\n```", "```\n$ ls -l /etc/kubernetes/manifests\ntotal 16\n-rw------- 1 root root 2393 May 29 11:04 etcd.yaml\n-rw------- 1 root root 3882 May 29 11:04 kube-apiserver.yaml\n-rw------- 1 root root 3394 May 29 11:04 kube-controller-manager.yaml\n-rw------- 1 root root 1463 May 29 11:04 kube-scheduler.yaml\n```", "```\n$ cat /etc/kubernetes/manifests/etcd.yaml\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    kubeadm.kubernetes.io/etcd.advertise-client-urls: https://10.10.100.30:2379\n  creationTimestamp: null\n  labels:\n    component: etcd\n    tier: control-plane\n  name: etcd\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - etcd\n    - --advertise-client-urls=https://10.10.100.30:2379\n    - --cert-file=/etc/kubernetes/pki/etcd/server.crt\n    - --client-cert-auth=true\n    - --data-dir=/var/lib/etcd\n    - --experimental-initial-corrupt-check=true\n    - --experimental-watch-progress-notify-interval=5s\n    - --initial-advertise-peer-urls=https://10.10.100.30:2380\n    - --initial-cluster=master=https://10.10.100.30:2380\n    - --key-file=/etc/kubernetes/pki/etcd/server.key\n    - --listen-client-urls=https://127.0.0.1:2379,https://10.10.100.30:2379\n    - --listen-metrics-urls=http://127.0.0.1:2381\n    - --listen-peer-urls=https://10.10.100.30:2380\n    - --name=master\n    - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt\n    - --peer-client-cert-auth=true\n    - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key\n    - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt\n    - --snapshot-count=10000\n    - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt\n    image: registry.k8s.io/etcd:3.5.7-0\n    ...\n\n```", "```\n$ gcloud auth login\n```", "```\n$ gcloud container clusters create oreilly --zone us-east1-b\n```", "```\n$ gcloud container clusters delete oreilly --zone us-east1-b\n```", "```\n$ gcloud container clusters list --zone us-east1-b\nNAME     ZONE        MASTER_VERSION     MASTER_IP     ...  STATUS\noreilly  us-east1-b  1.24.9-gke.2000    35.187.80.94  ...  RUNNING\n```", "```\n...\nCOMMANDS\n...\n     resize\n        Resizes an existing cluster for running\n        containers.\n     update\n        Update cluster settings for an existing container\n        cluster.\n     upgrade\n        Upgrade the Kubernetes version of an existing\n        container cluster.\n```", "```\n$ az --version | grep \"^azure-cli\"\nazure-cli                         2.50.0 *\n\n$ az login\nTo sign in, use a web browser to open the page https://aka.ms/devicelogin and\nenter the code XXXXXXXXX to authenticate.\n[\n  {\n    \"cloudName\": \"AzureCloud\",\n    \"id\": \"****************************\",\n    \"isDefault\": true,\n    \"name\": \"Free Trial\",\n    \"state\": \"Enabled\",\n    \"tenantId\": \"*****************************\",\n    \"user\": {\n      \"name\": \"******@hotmail.com\",\n      \"type\": \"user\"\n    }\n  }\n]\n```", "```\n$ az group create --name k8s --location northeurope\n{\n  \"id\": \"/subscriptions/************************/resourceGroups/k8s\",\n  \"location\": \"northeurope\",\n  \"managedBy\": null,\n  \"name\": \"k8s\",\n  \"properties\": {\n    \"provisioningState\": \"Succeeded\"\n  },\n  \"tags\": null,\n  \"type\": \"Microsoft.Resources/resourceGroups\"\n}\n```", "```\n$ az aks create -g k8s -n myAKSCluster --node-count 1 --generate-ssh-keys\n{\n  \"aadProfile\": null,\n  \"addonProfiles\": null,\n  \"agentPoolProfiles\": [\n    {\n      \"availabilityZones\": null,\n      \"count\": 1,\n      \"creationData\": null,\n      \"currentOrchestratorVersion\": \"1.26.6\",\n\n```", "```\n$ az aks get-credentials --resource-group k8s --name myAKSCluster\n```", "```\n$ kubectl cluster-info\nKubernetes master is running at https://k8scb-k8s-143f1emgmt.northeurope.cloudapp\n  .azure.com\nHeapster is running at https://k8scb-k8s-143f1emgmt.northeurope.cloudapp.azure\n  .com/api/v1/namespaces/kube-system/services/heapster/proxy\nKubeDNS is running at https://k8scb-k8s-143f1emgmt.northeurope.cloudapp.azure\n  .com/api/v1/namespaces/kube-system/services/kube-dns/proxy\nkubernetes-dashboard is running at https://k8scb-k8s-143f1emgmt.northeurope\n  .cloudapp.azure.com/api/v1/namespaces/kube-system/services/kubernetes-dashboard\n  /proxy\ntiller-deploy is running at https://k8scb-k8s-143f1emgmt.northeurope.cloudapp\n  .azure.com/api/v1/namespaces/kube-system/services/tiller-deploy/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n\n$ kubectl get nodes\nNAME                                STATUS   ROLES   AGE   VERSION\naks-nodepool1-78916010-vmss000000   Ready    agent   26m   v1.24.9\n```", "```\n$ az group delete --name k8s --yes --no-wait\n```", "```\n$ aws configure\nAWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE\nAWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\nDefault region name [None]: eu-central-1\nDefault output format [None]:\n\n```", "```\n$ eksctl create cluster --name oreilly --region eu-central-1\n2023-08-29 13:21:12 [i]  eksctl version 0.153.0-dev+a79b3826a.2023-08-18T...\n2023-08-29 13:21:12 [i]  using region eu-central-1\n...\n2023-08-29 13:36:52 [✔]  EKS cluster \"oreilly\" in \"eu-central-1\" region is ready\n\n```", "```\n$ eksctl delete cluster oreilly --region eu-central-1\n```"]