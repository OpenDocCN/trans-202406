- en: 'Chapter 11\. Hosting: Deploying Your Application to the Amplify Console with
    CI and CD'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章。托管：使用CI和CD将您的应用程序部署到Amplify Console
- en: Now that we’ve looked at building out our apps, how do we make them live and
    show them to the world? In this chapter, we’ll look at a couple of different hosting
    options with Amplify, and also how to deploy your app using a custom domain name.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看了如何构建我们的应用程序，接下来我们如何使它们在线并展示给世界看呢？在本章中，我们将看一些不同的使用Amplify的托管选项，以及如何使用自定义域名部署您的应用程序。
- en: The service we’ll be using is the Amplify Console hosting service. The Amplify
    Console is a fully managed hosting service that provides a simple workflow for
    deploying static sites and full stack serverless applications. Using Amplify Console,
    you deploy your code using the CLI, a GitHub repository, or manually, and the
    service will build and deploy your app for you.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的服务是Amplify Console托管服务。Amplify Console是一个完全托管的托管服务，提供了一个简单的工作流程，用于部署静态站点和全栈无服务器应用程序。使用Amplify
    Console，您可以使用CLI、GitHub仓库或手动方式部署您的代码，该服务将为您构建和部署您的应用程序。
- en: When working with frameworks like React, Vue, Angular, or even frameworks like
    Gatsby, Next, or Nuxt, there is typically a *build* phase that needs to be run.
    This phase will take all of the JavaScript, CSS, and images and, using a module
    bundler such as webpack, create a deployable build of your website.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用像React、Vue、Angular这样的框架，甚至像Gatsby、Next或Nuxt这样的框架时，通常需要运行一个*构建*阶段。这个阶段将使用像webpack这样的模块捆绑工具，将所有的JavaScript、CSS和图像文件创建为可部署的网站构建。
- en: The Amplify Console will allow you to configure the app’s build settings so
    that when you are ready to deploy a new version, the service will be able to take
    your raw files, then build and deploy your app to your live domain for you.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Amplify Console将允许您配置应用程序的构建设置，以便当您准备部署新版本时，服务将能够获取您的原始文件，然后构建和部署您的应用程序到您的实时域名。
- en: 'In this chapter, we’ll learn about the following:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下内容：
- en: '*CLI-based deployments*'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*基于CLI的部署*'
- en: Using our local project, we will deploy an app to Amplify Console hosting directly
    from the CLI.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们的本地项目，我们将直接从CLI向Amplify Console托管部署一个应用程序。
- en: '*Git-based deployments*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*基于Git的部署*'
- en: Using a GitHub repository, we will deploy an app to Amplify Console hosting
    and learn how to trigger new builds when changes are merged into the master branch.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用GitHub仓库，我们将向Amplify Console托管部署一个应用程序，并学习如何在更改合并到主分支时触发新的构建。
- en: '*Access control*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*访问控制*'
- en: Add access control to restrict access to your branches with a username and password.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 添加访问控制以通过用户名和密码限制对您分支的访问。
- en: '*Custom domains*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*自定义域名*'
- en: Use your custom domain name for the deployment.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您的自定义域名进行部署。
- en: Let’s get started.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: CLI-Based Deployments
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于CLI的部署
- en: In this section, we will learn how to deploy a project to Amplify Console hosting
    directly from the CLI.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何直接从CLI将项目部署到Amplify Console托管。
- en: 'To get started, create a new React app:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请创建一个新的React应用程序：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we’ll initialize a new Amplify project and add a single service, authentication:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将初始化一个新的Amplify项目，并添加一个单一的服务，即身份验证：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When running the `init` command, we are walked through the same set of questions
    we’ve been walked through in all of the previous chapters.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行`init`命令时，我们将按照所有先前章节中的相同问题步骤进行操作。
- en: We are asked questions like what our source and distribution directories are,
    as well as the build command. By default, the Amplify CLI will detect the framework
    and automatically set these for you for many popular frameworks, like in our React
    projects.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们被询问我们的源和分发目录是什么，以及构建命令是什么。默认情况下，Amplify CLI将检测框架，并为您设置这些值，对于像我们的React项目这样的流行框架。
- en: If you are using a framework that is not recognized by the Amplify CLI, or have
    a custom build configuration, you may need to set these values to be something
    different.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是Amplify CLI不认可的框架，或者有自定义的构建配置，您可能需要将这些值设置为不同的值。
- en: 'To add hosting, we can use the `hosting` category:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加托管，我们可以使用`hosting`类别：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Next, let’s update our frontend code to add a basic greeting as well as authentication.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们更新我们的前端代码，添加一个基本的问候语和认证功能。
- en: 'Start by opening *src/index.js* and configuring the Amplify app by adding the
    following code below the last import:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先打开*src/index.js*，并通过在最后一个导入项下添加以下代码配置Amplify应用程序：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then update *src/App.js* with the following code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后更新*src/App.js*，添加以下代码：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Our app is now ready to deploy. To deploy both the frontend and backend, we
    can run the `publish` command. The `publish` command will deploy both the frontend
    *and* backend code to the Amplify Console:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的应用现在已准备部署。要同时部署前端和后端，可以运行`publish`命令。`publish`命令将前端和后端代码都部署到Amplify控制台：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now, we should be able to view the app in the console with both the frontend
    deployment as well as backend service configuration:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们应该能够在控制台中查看应用程序，包括前端部署和后端服务配置：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: From the Amplify Console dashboard, click the app name that was just deployed.
    Here, you should be able to see a toggle to view both the frontend (*Frontend
    environments*) as well as the backend (*Backend environments*) deployments, as
    shown in [Figure 11-1](#fig11a).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从Amplify控制台仪表板，点击刚刚部署的应用程序名称。在这里，您应该能够看到一个切换按钮，可以查看前端（*前端环境*）以及后端（*后端环境*）部署，如[图11-1](#fig11a)所示。
- en: '![Amplify Console Overview](Images/fssl_1101.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Amplify控制台概述](Images/fssl_1101.png)'
- en: Figure 11-1\. Amplify Console overview
  id: totrans-37
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-1\. Amplify控制台概述
- en: 'From the *Frontend environments* view, you should be able to click the domain
    to view the live website hosted by the Amplify Console. The domain URL should
    look something like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 从*前端环境*视图中，您应该能够点击域名以查看Amplify控制台托管的实时网站。域名URL应该看起来像这样：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the lefthand menu are options for things like domain management for custom
    domains (covered in [“Custom Domains”](#custom_domains)), email notifications
    for build events, access control (something we will cover in this chapter), logs,
    and redirects.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧菜单中，有关自定义域名的域管理选项（在[“自定义域名”](#custom_domains)中介绍）、构建事件的电子邮件通知、访问控制（本章我们将讨论的内容）、日志和重定向等选项。
- en: When you make an update and need to deploy a new version, you can run the `publish`
    command again to deploy the updated version of the app.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 当您更新并需要部署新版本时，可以再次运行`publish`命令以部署应用程序的更新版本。
- en: Git-Based Deployments
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于Git的部署
- en: Now let’s look at how you can enable Git-based deployments using an Amplify
    app stored in a GitHub repository. While deploying from your local project works
    well, many times you will be working from a Git repository either alone or with
    a team. The Amplify Console supports Git-based hosting for your applications,
    along with built-in features automatic deployments on merges and feature branch
    deployments (branch deployments linked to each feature branch).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何通过存储在GitHub仓库中的Amplify应用程序启用基于Git的部署。虽然从本地项目部署效果很好，但很多时候你会使用Git仓库进行个人或团队开发。Amplify控制台支持Git-based托管应用程序，同时内置功能支持合并时自动部署和特性分支部署（将分支部署与每个特性分支链接起来）。
- en: Let’s look at how to take the app we have already built and deploy it to the
    Amplify Console from a GitHub repository.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何将我们已经构建的应用程序从GitHub仓库部署到Amplify控制台。
- en: 'The first step is to remove the existing amplify backend that we have set up:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是删除我们设置的现有Amplify后端：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then, create a new Amplify app and add authentication:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建一个新的Amplify应用并添加认证：
- en: '[PRE9]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, deploy the backend using the Amplify `push` command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用Amplify的`push`命令部署后端：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We now need to create a GitHub repository to hold the app.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要创建一个GitHub仓库来存放应用程序。
- en: Creating the GitHub Repository
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建GitHub仓库
- en: The next thing you will need to do is go to GitHub.com and create a new repository.
    I’ll create a new repo called *my-react-app*, as shown in [Figure 11-2](#fig11b).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来需要做的是转到GitHub.com并创建一个新的仓库。我将创建一个名为*my-react-app*的新仓库，如[图11-2](#fig11b)所示。
- en: '![Creating a GitHub repository](Images/fssl_1102.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![创建GitHub仓库](Images/fssl_1102.png)'
- en: Figure 11-2\. Creating a GitHub repository
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-2\. 创建GitHub仓库
- en: 'Once you’ve created the repo, you will be given a repo URI that looks like
    what’s shown in [Figure 11-3](#fig11c):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 创建仓库后，您将获得一个类似于[图11-3](#fig11c)所示的仓库URI：
- en: '[PRE11]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![GitHub Project URI](Images/fssl_1103.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![GitHub项目URI](Images/fssl_1103.png)'
- en: Figure 11-3\. GitHub project URI
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图11-3\. GitHub项目URI
- en: 'Copy this repo URI and return to the command line. From here, we will initialize
    a new GitHub project in our local app:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 复制此仓库URI并返回到命令行。在这里，我们将在本地应用程序中初始化一个新的GitHub项目：
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We’ll then add the files to be tracked and push the changes to our repo:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将要跟踪的文件添加并将更改推送到我们的仓库：
- en: '[PRE13]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now that the app has been pushed to GitHub, we can connect to Amplify Console
    hosting. To do so, let’s add it via the CLI:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应用程序已推送至GitHub，我们可以连接到Amplify控制台托管。为此，让我们通过CLI添加它：
- en: '[PRE14]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The CLI should open the Amplify Console in your web browser, allowing you to
    choose GitHub as your source code provider.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: CLI 应该会在您的 Web 浏览器中打开 Amplify Console，使您能够选择 GitHub 作为您的源代码提供者。
- en: As your first step (in the Amplify Console), choose GitHub as the source code
    provider and then click Connect branch.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为您的第一步（在 Amplify Console 中），选择 GitHub 作为源代码提供者，然后单击连接分支。
- en: Next, sign in with GitHub, then choose the new repo you just created and the
    master branch. Click Next.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用 GitHub 登录，然后选择您刚创建的新仓库和主分支。单击下一步。
- en: In the Configure build settings page, when asked to “select a backend environment,”
    choose the environment name you already have created.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置构建设置页面中，当要求“选择后端环境”时，请选择您已经创建的环境名称。
- en: 'Next, in the Configure build settings page, when asked to “select an existing
    service role or create a new one so Amplify Console may access your resources,”
    click Create new role to create a new IAM role:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在配置构建设置页面中，当要求“选择现有服务角色或创建新角色以便 Amplify Console 可以访问您的资源”时，请单击创建新角色以创建新的
    IAM 角色：
- en: 'Click Next: Permissions, Next: Tags, Next: Review, and then Create Role to
    create a new IAM role.'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击下一步：权限，下一步：标签，下一步：审查，然后创建角色以创建新的 IAM 角色。
- en: Go back to the Configure build settings page, click the refresh button, and
    select the newly created role from the dropdown.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到配置构建设置页面，单击刷新按钮，并从下拉菜单中选择新创建的角色。
- en: Click Next.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击下一步。
- en: In the Review page, click Save and deploy to deploy the app.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在审查页面中，单击保存并部署以部署应用程序。
- en: The app has now been deployed to the Amplify Console and a new build will begin.
    When the build finishes, you should be given a live URL to view your app.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序现已部署到 Amplify Console，并将开始新的构建。构建完成后，您应该会收到一个实时 URL 来查看您的应用程序。
- en: Git-Based CI/CD
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于 Git 的 CI/CD
- en: Now that the app has been deployed, let’s look at how to implement CD into the
    app.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在应用程序已部署完成，让我们看看如何将 CD 实施到应用程序中。
- en: The basic idea with Git-based CI and CD is that you can deploy and test builds
    to any branch by pushing directly to Git. Once the changes are merged, a new build
    is kicked off and a live URL is given to you to try out.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 基于 Git 的 CI/CD 的基本思想是，您可以通过直接推送到 Git 来部署和测试任何分支的构建。一旦合并更改，将启动新的构建并为您提供一个实时 URL
    供您尝试。
- en: In this way, you can have feature/branch deployments, like *prod* (for production),
    *dev* (for development), and *feature_name* (for new features). When building
    in this way, you are able to test out new changes in a live environment, testing
    out not only the frontend but also the backend changes.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，您可以进行功能/分支部署，如 *prod*（用于生产）、*dev*（用于开发）和 *feature_name*（用于新功能）。以这种方式构建时，您可以在实时环境中测试新的更改，不仅测试前端而且测试后端更改。
- en: 'Let’s try kicking off a new build. To do so, make a change to one of the local
    files. Update *src/App.js* with some updated text, then add the changes and push
    to GitHub:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试启动一个新的构建。为此，请对其中一个本地文件进行更改。更新 *src/App.js* 的一些文本，然后添加更改并推送到 GitHub：
- en: '[PRE15]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now, when you open your app in the Amplify Console, you should notice a new
    build has been kicked off automatically for you.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您在 Amplify Console 中打开应用程序时，您应该注意到已为您自动启动了新的构建。
- en: Access Control
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问控制
- en: Next, let’s look at how to enable access control to password protect our deployment.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看如何启用访问控制以保护我们的部署。
- en: Using access control, you can specify that a visitor must have a username and
    password to view either a deployment or a specific branch deployment. This is
    especially useful if you are testing out new private features that you wish to
    keep undiscoverable by anyone outside your team.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用访问控制，您可以指定访问者必须具有用户名和密码才能查看部署或特定分支部署。如果您正在测试希望对外团队保持不可发现的新私有功能，这将特别有用。
- en: 'Here’s how to enable access controls:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何启用访问控制的方法：
- en: In the lefthand menu, click Access Control.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧菜单中，单击访问控制。
- en: Next, click Manage Access.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，单击管理访问。
- en: Here, for the master branch, set the Access setting to Restricted, then set
    a username and password.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，对于主分支，请将访问设置设置为受限，然后设置用户名和密码。
- en: Now, open the URL for the deployment. You will notice that you will be unable
    to view it without entering the username and password.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开部署的 URL。您会注意到，如果不输入用户名和密码，您将无法查看它。
- en: In the Access Control menu, you can also choose to set access control on a branch-by-branch
    basis.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在访问控制菜单中，您还可以选择按分支设置访问控制。
- en: Custom Domains
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义域名
- en: Finally, let’s learn how to use a custom domain name for our app.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们学习如何为我们的应用程序使用自定义域名。
- en: 'To enable a custom domain, we need to do three things:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用自定义域名，我们需要做三件事情：
- en: Add the domain in Amazon Route53.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Amazon Route53中添加域名。
- en: Set the nameservers in the DNS settings of the domain provider for the domain
    you are using.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在域名提供商的DNS设置中设置域名。
- en: Configure the Amplify Console app to use the domain added in Route 53.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Amplify控制台应用程序以使用在Route53中添加的域名。
- en: 'Let’s walk through how to do this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细介绍如何做到这一点：
- en: In the Services dropdown menu in the main AWS dashboard, search for or click
    Route53.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AWS主仪表板的服务下拉菜单中搜索或点击Route53。
- en: Click Hosted Zones.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击托管区域。
- en: Click Create Hosted Zone.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建托管区域。
- en: Set the domain name by adding the URL to the Domain name input field, then click
    Create.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过向域名输入字段添加URL来设置域名，然后点击创建。
- en: 'After creating the Hosted Zone, you will be given four nameserver values. You
    will need those values in the next step, so keep them handy. You can also navigate
    back to them at any time by visiting the Route53 dashboard and clicking on the
    domain you would like to retrieve the values for. The nameservers will look something
    like this:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 创建托管区域后，您将获得四个名称服务器值。在下一步中您将需要这些值，所以请将它们保持方便。您也可以随时通过访问Route53仪表板并点击您想要检索值的域名来返回到它们。名称服务器看起来可能是这样的：
- en: '[PRE16]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Now, go into your hosting account (e.g., GoDaddy or Google Domains), and set
    these custom nameservers in your DNS setting for the domain you’re using.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，进入您的托管账户（例如GoDaddy或Google Domains），并在您正在使用的域名的DNS设置中设置这些自定义名称服务器。
- en: Next, back in the Amplify Console for the app for which you would like to enable
    a custom domain, click Domain Management in the left menu, then click the Add
    Domain button.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在您想要启用自定义域名的应用的Amplify控制台中，点击左侧菜单中的域名管理，然后点击添加域名按钮。
- en: Here, the drop-down menu should show you the domain you have in Route53\. Choose
    this domain and click Configure domain.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，下拉菜单应该显示您在Route53中拥有的域名。选择这个域名，然后点击配置域名。
- en: This should deploy the app to your custom domain (it will take 5–30 minutes
    for the DNS to propagate).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这将部署应用到您的自定义域名（DNS传播需要5至30分钟）。
- en: Summary
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'Here are a few things to keep in mind from this chapter:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要记住的几点内容：
- en: The Amplify Console hosts both backend and as well as frontend deployments.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Amplify控制台同时托管后端和前端部署。
- en: There are two main ways to deploy the frontend to the Amplify Console, from
    your local project or from a Git repository. You can also upload projects manually
    or host them from Dropbox.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将前端部署到Amplify控制台有两种主要方法，可以从您的本地项目或从Git存储库进行。您还可以手动上传项目或从Dropbox托管它们。
- en: Once your app is hosted, you can then set up things like password protection,
    custom domains, and branch deployments by configuring your deployment in the Amplify
    Console.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦您的应用程序被托管，您可以通过在Amplify控制台中配置部署来设置诸如密码保护、自定义域名和分支部署等功能。
