["```\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\nxmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"600\">\n  <script type=\"text/ecmascript\">\n    <![CDATA[\n\n      // set element onclick event handler\n      window.onload = function() {\n        const square = document.getElementById('square');\n\n        // onclick event handler, change circle radius\n        square.onclick = function click() {\n          const color = this.getAttribute('fill');\n          if (color === '#ff0000') {\n            this.setAttribute('fill', '#0000ff');\n          } else {\n            this.setAttribute('fill', '#ff0000');\n          }\n        };\n      };\n    ]]>\n  </script>\n  <rect id=\"square\" width=\"400\" height=\"400\" fill=\"#ff0000\"\n   x=\"10\" y=\"10\" />\n</svg>\n```", "```\n<!DOCTYPE html>\n<html>\n<head>\n<title>Accessing Inline SVG</title>\n<meta charset=\"utf-8\">\n</head>\n<body>\n<svg width=\"600\" height=\"600\">\n  <script>\n    // set element onclick event handler\n    window.onload = function() {\n      const square = document.getElementById('square');\n\n      // onclick event handler, change circle radius\n      square.onclick = function click() {\n        const color = this.getAttribute('fill');\n        if (color === '#ff0000') {\n          this.setAttribute('fill', '#0000ff');\n        } else {\n          this.setAttribute('fill', '#ff0000');\n        }\n      };\n    };\n  </script>\n  <rect id=\"square\" width=\"400\" height=\"400\" fill=\"#ff0000\"\n x=\"10\" y=\"10\" />\n</svg>\n</body>\n</html>\n```", "```\n<object type=\"image/svg+xml\" data=\"demo.svg\">\n    <img src=\"demo.svg\" />\n</object>\n```", "```\n// Creates canvas 320 Ã— 400 at 10, 50\nconst paper = Raphael(10, 50, 320, 400);\n// Creates circle at x = 150, y = 140, with radius 100\nconst circle = paper.circle(150, 140, 100);\n// Sets the fill attribute of the circle to red (#f00)\ncircle.attr(\"fill\", \"#f0f\");\n// Sets the stroke attribute of the circle to white\ncircle.attr(\"stroke\", \"#ff0\");\n```", "```\nconst square = document.getElementById(\"square\");\nsquare.setAttribute(\"width\", \"500\");\n```", "```\nwindow.onload = function onLoad() {\n  const object = document.getElementById('object');\n  let svgdoc;\n\n  try {\n    svgdoc = object.contentDocument;\n  } catch (e) {\n    try {\n      svgdoc = object.getSVGDocument();\n    } catch (err) {\n      console.log(err, 'SVG in object not supported in this environment');\n    }\n  }\n\n  if (!svgdoc) return;\n\n  const square = svgdoc.getElementById('square');\n  square.setAttribute('width', '900');\n};\n```", "```\n<!DOCTYPE html>\n<head>\n  <title>SVG in Object</title>\n  <meta charset=\"utf-8\" />\n</head>\n<body>\n  <object id=\"object\" type=\"image/svg+xml\" data=\"../demo1.svg\">\n    <p>No SVG support</p>\n  </object>\n  <script type=\"text/javascript\">\n    const object = document.getElementById('object');\n    object.onload = function() {\n      let svgdoc;\n\n      // get access to the SVG document object\n      try {\n        svgdoc = object.contentDocument;\n      } catch (e) {\n        try {\n          svgdoc = object.getSVGDocument();\n        } catch (err) {\n          console.log(err, 'SVG in object not supported in this environment');\n        }\n      }\n\n      if (!svgdoc) return;\n\n      // get SVG element and modify\n      const square = svgdoc.getElementById('square');\n      square.onclick = function() {\n        let width = parseFloat(square.getAttribute('width'));\n        width -= 50;\n        square.setAttribute('width', width);\n        const color = square.getAttribute('fill');\n        if (color == 'blue') {\n          square.setAttribute('fill', 'yellow');\n          square.setAttribute('stroke', 'green');\n        } else {\n          square.setAttribute('fill', 'blue');\n          square.setAttribute('stroke', 'red');\n        }\n      };\n    };\n  </script>\n</body>\n```", "```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>SVG Bar Chart using D3</title>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3/5.15.0/d3.min.js\"></script>\n  </head>\n  <body>\n    <script type=\"text/javascript\">\n      const data = [56, 99, 14, 12, 46, 33, 22, 100, 87, 6, 55, 44, 27, 28, 34];\n\n      const height = 400;\n      const barWidth = 25;\n\n      const x = d3\n        .scaleLinear()\n        .domain([0, d3.max(data)])\n        .range([0, height]);\n\n      const svg = d3\n        .select('body')\n        .append('svg')\n        .attr('width', data.length * (barWidth + 1))\n        .attr('height', height);\n\n      svg\n        .selectAll('rect')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('fill', '#008b8b')\n        .attr('x', function(d, i) {\n          return i * (barWidth + 1);\n        })\n        .attr('y', function(d) {\n          return height - x(d);\n        })\n        .attr('width', barWidth)\n        .attr('height', x);\n    </script>\n  </body>\n</html>\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>Integrating SVG and the Canvas Element in HTML</title>\n  </head>\n  <body>\n    <canvas id=\"myCanvas\" width=\"400px\" height=\"100px\">\n      <p>canvas item alternative content</p>\n    </canvas>\n\n    <svg id=\"svgelem\" height=\"400\">\n      <title>SVG Circle</title>\n      <script type=\"text/javascript\">\n      window.onload = function () {\n        var context = document.getElementById(\"myCanvas\").getContext('2d');\n        context.fillStyle = 'rgba(0,200,0,0.7)';\n        context.fillRect(0,0,100,100);\n      }\n      </script>\n      <circle id=\"redcircle\" cx=\"100\" cy=\"100\" r=\"100\" fill=\"red\" stroke=\"#000\" />\n    </svg>\n  </body>\n</html>\n```", "```\n<!DOCTYPE html>\n<html>\n<head>\n<title>Accessing Inline SVG</title>\n<meta charset=\"utf-8\">\n</head>\n<body>\n<svg id=\"svgelem\" height=\"400\" width=\"600\">\n   <script type=\"text/javascript\">\n      window.onload = function () {\n         var context2 = document.getElementById(\"thisCanvas\").getContext('2d');\n\n         context2.fillStyle = \"#ff0000\";\n         context2.fillRect(0,0,200,200);\n       };\n   </script>\n\n   <foreignObject width=\"300\" height=\"150\">\n      <canvas width=\"300\" height=\"150\" id=\"thisCanvas\">\n         alternate content for browsers that do not support Canvas\n      </canvas>\n   </foreignObject>\n   <circle id=\"redcircle\" cx=\"300\" cy=\"100\" r=\"100\" fill=\"red\" stroke=\"#000\" />\n  </svg>\n</body>\n</html>\n```", "```\n<audio id=\"meadow\" controls>\n  <source src=\"meadow.wav\" type=\"audio/wav\" />\n  <p><a href=\"meadow.wav\">Meadow sounds</a></p>\n</audio>\n```", "```\nconst meadow = document.getElementById('meadow');\nmeadow.addEventListener('play', aboutAudio);\n```", "```\nfunction aboutAudio() {\n  const info = 'A summer field near a lake in July.';\n  const txt = document.createTextNode(info);\n  const div = document.createElement('div');\n  div.appendChild(txt);\n  document.body.appendChild(div);\n}\n```", "```\n<audio id=\"meadow\" src=\"meadow.wav\" controls onended=\"alert('All done')\">\n  <p><a href=\"meadow.wav\">Meadow sounds</a></p>\n</audio>\n```", "```\n<video id=\"meadow\" poster=\"purples.jpg\" >\n   <source src=\"meadow.m4v\" type=\"video/mp4\"/>\n   <source src=\"meadow.ogv\" type=\"video/ogg\" />\n</video>\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>Controlling Video from JavaScript with the video Element</title>\n    <style>\n      video {\n        border: 1px solid black;\n        max-width: 600px;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>Controlling Video from JavaScript with the video Element</h1>\n\n    <video id=\"meadow\" controls>\n      <source src=\"meadow.mp4\" type=\"video/mp4\" />\n      <source src=\"meadow.webm\" type=\"video/webm\" />\n    </video>\n    <div id=\"feedback\"></div>\n    <div id=\"controls\">\n      <button id=\"start\">Play</button>\n      <button id=\"stop\">Stop</button>\n      <button id=\"pause\">Pause</button>\n    </div>\n\n    <script src=\"video.js\"></script>\n  </body>\n</html>\n```", "```\n// dom elements\nconst meadow = document.getElementById('meadow');\nconst start = document.getElementById('start');\nconst pause = document.getElementById('pause');\nconst stop = document.getElementById('stop');\n\n// start video, enable stop and pause\n// disable play\nfunction startPlayback() {\n  meadow.play();\n  pause.disabled = false;\n  stop.disabled = false;\n  this.disabled = true;\n}\n\n// pause video, enable start, disable stop\n// disable pause\nfunction pausePlayback() {\n  meadow.pause();\n  pause.disabled = true;\n  start.disabled = false;\n  stop.disabled = true;\n}\n\n// stop video, return to zero time\n// enable play, disable pause and stop\nfunction stopPlayback() {\n  meadow.pause();\n  meadow.currentTime = 0;\n  start.disabled = false;\n  pause.disabled = true;\n  this.disabled = true;\n}\n\n// for every time divisible by 5, output feedback\nfunction reportProgress() {\n  const time = Math.round(this.currentTime);\n  const div = document.getElementById('feedback');\n  div.innerHTML = `${time} seconds`;\n}\n\n// event listeners\ndocument.getElementById('start').addEventListener('click', startPlayback);\ndocument.getElementById('stop').addEventListener('click', stopPlayback);\ndocument.getElementById('pause').addEventListener('click', pausePlayback);\nmeadow.addEventListener('timeupdate', reportProgress);\n```"]