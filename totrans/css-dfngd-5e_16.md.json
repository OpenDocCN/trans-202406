["```\nol li {list-style-type: decimal;}\nli.off {list-style-type: none;}\n```", "```\n<ol>\n<li>Item the first\n<li class=\"off\">Item the second\n<li>Item the third\n<li class=\"off\">Item the fourth\n<li>Item the fifth\n</ol>\n```", "```\nul {list-style-type: disc;}\nul ul {list-style-type: circle;}\nul ul ul {list-style-type: square;}\n```", "```\n.list01 {list-style-type: \"%\";}\n.list02 {list-style-type: \"Hi! \";}\n.list03 {list-style-type: \"†\";}\n.list04 {list-style-type: \"⌘\";}\n.list05 {list-style-type: \"\";}\n\n```", "```\nul li {list-style-image: url(ohio.gif);}\n```", "```\nul li {list-style-image: url(big-ohio.gif);}\n```", "```\nul li {list-style-image: url(ohio.png); list-style-type: square;}\n```", "```\nul {list-style-image: url(ohio.gif); list-style-type: square;}\nul ul {list-style-image: none;}\n```", "```\n.list01 {list-style-image:\n    radial-gradient(closest-side,\n        orange, orange 60%, blue 60%, blue 95%, transparent);}\n.list02 {list-style-image:\n    linear-gradient(45deg, red, red 50%, orange 50%, orange);}\n.list03 {list-style-image:\n    repeating-linear-gradient(-45deg, red, red 1px, yellow 1px, yellow 3px);}\n.list04 {list-style-image:\n    radial-gradient(farthest-side at bottom right,\n        lightblue, lightblue 50%, violet, indigo, blue, green,\n        yellow, orange, red, lightblue);}\n```", "```\nli.first {list-style-position: inside;}\nli.second {list-style-position: outside;}\n```", "```\nli {list-style: url(ohio.gif) square inside;}\n```", "```\nli.norm {list-style: url(img42.gif);}\nli.odd {list-style: url(img42.gif) disc outside;} /* the same thing */\n```", "```\nli {list-style-type: square;}\nli {list-style: url(img42.gif);}\nli {list-style: url(img42.gif) disc outside;} /* the same thing */\n```", "```\nul, ol {margin-inline-start: 40px;}\n```", "```\nul, ol {padding-inline-start: 40px;}\n```", "```\nul {margin-inline-start: 0; padding-inline-start: 1em;}\n```", "```\nul {margin-inline-start: 1em; padding-inline-start: 0;}\n```", "```\nli:nth-child(1)::marker {color: gray;}\nli:nth-child(2)::marker {font-size: 2em;}\nli:nth-child(3)::marker {font-style: italic;}\n```", "```\n<ol>\n\t<li>List item the first</li>\n\t<li>The second list item</li>\n\t<li>List Items With a Vengeance</li>\n</ol>\n\n<ul>\n\t<li>List item the first</li>\n\t<li>The second list item</li>\n\t<li>List Items With a Vengeance</li>\n</ul>\n```", "```\n@media print{\n\ta[href]::before {content: \"(link)\";}\n}\n```", "```\na[href]::before {content: \"(link) \";}\n```", "```\na.pdf-doc::after {content: url(pdf-doc-icon.gif);}\n```", "```\na.pdf-doc {border: 1px solid gray;}\n```", "```\n<<generated-content-icons>> shows the result of these two rules.\n```", "```\nem::after {content: \" (!) \"; display: block;}\n```", "```\nh1::before {content: \"New Section\"; display: block; color: gray;}\n```", "```\np {color: green;}\np::before {content: \"::: \";}\n```", "```\np::before {content: \"::: \"; color: purple;}\n```", "```\nh1 {border-top: 3px solid black; padding-top: 0.25em;}\nh1::before {content: \"New Section\"; display: block; color: gray;\n  border-bottom: 1px dotted black; margin-bottom: 0.5em;}\n```", "```\nh1 {border-top: 3px solid black; padding-top: 0.25em;}\nh1::before {content: \"New Section\"; display: inline; color: gray;\n  border-bottom: 1px dotted black; margin-bottom: 0.5em;}\n```", "```\nh2::before {content: \"<em>&para;</em> \"; color: gray;}\n```", "```\nh2::before {content: \"We insert this text before all H2 elements because \\\nit is a good idea to show how these things work. It may be a bit long \\\nbut the point should be clearly made.  \"; color: gray;}\n```", "```\na[href]::after {content: attr(href);}\n```", "```\na[href]::after {content: \" [\" attr(href) \"]\";}\n```", "```\nblockquote::after {content: \"(\" attr(cite) \")\"; display: block;\n  text-align: right; font-style: italic;}\n```", "```\nbody::before {\n  content: \"Text: \" attr(text) \" | Link: \" attr(link)\n  \" | Visited: \" attr(vlink) \" | Active: \" attr(alink);\n  display: block; padding: 0.33em;\n  border: 1px solid; text-align: center; color: red;}\n```", "```\nquotes: '\"' \"'\";  /* valid */\nquotes: '\"';  /* NOT VALID */\n```", "```\n<quotation>\n  <quote>I hate quotations.</quote>\n  <quotee>Ralph Waldo Emerson</quotee>\n</quotation>\n```", "```\nquotation {display: block;}\nquote {quotes: '“' '”';}\nquote::before {content: open-quote;}\nquote::after {content: close-quote;}\nquotee::before {content: \" (\";}\nquotee::after {content: \")\";}\n```", "```\nquotation: display: block;}\nquote {quotes: '\\201C' '\\201D' '\\2018' '\\2019';}\nquote::before, q::before{content: open-quote;}\nquote::after, q::after {content: close-quote;}\n```", "```\n<quotation>\n <quote> In the beginning, there was nothing. And God said: <q>Let there\n  be light!</q> And there was still nothing, but you could see it.</quote>\n</quotation>\n```", "```\nquote {quotes: '\\201C' '\\201D';}\n```", "```\nblockquote {quotes: '\"' '\"' \"'\" \"'\" '\"' '\"';}\nblockquote p::before {content: open-quote;}\nblockquote p::after {content: no-close-quote;}\nblockquote p:last-of-type::after {content: close-quote;}\n```", "```\nh1 {counter-reset: chapter;}\n```", "```\nh1#ch4 {counter-reset: chapter 4;}\n```", "```\nh1 {counter-reset: chapter 4 section -1 subsec figure 1;}\n   /* 'subsec' is reset to 0 */\n```", "```\nol {counter-reset: ordered;}  /* defaults to 0 */\nol li {counter-increment: ordered;}  /* defaults to 1 */\n```", "```\nol {counter-reset: ordered;}  /* defaults to 0 */\nol li {counter-increment: ordered -1;}\n```", "```\n<list type=\"ordered\">\n <item>First item</item>\n <item>Item two</item>\n <item>The third item</item>\n</list>\n```", "```\nlist[type=\"ordered\"] {counter-reset: ordered;}  /* defaults to 0 */\nlist[type=\"ordered\"] item {display: block;}\nlist[type=\"ordered\"] item::before {counter-increment: ordered;\n     content: counter(ordered) \". \"; margin: 0.25em 0;}\n```", "```\nh1 {counter-reset: section subsec;\n    counter-increment: chapter;}\nh1::before {content: counter(chapter) \". \";}\nh2 {counter-reset: subsec;\n    counter-increment: section;}\nh2::before {content: counter(chapter )\".\" counter(section) \". \";}\nh3 {counter-increment: subsec;}\nh3::before {content: counter(chapter) \".\" counter(section) \".\"\n        counter(subsec) \". \";}\n```", "```\nh1::before, h2::before, h3::before {\n  content: counter(chapter) \".\" counter(section) \".\" counter(subsec) \". \";}\nh1 {counter-reset: section subsec;\n  counter-increment: chapter;}\n```", "```\nbody {counter-reset: chapter -1;}\nh1::before {counter-increment: chapter; content: counter(chapter) \". \";}\n```", "```\n<code type=\"BASIC\">\n  <line>PRINT \"Hello world!\"</line>\n  <line>REM This is what the kids are calling a \"comment\"</line>\n  <line>GOTO 10</line>\n</code>\n```", "```\ncode[type=\"BASIC\"] {counter-reset: linenum; font-family: monospace;}\ncode[type=\"BASIC\"] line {display: block;}\ncode[type=\"BASIC\"] line::before {counter-increment: linenum 10;\n  content: counter(linenum) \": \";}\n```", "```\nh1 {counter-reset: section subsec;\n    counter-increment: chapter;}\nh1::before {content: counter(chapter,upper-alpha) \". \";}\nh2 {counter-reset: subsec;\n    counter-increment: section;}\nh2::before {content: counter(chapter,upper-alpha)\".\" counter(section) \". \";}\nh3 {counter-increment: subsec;}\nh3::before {content: counter(chapter,upper-alpha) \".\" counter(section) \".\"\n        counter(subsec,lower-roman) \". \";}\n```", "```\n.suppress {counter-increment: cntr; display: none;}\n  /* 'cntr' is NOT incremented */\n.invisible {counter-increment: cntr; visibility: hidden;}\n  /* 'cntr' IS incremented */\n```", "```\nol ol ol ol ol li::before {\n    counter-increment: ord1 ord2 ord3 ord4 ord5;\n    content: counter(ord1) \".\" counter(ord2) \".\" counter(ord3) \".\"\n        counter(ord4) \".\" counter(ord5) \".\";}\n```", "```\nol {counter-reset: ordered;}\nol li::before {counter-increment: ordered; content: counter(ordered) \". \";}\n```", "```\nol {counter-reset: ordered; list-style: none;}\nol li:before {content: counters(ordered,\".\") \": \"; counter-increment: ordered;}\n```", "```\nol li::before {counter-increment: ordered;\n    content: counters(ordered,\".\",lower-alpha) \": \";}\n```", "```\n@counter-style <*`name`*> {\n    …declarations…\n}\n\n```", "```\n@counter-style triangles {\n    system: cyclic;\n    symbols: ▶ ▷;\n}\nol {list-style: triangles;}\n```", "```\n@counter-style emoji {\n    system: fixed;\n    symbols:     ;\n}\nol.emoji {list-style: emoji;}\n\n```", "```\n@counter-style emoji {\n    system: fixed;\n    symbols: # $ % \">\";\n}\n```", "```\n@counter-style emoji {\n    system: fixed 5;\n    symbols:     ;\n}\nul.emoji {list-style: emoji;}\n\n```", "```\n@counter-style emojiverse {\n    system: cyclic;\n    symbols:     ;\n}\n\nul.emoji {list-style: emojiverse;}\n\n```", "```\n@counter-style thinker {\n    system: cyclic;\n    symbols: ;\n    /* equivalent to list-style-type: ; */\n}\n\nul.hmmm {list-style: thinker;}\n\n```", "```\n@counter-style wingthinker {\n    system: cyclic;\n    symbols: ;\n    prefix: \"~\";\n    suffix: \" ~\";\n}\n\nul.hmmm {list-style: wingthinker;}\n\n```", "```\n@counter-style thisisfine {\n    system: cyclic;\n    symbols:   ;\n    suffix: \"\";\n}\n\n```", "```\n@counter-style thisisfine {\n    system: cyclic;\n    symbols:   ;\n    prefix: \"\";\n    suffix: \"\";\n}\n\n```", "```\n@counter-style klingon-letters {\n    system: cyclic;\n    symbols: url(i/klingon-a.svg) url(i/klingon-b.svg)\n        url(i/klingon-ch.svg) url(i/klingon-d.svg)\n        url(i/klingon-e.svg) url(i/klingon-gh.svg);\n    suffix: url(i/klingon-full-stop.svg);\n}\n```", "```\n@counter-style footnotes {\n    system: symbolic;\n    symbols: \"*\" \"†\" \"§\";\n    suffix: ' ';\n}\n@counter-style letters {\n    system: symbolic;\n    symbols: A B C D E;\n}\n```", "```\n@counter-style letters {\n    system: symbolic;\n    symbols: A B C D E;\n    range: 1 15;\n}\n```", "```\n@counter-style letters {\n    system: symbolic;\n    symbols: A B C D E;\n    range: 1 15, 101 115;\n}\n```", "```\n@counter-style letters {\n    system: symbolic;\n    symbols: A B C D E;\n    range: 1 15, 101 115;\n    fallback: hebrew;\n}\n```", "```\n@counter-style letters {\n    system: alphabetic;\n    symbols: A B C D E;\n    /* once more cut off at 'E' to show the pattern’s effects more quickly */\n}\n```", "```\n@counter-style decimal {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n}\n```", "```\n@counter-style hexadecimal {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 'A' 'B' 'C' 'D' 'E' 'F';\n}\n```", "```\n@counter-style binary {\n    system: numeric;\n    symbols: '0' '1';\n}\n```", "```\n@counter-style accounting {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n    negative: \"(\" \")\";\n    prefix: \"$\";\n    suffix: \" - \";\n}\nol.kaching {list-style: accounting;}\n```", "```\n<ol start=\"-3\">\n…\n</ol>\n```", "```\n@counter-style padded {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n    suffix: '.';\n    pad: 4 \"0\";\n}\n\nol {list-style: decimal;}\nol.padded {list-style: padded;}\n```", "```\n@counter-style crazy {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n    suffix: '.';\n    pad: 7 \" \";\n}\n\nol {list-style: decimal;}\nol.padded {list-style: padded;}\n\n```", "```\n@counter-style negativezeropad {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n    suffix: '. ';\n    negative: '–';\n    pad: 4 \"0\";\n}\n@counter-style negativespacepad {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n    suffix: '. ';\n    negative: '–';\n    pad: 4 \" \";\n}\n```", "```\n@counter-style roman {\n    system: additive;\n    additive-symbols:\n        1000 M, 900 CM, 500 D, 400 CD,\n        100 C, 90 XC, 50 L, 40 XL,\n        10 X, 9 IX, 5 V, 4 IV, 1 I;\n}\n```", "```\n@counter-style dice {\n    system: additive;\n    additive-symbols: 6 ⚅, 5 ⚄, 4 ⚃, 3 ⚂, 2 ⚁, 1 ⚀, 0 \"__\";\n    suffix: \" \";\n}\n```", "```\n@counter-style problem {\n    system: additive;\n    additive-symbols: 3 \"Y\", 2 \"X\";\n    fallback: decimal;\n}\n```", "```\n@counter-style mydecimals {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n    suffix: \") \";\n    pad: 2 \"0\";\n}\n```", "```\n@counter-style mydecimals {\n    system: extends decimal;\n    suffix: \") \";\n    pad: 2 \"0\";\n}\n```", "```\n@counter-style hexadecimal {\n    system: numeric;\n    symbols: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 'A' 'B' 'C' 'D' 'E' 'F';\n}\n@counter-style hexpad {\n    system: extends hexadecimal;\n    pad: 2 \"0\";\n}\n@counter-style hexcolon {\n    system: extends hexadecimal;\n    suffix: \": \";\n}\n@counter-style hexcolonlimited {\n    system: extends hexcolon;\n    range: 1 255; /* stops at FF */\n}\n```", "```\n@counter-style dice {\n    system: additive;\n    speak-as: decimal;\n    additive-symbols: 6 ⚅, 5 ⚄, 4 ⚃, 3 ⚂, 2 ⚁, 1 ⚀;\n    suffix: \" \";\n}\n```", "```\n@counter-style emojilist {\n    emojiverse {\n    system: cyclic;\n    symbols: ;\n@counter-style emojibrackets {\n    system: extends emojilist;\n    suffix: \"]] \";\n    speak-as: auto;\n}\n\n```"]