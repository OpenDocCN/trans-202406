- en: Part I. Foundational Patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Foundational patterns* describe a number of fundamental principles that containerized
    applications must comply with in order to become good cloud-native citizens. Adhering
    to these principles will help ensure that your applications are suitable for automation
    in cloud-native platforms such as Kubernetes.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The patterns described in the following chapters represent the foundational
    building blocks of distributed container-based Kubernetes-native applications:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2, “Predictable Demands”](ch02.html#PredictableDemands), explains
    why every container should declare its resource requirements and stay confined
    to the indicated resource boundaries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 3, “Declarative Deployment”](ch03.html#DeclarativeDeployment), describes
    the different application deployment strategies that can be expressed in a declarative
    way.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 4, “Health Probe”](ch04.html#HealthProbe), dictates that every container
    should implement specific APIs to help the platform observe and maintain the application
    healthily.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 5, “Managed Lifecycle”](ch05.html#ManagedLifecycle), explains why
    a container should have a way to read the events coming from the platform and
    conform by reacting to those events.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 6, “Automated Placement”](ch06.html#AutomatedPlacement), introduces
    the Kubernetes scheduling algorithm and the ways to influence the placement decisions
    from the outside.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
