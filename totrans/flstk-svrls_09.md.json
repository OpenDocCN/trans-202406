["```\nStrings: eq | ne | le | lt | ge | gt | contains | notContains | beginsWith\n            | between\nNumbers: eq | ne | le | lt | ge | gt | between\nLists: contains | notContains\n```", "```\nconst messages = await DataStore\n  .query(Message, m =>\nm.title('contains', 'Hello'))\n```", "```\nconst message = await DataStore\n  .query(Message, m => m.title('contains', 'Hello').sender('eq', 'Chris'))\n```", "```\n~ npx create-react-app rtmessageboard\n~ cd rtmessageboard\n```", "```\n~ npm install @aws-amplify/core @aws-amplify/datastore antd react-color\n```", "```\n~ amplify init\n\n# Follow the steps to give the project a name, environment name, and set the\n  default text editor.\n# Accept defaults for everything else and choose your AWS Profile.\n```", "```\n~ amplify add api\n\n? Please select from one of the below mentioned services: GraphQL\n? Provide API name: rtmessageboard\n? Choose the default authorization type for the API: API key\n? Enter a description for the API key: public\n? After how many days from now the API key should expire (1-365): 365 (or your\n  preferred expiration)\n? Do you want to configure advanced settings for the GraphQL API: Yes\n? Configure additional auth types: N\n? Configure conflict detection: Y\n? Select the default resolution strategy: Auto Merge\n? Do you have an annotated GraphQL schema: N\n? Do you want a guided schema creation: Y\n? What best describes your project: Single object with fields\n? Do you want to edit the schema now: Y\n```", "```\ntype Message @model {\n  id: ID!\n  title: String!\n  color: String\n  image: String\n  createdAt: String\n}\n```", "```\n~ amplify codegen models\n```", "```\n~ amplify push --y\n```", "```\nimport 'antd/dist/antd.css'\nimport Amplify from '@aws-amplify/core'\nimport config from './aws-exports'\nAmplify.configure(config)\n```", "```\n/* src/App.js */\nimport React, { useState, useEffect } from 'react'\nimport { SketchPicker } from 'react-color'\nimport { Input, Button } from 'antd'\nimport { DataStore } from '@aws-amplify/datastore'\nimport { Message} from './models'\n\nconst initialState = { color: '#000000', title: '' }\nfunction App() {\n  const [formState, updateFormState] = useState(initialState)\n  const [messages, updateMessages] = useState([])\n  const [showPicker, updateShowPicker] = useState(false)\n  useEffect(() => {\n    fetchMessages()\n    const subscription = DataStore\n      .observe(Message)\n      .subscribe(() => fetchMessages())\n    return () => subscription.unsubscribe()\n  }, [])\n  async function fetchMessages() {\n    const messages = await DataStore.query(Message)\n    updateMessages(messages)\n  }\n  function onChange(e) {\n    if (e.hex) {\n      updateFormState({ ...formState, color: e.hex})\n    } else { updateFormState({ ...formState, [e.target.name]: e.target.value}) }\n  }\n  async function createMessage() {\n    if (!formState.title) return\n    await DataStore.save(new Message({ ...formState }))\n    updateFormState(initialState)\n  }\n  return (\n    <div style={container}>\n      <h1 style={heading}>Real Time Message Board</h1>\n      <Input\n        onChange={onChange}\n        name=\"title\"\n        placeholder=\"Message title\"\n        value={formState.title}\n        style={input}\n      />\n      <div>\n        <Button\n        onClick={() => updateShowPicker(!showPicker)}\n        style={button}\n        >Toggle Color Picker</Button>\n        <p>Color:\n          <span\n           style={{fontWeight: 'bold', color: formState.color}}>{formState.color}\n          </span>\n        </p>\n      </div>\n      {\n        showPicker && (\n          <SketchPicker\n           color={formState.color}\n           onChange={onChange} /\n          >\n        )\n      }\n      <Button type=\"primary\" onClick={createMessage}>Create Message</Button>\n      {\n        messages.map(message => (\n          <div\n            key={message.id}\n            style={{...messageStyle, backgroundColor: message.color}}\n          >\n            <div style={messageBg}>\n              <p style={messageTitle}>{message.title}</p>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nconst container = { width: '100%', padding: 40, maxWidth: 900 }\nconst input = { marginBottom: 10 }\nconst button = { marginBottom: 10 }\nconst heading = { fontWeight: 'normal', fontSize: 40 }\nconst messageBg = { backgroundColor: 'white' }\nconst messageStyle = { padding: '20px', marginTop: 7, borderRadius: 4 }\nconst messageTitle = { margin: 0, padding: 9, fontSize: 20  }\n\nexport default App\n```", "```\n~ npm start\n```", "```\n~ amplify console api\n\n? Please select from one of the below mentioned services: GraphQL\n```"]