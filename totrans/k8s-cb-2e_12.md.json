["```\n$ source <(kubectl completion bash)\n\n```", "```\n$ echo 'source <(kubectl completion bash)' >>~/.bashrc\n\n```", "```\n$ source <(kubectl completion zsh)\n\n```", "```\nautoload -Uz compinit\ncompinit\n\n```", "```\nalias k=kubectl\ncomplete -o default -F __start_kubectl k\n\n```", "```\n$ kubectl create deployment nginx --image nginx:1.25.2 --replicas 4\n\n```", "```\n$ kubectl get pods -Lapp\nNAME                      READY   STATUS    RESTARTS   AGE     APP\nnginx-748c667d99-85zxr    1/1     Running   0          14m     nginx\nnginx-748c667d99-jrhpc    1/1     Running   0          14m     nginx\nnginx-748c667d99-rddww    1/1     Running   0          14m     nginx\nnginx-748c667d99-x6h6h    1/1     Running   0          14m     nginx\n\n```", "```\n$ kubectl expose deployments nginx --port 80\n\n$ kubectl get endpoints\nNAME            ENDPOINTS                                                  AGE\nkubernetes      192.168.49.2:8443                                          3h36m\nnginx           10.244.0.10:80,10.244.0.11:80,10.244.0.13:80 + 1 more...   13m\n\n```", "```\n$ kubectl label pod nginx-748c667d99-85zxr app=notworking --overwrite\n\n```", "```\n$ kubectl get pod nginx-748c667d99-jrhpc \\\n    --template '{{.status.podIP}}' \n10.244.0.11\n\n```", "```\n$ kubectl get pods -Lapp\nNAME                      READY   STATUS    RESTARTS   AGE     APP\nnginx-748c667d99-85zxr    1/1     Running   0          14m     notworking\nnginx-748c667d99-jrhpc    1/1     Running   0          14m     nginx\nnginx-748c667d99-rddww    1/1     Running   0          14m     nginx\nnginx-748c667d99-x6h6h    1/1     Running   0          14m     nginx\nnginx-748c667d99-xfgqp    1/1     Running   0          2m17s   nginx\n\n$ kubectl describe endpoints nginx\nName:         nginx\nNamespace:    default\nLabels:       app=nginx\nAnnotations:  endpoints.kubernetes.io/last-change-trigger-time: 2023-04-13T13...\nSubsets:\n  Addresses:          10.244.0.10,10.244.0.11,10.244.0.13,10.244.0.9\n  NotReadyAddresses:  <none>\n  Ports:\n    Name     Port  Protocol\n    ----     ----  --------\n    <unset>  80    TCP\n\nEvents:  <none>\n\n```", "```\n$ kubectl get svc\nNAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\nnginx           ClusterIP   10.108.44.174   <none>        80/TCP     37m\n\n```", "```\n$ kubectl proxy\nStarting to serve on 127.0.0.1:8001\n\n```", "```\n$ curl http://localhost:8001/api/v1/namespaces/default/services/nginx/proxy/\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n\n```", "```\n$ kubectl run jump --image=nginx\npod/jump created\n\n$ kubectl get po/jump -o json | jq --raw-output .status.qosClass\nBestEffort\n\n```", "```\n$ kubectl get po/jump -o json | jq .status.conditions\n[\n  {\n    \"lastProbeTime\": null,\n    \"lastTransitionTime\": \"2023-04-13T14:00:13Z\",\n    \"status\": \"True\",\n    \"type\": \"Initialized\"\n  },\n  {\n    \"lastProbeTime\": null,\n    \"lastTransitionTime\": \"2023-04-13T14:00:18Z\",\n    \"status\": \"True\",\n    \"type\": \"Ready\"\n  },\n  {\n    \"lastProbeTime\": null,\n    \"lastTransitionTime\": \"2023-04-13T14:00:18Z\",\n    \"status\": \"True\",\n    \"type\": \"ContainersReady\"\n  },\n  {\n    \"lastProbeTime\": null,\n    \"lastTransitionTime\": \"2023-04-13T14:00:13Z\",\n    \"status\": \"True\",\n    \"type\": \"PodScheduled\"\n  }\n]\n\n```", "```\n$ kubectl create deployment wordpress --image wordpress:6.3.1\ndeployment.apps/wordpress created\n\n$ kubectl get deploy/wordpress -o json | jq .metadata.annotations\n{\n  \"deployment.kubernetes.io/revision\": \"1\"\n}\n\n```", "```\n$ kubectl get ep/nginx -o json | jq '.subsets'\n[\n  {\n    \"addresses\": [\n      {\n        \"ip\": \"10.244.0.10\",\n        \"nodeName\": \"minikube\",\n        \"targetRef\": {\n          \"kind\": \"Pod\",\n          \"name\": \"nginx-748c667d99-x6h6h\",\n          \"namespace\": \"default\",\n          \"uid\": \"a0f3118f-32f5-4a65-8094-8e43979f7cec\"\n        }\n      },\n    ...\n    ],\n    \"ports\": [\n      {\n        \"port\": 80,\n        \"protocol\": \"TCP\"\n      }\n    ]\n  }\n]\n\n```", "```\n$ kubectl get pods -o go-template \\\n    --template=\"{{range .items}}{{range .spec.containers}}{{.image}} \\\n          {{end}}{{end}}\"\nfluent/fluentd:v1.16-1   nginx\n\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: unhappy\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nevermind\n  template:\n    metadata:\n      labels:\n        app: nevermind\n    spec:\n      containers:\n      - name: shell\n        image: busybox:1.36\n        command:\n        - \"sh\"\n        - \"-c\"\n        - \"echo I will just print something here and then exit\"\n```", "```\n$ kubectl apply -f unhappy-pod.yaml\ndeployment.apps/unhappy created\n\n$ kubectl get pod -l app=nevermind\nNAME                         READY   STATUS             RESTARTS      AGE\nunhappy-576954b454-xtb2g     0/1     CrashLoopBackOff   2 (21s ago)   42s\n\n$ kubectl describe pod -l app=nevermind\nName:             unhappy-576954b454-xtb2g\nNamespace:        default\nPriority:         0\nService Account:  default\nNode:             minikube/192.168.49.2\nStart Time:       Thu, 13 Apr 2023 22:31:28 +0200\nLabels:           app=nevermind\n                  pod-template-hash=576954b454\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.16\nIPs:\n  IP:           10.244.0.16\nControlled By:  ReplicaSet/unhappy-576954b454\n...\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             False\n  ContainersReady   False\n  PodScheduled      True\nVolumes:\n  kube-api-access-bff5c:\n    Type:                    Projected (a volume that contains injected data...)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exist...\n                             node.kubernetes.io/unreachable:NoExecute op=Exist...\nEvents:\n  Type     Reason     ...   Message\n  ----     ------     ---   -------\n  Normal   Scheduled  ...   Successfully assigned default/unhappy-576954b454-x...\n  Normal   Pulled     ...   Successfully pulled image \"busybox\" in 2.945704376...\n  Normal   Pulled     ...   Successfully pulled image \"busybox\" in 1.075044917...\n  Normal   Pulled     ...   Successfully pulled image \"busybox\" in 1.119703875...\n  Normal   Pulling    ...   Pulling image \"busybox\"\n  Normal   Created    ...   Created container shell\n  Normal   Started    ...   Started container shell\n  Normal   Pulled     ...   Successfully pulled image \"busybox\" in 1.055005126...\n  Warning  BackOff    ...   Back-off restarting failed container shell in pod...\n\n```", "```\n$ kubectl create deployment backend --image=gcr.io/google-samples/hello-app:2.0\ndeployment.apps/backend created\n$ kubectl expose deployment backend --port=80 --target-port=8080\n\n```", "```\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: webserver\n        image: nginx:1.25.2\n        ports:\n        - containerPort: 80\n      initContainers:\n      - name: checkbackend\n        image: busybox:1.36\n        command: ['sh', '-c', 'until nc -w 5 backend.default.svc.cluster.local\n                 80; do echo\n                 \"Waiting for backend to accept connections\"; sleep 3; done; echo\n                 \"Backend is up, ready to launch web server\"']\n```", "```\n$ kubectl apply -f nginx-init-container.yaml\ndeployment.apps/nginx created\n\n$ kubectl get po\nNAME                       READY   STATUS    RESTARTS   AGE\nbackend-8485c64ccb-99jdh   1/1     Running   0          4m33s\nnginx-779d9fcdf6-2ntpn     1/1     Running   0          32s\n\n$ kubectl logs nginx-779d9fcdf6-2ntpn -c checkbackend\nServer:   10.96.0.10\nAddress:  10.96.0.10:53\n\nName: backend.default.svc.cluster.local\nAddress: 10.101.119.67\n\nBackend is up, ready to launch web server\n\n```", "```\n$ mkdir cluster-state-2023-04-13\n\n$ kubectl cluster-info dump --all-namespaces \\\n    --output-directory=cluster-state-2023-04-13\nCluster info dumped to cluster-state-2023-04-13\n\n$ tree ./cluster-state-2023-04-13\n./cluster-state-2023-04-13\n├── default\n│   ├── daemonsets.json\n│   ├── deployments.json\n│   ├── es-598664765b-tpw59\n│   │   └── logs.txt\n│   ├── events.json\n│   ├── fluentd-vw7d9\n│   │   └── logs.txt\n│   ├── jump\n│   │   └── logs.txt\n│   ├── kibana-5847789b45-bm6tn\n│   │   └── logs.txt\n    ...\n├── ingress-nginx\n│   ├── daemonsets.json\n│   ├── deployments.json\n│   ├── events.json\n│   ├── ingress-nginx-admission-create-7qdjp\n│   │   └── logs.txt\n│   ├── ingress-nginx-admission-patch-cv6c6\n│   │   └── logs.txt\n│   ├── ingress-nginx-controller-77669ff58-rqdlq\n│   │   └── logs.txt\n│   ├── pods.json\n│   ├── replicasets.json\n│   ├── replication-controllers.json\n│   └── services.json\n├── kube-node-lease\n│   ├── daemonsets.json\n│   ├── deployments.json\n│   ├── events.json\n│   ├── pods.json\n│   ├── replicasets.json\n│   ├── replication-controllers.json\n│   └── services.json\n├── kube-public\n│   ├── daemonsets.json\n│   ├── deployments.json\n│   ├── events.json\n│   ├── pods.json\n│   ├── replicasets.json\n│   ├── replication-controllers.json\n│   └── services.json\n├── kube-system\n│   ├── coredns-787d4945fb-9k8pn\n│   │   └── logs.txt\n│   ├── daemonsets.json\n│   ├── deployments.json\n│   ├── etcd-minikube\n│   │   └── logs.txt\n│   ├── events.json\n│   ├── kube-apiserver-minikube\n│   │   └── logs.txt\n│   ├── kube-controller-manager-minikube\n│   │   └── logs.txt\n│   ├── kube-proxy-x6zdw\n│   │   └── logs.txt\n│   ├── kube-scheduler-minikube\n│   │   └── logs.txt\n│   ├── pods.json\n│   ├── replicasets.json\n│   ├── replication-controllers.json\n│   ├── services.json\n│   └── storage-provisioner\n│       └── logs.txt\n├── kubernetes-dashboard\n│   ├── daemonsets.json\n│   ├── dashboard-metrics-scraper-5c6664855-sztn5\n│   │   └── logs.txt\n│   ├── deployments.json\n│   ├── events.json\n│   ├── kubernetes-dashboard-55c4cbbc7c-ntjwk\n│   │   └── logs.txt\n│   ├── pods.json\n│   ├── replicasets.json\n│   ├── replication-controllers.json\n│   └── services.json\n└── nodes.json\n\n30 directories, 66 files\n\n```", "```\n$ kubectl drain 123-worker\n\n```"]