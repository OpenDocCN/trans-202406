["```\nyarn add axios\n```", "```\nimport axios from 'axios';\n```", "```\n/**UserProfile.vue */\nimport axios from 'axios';\nimport { ref } from 'vue';\n\nconst user = ref(null);\n\naxios.get('https://api.github.com/users/mayashavin')\n    .then(response => {\n        user.value = response.data;\n    });\n```", "```\n/**UserProfile.vue */\n//...\n\nasync function getUser() {\n    const response = await axios.get(\n        'https://api.github.com/users/mayashavin'\n    );\n    user.value = response.data;\n}\n\ngetUser();\n```", "```\n/**UserProfile.vue */\nimport axios from 'axios';\nimport { ref } from 'vue';\n\nconst user = ref(null);\nconst error = ref(null); ![1](assets/1.png)\n\nasync function getUser() {\n    try { ![2](assets/2.png)\n        const response = await axios.get('https://api.github.com/users/mayashavin');\n\n        user.value = response.data;\n    } catch (error) {\n        error.value = error; ![3](assets/3.png)\n    }\n}\n\ngetUser();\n```", "```\ntype User = {\n  name: string;\n  bio: string;\n  avatar_url: string;\n  twitter_username: string;\n  blog: string;\n  //...\n};\n```", "```\n<div class=\"user-profile\" v-if=\"user\">\n    <img :src=\"user.avatar_url\" alt=\"`${user.name} Avatar`\" width=\"200\"  />\n    <div>\n        <h1>{{ user.name }}</h1>\n        <p>{{ user.bio }}</p>\n        <p>Twitter: {{ user.twitter_username }}</p>\n        <p>Blog: {{ user.blog }}</p>\n    </div>\n</div>\n```", "```\n<template>\n    <div class=\"user-profile\" v-if=\"user\">\n        <!-- ... -->\n    </div>\n</template>\n<script lang=\"ts\" setup>\nimport axios from 'axios';\nimport { ref } from 'vue';\n\ntype User = { /**... */ }\n\nconst user = ref<User | null>(null) ![1](assets/1.png)\nconst error = ref<Error | null>(null)\n\nasync function getUser () {\n    try {\n        const response = await axios.get<User>(\n            \"https://api.github.com/users/mayashavin\"\n        )\n\n        user.value = await response.data ![2](assets/2.png)\n    } catch (err) {\n        error.value = err as Error ![3](assets/3.png)\n    }\n}\n\ngetUser();\n</script>\n```", "```\n<template>\n<div class=\"user-profile\" v-if=\"user\">\n    <!--...-->\n</div>\n<div class=\"error\" v-else-if=\"error\">\n    {{ error.message }}\n</div>\n</template>\n```", "```\n//<script setup> import { onBeforeMount, onMounted, onUpdated } from \"vue\";\n\n//... async function getUser() {\n  try {\n    const response = await axios.get<User>(\n        'https://api.github.com/users/mayashavin'\n    );\n    user.value = response.data;\n\n    console.log('User', user.value.name) ![1](assets/1.png)\n  } catch (err) {\n    error.value = err;\n  }\n}\n\nonBeforeMount(async () => {\n    console.log('created') ![2](assets/2.png)\n    getUser();\n})\n\nonMounted(() => {\n    console.log(\"mounted\"); ![3](assets/3.png)\n});\n\nonUpdated(() => {\n    console.log(\"updated\"); ![4](assets/4.png)\n})\n```", "```\n//... const loading = ref<boolean>(false); ![1](assets/1.png)\n\nasync function getUser() {\n    loading.value = true; ![2](assets/2.png)\n\n    try {\n        const response = await axios.get<User>(\n            \"https://api.github.com/users/mayashavin\"\n        )\n\n        user.value = await response.data\n    } catch (err) {\n        error.value = err as Error\n    } finally {\n        loading.value = false; ![3](assets/3.png)\n    }\n}\n\ngetUser();\n```", "```\n<template>\n    <div v-if=\"loading\">Loading...</div>\n    <div class=\"user-profile\" v-else-if=\"user\">\n        <!--...-->\n    </div>\n    <div class=\"error\" v-else-if=\"error\">\n        {{ error.message }}\n</div>\n</template>\n```", "```\n<template>\n  <slot name=\"loading\" v-if=\"isLoading\">\n    <div class=\"loadin-message\">Loading...</div>\n  </slot>\n  <slot :data=\"data\" v-if=\"data\"></slot>\n  <slot name=\"error\" :error=\"error\" v-if=\"error\">\n    <div class=\"error\">\n      <p>Error: {{ error.message }}</p>\n    </div>\n  </slot>\n</template>\n```", "```\nconst data = ref<Object | undefined>();\nconst error = ref<Error | undefined>();\nconst loading = ref<boolean>(false);\n```", "```\n//...\n\nconst props = defineProps({\n    url: {\n        type: String,\n        required: true,\n    },\n    method: {\n        type: String,\n        default: \"GET\",\n    },\n});\n//...\n```", "```\nasync function fetchData () {\n    try {\n        loading.value = true;\n        const response = await axios(props.url, {\n            method: props.method,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        data.value = response.data;\n    } catch (error) {\n        error.value = error as Error;\n    } finally {\n        loading.value = false;\n    }\n};\n\nfetchData();\n```", "```\n<template>\n    <FetchComponent url=\"https://api.github.com/users/mayashavin\"> ![1](assets/1.png)\n        <template #default=\"defaultProps\"> ![2](assets/2.png)\n            <div class=\"user-profile\"> ![3](assets/3.png)\n                <img\n                    :src=\"(defaultProps.data as User).avatar_url\"\n                    alt=\"`${defaultProps.data.name} Avatar`\"\n                    width=\"200\"\n                />\n                <div>\n                    <h1>{{ (defaultProps.data as User).name }}</h1>\n                    <p>{{ (defaultProps.data as User).bio }}</p>\n                    <p>Twitter: {{(defaultProps.data as User).twitter_username }}</p>\n                    <p>Blog: {{ (defaultProps.data as User).blog }}</p>\n                </div>\n            </div>\n        </template>\n    </FetchComponent>\n</template>\n<script lang=\"ts\" setup> ![4](assets/4.png)\nimport FetchComponent from \"./FetchComponent.vue\";\nimport type { User } from \"../types/User.type\";\n</script>\n```", "```\nlocalStorage.setItem('user', JSON.stringify(user));\n```", "```\nconst user = JSON.parse(localStorage.getItem('user'));\n```", "```\n<script lang=\"ts\">\nimport axios from 'axios';\n\n//...\n\nasync function getUser() {\n    try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user) return user.value = user;\n\n        const response = await axios.get<User>(\n            'https://api.github.com/users/mayashavin'\n        );\n\n        user.value = response.data;\n        localStorage.setItem('user', JSON.stringify(user.value));\n    } catch (error) {\n        error.value = error as Error;\n    }\n}\n\ngetUser();\n</script>\n```"]