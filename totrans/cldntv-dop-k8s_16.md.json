["```\n- id: build-test-image\n  dir: hello-cloudbuild-v2\n  name: gcr.io/cloud-builders/docker\n  entrypoint: bash\n  args:\n    - -c\n    - |\n      docker image build --target build --tag demo:test .\n```", "```\n- id: run-tests\n  dir: hello-cloudbuild-v2\n  name: gcr.io/cloud-builders/docker\n  entrypoint: bash\n  args:\n    - -c\n    - |\n      docker container run demo:test go test\n```", "```\n- id: build-app\n  dir: hello-cloudbuild-v2\n  name: gcr.io/cloud-builders/docker\n  args:\n    - docker\n    - build\n    - --tag\n    - ${_REGION}-docker.pkg.dev/$PROJECT_ID/demo/demo:$COMMIT_SHA\n    - .\n```", "```\n- id: kubeval\n  dir: hello-cloudbuild-v2\n  name: cloudnatived/helm-cloudbuilder\n  entrypoint: bash\n  args:\n    - -c\n    - |\n      helm template ./k8s/demo/ | kubeval\n```", "```\nimages:\n  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/demo/demo:$COMMIT_SHA\n```", "```\ncd hello-cloudbuild-v2\nsed -i *s/Hello/Hola/g* main.go\nsed -i *s/Hello/Hola/g* main_test.go\ngo test\nPASS\nok  \tgithub.com/cloudnativedevops/demo/hello-cloudbuild\t0.011s\ngit commit -am \"Update greeting\"\ngit push\n...\n```", "```\n- id: get-kube-config\n  dir: hello-cloudbuild-v2\n  name: gcr.io/cloud-builders/kubectl\n  env:\n  - CLOUDSDK_CORE_PROJECT=$PROJECT_ID\n  - CLOUDSDK_COMPUTE_REGION=${_REGION}\n  - CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}\n  - KUBECONFIG=/workspace/.kube/config\n  args:\n    - cluster-info\n```", "```\n- id: deploy\n  dir: hello-cloudbuild-v2\n  name: cloudnatived/helm-cloudbuilder\n  env:\n    - KUBECONFIG=/workspace/.kube/config\n  args:\n    - helm\n    - upgrade\n    - --create-namespace\n    - --install\n    - ${TAG_NAME}-demo\n    - --namespace=${TAG_NAME}-demo\n    - --values\n    - k8s/demo/${TAG_NAME}-values.yaml\n    - --set\n    - container.image=${_REGION}-docker.pkg.dev/$PROJECT_ID/demo/demo\n    - --set\n    - container.tag=${COMMIT_SHA}\n    - ./k8s/demo\n```", "```\n`git tag -f staging`\n`git push -f origin refs/tags/staging`\nTotal 0 (delta 0), reused 0 (delta 0) To github.com:domingusj/demo.git\n * [new tag]         staging -> staging\n```", "```\nexport GITHUB_TOKEN=*YOUR_PERSONAL_ACCESS_TOKEN*\nexport GITHUB_USER=*YOUR_GITHUB_USERNAME*\nflux check --pre\nchecking prerequisites\nKubernetes 1.21.4 >=1.19.0-0\nprerequisites checks passed\n...\n```", "```\n`flux bootstrap github \\`\n  `--owner=$GITHUB_USER \\`\n  `--repository=flux-demo \\`\n  `--branch=main \\`\n  `--path=./clusters/demo-cluster \\`\n  `--personal`\nconnecting to github.com ... cloned repository ... all components are healthy\n```", "```\n`git clone git@github.com:_$GITHUB_USER_/flux-demo.git`\n`cd flux-demo`\n`mkdir clusters/demo-cluster/flux-demo`\n`cd clusters/demo-cluster/flux-demo`\n```", "```\n`kubectl create namespace flux-demo -o yaml --dry-run=client > namespace.yaml`\n`kubectl create deployment flux-demo -n flux-demo \\`\n`-o yaml --dry-run=client --image=cloudnatived/demo:hello > deployment.yaml`\n`git add namespace.yaml deployment.yaml`\n`git commit -m \"Create flux-demo Deployment\"`\n`git push`\n```", "```\n`kubectl get pods -n flux-demo`\nNAME                        READY   STATUS    RESTARTS   AGE flux-demo-c77cc8d6f-zfzql   1/1     Running   0          39s\n```"]