- en: Appendix. Answers to Review Questions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 2, “Cluster Setup”
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Create a file with the name `deny-egress-external.yaml` for defining the network
    policy. The network policy needs to set the Pod selector to `app=backend` and
    define the `Egress` policy type. Make sure to allow the port 53 for the protocols
    UDP and TCP. The namespace selector for the egress policy needs to use `{}` to
    select all namespaces:'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-3
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Run the `apply` command to instantiate the network policy object from the YAML
    file:'
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A Pod that does not match the label selection of the network policy can make
    a call to a URL outside of the cluster. In this case, the label assignment is
    `app=frontend`:'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*****   A Pod that does match the label selection of the network policy cannot
    make a call to a URL outside of the cluster. In this case, the label assignment
    is `app=backend`:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'First, see if the Dashboard is already installed. You can check the namespace
    the Dashboard usually creates:'
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If the namespace does not exist, you can assume that the Dashboard has not
    been installed yet. Install it with the following command:'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create the ServiceAccount, ClusterRole, and ClusterRoleBinding. Make sure that
    the ClusterRole only allows listing Deployment objects. The following YAML manifest
    has been saved in the file `dashboard-observer-user.yaml`:'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create the objects with the following command:'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Run the following command to create a token for the ServiceAccount. The option
    `--duration 0s` ensures that the token will never expire. Copy the token that
    was rendered in the console output of the command:'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Run the proxy command and open the link [*http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy*](http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy)
    in a browser:'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Select the “Token” authentication method and paste the token you copied before.
    Sign into the Dashboard. You should see that only Deployment objects are listable
    (see [Figure A-1](#dashboard-deployments)).
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: All other objects will say “There is nothing to display here.” [Figure A-2](#dashboard-pods)
    renders the list of Pods.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![ckss aa01](assets/ckss_aa01.png)'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure A-1\. The Dashboard view of Deployments is allowed
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: '![ckss aa02](assets/ckss_aa02.png)'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Figure A-2\. The Dashboard view of Pods is not permitted
  id: totrans-27
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Download the API server binary with the following command:'
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, download the SHA256 file for the same binary, but a different version.
    The following command downloads the file for version 1.23.1:'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Comparing the binary file with the checksum file results in a failure, as the
    versions do not match:'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]****'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '****# Chapter 3, “Cluster Hardening”'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a private key using the `openssl` executable. Provide an expressive
    file name, such as `jill.key`. The `-subj` option provides the username (CN) and
    the group (O). The following command uses the username `jill` and the group named
    `observer`:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Retrieve the base64-encoded value of the CSR file content with the following
    command. You will need it when creating a the CertificateSigningRequest object
    in the next step:'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令检索CSR文件内容的base64编码值。在下一步创建CertificateSigningRequest对象时将需要它：
- en: '[PRE14]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following script creates a CertificateSigningRequest object:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下脚本创建一个CertificateSigningRequest对象：
- en: '[PRE15]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Use the `certificate approve` command to approve the signing request and export
    the issued certificate:'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`certificate approve`命令批准签名请求并导出已颁发的证书：
- en: '[PRE16]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the user to the kubeconfig file and add the context for the user. The cluster
    name used here is `minikube`. It might be different for your Kubernetes environment:'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将用户添加到kubeconfig文件，并为用户添加上下文。此处使用的集群名称是`minikube`。在您的Kubernetes环境中可能不同：
- en: '[PRE17]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create the Role and RoleBinding. The following imperative commands assign the
    verbs `get`, `list`, and `watch` for Pods, ConfigMaps, and Secrets to the subject
    named `observer` of type `group`. The user `jill` is part of the group:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建角色和角色绑定。以下命令将动词`get`、`list`和`watch`分配给`observer`组的`subject`，类型为组，用于Pods、ConfigMaps和Secrets。用户`jill`是该组的一部分：
- en: '[PRE18]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Switch to the user context:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到用户上下文：
- en: '[PRE19]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'We’ll pick one permitted operation, listing ConfigMap objects. The user is
    authorized to map the call:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们将选择一个允许的操作，列出ConfigMap对象。用户被授权映射此调用：
- en: '[PRE20]'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Listing nodes won’t be authorized. The user does not have the appropriate permissions:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列出节点将不被授权。用户没有适当的权限：
- en: '[PRE21]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Switch back to the admin context:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 切换回管理员上下文：
- en: '[PRE22]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Create the namespace `t23`:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建命名空间`t23`：
- en: '[PRE23]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create the service account `api-call` in the namespace:'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在命名空间中创建服务账户`api-call`：
- en: '[PRE24]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Define a YAML manifest file with the name `pod.yaml`. The contents of the file
    define a Pod that makes an HTTPS GET call to the API server to retrieve the list
    of Services in the `default` namespace:'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用名为`pod.yaml`的YAML清单文件定义Pod。文件内容定义一个Pod，该Pod向API服务器发出HTTPS GET调用，以检索`default`命名空间中的Service列表：
- en: '[PRE25]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Create the Pod with the following command:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令创建Pod：
- en: '[PRE26]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Check the logs of the Pod. The API call is not authorized, as shown in the
    following log output:'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查Pod的日志。API调用未经授权，如下所示的日志输出：
- en: '[PRE27]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Create the YAML manifest in the file `clusterrole.yaml`, as shown in the following:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在名为`clusterrole.yaml`的文件中创建YAML清单，如下所示：
- en: '[PRE28]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Reference the ClusterRole in a RoleBinding defined in the file `rolebinding.yaml`.
    The subject should list the service account `api-call` in the namespace `t23`:'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在名为`rolebinding.yaml`的文件中引用ClusterRole。主体应列出命名空间`t23`中的服务账户`api-call`：
- en: '[PRE29]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Create both objects from the YAML manifests:'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从YAML清单创建这两个对象：
- en: '[PRE30]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The API call running inside of the container should now be authorized and be
    allowed to list the Service objects in the `default` namespace. As shown in the
    following output, the namespace currently hosts at least one Service object, the
    `kubernetes.default` Service:'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 容器内运行的API调用现在应已获得授权，并允许列出`default`命名空间中的Service对象。如下输出所示，该命名空间目前至少托管一个Service对象，即`kubernetes.default`
    Service：
- en: '[PRE31]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Create the token for the service account using the following command:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令为服务账户创建令牌：
- en: '[PRE32]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Change the existing Pod definition by deleting and recreating the live object.
    Add the attribute that disables automounting the token, as shown in the following:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过删除并重新创建实时对象更改现有Pod定义。添加禁用自动挂载令牌的属性，如下所示：
- en: '[PRE33]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The API server will allow the HTTPS request performed with the token of the
    service account to be authenticated and authorized:'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: API服务器将允许使用服务账户令牌执行的HTTPS请求进行身份验证和授权：
- en: '[PRE34]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The solution to this sample exercise requires a lot of manual steps. The following
    commands do not render their output.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解决此示例练习需要很多手动步骤。以下命令不会呈现它们的输出。
- en: 'Open an interactive shell to the control plane node using Vagrant:'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用Vagrant打开控制平面节点的交互式Shell：
- en: '[PRE35]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Upgrade `kubeadm` to version 1.26.1 and apply it:'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将`kubeadm`升级到版本1.26.1并应用：
- en: '[PRE36]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Drain the node, upgrade the kubelet and `kubectl`, restart the kubelet, and
    uncordon the node:'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 排空节点，升级kubelet和`kubectl`，重新启动kubelet，并解封节点：
- en: '[PRE37]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The version of the node should now say v1.26.1\. Exit the node:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点的版本现在应为 v1.26.1。退出节点：
- en: '[PRE38]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Open an interactive shell to the first worker node using Vagrant. Repeat all
    of the following steps for the worker node:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用Vagrant打开第一个工作节点的交互式Shell。重复以下所有步骤以操作工作节点：
- en: '[PRE39]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Upgrade `kubeadm` to version 1.26.1 and apply it to the node:'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将`kubeadm`升级到版本1.26.1并应用到节点：
- en: '[PRE40]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Drain the node, upgrade the kubelet and `kubectl`, restart the kubelet, and
    uncordon the node:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过下列步骤来排空节点、升级kubelet和`kubectl`、重启kubelet并解除节点的限制：
- en: '[PRE41]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The version of the node should now say v1.26.1\. Exit out of the node:'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 节点的版本现在应显示为v1.26.1。退出节点：
- en: '[PRE42]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Chapter 4, “System Hardening”
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章，“系统加固”
- en: 'Shell into the worker node with the following command:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令进入工作节点的Shell：
- en: '[PRE43]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Identify the process exposing port 21\. One way to do this is by using the
    `lsof` command. The command that exposes the port is `vsftpd`:'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确定暴露端口21的进程。一种方法是使用`lsof`命令。暴露端口的命令是`vsftpd`：
- en: '[PRE44]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Alternatively, you could also use the `ss` command, as shown in the following:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，您也可以使用`ss`命令，如下所示：
- en: '[PRE45]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The process `vsftpd` has been started as a service:'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进程`vsftpd`已作为服务启动：
- en: '[PRE46]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Shut down the service and deinstall the package:'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关闭服务并卸载包：
- en: '[PRE47]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Checking on the port, you will see that it is not listed anymore:'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 检查端口时，您将看到它不再列出：
- en: '[PRE48]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Exit out of the node:'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 退出节点：
- en: '[PRE49]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Shell into the worker node with the following command:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令进入工作节点的Shell：
- en: '[PRE50]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Create the AppArmor profile at `/etc/apparmor.d/network-deny` using the command
    `sudo vim /etc/apparmor.d/network-deny`. The contents of the file should look
    as follows:'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用命令`sudo vim /etc/apparmor.d/network-deny`在`/etc/apparmor.d/network-deny`创建AppArmor配置文件。文件内容应如下所示：
- en: '[PRE51]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Enforce the AppArmor profile by running the following command:'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行以下命令强制执行AppArmor配置：
- en: '[PRE52]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'You cannot modify the existing Pod object in order to add the annotation for
    AppArmor. You will need to delete the object first. Write the definition of the
    Pod to a file:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您不能修改现有的Pod对象以添加AppArmor的注释。您需要首先删除对象。将Pod的定义写入文件：
- en: '[PRE53]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Edit the `pod.yaml` file to add the AppArmor annotation. For the relevant annotation,
    use the name of the container `network-call` as part of the key suffix and `localhost/network-deny`
    as the value. The suffix `network-deny` refers to the name of the AppArmor profile.
    The final content could look as follows after a little bit of cleanup:'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编辑`pod.yaml`文件以添加AppArmor注释。对于相关的注释，使用容器名称`network-call`作为键后缀，并使用`localhost/network-deny`作为值。后缀`network-deny`指的是AppArmor配置文件的名称。稍作清理后，最终内容可能如下所示：
- en: '[PRE54]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Create the Pod from the manifest. After a couple of seconds, the Pod should
    transition into the “Running” status:'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从清单中创建Pod。几秒钟后，Pod应该转换为“运行”状态：
- en: '[PRE55]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'AppArmor prevents the Pod from making a network call. You can check the logs
    to verify:'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: AppArmor阻止Pod进行网络调用。您可以检查日志以进行验证：
- en: '[PRE56]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Exit out of the node:'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 退出节点：
- en: '[PRE57]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Shell into the worker node with the following command:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令进入工作节点的Shell：
- en: '[PRE58]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Create the target directory for the seccomp profiles:'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为seccomp配置创建目标目录：
- en: '[PRE59]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Add the file `audit.json` in the directory `/var/lib/kubelet/seccomp/profiles`
    with the following content:'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在目录`/var/lib/kubelet/seccomp/profiles`中添加文件`audit.json`，内容如下：
- en: '[PRE60]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'You cannot modify the existing Pod object in order to add the seccomp configuration
    via the security context. You will need to delete the object first. Write the
    definition of the Pod to a file:'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您不能修改现有的Pod对象以通过安全上下文添加seccomp配置。您需要首先删除对象。将Pod的定义写入文件：
- en: '[PRE61]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Edit the `pod.yaml` file. Point the seccomp profile to the definition. The
    final content could look as follows after a little bit of cleanup:'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编辑`pod.yaml`文件。将seccomp配置指向定义。稍作清理后，最终内容可能如下所示：
- en: '[PRE62]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Create the Pod from the manifest. After a couple of seconds, the Pod should
    transition into the “Running” status:'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从清单中创建Pod。几秒钟后，Pod应该转换为“运行”状态：
- en: '[PRE63]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'You should be able to find log entries for syscalls, e.g., for the `sleep`
    command:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该能够找到系统调用的日志条目，例如`sleep`命令：
- en: '[PRE64]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Exit out of the node:'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 退出节点：
- en: '[PRE65]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'Create the Pod definition in the file `pod.yaml`:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在文件`pod.yaml`中定义Pod：
- en: '[PRE66]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Create the Pod and then check on the status. You will see that the status is
    “SysctlForbidden”:'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建Pod，然后检查状态。您将看到状态为“SysctlForbidden”：
- en: '[PRE67]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'The event log will tell you more about the reasoning:'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 事件日志将告诉您更多的原因：
- en: '[PRE68]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Chapter 5, “Minimize Microservice Vulnerabilities”
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章，“最小化微服务的漏洞”
- en: 'Define the Pod with the security settings in the file `busybox-security-context.yaml`.
    You can find the content of the following YAML manifest:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件`busybox-security-context.yaml`中的安全设置定义Pod。您可以找到以下YAML清单的内容：
- en: '[PRE69]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Create the Pod with the following command:'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令创建Pod：
- en: '[PRE70]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'Shell into the container and create the file. You will find that the file group
    is 2000, as defined by the security context:'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进入容器并创建文件。您会发现，文件组由安全上下文定义为 2000：
- en: '[PRE71]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE71]'
- en: 'Specify the namespace named `audited` in the file `psa-namespace.yaml`. Set
    the PSA label with `baseline` level and the `warn` mode:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件 `psa-namespace.yaml` 中指定名为 `audited` 的命名空间。使用 `baseline` 级别设置 PSA 标签和 `warn`
    模式：
- en: '[PRE72]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE72]'
- en: 'Create the namespace from the YAML manifest:'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从 YAML 清单创建命名空间：
- en: '[PRE73]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'You can produce an error by using the following Pod configuration in the file
    `psa-pod.yaml`. The YAML manifest sets the attribute `hostNetwork: true`, which
    is not allowed for the [`baseline` level](https://oreil.ly/c8JEW):'
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '您可以在文件 `psa-pod.yaml` 中使用以下 Pod 配置产生错误。YAML 清单设置了属性 `hostNetwork: true`，这不允许
    [`baseline` 级别](https://oreil.ly/c8JEW) 使用：'
- en: '[PRE74]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'Creating the Pod renders a warning message. The Pod will have been created
    nevertheless. You can prevent the creation of the Pod by configuring the PSA with
    the `restricted` level:'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建 Pod 会显示警告消息。尽管如此，Pod 已创建。通过配置 PSA 使用 `restricted` 级别可以防止 Pod 的创建：
- en: '[PRE75]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'You can install Gatekeeper with the following command:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下命令安装 Gatekeeper：
- en: '[PRE76]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'The Gatekeeper library describes a ConstraintTemplate for defining [replica
    limits](https://oreil.ly/gyD1-). Inspect the YAML manifest described on the page.
    Apply the manifest with the following command:'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Gatekeeper 库描述了用于定义 [副本限制](https://oreil.ly/gyD1-) 的 ConstraintTemplate。检查页面描述的
    YAML 清单。使用以下命令应用清单：
- en: '[PRE77]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Now, define the Constraint with the YAML manifest in the file named `replica-limits-constraint.yaml`:'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，在名为 `replica-limits-constraint.yaml` 的文件中定义 Constraint 的 YAML 清单：
- en: '[PRE78]'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Create the Constraint with the following command:'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令创建 Constraint：
- en: '[PRE79]'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'You can see that a Deployment can only be created if the provided number of
    replicas falls within the range of the Constraint:'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以看到，只有在提供的副本数目在 Constraint 的范围内时，才能创建 Deployment：
- en: '[PRE80]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'Configure encryption for etcd, as described in [“Encrypting etcd Data”](ch05.xhtml#encrypting-etcd-data).
    Next, create a new Secret with the following imperative command:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 etcd 的加密，如 [“加密 etcd 数据”](ch05.xhtml#encrypting-etcd-data) 中所述。接下来，使用以下命令创建新的
    Secret：
- en: '[PRE81]'
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'You can check the encrypted value of the Secret stored in etcd with the following
    command:'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用以下命令检查存储在 etcd 中的 Secret 的加密值：
- en: '[PRE82]'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Open an interactive shell to the worker node using Vagrant:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Vagrant 打开工作节点的交互式 shell：
- en: '[PRE83]'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Define the RuntimeClass with the following YAML manifest. The contents have
    been stored in the file `runtime-class.yaml`:'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下 YAML 清单定义 RuntimeClass。内容已存储在文件 `runtime-class.yaml` 中：
- en: '[PRE84]'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE84]'
- en: 'Create the RuntimeClass object:'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建 RuntimeClass 对象：
- en: '[PRE85]'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'Assign the name of the RuntimeClass to the Pod using the `spec.runtimeClassName`
    attribute. The nginx Pod has been defined in the file `pod.yaml`:'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 `spec.runtimeClassName` 属性将 RuntimeClass 的名称分配给 Pod。nginx Pod 已在文件 `pod.yaml`
    中定义：
- en: '[PRE86]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE86]'
- en: 'Create the Pod object. The Pod will transition into the status “Running”:'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建 Pod 对象。Pod 将转换为状态“Running”：
- en: '[PRE87]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Exit out of the node:'
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 退出节点：
- en: '[PRE88]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE88]'
- en: Chapter 6, “Supply Chain Security”
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章，“供应链安全”
- en: 'The initial container image built with the provided Dockerfile has a size of
    998MB. You can produce and run the container image with the following commands.
    Run a quick `curl` command to see if the endpoint exposed by the application can
    be reached:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用提供的 Dockerfile 构建的初始容器映像大小为 998MB。您可以使用以下命令生成并运行容器映像。运行快速 `curl` 命令查看应用程序暴露的端点是否可达：
- en: '[PRE89]'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE89]'
- en: 'One of the changes you can make is to avoid using a large base image. You could
    replace it with the `alpine` version of the node base image. Also, avoid pulling
    the `latest` image. Pick the Node.js version you actually want the application
    to run with. The following command uses a Dockerfile with the base image `node:19-alpine`,
    which reduces the container image size to 176MB:'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以进行的更改之一是避免使用大型基础映像。您可以将其替换为 `alpine` 版本的 node 基础映像。还要避免拉取 `latest` 映像。选择您实际希望应用程序运行的
    Node.js 版本。以下命令使用带有基础映像 `node:19-alpine` 的 Dockerfile，将容器映像大小减小到 176MB：
- en: '[PRE90]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'You can install Kyverno using Helm or by pointing to the YAML manifest available
    on the project’s GitHub repository. We’ll use the YAML manifest here:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用 Helm 安装 Kyverno，也可以指向项目 GitHub 仓库中可用的 YAML 清单。我们将在这里使用 YAML 清单：
- en: '[PRE91]'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Set up a YAML manifest file named `restrict-image-registries.yaml`. Add the
    following contents to the file. The manifest represents a ClusterPolicy that only
    allows the use of container images that start with `gcr.io/`. Make sure to assign
    the value `Enforce` to the attribute `spec.validationFailureAction`:'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE92]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Apply the manifest with the following command:'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE93]'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Run the following commands to verify that the policy has become active. Any
    container image definition that doesn’t use the prefix `gcr.io/` will be denied:'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE94]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'Find the SHA256 hash for the image `nginx:1.23.3-alpine` with the search functionality
    of Docker Hub. The [search result](https://oreil.ly/a4o8E) will lead you to the
    tag of the image. On top of the page, you should find the digest `sha256:c1b9fe3c0c015486cf1e4a0ecabe78d05864475e279638e9713eb55f013f907f`.
    Use the digest instead of the tag in the Pod definition. The result is the following
    YAML manifest:'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE95]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE95]'
- en: 'The creation of the Pod should work:'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE96]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE96]'
- en: If you modify the SHA256 hash in any form and try to recreate the Pod, then
    Kubernetes would not allow you to pull the image.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Running Kubesec in a Docker container results in a whole bunch of suggestions,
    as shown in the following output:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE97]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'The fixed-up YAML manifest could look like this:'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE98]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'Executing the `kubectl apply` command against the existing `setup.yaml` manifest
    will create the Pods named `backend`, `loop`, and `logstash` in the namespace
    `r61`:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE99]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE99]'
- en: 'You can check on them with the following command:'
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE100]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE100]'
- en: 'Check the images of each Pod in the namespace `r61` using the `kubectl describe`
    command. The images used are `bmuschko/nodejs-hello-world:1.0.0`, `alpine:3.13.4`,
    and `elastic/logstash:7.13.3`:'
  id: totrans-216
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE101]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'Use the Trivy executable to check vulnerabilities for all images:'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE102]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE102]'
- en: 'If you look closely at the list of vulnerabilities, you will find that all
    images contain issues with “CRITICAL” severity. As a result, delete all Pods:'
  id: totrans-220
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE103]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE103]'
- en: Chapter 7, “Monitoring, Logging, and Runtime Security”
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Shell into the worker node with the following command:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE104]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'Inspect the command and arguments of the running Pod named `malicious`. You
    will see that it tries to append a message to the file `/etc/threat`:'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE105]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE105]'
- en: 'One of Falco’s default rules monitors file operations that try to write to
    the `/etc` directory. You can find a message for every write attempt in standard
    output:'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE106]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'Find the rule that produces the message in `/etc/falco/falco_rules.yaml` by
    searching for the string “etc opened for writing.” The rule looks as follows:'
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE107]'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'Copy the rule to the file `/etc/falco/falco_rules.local.yaml` and modify the
    output definition, as follows:'
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE108]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'Restart the Falco service, and find the changed output in the Falco logs:'
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE109]'
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'Edit the file `/etc/falco/falco.yaml` to change the output channel. Disable
    standard output, enable file output, and point the `file_output` attribute to
    the file `/var/log/falco.log`. The resulting configuration will look like the
    following:'
  id: totrans-235
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE110]'
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE110]'
- en: 'The log file will now append Falco log:'
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE111]'
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'Exit out of the VM:'
  id: totrans-239
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE112]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Create the Pod named `hash` from the `setup.yaml` file. The command running
    in its container appends a hash to a file at `/var/config/hash.txt` in an infinite
    loop:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`setup.yaml`文件创建名为`hash`的Pod。其容器中运行的命令会在`/var/config/hash.txt`路径的文件末尾添加一个哈希值，以无限循环方式执行：
- en: '[PRE113]'
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'To make the container immutable, you will have to add configuration to the
    existing Pod definition. You have to set the root filesystem to read-only access
    and mount a Volume to the path `/var/config` to allow writing to the file named
    `hash.txt`. The resulting YAML manifest could look as follows:'
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要使容器不可变，您需要在现有Pod定义中添加配置。您必须将根文件系统设置为只读访问，并将一个卷挂载到路径`/var/config`以允许向名为`hash.txt`的文件写入。生成的YAML清单可能如下所示：
- en: '[PRE114]'
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'Shell into the control plane node with the following command:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令进入控制平面节点的Shell：
- en: '[PRE115]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Edit the existing audit policy file at `/etc/kubernetes/audit/rules/audit-policy.yaml`.
    Add the rules asked about in the instructions. The content of the final audit
    policy file could look as follows:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 编辑现有的审计策略文件`/etc/kubernetes/audit/rules/audit-policy.yaml`。根据说明添加所需的规则。最终审计策略文件的内容可能如下所示：
- en: '[PRE116]'
  id: totrans-248
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'Configure the API server to consume the audit policy file by editing the file
    `/etc/kubernetes/manifests/kube-apiserver.yaml`. Provide additional options, as
    requested. The relevant configuration needed is as follows:'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过编辑文件`/etc/kubernetes/manifests/kube-apiserver.yaml`，配置API服务器以使用审计策略文件。根据请求提供额外选项。所需的相关配置如下：
- en: '[PRE117]'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'One of the logged resources is a ConfigMap on the `Metadata` level. The following
    command creates an exemplary ConfigMap object:'
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 日志记录的资源之一是`Metadata`级别的ConfigMap。以下命令创建一个示例ConfigMap对象：
- en: '[PRE118]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: 'The audit log file will now contain an entry for the event:'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，审计日志文件将包含此事件的条目：
- en: '[PRE119]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'Exit out of the VM:'
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 退出虚拟机：
- en: '[PRE120]****'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[PRE120]****'
