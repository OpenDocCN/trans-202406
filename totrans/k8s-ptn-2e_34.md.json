["```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: webapp-config\n  annotations:\n    k8spatterns.io/podDeleteSelector: \"app=webapp\"  ![1](assets/1.png)\ndata:\n  message: \"Welcome to Kubernetes Patterns !\"\n```", "```\nnamespace=${WATCH_NAMESPACE:-default}  ![1](assets/1.png)\n\nbase=http://localhost:8001             ![2](assets/2.png)\nns=namespaces/$namespace\n\ncurl -N -s $base/api/v1/${ns}/configmaps?watch=true | \\ while read -r event                    ![3](assets/3.png)\ndo\n   # ... done\n```", "```\nenv:\n - name: WATCH_NAMESPACE\n   valueFrom:\n     fieldRef:\n       fieldPath: metadata.namespace\n```", "```\ncurl -N -s $base/api/v1/${ns}/configmaps?watch=true | \\ while read -r event\ndo\n  type=$(echo \"$event\"        | jq -r '.type')                 ![1](assets/1.png)\n  config_map=$(echo \"$event\"  | jq -r '.object.metadata.name')\n  annotations=$(echo \"$event\" | jq -r '.object.metadata.annotations')\n\n  if [ \"$annotations\" != \"null\" ]; then\n    selector=$(echo $annotations | \\                           ![2](assets/2.png)\n     jq -r \"\\\n        to_entries                                           |\\\n        .[]                                                  |\\\n        select(.key == \\\"k8spatterns.io/podDeleteSelector\\\") |\\\n        .value                                               |\\\n         @uri                                                 \\\n     \")\n  fi\n\n  if [ $type = \"MODIFIED\" ] && [ -n \"$selector\" ]; then        ![3](assets/3.png)\n    pods=$(curl -s $base/api/v1/${ns}/pods?labelSelector=$selector |\\\n           jq -r .items[].metadata.name)\n\n    for pod in $pods; do                                       ![4](assets/4.png)\n      curl -s -X DELETE $base/api/v1/${ns}/pods/$pod\n    done\n  fi\ndone\n```", "```\napiVersion: apps/v1\nkind: Deployment\n# ....\nspec:\n  template:\n    # ...\n    spec:\n      serviceAccountName: config-watcher-controller ![1](assets/1.png)\n      containers:\n      - name: kubeapi-proxy                         ![2](assets/2.png)\n        image: k8spatterns/kubeapi-proxy\n      - name: config-watcher                        ![3](assets/3.png)\n        image: k8spatterns/curl-jq\n        # ...\n        command:                                    ![4](assets/4.png)\n        - \"sh\"\n        - \"/watcher/config-watcher-controller.sh\"\n        volumeMounts:                               ![5](assets/5.png)\n        - mountPath: \"/watcher\"\n          name: config-watcher-controller\n      volumes:\n      - name: config-watcher-controller             ![6](assets/6.png)\n        configMap:\n          name: config-watcher-controller\n```", "```\napiVersion: v1\nkind: ConfigMap                                    ![1](assets/1.png)\nmetadata:\n  name: webapp-config\n  annotations:\n    k8spatterns.io/podDeleteSelector: \"app=webapp\" ![2](assets/2.png)\ndata:\n  message: \"Welcome to Kubernetes Patterns !\"      ![3](assets/3.png)\n---\napiVersion: apps/v1\nkind: Deployment                                   ![4](assets/4.png)\n# ...\nspec:\n  # ...\n  template:\n    spec:\n      containers:\n      - name: app\n        image: k8spatterns/mini-http-server        ![5](assets/5.png)\n        ports:\n        - containerPort: 8080\n        env:\n        - name: MESSAGE                            ![6](assets/6.png)\n          valueFrom:\n            configMapKeyRef:\n              name: webapp-config\n              key: message\n```"]