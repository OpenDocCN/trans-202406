["```\nkubectl create secret generic mysecret --from-literal=key1=$3cr3t1\n    --from-literal=key2=@3cr3t2\n```", "```\nkubectl create secret docker-registry registryKey --docker-server\n    myreg.azurecr.io --docker-username myreg --docker-password\n    $up3r$3cr3tP@ssw0rd --docker-email ignore@dummy.com\n```", "```\nkubectl create secret tls www-tls --key=./path_to_key/wwwtls.key\n    --cert=./path_to_crt/wwwtls.crt\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n    name: nginx-http-config\n    namespace: myapp-prod\ndata:\n  config: |\n    http {\n      server {\n        location / {\n        root /data/html;\n        }\n\n        location /images/ {\n          root /data;\n        }\n      }\n    }\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: myapp-api-key\ntype: Opaque\ndata:\n  myapikey: YWRtd5thSaW4=\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mywebapp\n  namespace: myapp-prod\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    ports:\n    - containerPort: 8080\n    volumeMounts:\n    - mountPath: /etc/nginx\n      name: nginx-config\n    - mountPath: /usr/var/nginx/html/keys\n      name: api-key\n  volumes:\n    - name: nginx-config\n      configMap:\n        name: nginx-http-config\n        items:\n        - key: config\n          path: nginx.conf\n    - name: api-key\n      secret:\n        name: myapp-api-key\n        secretname: myapikey\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: config-file\ndata:\n  config: |\n    {\n      \"iotDevice\": {\n        \"name\": \"remoteValve\",\n        \"username\": \"CC:22:3D:E3:CE:30\",\n        \"port\": 51826,\n        \"pin\": \"031-45-154\"\n      }\n    }\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql-config\ndata:\n  mysqldb: myappdb1\n  user: mysqluser1\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mysql-secret\ntype: Opaque\ndata:\n  rootpassword: YWRtJasdhaW4=\n  userpassword: MWYyZDigKJGUyfgKJBmU2N2Rm\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp-db-deploy\nspec:\n  selector:\n    matchLabels:\n      app: myapp-db\n  template:\n    metadata:\n      labels:\n        app: myapp-db\n    spec:\n      containers:\n      - name: myapp-db-instance\n        image: mysql\n        resources:\n          limits:\n            memory: \"128Mi\"\n            cpu: \"500m\"\n        ports:\n        - containerPort: 3306\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            valueFrom:\n              secretKeyRef:\n                name: mysql-secret\n                key: rootpassword\n          - name: MYSQL_PASSWORD\n            valueFrom:\n              secretKeyRef:\n                name: mysql-secret\n                key: userpassword\n          - name: MYSQL_USER\n            valueFrom:\n              configMapKeyRef:\n                name: mysql-config\n                key: user\n          - name: MYSQL_DB\n            valueFrom:\n              configMapKeyRef:\n                name: mysql-config\n                key: mysqldb\n```", "```\n[...]\nspec:\n  containers:\n  - name: load-gen\n    image: busybox\n    command: [\"/bin/sh\"]\nargs: [\"-c\", \"while true; do curl $(WEB_UI_URL); sleep 10;done\"]\n    ports:\n    - containerPort: 8080\n    env:\n    - name: WEB_UI_URL\n      valueFrom:\n        configMapKeyRef:\n          name: load-gen-config\n          key: url\n```", "```\napiVersion: apps/v1\nkind: Deployment\n[...]\nspec:\n  template:\n    metadata:\n      annotations:\n        checksum/config: {{ include (print $.Template.BasePath \"/configmap.yaml\")\n            . | sha256sum }}\n[...]\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: app1-svcacct\nautomountServiceAccountToken: false\n[...]\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: app1-pod\nspec:\n  serviceAccountName: app1-svcacct\n  automountServiceAccountToken: false\n[...]\n```", "```\nCreate the docker-registry secret first\nkubectl create secret docker-registry registryKey --docker-server\nmyreg.azurecr.io --docker-username myreg --docker-password $up3r$3cr3tP@ssw0rd\n--docker-email ignore@dummy.com\n\npatch the default serviceaccount for the namespace you wish to configure\nkubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\":\n\"registryKey\"}]}'\n```", "```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: default\n  name: pod-viewer\nrules:\n- apiGroups: [\"\"] # \"\" indicates the core API group\n  resources: [\"pods\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n```", "```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: noc-helpdesk-view\n  namespace: default\nsubjects:\n- kind: User\n  name: helpdeskuser@example.com\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role #this must be Role or ClusterRole\n  name: pod-viewer # this must match the name of the Role or ClusterRole\n                   # to bind to\n  apiGroup: rbac.authorization.k8s.io\n```"]