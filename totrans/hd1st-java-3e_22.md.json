["```\nString s = \"0\";\nfor (int i = 1; i < 10; i++) {\n   s = s + i;\n}\n```", "```\nStringBuilder s = new StringBuilder(\"0\");\nfor (int i = 1; i < 10; i++) {\n  s.append(i);\n}\nString finalString = s.toString();\n```", "```\nInteger iWrap = new Integer(42);\n```", "```\npublic\nprotected\nprivate\n```", "```\nstatic String format(String format, Object... args)\n```", "```\nvoid printAllObjects(Object... elements) {\n  for (Object element : elements) {\n    System.out.println(element);\n  }\n}\n```", "```\nvoid printAllObjects(Object[] elements) {\n```", "```\n@Table(name=\"cust\")\npublic class Customer {\n```", "```\n@Disabled(\"This test isn't finished\")\nvoid thisTestIsForIgnoring() {\n```", "```\n    List<Song> songs = getSongs();\n    Stream<Song> par = songs.stream()\n                            .parallel();\n    ```", "```\nList<String> list = new ArrayList<>();\n```", "```\npublic final class Customer {\n  private final int id;\n  private final String name;\n\n  public Customer(int id, String name) {\n    this.id = id;\n    this.name = name;\n  }\n\n  public int getId() {\n    return id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public boolean equals(Object o) { }\n\n  public int hashCode() { }\n\n  public String toString() { }\n}\n```", "```\npublic record Customer(int id, String name) {\n  public Customer(int id, String name) {\n    if (id < 0) {\n      throw new ValidationException();\n    }\n    this.id = id;\n    this.name = name;\n  }\n}\n```"]