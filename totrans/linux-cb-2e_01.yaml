- en: Chapter 1\. Installing Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the hurdles for new Linux users is installing Linux. Linux is the easiest
    computer operating system to install: pop in your installation disk, answer a
    few questions, and then do something else until it finishes. In this chapter you
    will learn how to install Linux by itself, how to run a live Linux, how to multiboot
    multiple Linux distributions on one computer, and how to dual-boot with Microsoft
    Windows.'
  prefs: []
  type: TYPE_NORMAL
- en: Experimenting with Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You need the freedom to make mistakes, so if it is possible, use a second computer
    for getting acquainted with Linux. If this is not possible, make sure you always
    have fresh backups of your data. You can always restore a broken Linux installation,
    but your data is irreplaceable. If you are setting up dual-boot with Windows,
    be sure you have your Windows installation and recovery media.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most Linux distributions provide dual-purpose installation images: you can
    run them live from a USB stick and install them to your hard drive from the same
    image. A live Linux makes no changes to your computer—just boot it up, check it
    out, then reboot to your host system. Some live Linuxes, such as Ubuntu, support
    storing your data on the USB stick, so you have a completely portable Linux that
    you can run from any computer.'
  prefs: []
  type: TYPE_NORMAL
- en: Multiboot is installing more than one operating system on a computer, and then
    picking the one you want to use from your boot menu. You can multiboot any Linux
    system, any of the free Unixes (FreeBSD, NetBSD, OpenBSD), and you can multiboot
    Linux and Microsoft Windows. Dual-booting Linux and Windows is a common way for
    Windows users to get acquainted with Linux, and for users who need both.
  prefs: []
  type: TYPE_NORMAL
- en: What about Apple’s macOS, you ask? Sorry, but dual-booting Linux and macOS is
    an unreliable endeavor that gets more difficult with every macOS release. One
    alternative for running both on a single machine is to run Linux in Parallels,
    the macOS virtual machine host.
  prefs: []
  type: TYPE_NORMAL
- en: Rather than installing Linux yourself, you could buy a PC with Linux already
    installed. There are a number of good Linux specialists that sell Linux laptops,
    desktops, and servers. System76, ZaReason, Linux Certified, Think Penguin, Entroware,
    and Tuxedo Computers are all Linux specialists. Dell has been expanding its Linux
    lineup, and enterprise Linux vendors Red Hat, SUSE, and Ubuntu all partner with
    hardware vendors, including Dell, Hewlett-Packard, and IBM.
  prefs: []
  type: TYPE_NORMAL
- en: Still, it pays to know how to install Linux. This opens up a whole world of
    experimentation, customization, and disaster recovery. *Distro-hopping* is a time-honored
    pastime, where you download and try different Linux distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Even though installing Linux takes just a few steps, you need a certain amount
    of knowledge, especially when you want to customize your installation, like setting
    up disk partitions in a particular way or multibooting with other Linux distributions
    or with Microsoft Windows. You need to know how to enter your system Basic Input
    Output System (BIOS) or Unified Extensible Firmware Interface (UEFI) setup. You
    need good internet access. All Linux distributions are freely downloadable, even
    the commercial enterprise distributions like Red Hat, SUSE, and Ubuntu. Download
    sizes range from a few megabytes for super-small Linuxes like Tiny Core Linux,
    which bundles a complete operating system with a graphical desktop into 12 MB,
    to 10+ GB for SUSE Linux Enterprise Server. Most Linux distros provide 2–4 GB
    installation images, which fit perfectly on a DVD or small USB stick.
  prefs: []
  type: TYPE_NORMAL
- en: Most Linux distributions provide a network installer image; for example, Debian’s
    is around 200 megabytes. This installs enough of a Debian system to boot up, connect
    to the internet, and then download only the packages you want, rather than downloading
    a complete installation image.
  prefs: []
  type: TYPE_NORMAL
- en: You can freely share any Linux distribution that you download.
  prefs: []
  type: TYPE_NORMAL
- en: You also have the option to buy Linux distributions on DVD and USB media. Visit
    [Shop Linux Online](https://shoplinuxonline.com) and [Linux Disc Online](https://linuxdisconline.com)
    to find physical installation media for various Linux distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Booting from Installation Media
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You must be able to boot your system from your USB or DVD installation disk.
    You may have to enter your system’s BIOS or UEFI setup to enable booting from
    a removable device. Some have an option to select an alternate boot device without
    entering the BIOS/UEFI; for example, my laptop’s UEFI displays a screen at startup
    that lists all the relevant keypresses: F2 or Delete to enter setup, and F11 to
    enter the alternate boot device menu. Dell systems use F12 to open their one-time
    boot menu. Every one is special and unique, so check out your motherboard manual
    to learn how.'
  prefs: []
  type: TYPE_NORMAL
- en: You may have to disable Secure Boot in your UEFI setup to enable booting from
    removable media. Fedora, openSUSE, and Ubuntu all have their own signing keys
    and will boot with Secure Boot enabled. Other Linux distributions, such as SystemRescue
    ([Chapter 19](Images/ch19.html#cha-rescue-recovery)), do not.
  prefs: []
  type: TYPE_NORMAL
- en: Secure Boot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Secure Boot is a security feature of your UEFI setup. When Secure Boot is enabled,
    it allows booting only operating systems that provide special signed keys. The
    idea is to prevent malicious code from controlling your bootloader.
  prefs: []
  type: TYPE_NORMAL
- en: Most Linux distributions do not provide signed keys, so Secure Boot must be
    disabled to run them.
  prefs: []
  type: TYPE_NORMAL
- en: Where to Download Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are hundreds of Linux distributions, and a great place to learn about
    them is [DistroWatch.com](https://distrowatch.com), the most comprehensive Linux
    distribution resource. DistroWatch publishes reviews, detailed information, and
    news, and their popular list of the top 100 distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Best Linux for Newbies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux provides rather a lot of a good thing, maybe too much. The recipes in
    this book were tested on openSUSE, Fedora Linux, and Ubuntu Linux. These three
    are well-established, popular, and well-maintained, and they represent three different
    Linux families (see the [Appendix](app01.xhtml#appendix)). In my experience Ubuntu
    is perfect for a Linux newbie because it has the easiest installer, good documentation,
    and a large and supportive user community.
  prefs: []
  type: TYPE_NORMAL
- en: 'Every Linux has its differences: different software installers, different defaults,
    different file locations…but the fundamentals are all similar. Most of what you
    learn on any particular distro is applicable to all of them.'
  prefs: []
  type: TYPE_NORMAL
- en: Hardware Architectures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: How-to authors used to be able to take it for granted that readers were using
    x86 hardware. With the rise in popularity of ARM processors this is no longer
    true. Linux supports a large number of hardware architectures, and [Recipe 10.11](ch10.xhtml#rec-hardware-arch)
    shows how to detect what you have. You cannot accidentally install the wrong Linux
    version because the installation will fail at the beginning, and you will see
    an error message telling why.
  prefs: []
  type: TYPE_NORMAL
- en: Linux installation images are packaged in the ISO 9660 format, and have a **.iso*
    extension, for example, *ubuntu-20.04.1-desktop-amd64.iso* for x86-64 machines,
    and *ubuntu-20.04.1-live-server-arm64.iso* for ARM machines. This is a compressed
    archive that contains the entire filesystem and the installation program. When
    you copy this archive to your installation medium, it is uncompressed and you
    can see all the files.
  prefs: []
  type: TYPE_NORMAL
- en: The **.iso* format was originally for CDs and DVDs. Once upon a time, Linux
    fit on a single CD. (Once upon a time, it fit on a few 3.5” diskettes!) Now most
    Linux distributions are too large for CDs. USB sticks are perfect for Linux installations,
    as they are inexpensive, reusable, and much faster than optical media.
  prefs: []
  type: TYPE_NORMAL
- en: 1.1 Entering your System BIOS/UEFI Setup
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to enter your system’s BIOS/UEFI setup.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Enter your BIO/UEFI setup by pressing the appropriate F*n* key at startup. On
    Dell, ASUS, and Acer systems this is usually F2, and Lenovo uses F1\. However,
    this varies; for example, some systems use the Delete key, so check your machine’s
    documentation. Some systems tell which key to press on their startup screens.
    It can be a bit tricky to press the key at the right time, so start pressing it
    right after you press the power button, just like banging on an elevator button
    to make it arrive faster.
  prefs: []
  type: TYPE_NORMAL
- en: Every UEFI looks different; for example, Lenovo’s is bright and well organized
    ([Figure 1-1](#fig-install-uefi)).
  prefs: []
  type: TYPE_NORMAL
- en: The ASRock UEFI on my test system is dark and dramatic ([Figure 1-2](#fig-install-uefi-3)).
    This particular motherboard targets gamers and has many settings for overclocking
    the CPU and other performance enhancements. This screen shows the motherboard
    browser; hover the cursor over any item and it provides information about that
    item.
  prefs: []
  type: TYPE_NORMAL
- en: '![Lenovo''s UEFI on a new Thinkpad.](Images/lcb2_0101.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-1\. Lenovo’s UEFI on a new ThinkPad
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![ASRock UEFI has a motherboard browser.](Images/lcb2_0102.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-2\. ASRock UEFI has a motherboard browser
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you boot up your computer, the first startup instructions come from the
    BIOS or UEFI firmware, stored on the computer’s motherboard. BIOS is the old legacy
    system that has been with us since 1980\. UEFI is its modern replacement. UEFI
    includes legacy BIOS support. Nearly all computers made after the mid-2000s have
    UEFI.
  prefs: []
  type: TYPE_NORMAL
- en: UEFI has considerably more features than the old BIOS and is like a little operating
    system. The UEFI setup screens control boot order, boot devices, security options,
    Secure Boot, overclocking, displaying hardware health, networking, and many more
    functions.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The documentation for your motherboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Unified Extensible Firmware Interface Forum](https://uefi.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.2 Downloading a Linux Installation Image
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to find and download a Linux installation image.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, you need to choose which Linux you want to try. If you don’t know where
    to start, I recommend [Ubuntu Linux](https://ubuntu.com). [Fedora Linux](https://getfedora.org)
    and [openSUSE Linux](https://opensuse.org) are also excellent for anyone new to
    Linux.
  prefs: []
  type: TYPE_NORMAL
- en: After your download is completed, verify that you have a good download. This
    is an important step that ensures you have an image that did not get damaged during
    the download or was otherwise altered in some way.
  prefs: []
  type: TYPE_NORMAL
- en: 'Every Linux distribution provides signed keys and checksums for its download
    images. Ubuntu provides copy-and-paste instructions. Open a terminal and change
    to the directory where you downloaded Ubuntu. For Ubuntu 21.04, verifying the
    installation image looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'If you see “shasum: WARNING: 1 computed checksum did NOT match,” then your
    download is no good, assuming you copied the correct checksum. In most cases the
    image was corrupted during the download, so try downloading it again.'
  prefs: []
  type: TYPE_NORMAL
- en: Other Linux distributions provide slightly different verification methods, so
    follow their instructions.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A great site to learn about the hundreds of Linux distributions is [Distrowatch.com](https://distrowatch.com).
    Distrowatch provides news and information about more Linux distros than anyone.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 sha256sum*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ubuntu Linux](https://ubuntu.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Fedora Linux](https://getfedora.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[openSUSE Linux](https://opensuse.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.3 Creating a Linux Installation USB Stick with UNetbootin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You have downloaded a Linux installation **.iso* image, and you want to transfer
    it to a USB stick to create your own installation media. You prefer a graphical
    tool to create your installation media.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Try [UNetbootin](https://oreil.ly/8CXp9), Universal Netboot Installer. It runs
    on Linux, macOS, and Windows, so you can download and create a Linux installation
    disk on any of these operating systems. UNetbootin creates an installation USB
    drive from your downloaded **.iso* file or downloads a fresh **.iso* file ([Figure 1-3](#fig-unetbootin)).
  prefs: []
  type: TYPE_NORMAL
- en: You may use any size USB stick (that is larger than your **.iso* file, of course).
    The **.iso* overwrites the entire device, so you can’t use it for anything else,
    and you must use a separate USB stick for each **.iso* file.
  prefs: []
  type: TYPE_NORMAL
- en: '![Using UNetbootin to create an installable Linux USB stick](Images/lcb2_0103.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-3\. Using UNetbootin to create an installable Linux USB stick
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The UNetbootin site provides downloads and instructions. Some Linux distributions
    provide UNetbootin packages, but downloading from the [UNetbootin site](https://unetbootin.github.io)
    is simple and always up-to-date.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Other good graphical apps are USB Creator, ISO Image Writer, and GNOME MultiWriter,
    which copies to multiple USB drives at one time.
  prefs: []
  type: TYPE_NORMAL
- en: 'After you have created your installation USB drive, you can view the files
    on it. The single **.iso* expands into a complete filesystem full of files and
    directories, like this example for Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Every Linux distribution sets up its installers in its own way. This example
    shows Fedora’s installation files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It would be lovely to have a single USB stick with a herd of Linux installation
    files, and there are some programs that do this. My favorite is [Ventoy](https://ventoy.net).
    Ventoy supports a large number of Linux distributions. It runs on both Linux and
    Windows, and you can create a USB stick full of Linux installers for running live
    Linuxes, and for permanent installations to hard disks.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[UNetbootin](https://oreil.ly/8CXp9)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.xhtml#cha-partitioning-gparted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ventoy](https://ventoy.net)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.4 Creating a Linux Installation DVD with K3b
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to create a Linux DVD installation disk with a graphical tool.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use K3b (KDE Burn Baby Burn). K3b is the best graphical CD/DVD writing app for
    Linux.
  prefs: []
  type: TYPE_NORMAL
- en: If you do not have a Linux system, then use any CD/DVD writing program that
    writes an ISO 9660 image. Your chosen CD/DVD writer will phrase this as something
    like “burn an existing image to disk.”
  prefs: []
  type: TYPE_NORMAL
- en: You will see something like [Figure 1-4](#fig-k3b-1) on K3b. Click “Burn Image,”
    and note the confirmation on the bottom left that says “Write an ISO 9660…image
    to an optical disk.”
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen ([Figure 1-5](#fig-k3b-2)), in the top left drop-down selector,
    select your **.iso* image. Then on the top right select “ISO 9660 filesystem image.”
    At the bottom under Settings, check “Verify written data.” This computes a checksum
    after your image is written and compares it to the checksum of the original **.iso*.
    This is an important step because if the checksums do not match you have a corrupted
    disk, which is unusable.
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an installation DVD with K3b](Images/lcb2_0104.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-4\. Creating an installation DVD with K3b
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![Configuring the burn](Images/lcb2_0105.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-5\. Configuring the burn
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When the disk is successfully written, you will see a success message like the
    one shown in [Figure 1-6](#fig-k3b-3). If there were any errors, this screen will
    show some helpful error messages.
  prefs: []
  type: TYPE_NORMAL
- en: '![Success!](Images/lcb2_0106.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-6\. Success!
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Brasero and XFBurn are also great CD/DVD writing apps for Linux, with simpler
    interfaces than K3b, but still plenty of functionality.
  prefs: []
  type: TYPE_NORMAL
- en: The tech world changes fast. Just a few years ago I was burning CDs and DVDs
    for everything. Then USB devices swept the market, and I haven’t burned a disk
    for years, until I started writing this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Take heart, for CDs and DVDs are not obsolete, despite the efforts of computer
    makers to make them obsolete by not including CD/DVD drives in their machines.
    This is not a problem because you can purchase an external USB CD/DVD drive. You
    can even find bus-powered drives, so you only need a USB cable, and don’t have
    to hassle with a power cable. CD/DVD blanks are still good quality, so if you
    prefer optical disks, they are a reliable choice.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[K3b](https://oreil.ly/MJmXF)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Brasero](https://oreil.ly/a9Dxx)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.5 Using the wodim Command to Create a Bootable CD/DVD
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want a command-line tool to create a bootable CD/DVD.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Try the *wodim* command. Your optical drive is most likely */dev/cdrom*, symlinked
    to */dev/sr0*. Use the symlink because it has correct permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Then copy your installation image to disk:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the *ls -l* example, there are *sg2* and *sr0* devices. *sg2* is a character
    device, and *sr0* is a block device. Character devices provide raw access to a
    hardware device using the raw kernel drivers. Block devices provide buffered access
    to a hardware device through various software programs that handle reading and
    writing to physical media. Users interact with storage devices, like DVDs and
    hard disks, through the kernel’s block device drivers. You can see raw and block
    kernel modules listed in your */boot/config-** file.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 wodim*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.6 Creating a Linux Installation USB Stick with the dd Command
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to create your installation USB drive from the command line, rather
    than using a graphical tool.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the *dd* command. *dd* is on every Linux and works the same way on all of
    them.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, verify the dev name for your USB stick with the *lsblk* command, so
    that you copy your image to the correct device. In the following example, that
    is */dev/sdb*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The following example creates a USB installation stick and shows its progress:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'This takes a few minutes. When it’s finished, it looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Remove the drive, then reinsert it and take a quick look at the files. [Figure 1-7](#fig-nemo)
    shows the installation files for Ubuntu Linux in the Thunar file manager.
  prefs: []
  type: TYPE_NORMAL
- en: '![Ubuntu installation files in Thunar](Images/lcb2_0107.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-7\. Ubuntu Linux installation files in Thunar
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The files are marked with padlocks because the Ubuntu installer uses the SquashFS
    read-only filesystem. You can read them, but not delete or edit them.
  prefs: []
  type: TYPE_NORMAL
- en: The installation USB stick is ready to use.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Identifying the correct device to copy your installation to is super important.
    In the *lsblk* example, there are only two storage devices. Note the LABEL column;
    you can create labels on filesystems so you know what they are. (See [Recipe 9.2](ch09.xhtml#rec-gparted-create-partition-table)
    and the filesystem creation recipes in [Chapter 11](ch11.xhtml#cha-create-filesystems)
    to learn how to create filesystem labels.)
  prefs: []
  type: TYPE_NORMAL
- en: The graphical installation media creators are good, but I prefer the *dd* command
    because it is simple and reliable. *dd* is short for Disk Duplicator. This is
    one of those ancient useful GNU commands, in the GNU *coreutils* package, that
    has been around forever.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 dd*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.7 Trying a Simple Ubuntu Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to try a simple Ubuntu installation. You have your installation medium
    ready, and you know how to boot to your installation medium. There is nothing
    on the computer that you want to keep, so Ubuntu can take over the hard drive.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following example demonstrates a fast, simple installation of Ubuntu Linux
    21.04, Hirsute Hippo. All Ubuntu releases have alliterative animal names.
  prefs: []
  type: TYPE_NORMAL
- en: Insert your installation device, power on the machine, and open your system’s
    one-time boot menu. Select the installation device and boot up ([Figure 1-8](#fig-boot-usb)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Booting to an installation USB stick.](Images/lcb2_0108.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-8\. Booting to an installation USB stick
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: All UEFI Screens Look Different
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every vendor’s UEFI looks different, and every release changes in appearance.
    The preceding example is a Dell UEFI one-time boot screen.
  prefs: []
  type: TYPE_NORMAL
- en: When the GRUB menu appears, select the default option. For Ubuntu 21.04 this
    is *Ubuntu*, and it boots by default when you make no selection ([Figure 1-9](#fig-install-1)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Ubuntu installer''s GRUB boot menu.](Images/lcb2_0109.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-9\. Ubuntu installer’s GRUB boot menu
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Then you will have a choice of Try Ubuntu and Install Ubuntu. Try Ubuntu launches
    the live version, and Install Ubuntu opens the installer ([Figure 1-10](#fig-boot-usb-2)).
    It doesn’t matter which one you select because there is a big installation button
    on the live desktop.
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing the live image, or the installer.](Images/lcb2_0110.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-10\. Choosing the live image or the installer
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When you launch the installer, it walks you through a few steps. First, language
    and keyboard layout.
  prefs: []
  type: TYPE_NORMAL
- en: Then, if you have a wireless network interface, you have the option to set it
    up or wait until after installation.
  prefs: []
  type: TYPE_NORMAL
- en: Then configure your installation. On the “Updates and other software” screen,
    select “Normal installation” ([Figure 1-11](#fig-boot-usb-3)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Select Normal installation..](Images/lcb2_0111.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-11\. Select Normal installation
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: On the next screen, select “Erase disk and install Ubuntu,” then click Install
    Now ([Figure 1-12](#fig-boot-usb-4)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Select Normal installation..](Images/lcb2_0112.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-12\. Select Erase disk and install Ubuntu
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'The next screen asks “Write the changes to disk?” Click Continue. There are
    a few more screens: set your time zone, create your username, password, and hostname,
    and then the installation starts. You do not have to do anything until the installation
    is finished, then restart the computer, remove your installation device when prompted,
    and press the Enter key. After restart you will have a few setup screens, then
    you can play with your nice new Ubuntu Linux.'
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Most Linux distributions have a similar installation process: boot your installation
    medium, then choose a default simple installation or choose a customizable installation.
    Some ask all the questions at the beginning, such as username and password; others
    do the final setup after reboot.'
  prefs: []
  type: TYPE_NORMAL
- en: Linux installers typically have back buttons to go back and make changes. You
    may quit at any time, though this may leave your system in an unusable state.
    This is not fatal; just start over and do a complete installation.
  prefs: []
  type: TYPE_NORMAL
- en: You may reinstall as many times on as many machines as you want without worrying
    about license keys, except for the enterprise distros that require registration
    keys (Red Hat, SUSE, or Ubuntu with paid support).
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Ubuntu documentation](https://help.ubuntu.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.8 Customizing Partitioning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to set up your own partitioning scheme.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe we will redo the example Ubuntu installation in [Recipe 1.7](#rec-simple-installation)
    and set up our own partitioning scheme.
  prefs: []
  type: TYPE_NORMAL
- en: Entire Disk Will Be Erased
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe a new partition table is created, which erases the entire disk.
  prefs: []
  type: TYPE_NORMAL
- en: You can set up partitioning in any number of ways. [Table 1-1](#table-1-1) shows
    how I prefer to set up my Linux workstations.
  prefs: []
  type: TYPE_NORMAL
- en: Table 1-1\. Example partitioning scheme
  prefs: []
  type: TYPE_NORMAL
- en: '| Partition name | Filesystem type | Mountpoint |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| /dev/sda1 | ext4 | /boot |'
  prefs: []
  type: TYPE_TB
- en: '| /dev/sda2 | ext4 | / |'
  prefs: []
  type: TYPE_TB
- en: '| /dev/sda3 | ext4 | /home |'
  prefs: []
  type: TYPE_TB
- en: '| /dev/sda4 | ext4 | /tmp |'
  prefs: []
  type: TYPE_TB
- en: '| /dev/sda5 | ext4 | /var |'
  prefs: []
  type: TYPE_TB
- en: '| /dev/sda6 | swap |  |'
  prefs: []
  type: TYPE_TB
- en: When you get to the Installation Type screen, select “Something else” to start
    your customized installation ([Figure 1-13](#fig-ubuntu-install-1)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting the installation type](Images/lcb2_0113.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-13\. Selecting the installation type
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When you get to the partitioning screen, erase the entire disk by clicking New
    Partition Table. Then you will see something like [Figure 1-14](#fig-ubuntu-install-2).
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating a new partition table.](Images/lcb2_0114.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-14\. Creating a new partition table
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: To create new partitions click on the “free space” line to select it, then click
    the plus sign, +, to add a new partition. Set the size, filesystem, and mountpoint.
    [Figure 1-15](#fig-ubuntu-install-3) creates a 500 MB */boot* partition.
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating the boot partition.](Images/lcb2_0115.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-15\. Creating the boot partition
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Click on “free space” again, click the plus sign, and keep going until you
    have created all of your partitions. [Figure 1-16](#fig-ubuntu-install-4) shows
    the result: */boot*, */home*, */var*, */tmp*, and the swap file are all on their
    own partitions.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Partitions set up and ready to continue the installation.](Images/lcb2_0116.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-16\. Partitions set up and ready to continue the installation
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Selecting Partitions to Format
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note the “Format?” checkboxes in the partitioning screen. All new partitions
    must be formatted with a filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The examples are from a virtual machine, so the hard disk is *vda* instead of
    *sda*.
  prefs: []
  type: TYPE_NORMAL
- en: The example in the recipe uses the Ext4 filesystem on all the partitions. You
    may use whatever filesystems you want; see [Chapter 11](ch11.xhtml#cha-create-filesystems)
    to learn more.
  prefs: []
  type: TYPE_NORMAL
- en: Disk partitions are like having a bunch of separate physical disks. Each one
    is an independent section of the hard disk, and each partition can have a different
    filesystem. The filesystems you select, and their sizes, all depend on how you
    use your system. If you need a lot of data storage, then */home* needs to be large.
    It could even be a separate disk.
  prefs: []
  type: TYPE_NORMAL
- en: Giving */boot* its own partition makes managing multiboot systems easier because
    this makes the boot files independent of whatever operating systems you install
    or remove. 500 MB is more than enough.
  prefs: []
  type: TYPE_NORMAL
- en: Putting */*, root, in its own partition makes it easy to restore or to nuke
    and replace with a different Linux. 30 GB is more than enough for most distros,
    except when you use the Btrfs filesystem, then you should make it 60 GB to make
    room for storing snapshots.
  prefs: []
  type: TYPE_NORMAL
- en: Put */home* on its own partition to isolate it from the root filesystem, so
    you can replace your Linux installation without touching */home*. */home* could
    even be on a separate disk.
  prefs: []
  type: TYPE_NORMAL
- en: '*/var* and */tmp* can fill up from runaway processes. Putting them on their
    own partitions prevents them from crashing the other filesystems. Mine are usually
    20 GB each, and for a busy server they need to be larger.'
  prefs: []
  type: TYPE_NORMAL
- en: Putting a swap file equal to the size of your RAM on its own partition enables
    suspend-to-disk.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The discussion in [Recipe 3.9](ch03.xhtml#rec-rtc-wakeups) to learn about suspend
    and sleep states
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.xhtml#cha-partitioning-parted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.xhtml#cha-partitioning-gparted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.9 Preserving Existing Partitions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You have */home* on its own partition and want to preserve it for the new Linux
    installation.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Recipes [1.7](#rec-simple-installation) and [1.8](#rec-install-partition)
    we erased the existing installation by creating a new partition table. When you
    have partitions that you want to preserve, such as */home* or any shared directory,
    do not create a new partition table. Instead, edit the existing partitions. You
    can delete existing partitions, create new partitions, and reuse existing partitions.
  prefs: []
  type: TYPE_NORMAL
- en: In the following example in the Ubuntu installer, */dev/sda3* is a separate
    */home* partition. Right-click on it, then click “Change…” Then you can set its
    mountpoint to */home*, and make sure that the “Format?” box is NOT checked ([Figure 1-17](#fig-install-save-part)).
    If you format it or change the filesystem type, all data on the partition will
    be erased.
  prefs: []
  type: TYPE_NORMAL
- en: '![Saving /dev/sda3, instead of overwriting it.](Images/lcb2_0117.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-17\. Saving /dev/sda3, instead of overwriting it
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Discussion in [Recipe 1.8](#rec-install-partition) goes into some detail
    on customizing your partitioning scheme and which filesystems benefit from being
    isolated on their own partitions.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.xhtml#cha-partitioning-parted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.xhtml#cha-partitioning-gparted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.10 Customizing Package Selection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You don’t want the default package installation, but prefer to select your own
    software to install. For example, you might want to set up a development workstation,
    a web server, a central backup server, a multimedia production workstation, a
    desktop publishing workstation, or choose your own office productivity applications.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every Linux distro manages installation options a little differently. In this
    recipe you will see examples for openSUSE and Fedora Linux. openSUSE supports
    multiple installation types from a single installation image, and Fedora Linux
    has several different installation images.
  prefs: []
  type: TYPE_NORMAL
- en: These two examples are typical of the general-purpose Linux distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Remember, you can install and remove software all you want after installation.
  prefs: []
  type: TYPE_NORMAL
- en: openSUSE
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The openSUSE installer supports both a simple installation from defaults and
    extensive customization options. It has two screens that control package selection.
    The first screen ([Figure 1-18](#fig-opensuse-1)) provides a selection of system
    roles to choose from, such as a desktop system with the KDE or GNOME graphical
    environment, a generic desktop with the IceWM window manager, a server with no
    graphical environment, or a transactional server with no graphical environment.
    Each role comes with a prefab set of packages. You can install one of these as
    is or select packages to install or remove.
  prefs: []
  type: TYPE_NORMAL
- en: Each role is customizable, as you will see a few screens later ([Figure 1-19](#fig-opensuse-2)).
  prefs: []
  type: TYPE_NORMAL
- en: '![openSUSE installation roles](Images/lcb2_0118.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-18\. openSUSE installation roles
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![openSUSE installation settings](Images/lcb2_0119.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-19\. openSUSE installation settings
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click Software to open the package selection screen. This screen displays the
    openSUSE *patterns*, which are related groups of packages you can install with
    a single command. I like the Xfce desktop, so I am adding it to my installation
    ([Figure 1-20](#fig-opensuse-3)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Note the Details button at the bottom left. Click this to open a screen with
    multiple tabs for more fine-grained package selection ([Figure 1-21](#fig-opensuse-5)).
    In this screen you will find a massive amount of information: the individual packages
    in each pattern, package groups, download repositories, installation summary,
    dependencies, and information on every package. Use the window on the right to
    select or deselect packages from each pattern. The installer will automatically
    resolve dependencies after your changes.'
  prefs: []
  type: TYPE_NORMAL
- en: '![openSUSE software patterns](Images/lcb2_0120.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-20\. openSUSE software patterns
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![openSUSE individual package selection](Images/lcb2_0121.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-21\. openSUSE individual package selection
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When you are finished with software selection, you are returned to the Installation
    Summary screen, giving you another chance to change your installation settings.
    Click the green Next button to complete the installation.
  prefs: []
  type: TYPE_NORMAL
- en: Fedora Linux
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Fedora Linux Workstation and Server installers provide only partitioning
    options and no package customization. You need the 600 MB network installer image
    for a customizable installation, from [Fedora Alternative Downloads](https://oreil.ly/JW9J8).
    It is labeled as Fedora Server, but it provides complete package selection for
    any type of Fedora installation. Set up all your installation choices from the
    Installation Summary screen ([Figure 1-22](#fig-fedora-1)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Take note of all the installation options on the Installation Summary screen:
    software selection, user creation, partitioning, keyboard and language, time zone,
    network, and hostname. Click Software Selection to open the screen for selecting
    the packages you want to install ([Figure 1-23](#fig-fedora-2)).'
  prefs: []
  type: TYPE_NORMAL
- en: '![Fedora Linux network installer](Images/lcb2_0123.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-22\. Fedora Linux network installer
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![Fedora Linux package selection](Images/lcb2_0124.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-23\. Fedora Linux package selection
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When you are finished, click Done; you are returned to the Installation Summary
    screen. When you are finished setting up your installation, click Begin Installation,
    and the rest of the installation runs unattended.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Whatever Linux you want to try, read its documentation and release notes. This
    is important information that saves a lot of aggravation. Also look for forums,
    mailing lists, and wikis to find help.
  prefs: []
  type: TYPE_NORMAL
- en: You may install as many desktop environments as you want, and then select the
    one you want to use when you log in. The button to select desktops is usually
    small and not obvious; for example, the default Ubuntu login screen ([Figure 1-24](#fig-login-1))
    hides the desktop selector button until you click on a username. Xfce, Lxde, GNOME,
    and KDE are some of the popular graphical desktops. GNOME is the default on Ubuntu,
    openSUSE, and Fedora.
  prefs: []
  type: TYPE_NORMAL
- en: '![Selecting a different graphical environment.](Images/lcb2_0122.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-24\. Selecting a different graphical environment
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[openSUSE documentation](https://oreil.ly/AupNr)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SUSE Transactional Updates](https://oreil.ly/mTyuV)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.11 Multibooting Linux Distributions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to install more than one Linux distribution on your computer in a multiboot
    setup, then select the one you want to run from your boot menu.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'No worries, for you can install as many Linuxes as your hard disk (or disks)
    will hold. You must already have one Linux installed, and it must have a separate
    */boot* partition. Then the steps are:'
  prefs: []
  type: TYPE_NORMAL
- en: Provide sufficient free disk space for the new Linux, which can be on the same
    hard disk as your existing Linux, or on a separate hard disk, either internal
    or external.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make careful note of the partitions that belong to your first installed Linux,
    so that you do not accidentally overwrite or delete any partitions you want to
    keep.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Mount the */boot* partition in every new Linux that you install, and do not
    format it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Boot to your installation medium, then configure the new installation to install
    on the free disk space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The installer will automatically find your existing Linux installation and add
    the new Linux to the boot menu. After the installation is completed, you will
    see a boot menu like [Figure 1-25](#fig-mint-4), which has options to boot to
    Linux Mint or Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: '![New boot menu with Linux Mint and Ubuntu](Images/lcb2_0125.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-25\. New boot menu with Linux Mint and Ubuntu
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you need to free up space on your hard disk, you can shrink existing partitions
    safely (see [Recipe 9.7](ch09.xhtml#rec-resize-partitions-gparted)) before you
    launch the installer. It is safest to do this on unmounted partitions, and some
    filesystems cannot be shrunk while they are mounted. Use SystemRescue to shrink
    partitions, see [Recipe 19.12](ch19.xhtml#rec-partition-sysrescue).
  prefs: []
  type: TYPE_NORMAL
- en: Most Linux installers are smart enough to recognize existing Linux installations
    and to offer the option to preserve them. In [Figure 1-26](#fig-mint-1) you see
    the Linux Mint installer, providing the options to take over your whole hard disk
    or to install next to Ubuntu without deleting it.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Linux Mint next to Ubuntu](Images/lcb2_0126.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-26\. Installing Linux Mint next to Ubuntu
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Recipe 8.9](ch08.xhtml#rec-shrink-partition)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 9.7](ch09.xhtml#rec-resize-partitions-gparted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 19.12](ch19.xhtml#rec-partition-sysrescue)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The installation documentation for your Linux distribution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.12 Dual-boot with Microsoft Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to dual-boot Linux and Windows on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Dual-booting Linux and Windows installs both systems on one computer, and then
    you choose the one you want to use from your boot menu at startup.
  prefs: []
  type: TYPE_NORMAL
- en: It is best to install Windows first, if it is not already installed, and install
    Linux second. Windows likes to control the bootloader, so installing Linux second
    allows Linux to take control.
  prefs: []
  type: TYPE_NORMAL
- en: As always, make sure you have fresh backups and Windows recovery media.
  prefs: []
  type: TYPE_NORMAL
- en: 'After Windows is installed, start your Linux installation. You will install
    Linux in whatever way you want: a simple installation or a customized installation
    where you set up partitioning and package selection. There is an important option
    specific to multibooting:'
  prefs: []
  type: TYPE_NORMAL
- en: If you have a single hard drive, then the “Device for boot loader installation”
    is */dev/sda*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you have Windows on one hard disk and are installing Linux to a second hard
    disk, the “Device for boot loader installation” is the Linux disk. Use the device
    name, for example */dev/sdb*, not a partition name, like */dev/sdb1*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In [Figure 1-27](#fig-dual-1), there are two hard drives, with Windows on */dev/sda*
    and Linux on */dev/sdb*.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Ubuntu next to Windows.](Images/lcb2_0127.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-27\. Installing Ubuntu next to Windows
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Be very certain you are installing Linux to the correct location and not overwriting
    Windows. You may partition for Linux just as you would if you were installing
    it standalone, and again, be careful which partitions you change.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have your partitioning set up and are satisfied with your installation
    configuration, go ahead and complete your Linux installation. After it is finished
    and you have rebooted, your GRUB menu will have entries for both systems ([Figure 1-28](#fig-dual-2)).
  prefs: []
  type: TYPE_NORMAL
- en: '![openSUSE and Windows in the GRUB boot menu.](Images/lcb2_0128.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-28\. openSUSE and Windows in the GRUB boot menu
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can install as many Linux and Windows systems on your system in a multiboot
    setup as you have room for on your hard drives.
  prefs: []
  type: TYPE_NORMAL
- en: There are other ways to run Linux and Windows on the same machine. Windows 10
    includes the Windows Subsystem for Linux 2 (WSL 2), which runs supported Linux
    distributions in a virtual environment. You can run Windows in virtual machines
    on Linux if you have Windows installation media. Virtual machines are lovely because
    you can run multiple operating systems at the same time, though you need higher-end
    CPUs and lots of memory.
  prefs: []
  type: TYPE_NORMAL
- en: VirtualBox and QEMU/KVM/Virtual Machine Manager are good free virtual machine
    hosts that run on Linux.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Windows Subsystem for Linux Documentation](https://oreil.ly/4cbnk)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[VirtualBox](https://oreil.ly/pI6J6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[KVM](https://oreil.ly/gNdi9e)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Virtual Machine Manager](https://oreil.ly/5vj6m)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[QEMU](https://oreil.ly/VKBkf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.13 Recovering an OEM Windows 8 or 10 Product Key
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You purchased a computer with Windows 8 or 10 preinstalled, and you can’t find
    your product key.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let Linux find it for you. Run the following command from a Linux system installed
    on the same computer with Windows, or from SystemRescue:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: And there it is on the last line.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you can log in to Windows, run the following command in Windows to retrieve
    your product key:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have no recovery media, Windows 10 is a free download. You will need
    your 25-digit OEM product key for a fresh installation.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Download Windows 10](https://oreil.ly/rz157)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1.14 Mounting Your ISO Image on Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You have downloaded a Linux **.iso* file and are curious to see what it looks
    like after it is unpacked. You could go ahead and create a bootable DVD or USB
    stick, and then inspect the files, but you really want to unpack it without copying
    it to another device.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linux has a pseudodevice called the *loop* device. This makes your **.iso* image
    accessible like any other filesystem. Follow these steps to mount your **.iso*
    image file in a loop device.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, create a mountpoint in your home directory, giving it whatever name
    you want. In the example it is called *loopiso*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Mount your **.iso* in this new directory. In the example it is a Fedora Linux
    installation image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: See the mounted filesystem in a file manager ([Figure 1-29](#fig-loopiso)).
  prefs: []
  type: TYPE_NORMAL
- en: '![.iso in Fedora Linux 34](Images/lcb2_0129.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1-29\. A mounted *.iso* in Fedora Linux 34
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You can enter the directories and read the files. You won’t be able to edit
    any files because they are mounted read-only.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you are finished, unmount it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The loop device maps a regular file to a virtual partition, and you can set
    up a virtual filesystem in this file. If you want try to creating your own, a
    little bit of web searching will find a lot of how-tos. Start with *man 8 losetup*.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 8 mount*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 losetup*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
