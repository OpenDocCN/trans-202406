["```\n$ vendor/k8s.io/code-generator/generate-groups.sh all \\\n    github.com/programming-kubernetes/cnat/cnat-client-go/pkg/generated\n    github.com/programming-kubernetes/cnat/cnat-client-go/pkg/apis \\\n    cnat:v1alpha1 \\\n    --output-base \"${GOPATH}/src\" \\\n    --go-header-file \"hack/boilerplate.go.txt\"\n```", "```\n$ hack/update-codegen.sh\n```", "```\n// +some-tag\n// +some-other-tag=value\n```", "```\n// +k8s:deepcopy-gen=package\n\n// Package v1 is the v1alpha1 version of the API.\n// +groupName=cnat.programming-kubernetes.info\npackage v1alpha1\n```", "```\ntype Interface interface {\n    Discovery() discovery.DiscoveryInterface\n    CNatV1() atv1alpha1.CNatV1alpha1Interface\n}\n```", "```\n// AtSpec defines the desired state of At\ntype AtSpec struct {\n    // Schedule is the desired time the command is supposed to be executed.\n    // Note: the format used here is UTC time https://www.utctime.net\n    Schedule string `json:\"schedule,omitempty\"`\n    // Command is the desired command (executed in a Bash shell) to be executed.\n    Command string `json:\"command,omitempty\"`\n    // Important: Run \"make\" to regenerate code after modifying this file\n}\n\n// AtStatus defines the observed state of At\ntype AtStatus struct {\n    // Phase represents the state of the schedule: until the command is executed\n    // it is PENDING, afterwards it is DONE.\n    Phase string `json:\"phase,omitempty\"`\n    // Important: Run \"make\" to regenerate code after modifying this file\n}\n\n// +genclient\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\n// At runs a command at a given schedule.\ntype At struct {\n    metav1.TypeMeta   `json:\",inline\"`\n    metav1.ObjectMeta `json:\"metadata,omitempty\"`\n\n    Spec   AtSpec   `json:\"spec,omitempty\"`\n    Status AtStatus `json:\"status,omitempty\"`\n}\n\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\n// AtList contains a list of At\ntype AtList struct {\n    metav1.TypeMeta `json:\",inline\"`\n    metav1.ListMeta `json:\"metadata,omitempty\"`\n    Items           []At `json:\"items\"`\n}\n```", "```\n// +k8s:deepcopy-gen=false\n//\n// Helper is a helper struct, not an API type.\ntype Helper struct {\n    ...\n}\n```", "```\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n```", "```\nfunc (in *T) DeepCopyObject() runtime.Object {\n    if c := in.DeepCopy(); c != nil {\n        return c\n    } else {\n        return nil\n    }\n}\n```", "```\ntype SomeAPIType struct {\n  Foo Foo `json:\"foo\"`\n}\n```", "```\ntype Foo interface {\n    ...\n    DeepCopyFoo() Foo\n}\n```", "```\n// +k8s:deepcopy-gen:interfaces=<package>.Foo\ntype FooImplementation struct {\n    ...\n}\n\n```", "```\n// +k8s:deepcopy-gen:interfaces=.../pkg/registry/rbac/reconciliation.RuleOwner\n// +k8s:deepcopy-gen:interfaces=.../pkg/registry/rbac/reconciliation.RoleBinding\n```", "```\n// +genclient\n```", "```\n// +genclient:noStatus\n```", "```\n// +genclient:nonNamespaced\n```", "```\n// +genclient:noVerbs\n// +genclient:onlyVerbs=create,delete\n// +genclient:skipVerbs=get,list,create,update,patch,delete,watch\n// +genclient:method=Create,verb=create,\n// result=k8s.io/apimachinery/pkg/apis/meta/v1.Status\n```", "```\n// +genclient:method=GetScale,verb=get,subresource=scale,\\\n//    result=k8s.io/api/autoscaling/v1.Scale\n// +genclient:method=UpdateScale,verb=update,subresource=scale,\\\n//    input=k8s.io/api/autoscaling/v1.Scale,result=k8s.io/api/autoscaling/v1.Scale\n```"]