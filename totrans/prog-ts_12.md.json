["```\nmy-app/\n├──dist/\n│ ├──index.d.ts\n│ ├──index.js\n│ └──services/\n│   ├──foo.d.ts\n│   ├──foo.js\n│   ├──bar.d.ts\n│   └──bar.js\n├──src/\n│ ├──index.ts\n│ └──services/\n│   ├──foo.ts\n│   └──bar.ts\n```", "```\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\"\n  }\n}\n```", "```\n{\n  \"compilerOptions\": {\n    \"lib\": [\"es2015\", \"es2016.array.includes\"]\n  }\n}\n```", "```\n{\n  \"compilerOptions\": {\n  \"lib\": [\"es2015\", \"es2016.array.include\", `\"dom\"`]\n  }\n}\n\n```", "```\n    {\n      \"compilerOptions\": {\n        \"composite\": true,\n        \"declaration\": true,\n        \"declarationMap\": true,\n        \"rootDir\": \".\"\n      },\n      \"include\": [\n        \"./**/*.ts\"\n      ],\n      \"references\": [\n        {\n          \"path\": \"../myReferencedProject\",\n          \"prepend\": true\n        }\n      ],\n    }\n    ```", "```\n    {\n      \"files\": [],\n      \"references\": [\n        {\"path\": \"./myProject\"},\n        {\"path\": \"./mySecondProject\"}\n      ]\n    }\n    ```", "```\n    tsc --build # Or, tsc -b for short\n    ```", "```\n{\n  \"compilerOptions\": {\n    \"target\": \"es2015\",\n    \"module\": \"commonjs\"\n  }\n}\n```", "```\n{\n\"compilerOptions\": {\n  \"declaration\": true,\n  \"module\": \"umd\",\n  \"sourceMaps\": true,\n  \"target\": \"es5\"\n  }\n}\n```", "```\n# .npmignore\n\n*.ts # Ignore .ts files\n!*.d.ts # Allow .d.ts files\n```", "```\n# .gitignore\n\n*.d.ts # Ignore .d.ts files\n*.js # Ignore .js files\n```", "```\n# .npmignore\n\nsrc/ # Ignore source files\n```", "```\n# .gitignore\n\ndist/ # Ignore generated files\n```", "```\n{\n  \"name\": \"my-awesome-typescript-project\",\n  \"version\": \"1.0.0\",\n  \"main\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"scripts\": {\n    \"prepublishOnly\": \"tsc -d\"\n  }\n}\n```", "```\n// global.ts\ntype MyGlobal = number\n\n// app.ts\nimport './global'\n```", "```\n// app.js\nimport './global'\n```", "```\n    /// <reference types=\"./global\" />\n    ```", "```\n    /// <reference types=\"jasmine\" />\n    ```", "```\nexport let LogService = {\n  log() {\n    // ...\n  }\n}\n```", "```\ndefine(['require', 'exports'], function(require, exports) {\n  exports.__esModule = true\n  exports.LogService = {\n    log() {\n      // ...\n    }\n  }\n})\n```", "```\n/// <amd-module name=\"LogService\" /> ![1](assets/1.png)\nexport let LogService = { ![2](assets/2.png)\n  log() {\n    // ...\n  }\n}\n```", "```\n*`/// <amd-module name='LogService' />`*\ndefine(`'LogService'``,` ['require', 'exports'], function(require, exports) {\n  exports.__esModule = true\n  exports.LogService = {\n    log() {\n      *`// ...`*\n    }\n  }\n})\n\n```"]