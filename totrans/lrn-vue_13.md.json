["```\nyarn add express\n```", "```\nimport express from 'express'\n\nconst server = express() ![1](assets/1.png)\n\nserver.get('/', (req, res) => { ![2](assets/2.png)\n    res.send(`  ![3](assets/3.png) <!DOCTYPE html>\n        <html>\n        <head>\n            <title>Vue SSR Example</title>\n        </head>\n        <body>\n            <main id=\"app\">Vue SSR Demo</main>\n        </body>\n        </html> `)\n})\n\nserver.listen(3000, () => { console.log('We are ready to go') }) ![4](assets/4.png)\n```", "```\nimport { createSSRApp, ref } from 'vue'\n\nconst App = { ![1](assets/1.png)\n    template: ` <h1>Digital Clock</h1>\n        <p class=\"date\">{{ date }}</p>\n        <p class=\"time\">{{ time }}</p> `,\n    setup() {\n        const date = ref('');\n        const time = ref('');\n\n        setInterval(() => {\n            const WEEKDAYS = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n            const MONTHS = [\n                'Jan', 'Feb', 'Mar',\n                'Apr', 'May', 'Jun',\n                'Jul', 'Aug', 'Sep',\n                'Oct', 'Nov', 'Dev'\n            ];\n\n            const currDate = new Date();\n            const minutes = currDate.getMinutes();\n            const seconds = currDate.getSeconds();\n            const day = WEEKDAYS[currDate.getDay()];\n            const month = MONTHS[currDate.getMonth()].toUpperCase();\n\n            const formatTime = (time) => {\n                return time < 10 ? `0${time}` : time;\n            }\n\n            date.value =\n              `${day}, ${currDate.getDate()} ${month} ${currDate.getFullYear()}`\n            time.value =\n              `${currDate.getHours()}:${formatTime(minutes)}:${formatTime(seconds)}`\n        }, 1000)\n\n        return {\n            date,\n            time\n        }\n    }\n}\n\nexport function createApp() {\n  return createSSRApp(App) ![2](assets/2.png)\n}\n```", "```\nimport { createApp } from './app.js'\nimport express from 'express'\nimport { renderToString } from 'vue/server-renderer';\n\nconst server = express()\n\nserver.get('/', (req, res) => {\n  const app = createApp(); ![1](assets/1.png)\n\n  renderToString(app).then((html) => {\n    res.send(` <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Vue SSR Demo - Digital Clock</title>\n      </head>\n      <body>\n        <div id=\"app\">${html}</div> ![2](assets/2.png) </body>\n    </html> `);\n  });\n});\n\nserver.listen(3000, () => { console.log('We are ready to go') })\n```", "```\nimport { createApp } from './app.js';\n\ncreateApp().mount('#app');\n```", "```\n//... \nserver.get('/', (req, res) => {\n  const app = createApp();\n\n  renderToString(app).then((html) => {\n    res.send(` <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Vue SSR Demo - Digital Clock</title>\n        <script type=\"importmap\"> ![1](assets/1.png) {\n            \"imports\": {\n              \"vue\": \"https://unpkg.com/vue@3/dist/vue.esm-browser.js\"\n            }\n          }\n        </script>\n        <script type=\"module\" src=\"/entry-client.js\"></script> ![2](assets/2.png) </head>\n      <body>\n        <div id=\"app\">${html}</div>\n      </body>\n    </html> `);\n  });\n});\n\nserver.use(express.static('.')); ![3](assets/3.png)\n```", "```\nnpx nuxi init pizza-house\n```", "```\n\"scripts\": {\n    \"build\": \"nuxt build\",\n    \"dev\": \"nuxt dev\",\n    \"generate\": \"nuxt generate\",\n    \"preview\": \"nuxt preview\",\n    \"postinstall\": \"nuxt prepare\"\n},\n```", "```\n<template>\n  <div>\n    <NuxtLayout>\n      <NuxtPage/>\n    </NuxtLayout>\n  </div>\n</template>\n```", "```\n<template>\n    <h1>This is the home view of the Pizza stores</h1>\n</template>\n```", "```\n<template>\n  <div class=\"pizzas-view--container\">\n    <h1>Pizzas</h1>\n    <ul>\n      <li v-for=\"pizza in pizzas\" :key=\"pizza.id\">\n        <PizzaCard :pizza=\"pizza\" />\n      </li>\n    </ul>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { usePizzas } from \"@/composables/usePizzas\";\nimport PizzaCard from \"@/components/PizzaCard.vue\";\n\nconst { pizzas } = usePizzas();\n</script>\n```", "```\nimport type { Pizza } from \"@/types/Pizza\";\nimport { ref, type Ref } from \"vue\";\n\nexport function usePizzas(): { pizzas: Ref<Pizza[]> } {\n  return {\n    pizzas: ref([\n      {\n        id: \"1\",\n        title: \"Pina Colada Pizza\",\n        price: \"10.00\",\n        description:\n          \"A delicious combination of pineapple, coconut, and coconut milk.\",\n        image:\n      \"https://res.cloudinary.com/mayashavin/image/upload/Demo/pina_colada_pizza.jpg\",\n        quantity: 1,\n      },\n      {\n        id: \"2\",\n        title: \"Pepperoni Pizza\",\n        price: \"12.00\",\n        description:\n          \"A delicious combination of pepperoni, cheese, and pineapple.\",\n        image:\n      \"https://res.cloudinary.com/mayashavin/image/upload/Demo/pepperoni_pizza.jpg\",\n        quantity: 2,\n      },\n      {\n        id: \"3\",\n        title: \"Veggie Pizza\",\n        price: \"9.00\",\n        description:\n          \"A delicious combination of mushrooms, onions, and peppers.\",\n        image:\n      \"https://res.cloudinary.com/mayashavin/image/upload/Demo/veggie_pizza.jpg\",\n        quantity: 1,\n        },\n    ]),\n  };\n}\n```", "```\n<template>\n  <section v-if=\"pizza\" class=\"pizza--container\">\n    <img :src=\"pizza.image\" :alt=\"pizza.title\" width=\"500\" />\n    <div class=\"pizza--details\">\n      <h1>{{ pizza.title }}</h1>\n      <div>\n        <p>{{ pizza.description }}</p>\n        <div class=\"pizza-stock--section\">\n          <span>Stock: {{ pizza.quantity || 0 }}</span>\n          <span>Price: ${{ pizza.price }}</span>\n        </div>\n      </div>\n    </div>\n  </section>\n  <p v-else>No pizza found</p>\n</template>\n<script setup lang=\"ts\">\nimport { usePizzas } from \"@/composables/usePizzas\";\n\nconst route = useRoute(); ![1](assets/1.png)\n\nconst { pizzas } = usePizzas();\n\nconst pizza = pizzas.value.find(\n    (pizza) => pizza.id === route.params.id ![2](assets/2.png)\n);\n</script>\n```", "```\n<template>\n    <nav>\n        <NuxtLink to=\"/\">Home</NuxtLink> ![1](assets/1.png)\n        <NuxtLink to=\"/pizzas\">Pizzas</NuxtLink>\n    </nav>\n    <main>\n        <slot /> ![2](assets/2.png)\n    </main>\n</template>\n<style scoped>\nnav {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n  </style>\n```", "```\n<template>\n    <h1>Pizzas Layout</h1>\n    <main>\n        <slot />\n    </main>\n</template>\n```", "```\n<template>\n    <NuxtLayout :name=\"customLayout\">\n        <NuxtPage />\n    </NuxtLayout>\n</template>\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\nconst customLayout = computed(\n    () => {\n      const isPizzaLayout = useRoute().path.startsWith(\"/pizzas/\");\n      return isPizzaLayout ? 'pizzas' : 'default';\n    }\n);\n</script>\n```"]