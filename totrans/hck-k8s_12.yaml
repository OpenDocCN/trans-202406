- en: Appendix B. Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: General
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The official [Kubernetes documentation](https://oreil.ly/lo9ml)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Kubernetes community on [GitHub](https://oreil.ly/wMDRF)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Books
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*Container Security*](https://oreil.ly/LIf6h) by Liz Rice (O’Reilly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Kubernetes: Up and Running*](https://oreil.ly/fbCyP) by Kelsey Hightower,
    Brendan Burns, and Joe Beda (O’Reilly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Cloud Native DevOps with Kubernetes*](https://oreil.ly/pRHof) by John Arundel
    and Justin Domingus (O’Reilly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Managing Kubernetes*](https://oreil.ly/54ANb) by Brendan Burns and Craig
    Tracey (O’Reilly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Kubernetes Cookbook*](https://oreil.ly/PK7jz) by Sébastien Goasguen and Michael
    Hausenblas (O’Reilly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Cybersecurity Ops with bash*](https://oreil.ly/GST5s) by Paul Troncone and
    Carl Albing (O’Reilly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further Reading by Chapter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Intro
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For [Chapter 1](ch01.xhtml#intro) we suggest the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Threat Modeling Manifesto](https://oreil.ly/CfPMy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Open Source Intelligence Methods and Tools: A Practical Guide to Online Intelligence*](https://oreil.ly/DGWCf)
    by Nihad Hassan and Rami Hijazi (Apress)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*The Tao of Open Source Intelligence*](https://oreil.ly/WzyOq) by Stewart
    Bertram (IT Governance Publishing)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“SANS SEC487: Open-Source Intelligence (OSINT) Gathering and Analysis”](https://oreil.ly/j4oUF)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For [Chapter 2](ch02.xhtml#ch-pod-level-resources) we suggest the following
    resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Awesome Kubernetes Security](https://oreil.ly/AqYzG)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“My Arsenal of Cloud Native (Security) Tools”](https://oreil.ly/3BIq0)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“5 Must-Have Kubernetes Security Tools”](https://oreil.ly/7VeGa)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Kubernetes YAML Generator](https://k8syaml.com)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Google Cloud’s “Why Container Security Matters to Your Business”](https://oreil.ly/YLtap)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A comprehensive Kubernetes FAQ](https://oreil.ly/JdULC)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Attacking Kubernetes Clusters Through Your Network Plumbing”](https://oreil.ly/ND7cC)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Kubernetes Volumes Guide*](https://oreil.ly/5mmvf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Further, tooling relevant in this context:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Cloud Container Attack Tool (CCAT)](https://oreil.ly/zwJrn)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Peirates (Kubernetes penetration testing tool)](https://oreil.ly/8aPrg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Hunt for security weaknesses in Kubernetes clusters](https://oreil.ly/i0TWY)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A container analysis and exploitation tool for pentesters and engineers](https://oreil.ly/WFRCa)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Docker Enumeration, Escalation of Privileges and Container Escapes](https://oreil.ly/4JSIZ)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ed is a tool used to identify and exploit accessible UNIX Domain Sockets](https://oreil.ly/XqSM5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RedNix: Hackable NixOS container](https://oreil.ly/18562)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supply Chains
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For [Chapter 4](ch04.xhtml#ch-apps-supply-chain) we suggest the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[“Vulnerabilities in the Core Preliminary Report and Census II of Open Source
    Software”](https://oreil.ly/uR6Eh)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[CII Best Practices Badge Program](https://oreil.ly/J2lXM)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SPDX specifications](https://oreil.ly/f5UXZ)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OWASP Dependency Track](https://oreil.ly/1ZIEM)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[A Go implementation of in-toto with certificate constraint support](https://oreil.ly/VWEds)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Supply Chain Security By Verification - Mitigating Supply Chain Attacks”](https://oreil.ly/wKvL5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Security Considerations for Code Signing”](https://oreil.ly/4UHrg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NCSC’s “Supply chain security guidance”](https://oreil.ly/9RV9p)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MITRE’s “Supply Chain Attack Framework and Attack Patterns”](https://oreil.ly/gmGRd)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Microsoft Supply Chain Integrity Model (SCIM)](https://oreil.ly/WC3Av)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Further, tooling relevant in this context:'
  prefs: []
  type: TYPE_NORMAL
- en: '[OWASP Packman](https://oreil.ly/WnIIs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Security Scorecards](https://oreil.ly/kO9pX)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Open Source Project Criticality Score (Beta)](https://oreil.ly/VQ0b5)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OSS Review Toolkit (ORT)](https://oreil.ly/T3nEl)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Google Binary Authorization/SLSA](https://oreil.ly/mbo5X)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[syft: generate Software Bill of Materials (SBOM) from container images](https://oreil.ly/J7cbb)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Rekor](https://oreil.ly/sYSwp)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Ploigos Software Factory Operator](https://oreil.ly/s4dwJ)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[in-toto: A framework to secure the integrity of software supply chains](https://in-toto.io)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[sigstore](https://oreil.ly/iaC05)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Networking
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For [Chapter 5](ch05.xhtml#ch-networking) we suggest the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[“Securing Your Apps in Kubernetes with NGINX App Protect”](https://oreil.ly/qOm7p)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Kubernetes Ingress with AWS ALB Ingress Controller”](https://oreil.ly/H9mbx)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Exploring Network Policies in Kubernetes”](https://oreil.ly/41rMt)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Best Practices for Kubernetes Network Policies”](https://oreil.ly/SxaSV)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Securing Kubernetes Cluster Networking”](https://oreil.ly/ud2sv)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NIST Special Publication 800-204A: “Building Secure Microservices-based Applications
    Using Service-Mesh Architecture”](https://oreil.ly/9aFZD)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“How to Secure Containers in a Service Mesh such as Istio and Linkerd2”](https://oreil.ly/nBj5A)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Istio Security: Running Microservices on Zero-Trust Networks”](https://oreil.ly/SfO22)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[App Mesh TLS](https://oreil.ly/bTETs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Further, tooling relevant in this context:'
  prefs: []
  type: TYPE_NORMAL
- en: '[CNCF Falco](https://oreil.ly/EdQxb)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sysdig Secure](https://oreil.ly/IlFdt)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NeuVector](https://oreil.ly/eCOk3)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Snyk Container](https://oreil.ly/oPamy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Prisma Cloud](https://oreil.ly/9pd6S)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[StackRox](https://oreil.ly/jWwva)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Aqua Security](https://oreil.ly/as2dO)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[AccuKnox](https://oreil.ly/wha3I)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Policy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For [Chapter 8](ch08.xhtml#ch-policy) we suggest the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '[“Effective RBAC” - Jordan Liggitt](https://oreil.ly/5Z54y)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Configure RBAC in your Kubernetes Cluster”](https://oreil.ly/doIvy)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Testing Kubernetes RBAC”](https://oreil.ly/X8uFu)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“3 Realistic Approaches to Kubernetes RBAC”](https://oreil.ly/F6R13)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Enforcing Policy as Code using OPA and Gatekeeper in Kubernetes”](https://oreil.ly/rwZZz)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Rego Unit Testing”](https://oreil.ly/CLR5l)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[OPA, oso, oh no!](https://oreil.ly/0nOcS)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“Record AWS API calls to improve IAM Policies”](https://oreil.ly/N0SMF)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Further, tooling relevant in this context:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Krane: Kubernetes RBAC Analysis made Easy](https://oreil.ly/Z2Fsa)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[audit2rbac](https://oreil.ly/qVeLA)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[RBAC View](https://oreil.ly/883g7)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[rback](https://oreil.ly/gAuBs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Permission manager](https://oreil.ly/6l7CR)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notable CVEs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Unless noted, these CVEs are patched, and are here to serve only as a historical
    reference.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2017-1002101
  prefs: []
  type: TYPE_NORMAL
- en: Subpath volume mount mishander. Containers using subpath volume mounts with
    any volume type (including nonprivileged pods subject to file permissions) can
    access files/directories outside of the volume including the host’s filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2017-1002102
  prefs: []
  type: TYPE_NORMAL
- en: Downward API host filesystem delete. Containers using a Secret, ConfigMap, projected
    or downwardAPI volume can trigger deletion of arbitrary files/directories from
    the nodes where they are running.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2017-5638
  prefs: []
  type: TYPE_NORMAL
- en: (Non-Kubernetes) Apache Struts invalid `Content-Type` header parsing failure,
    allowing arbitrary code execution. The bug in the Jakarta Multipart parser registered
    the input as OGNL code, converted it to an executable, and moved it to the server’s
    temporary directory.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2018-1002105
  prefs: []
  type: TYPE_NORMAL
- en: API server websocket TLS tunnel error mishandling. Incorrect error response
    handling of proxied upgrade requests in the `kube-apiserver` allowed specially
    crafted requests to establish a connection through the Kubernetes API server to
    backend servers. Subsequent arbitrary requests over the same connection transit
    directly to the backend authenticated with the Kubernetes API server’s TLS credentials.
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2019-16884](https://oreil.ly/4It2O)'
  prefs: []
  type: TYPE_NORMAL
- en: '`runc` hostile image AppArmor bypass. Allows AppArmor restriction bypass because
    `libcontainer/rootfs_linux.go` incorrectly checks mount targets, and thus a malicious
    Docker image can mount over a `/proc` directory.'
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2019-5736](https://oreil.ly/4aaXw)'
  prefs: []
  type: TYPE_NORMAL
- en: '`runc` */proc/self/exe*. `runc` allows attackers to overwrite the host `runc`
    binary (and consequently obtain host root access) by leveraging the ability to
    execute a command as root within one of these types of containers: (1) a new container
    with an attacker-controlled image, or (2) an existing container, to which the
    attacker previously had write access, that can be attached with docker exec. This
    occurs because of file-descriptor mishandling, related to */proc/self/exe*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2019-11249](https://oreil.ly/79ROq)'
  prefs: []
  type: TYPE_NORMAL
- en: '`kubectl cp` `scp` reverse write. To copy files from a container Kubernetes
    runs `tar` inside the container to create a Tar archive, and copies it over the
    network where `kubectl` unpacks it on the user’s machine. If the `tar` binary
    in the container is malicious, it could run any code and output unexpected malicious
    results. An attacker could use this to write files to any path on the user’s machine
    when `kubectl cp` is called, limited only by the system permissions of the local
    user.'
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2018-18264
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes Dashboard before v1.10.1 allows attackers to bypass authentication
    and use Dashboard’s ServiceAccount for reading Secrets within the cluster.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2019-1002100
  prefs: []
  type: TYPE_NORMAL
- en: 'API Server JSON patch Denial of Service. Users that are authorized to make
    HTTP `PATCH` requests to the Kubernetes API Server can send a specially crafted
    patch of type “json-patch” (e.g., `kubectl patch --type json` or `"Content-Type:
    application/json-patch+json"`) that consumes excessive resources while processing.'
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2018-1002100](https://oreil.ly/bN0Fh)'
  prefs: []
  type: TYPE_NORMAL
- en: Original `kubectl cp`. The `kubectl` cp command insecurely handles `tar` data
    returned from the container and can be caused to overwrite arbitrary local files.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2019-1002101
  prefs: []
  type: TYPE_NORMAL
- en: Similar to `CVE-2019-11249`, but extended in that the `untar` function can both
    create and follow symbolic links.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2019-11245
  prefs: []
  type: TYPE_NORMAL
- en: '`mustRunAsNonRoot: true` bypass. Containers for pods that do not specify an
    explicit `runAsUser` attempt to run as uid 0 (root) on container restart, or if
    the image was previously pulled to the node'
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2019-11247
  prefs: []
  type: TYPE_NORMAL
- en: Cluster RBAC mishandler. The Kubernetes `kube-apiserver` mistakenly allows access
    to a cluster-scoped custom resource if the request is made as if the resource
    were namespaced. Authorizations for the resource accessed in this manner are enforced
    using roles and role bindings within the namespace meaning that a user with access
    only to a resource in one namespace could create, view, update, or delete the
    cluster-scoped resource (according to their namespace role privileges).
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2019-11248
  prefs: []
  type: TYPE_NORMAL
- en: '`kubelet` */debug/pprof* information disclosure and denial of service. The
    debugging endpoint */debug/pprof* is exposed over the unauthenticated `kubelet`
    `healthz healthcheck endpoint` port, which can potentially leak sensitive information
    such as internal Kubelet memory addresses and configuration or for limited denial
    of service.'
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2019-11250
  prefs: []
  type: TYPE_NORMAL
- en: Side channel information disclosure. The Kubernetes `client-go` library logs
    request headers at verbosity levels of 7 or higher. This can disclose credentials
    to unauthorized users via logs or command output. Kubernetes components (such
    as `kube-apiserver`) which make use of basic or bearer token authentication and
    run at high verbosity levels are affected.
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2020-8558](https://oreil.ly/9tLAP)'
  prefs: []
  type: TYPE_NORMAL
- en: '`kube-proxy` unexpectedly makes localhost-bound host services available on
    the network.'
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2020-14386
  prefs: []
  type: TYPE_NORMAL
- en: Integer overflow from raw packet on the “loopback” (or localhost) network interface.
    Removing this with `sysctl -w kernel.unprivileged_userns_clone=0` or denying `CAP_NET_RAW`
    protects unpatched kernels from exploitation.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2021-22555
  prefs: []
  type: TYPE_NORMAL
- en: Linux Netfilter local privilege escalation flaw. When processing `setsockopt
    IPT_SO_SET_REPLACE` (or `IP6T_SO_SET_REPLACE`) a local user may exploit memory
    corruption to gain privileges or cause a DoS via a user namespace. A kernel compiled
    with `CONFIG_USER_NS` and `CONFIG_NET_NS` allows an unprivileged user to elevate
    privileges.
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2021-25740](https://oreil.ly/srPzW) (unpatched)'
  prefs: []
  type: TYPE_NORMAL
- en: Endpoint and EndpointSlice permissions allow cross-Namespace forwarding. users
    to send network traffic to locations they would otherwise not have access to via
    a confused deputy attack.
  prefs: []
  type: TYPE_NORMAL
- en: CVE-2021-31440
  prefs: []
  type: TYPE_NORMAL
- en: Incorrect bounds calculation in the Linux kernel eBPF verifier. By bypassing
    the verifier, this can exploit out-of-bounds kernel access to escape, and the
    original proof of concept set UID and GID to 0 and gained `CAP_SYS_MODULE` to
    load an arbitrary kernel outside the container.
  prefs: []
  type: TYPE_NORMAL
- en: '[CVE-2021-25741](https://oreil.ly/irhM8)'
  prefs: []
  type: TYPE_NORMAL
- en: Symlink exchange can allow host filesystem access. A user may be able to create
    a container with subpath volume mounts to access files and directories outside
    of the volume, including on the host filesystem.
  prefs: []
  type: TYPE_NORMAL
