["```\n$ npx create-react-app my-app\n```", "```\n$ npx create-react-app --template typescript my-app\n```", "```\n$ cd my-app\n$ rm yarn.lock\n$ npm install\n```", "```\n$ npm start # or yarn start\n```", "```\n<div id=\"root\"></div>\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n```", "```\nimport logo from './logo.svg'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n```", "```\n$ npm run build\n```", "```\n$ npm run eject\n```", "```\n\"proxy\": \"http://myapiserver\",\n```", "```\n$ npx gatsby new my-app\n```", "```\n$ cd my-app\n$ npm run develop\n```", "```\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <Seo title=\"Home\" />\n    <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <StaticImage\n      src=\"../images/gatsby-astronaut.png\"\n      width={300}\n      quality={95}\n      formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n      alt=\"A Gatsby astronaut\"\n      style={{ marginBottom: `1.45rem` }}\n    />\n    <p>\n      <Link to=\"/page-2/\">Go to page 2</Link> <br />\n      <Link to=\"/using-typescript/\">Go to \"Using TypeScript\"</Link>\n    </p>\n  </Layout>\n)\n\nexport default IndexPage\n```", "```\n$ npm run build\n```", "```\n1389 06:48 component---src-pages-using-typescript-tsx-93b78cfadc08d7d203c6.js\n```", "```\n$ npx create-razzle-app my-app\n```", "```\n$ cd my-app\n$ npm run start\n```", "```\n$ npm run build\n```", "```\n$ npm run start:prod\n```", "```\n$ node_modules/.bin/razzle build --type=spa\n```", "```\n$ npx create-next-app my-app\n```", "```\n$ npx create-next-app --use-npm my-app\n```", "```\n$ cd my-app\n$ npm run dev\n```", "```\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\n\nexport default (req, res) => {\n  res.status(200).json({ name: 'John Doe' })\n}\n```", "```\n$ node_modules/.bin/next export\n```", "```\n<html>\n    <head>\n        <title>No Tools!</title>\n        <script src=\"https://unpkg.com/preact?umd\"></script>\n    </head>\n    <body>\n        <h1>No Tools Preact App!</h1>\n        <div id=\"root\"></div>\n        <script>\n         var h = window.preact.h;\n         var render = window.preact.render;\n\n         var mount = document.getElementById('root');\n\n         render(\n             h('button',\n               {\n                   onClick: function() {\n                       render(h('div', null, 'Hello'), mount);\n                   }\n               },\n               'Click!'),\n             mount\n         );\n        </script>\n    </body>\n</html>\n```", "```\n$ npx preact-cli create default my-app\n```", "```\n$ cd my-app\n$ npm run dev\n```", "```\nimport { h } from 'preact';\nimport style from './style.css';\n\nconst Home = () => (\n    <div class={style.home}>\n        <h1>Home</h1>\n        <p>This is the Home component.</p>\n    </div>\n);\n\nexport default Home;\n```", "```\n$ npm run build\n```", "```\n$ npm install -g nwb\n```", "```\n$ nwb new react-component my-component\n```", "```\nCreating a react-component project...\n? Do you want to create an ES modules build? (Y/n)\n```", "```\n? Do you want to create a UMD build? (y/N)\n```", "```\n$ cd my-component\n$ npm run start\n```", "```\nimport React, { Component } from 'react'\n\nexport default class extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Welcome to React components</h2>\n      </div>\n    )\n  }\n}\n```", "```\n$ npm run build\n```", "```\n$ rails new my-app --webpack=react\n```", "```\n$ cd my-app\n$ rails generate controller Example index\n```", "```\n<h1>Example#index</h1>\n<p>Find me in app/views/example/index.html.erb</p>\n```", "```\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Counter = (props) => {\n  const [count, setCount] = useState(0)\n  return (\n    <div className=\"Counter\">\n      You have clicked the button {count} times.\n      <button onClick={() => setCount((c) => c + 1)}>Click!</button>\n    </div>\n  )\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Counter />,\n    document.body.appendChild(document.createElement('div'))\n  )\n})\n```", "```\n<h1>Example#index</h1>\n<p>Find me in app/views/example/index.html.erb</p>\n<%= javascript_pack_tag 'counter' %>\n```", "```\n$ rails server\n```", "```\n$ preact create default my-element\n```", "```\n$ cd my-element\n$ npm install preact-custom-element\n```", "```\nimport register from 'preact-custom-element'\nimport Converter from './components/Converter'\n\nregister(Converter, 'x-converter', ['currency'])\n```", "```\nimport { h } from 'preact'\nimport { useEffect, useState } from 'preact/hooks'\nimport 'style/index.css'\n\nconst rates = { gbp: 0.81, eur: 0.92, jpy: 106.64 }\n\nexport default ({ currency = 'gbp' }) => {\n  const [curr, setCurr] = useState(currency)\n  const [amount, setAmount] = useState(0)\n\n  useEffect(() => {\n    setCurr(currency)\n  }, [currency])\n\n  return (\n    <div className=\"Converter\">\n      <p>\n        <label htmlFor=\"currency\">Currency: </label>\n        <select\n          name=\"currency\"\n          value={curr}\n          onChange={(evt) => setCurr(evt.target.value)}\n        >\n          {Object.keys(rates).map((r) => (\n            <option value={r}>{r}</option>\n          ))}\n        </select>\n      </p>\n      <p className=\"Converter-amount\">\n        <label htmlFor=\"amount\">Amount: </label>\n        <input\n          name=\"amount\"\n          size={8}\n          type=\"number\"\n          value={amount}\n          onInput={(evt) => setAmount(parseFloat(evt.target.value))}\n        />\n      </p>\n      <p>\n        Cost:\n        {((amount || 0) / rates[curr]).toLocaleString('en-US', {\n          style: 'currency',\n          currency: 'USD',\n        })}\n      </p>\n    </div>\n  )\n}\n```", "```\n$ npm run dev\n```", "```\n<html>\n    <head>\n        <script src=\"https://unpkg.com/babel-polyfill/dist/polyfill.min.js\">\n        </script>\n        <script src=\"https://unpkg.com/@webcomponents/webcomponentsjs\">\n        </script>\n        <!-- Replace this with the address of your custom element -->\n        <script type=\"text/javascript\" src=\"http://localhost:8080/bundle.js\">\n        </script>\n    </head>\n    <body>\n        <h1>Custom Web Element</h1>\n        <div style=\"float: right; clear: both\">\n            <!-- This tag will insert the Preact app -->\n            <x-converter currency=\"jpy\"/>\n        </div>\n        <p>This page contains an example custom element called\n            <code>&lt;x-converter/&gt;</code>,\n            which is being served from a different location</p>\n    </body>\n</html>\n```", "```\n$ npx create-react-app my-app\n$ cd my-app\n```", "```\n$ npx sb init\n```", "```\n$ npm run storybook\n```", "```\nimport React from 'react';\n\nimport { Button } from './Button';\n\nexport default {\n  title: 'Example/Button',\n  component: Button,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n};\n\nconst Template = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n```", "```\n$ npx create-react-app --use-npm my-app\n```", "```\n$ cd my-app\n$ npm install cypress --save-dev\n```", "```\n{\n  \"baseUrl\": \"http://localhost:3000/\"\n}\n```", "```\n$ npm start\n```", "```\n$ npx cypress open\n```", "```\ndescribe('screenshot', () => {\n    it('should be able to take a screenshot', () => {\n        cy.visit('/');\n        cy.screenshot('frontpage');\n    });\n});\n```", "```\ncy.route(\"/api/server?*\", [{some: 'Data'}])\n```"]