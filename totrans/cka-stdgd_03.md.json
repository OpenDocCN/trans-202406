["```\n$ kubectl create deployment app-cache --image=memcached:1.6.8 --replicas=4\ndeployment.apps/app-cache created\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: app-cache\n  labels:\n    app: app-cache\nspec:\n  replicas: 4\n  selector:\n    matchLabels:\n      app: app-cache\n  template:\n    metadata:\n      labels:\n        app: app-cache\n    spec:\n      containers:\n      - name: memcached\n        image: memcached:1.6.8\n```", "```\n$ kubectl get deployments\nNAME        READY   UP-TO-DATE   AVAILABLE   AGE\napp-cache   4/4     4            4           125m\n```", "```\n$ kubectl get pods\nNAME                         READY   STATUS    RESTARTS   AGE\napp-cache-596bc5586d-84dkv   1/1     Running   0          6h5m\napp-cache-596bc5586d-8bzfs   1/1     Running   0          6h5m\napp-cache-596bc5586d-rc257   1/1     Running   0          6h5m\napp-cache-596bc5586d-tvm4d   1/1     Running   0          6h5m\n```", "```\n$ kubectl describe deployment app-cache\nName:                   app-cache\nNamespace:              default\nCreationTimestamp:      Sat, 07 Aug 2021 09:44:18 -0600\nLabels:                 app=app-cache\nAnnotations:            deployment.kubernetes.io/revision: 1\nSelector:               app=app-cache\nReplicas:               4 desired | 4 updated | 4 total | 4 available | \\\n                        0 unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=app-cache\n  Containers:\n   memcached:\n    Image:        memcached:1.6.10\n    Port:         <none>\n    Host Port:    <none>\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Progressing    True    NewReplicaSetAvailable\n  Available      True    MinimumReplicasAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   app-cache-596bc5586d (4/4 replicas created)\nEvents:          <none>\n```", "```\n$ kubectl get deployments,pods,replicasets\nNAME                        READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/app-cache   4/4     4            4           6h47m\n\nNAME                             READY   STATUS    RESTARTS   AGE\npod/app-cache-596bc5586d-84dkv   1/1     Running   0          6h47m\npod/app-cache-596bc5586d-8bzfs   1/1     Running   0          6h47m\npod/app-cache-596bc5586d-rc257   1/1     Running   0          6h47m\npod/app-cache-596bc5586d-tvm4d   1/1     Running   0          6h47m\n\nNAME                                   DESIRED   CURRENT   READY   AGE\nreplicaset.apps/app-cache-596bc5586d   4         4         4       6h47m\n```", "```\n$ kubectl delete deployment app-cache\ndeployment.apps \"app-cache\" deleted\n$ kubectl get deployments,pods,replicasets\nNo resources found in default namespace.\n```", "```\n$ kubectl set image deployment app-cache memcached=memcached:1.6.10 --record\ndeployment.apps/app-cache image updated\n```", "```\n$ kubectl rollout status deployment app-cache\nWaiting for rollout to finish: 2 out of 4 new replicas have been updated...\ndeployment \"app-cache\" successfully rolled out\n```", "```\n$ kubectl rollout history deployment app-cache\ndeployment.apps/app-cache\nREVISION  CHANGE-CAUSE\n1         <none>\n2         kubectl set image deployment app-cache memcached=memcached:1.6.10 \\\n          --record=true\n```", "```\n$ kubectl rollout history deployments app-cache --revision=2\ndeployment.apps/app-cache with revision #2\nPod Template:\n  Labels:\tapp=app-cache\n\tpod-template-hash=596bc5586d\n  Annotations:\tkubernetes.io/change-cause: kubectl set image deployment \\\n                app-cache memcached=memcached:1.6.10 --record=true\n  Containers:\n   memcached:\n    Image:\tmemcached:1.6.10\n    Port:\t<none>\n    Host Port:\t<none>\n    Environment:\t<none>\n    Mounts:\t<none>\n  Volumes:\t<none>\n```", "```\n$ kubectl rollout undo deployment app-cache --to-revision=1\ndeployment.apps/app-cache rolled back\n```", "```\n$ kubectl rollout history deployment app-cache\ndeployment.apps/app-cache\nREVISION  CHANGE-CAUSE\n2         kubectl set image deployment app-cache memcached=memcached:1.6.10 \\\n          --record=true\n3         <none>\n```", "```\n$ kubectl scale deployment app-cache --replicas=6\ndeployment.apps/app-cache scaled\n```", "```\n$ kubectl get pods\nNAME                         READY   STATUS              RESTARTS   AGE\napp-cache-5d6748d8b9-6cc4j   1/1     ContainerCreating   0          11s\napp-cache-5d6748d8b9-6rmlj   1/1     Running             0          28m\napp-cache-5d6748d8b9-6z7g5   1/1     ContainerCreating   0          11s\napp-cache-5d6748d8b9-96dzf   1/1     Running             0          28m\napp-cache-5d6748d8b9-jkjsv   1/1     Running             0          28m\napp-cache-5d6748d8b9-svrxw   1/1     Running             0          28m\n$ kubectl get pods\nNAME                         READY   STATUS    RESTARTS   AGE\napp-cache-5d6748d8b9-6cc4j   1/1     Running   0          3m17s\napp-cache-5d6748d8b9-6rmlj   1/1     Running   0          32m\napp-cache-5d6748d8b9-6z7g5   1/1     Running   0          3m17s\napp-cache-5d6748d8b9-96dzf   1/1     Running   0          32m\napp-cache-5d6748d8b9-jkjsv   1/1     Running   0          31m\napp-cache-5d6748d8b9-svrxw   1/1     Running   0          32m\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis\n  namespace: default\n  labels:\n    app: redis\nspec:\n  ports:\n  - port: 6379\n    protocol: TCP\n  selector:\n    app: redis\n  type: ClusterIP\n  clusterIP: None\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  replicas: 1\n  serviceName: \"redis\"\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:6.2.5\n        command: [\"redis-server\", \"--appendonly\", \"yes\"]\n        ports:\n        - containerPort: 6379\n          name: web\n        volumeMounts:\n        - name: redis-vol\n          mountPath: /data\n  volumeClaimTemplates:\n  - metadata:\n      name: redis-vol\n    spec:\n      accessModes: [\"ReadWriteOnce\"]\n      resources:\n        requests:\n          storage: 1Gi\n```", "```\n$ kubectl create -f redis.yaml\nservice/redis created\nstatefulset.apps/redis created\n$ kubectl get statefulset redis\nNAME    READY   AGE\nredis   1/1     2m10s\n$ kubectl get pods\nNAME      READY   STATUS    RESTARTS   AGE\nredis-0   1/1     Running   0          2m\n```", "```\n$ kubectl scale statefulset redis --replicas=3\nstatefulset.apps/redis scaled\n$ kubectl get statefulset redis\nNAME    READY   AGE\nredis   3/3     3m43s\n$ kubectl get pods\nNAME      READY   STATUS    RESTARTS   AGE\nredis-0   1/1     Running   0          101m\nredis-1   1/1     Running   0          97m\nredis-2   1/1     Running   0          97m\n```", "```\n$ kubectl autoscale deployment app-cache --cpu-percent=80 --min=3 --max=5\nhorizontalpodautoscaler.autoscaling/app-cache autoscaled\n```", "```\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: app-cache\nspec:\n  maxReplicas: 5\n  minReplicas: 3\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: app-cache\n  targetCPUUtilizationPercentage: 80\n```", "```\n$ kubectl get hpa\nNAME        REFERENCE              TARGETS         MINPODS   MAXPODS   REPLICAS \\\n  AGE\napp-cache   Deployment/app-cache   <unknown>/80%   3         5         4        \\\n  58s\n```", "```\n# ...\nspec:\n  # ...\n  template:\n    # ...\n    spec:\n      containers:\n      - name: memcached\n        # ...\n        resources:\n          requests:\n            cpu: 250m\n          limits:\n            cpu: 500m\n```", "```\n$ kubectl get hpa\nNAME        REFERENCE              TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\napp-cache   Deployment/app-cache   15%/80%   3         5         4          58s\n```", "```\n$ kubectl describe hpa app-cache\nName:                                                  app-cache\nNamespace:                                             default\nLabels:                                                <none>\nAnnotations:                                           <none>\nCreationTimestamp:                                     Sun, 15 Aug 2021 \\\n                                                       15:54:11 -0600\nReference:                                             Deployment/app-cache\nMetrics:                                               ( current / target )\n  resource cpu on pods  (as a percentage of request):  0% (1m) / 80%\nMin replicas:                                          3\nMax replicas:                                          5\nDeployment pods:                                       3 current / 3 desired\nConditions:\n  Type            Status  Reason            Message\n  ----            ------  ------            -------\n  AbleToScale     True    ReadyForNewScale  recommended size matches current size\n  ScalingActive   True    ValidMetricFound  the HPA was able to successfully \\\n  calculate a replica count from cpu resource utilization (percentage of request)\n  ScalingLimited  True    TooFewReplicas    the desired replica count is less \\\n  than the minimum replica count\nEvents:\n  Type    Reason             Age   From                       Message\n  ----    ------             ----  ----                       -------\n  Normal  SuccessfulRescale  13m   horizontal-pod-autoscaler  New size: 3; \\\n  reason: All metrics below target\n```", "```\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: app-cache\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: app-cache\n  minReplicas: 3\n  maxReplicas: 5\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 80\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: AverageValue\n        averageValue: 500Mi\n```", "```\n...\nspec:\n  ...\n  template:\n    ...\n    spec:\n      containers:\n      - name: memcached\n        ...\n        resources:\n          requests:\n            cpu: 250m\n            memory: 100Mi\n          limits:\n            cpu: 500m\n            memory: 500Mi\n```", "```\n$ kubectl get hpa\nNAME        REFERENCE              TARGETS                 MINPODS   MAXPODS \\\n  REPLICAS   AGE\napp-cache   Deployment/app-cache   1994752/500Mi, 0%/80%   3         5       \\\n  3          2m14s\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: memcached\nspec:\n  containers:\n  - name: memcached\n    image: memcached:1.6.8\n    env:\n    - name: MEMCACHED_CONNECTIONS\n      value: \"2048\"\n    - name: MEMCACHED_THREADS\n      value: \"150\"\n```", "```\n$ kubectl create configmap db-config --from-literal=DB_HOST=mysql-service \\\n  --from-literal=DB_USER=backend\nconfigmap/db-config created\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config\ndata:\n  DB_HOST: mysql-service\n  DB_USER: backend\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    envFrom:\n    - configMapRef:\n        name: db-config\n```", "```\n$ kubectl exec backend -- env\n...\nDB_HOST=mysql-service\nDB_USER=backend\n...\n```", "```\n{\n    \"db\": {\n      \"host\": \"mysql-service\",\n      \"user\": \"backend\"\n    }\n}\n```", "```\n$ kubectl create configmap db-config --from-file=db.json\nconfigmap/db-config created\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    volumeMounts:\n    - name: db-config-volume\n      mountPath: /etc/config\n  volumes:\n  - name: db-config-volume\n    configMap:\n      name: db-config\n```", "```\n$ kubectl exec -it backend -- /bin/sh\n# ls -1 /etc/config\ndb.json\n# cat /etc/config/db.json\n{\n    \"db\": {\n      \"host\": \"mysql-service\",\n      \"user\": \"backend\"\n    }\n}\n```", "```\n$ kubectl create secret generic db-creds --from-literal=pwd=s3cre!\nsecret/db-creds created\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: db-creds\ntype: Opaque\ndata:\n  pwd: czNjcmUh\n```", "```\n$ echo -n 's3cre!' | base64\nczNjcmUh\n\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: secret-basic-auth\ntype: kubernetes.io/basic-auth\nstringData:\n  username: bmuschko\n  password: secret\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    envFrom:\n    - secretRef:\n        name: secret-basic-auth\n```", "```\n$ kubectl exec backend -- env\n...\nusername: bmuschko\npassword: secret\n...\n```", "```\n$ cp ~/.ssh/id_rsa ssh-privatekey\n$ kubectl create secret generic secret-ssh-auth --from-file=ssh-privatekey \\\n  --type=kubernetes.io/ssh-auth\nsecret/secret-ssh-auth created\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: backend\nspec:\n  containers:\n  - image: bmuschko/web-app:1.0.1\n    name: backend\n    volumeMounts:\n    - name: ssh-volume\n      mountPath: /var/app\n      readOnly: true\n  volumes:\n  - name: ssh-volume\n    secret:\n      secretName: secret-ssh-auth\n```", "```\n$ kubectl exec -it backend -- /bin/sh\n# ls -1 /var/app\nssh-privatekey\n# cat /var/app/ssh-privatekey\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,8734C9153079F2E8497C8075289EBBF1\n...\n-----END RSA PRIVATE KEY-----\n```"]