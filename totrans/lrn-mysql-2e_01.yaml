- en: Chapter 1\. Installing MySQL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let’s begin our learning path by installing MySQL and accessing it for the first
    time.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: Note that we do not rely on a single version of MySQL for this book. Instead,
    we have drawn on our collective knowledge of MySQL in the real world. The book’s
    core is focused on Linux operating systems (mostly Ubuntu/Debian and CentOS/RHEL
    or its derivatives) and on MySQL 5.7 and MySQL 8.0, because those are what we
    consider the “current” versions capable of production workloads. The MySQL 5.7
    and 8.0 series are still under development, which means that newer versions with
    bug fixes and new features will continue to be released.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'With MySQL becoming the [most popular](https://oreil.ly/pPG4q) open source
    database (Oracle, which ranks first, is not open source), the demand for having
    a fast installation process has increased. You can think of installing MySQL from
    scratch as similar to baking a cake: the source code is the recipe. But even with
    the source code available, the recipe for building software is not easy to follow.
    It takes time to compile, and usually, it is necessary to install additional development
    libraries that expose production environments to risk. Say you want a chocolate
    cake; even if you have the instructions for how to make it yourself, you may not
    want to mess up your kitchen, or you may not have the time to bake it, so you
    go to a bakery and buy one instead. For MySQL, when you want it ready to use without
    the effort involved in compiling it, you can use the *distribution packages*.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Distribution packages for MySQL are available for diverse platforms, including
    Linux distributions, Windows, and macOS. These packages provide a flexible and
    fast way to start using MySQL. Returning to the chocolate cake example, suppose
    you want to change something. Maybe you want a white chocolate cake. For MySQL,
    we have what are called forks, which include some different options. We’ll look
    at a few of these in the next section.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: MySQL Forks
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In software engineering, a *fork* occurs when someone copies the source code
    and starts their own path of independent development and support. The fork can
    follow a track close to that of the original version, as the Percona distribution
    of MySQL does, or drift away, like MariaDB. Because the MySQL source code is open
    and free, new projects can fork the code without permission from its original
    creator. Let’s take a look at a few of the most notable forks.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: MySQL Community Edition
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: MySQL Community Edition, also known as the *upstream* or *vanilla* version of
    MySQL, is the open source version distributed by Oracle. This version drives the
    development of the InnoDB engine and new features, and it is the first one to
    receive updates, new features, and bug fixes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Percona Server for MySQL
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Percona distribution of MySQL is a free, open source, drop-in replacement
    for MySQL Community Edition. The development closely follows that version, focusing
    on improving performance and the overall MySQL ecosystem. Percona Server also
    includes additional enhancements like the MyRocks engine, an Audit Log plugin,
    and a PAM Authentication plugin. Percona was cofounded by [Peter Zaitsev](https://oreil.ly/MfiKb)
    and [Vadim Tkachenko](https://oreil.ly/283nR).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: MariaDB Server
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Created by [Michael “Monty” Widenius](https://oreil.ly/PRoMh) and distributed
    by the MariaDB Foundation, MariaDB Server is by far the fork that has drifted
    the furthest away from vanilla MySQL. In recent years it has developed new features
    and engines such as MariaDB ColumnStore, and it was the first database to integrate
    Galera 4 clustering functionality.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: MySQL Enterprise Edition
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: MySQL Enterprise Edition is currently the only version with a commercial license
    (which means you need to pay to use it, like a Windows license). Also distributed
    by Oracle, it contains all the functionality of the Community Edition plus exclusive
    features for security, backup, and high availability.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: Installation Choices and Platforms
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, you must choose the MySQL version compatible with your operating system
    (OS). You can verify compatibility with the [MySQL website](https://oreil.ly/DTRSR).
    The same support policies are available for [Percona Server](https://oreil.ly/1ahne)
    and [MariaDB](https://oreil.ly/7SYE4).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'We often hear the question: is it possible to install MySQL on an OS that is
    not supported? Most of the time, the answer is yes. It is possible to install
    MySQL on Windows 7, for example, but the risks of hitting a bug or facing unpredictable
    behavior (like memory leaks or underperformance) are high. Because of these risks,
    we do not recommend doing this for production environments.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to decide whether to install a *development* or *General Availability*
    (GA) release. Development releases have the newest features, but we do not recommend
    them for production because they are not stable. GA releases, also called *production*
    or *stable* releases, are meant for production use.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-19
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: We highly recommend using the most recent GA release because this will include
    the latest stable bug fixes and performance improvements.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: The last thing to decide is which distribution format to install for the operating
    system. For most use cases, a binary distribution fits. Binary distributions are
    available in native format for many platforms, such as *.rpm* packages for Linux
    or *.dmg* packages for macOS. The distributions are also available in generic
    formats, such as *.zip* archives or compressed *.tar* files (*tarballs*). On Windows,
    you can use the MySQL Installer to install a binary distribution.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  id: totrans-22
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Watch out for whether the version is 32-bit or 64-bit. The rule of thumb is
    to pick the 64-bit version. Unless you are working with an ancient OS, you should
    *not* select the 32-bit version. This is because 32-bit processors can handle
    only a limited amount of RAM (4 GB or less), whereas 64-bit processors are capable
    of addressing much more memory.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: The installation process consists of four major steps, outlined in the following
    sections. It’s essential to follow these correctly and to set the minimum security
    requirements for the MySQL database.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Download the Distribution that You Want to Install
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each distribution has its owner and, by consequence, its source. Some Linux
    distributions provide default packages in their repositories. For example, on
    CentOS 8, the MySQL vanilla distribution is available from the default repositories.
    When the OS has default packages available, it is unnecessary to download MySQL
    from a website or configure a repository yourself, which facilitates the installation
    process.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: 'We will demonstrate how to install the repositories and download the files
    without the need to go to the website during the installation process. However,
    if you do want to download MySQL yourself, you can use the following links:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '[MySQL Community Server](https://oreil.ly/sBR5i)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Percona Server for MySQL](https://oreil.ly/R9oO4)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MariaDB Server](https://oreil.ly/a78XW)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2\. Install the Distribution
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Installing consists of the elementary steps to make MySQL functional and bring
    it online, but not securing MySQL. For example, at this point, the MySQL root
    user can connect without a password, which is quite hazardous since the root user
    has privileges to perform every action, including dropping a database.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Perform Any Necessary Post-Installation Setup
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This step is about making sure the MySQL server is working correctly. It is
    essential to make sure that your server is secure, and the first step for this
    is executing the *mysql_secure_installation* script. You’ll change the password
    for the root user, disable access for the root user from a remote server, and
    remove the test database.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Run Benchmarks
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some DBAs run benchmarks for each deployment to measure whether the performance
    is suitable for the project they are using it for. The most common tool for this
    is [`sysbench`](https://oreil.ly/ioyXF). It’s essential to highlight here that
    `sysbench` performs a *synthetic workload*, whereas when the application is running,
    we call it the *real workload*. Synthetic workloads usually provide reports about
    the maximum server performance, but they can’t reproduce the real-world workload
    (with its inherent locks, different query execution times, stored procedures,
    triggers, and so on).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: In the next section we’ll walk through the details of the installation process
    for a few of the most commonly used platforms.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL on Linux
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Linux ecosystem is diverse and has many variants, including Red Hat Enterprise
    Linux (RHEL), CentOS, Ubuntu, Debian, and others. This section focuses on only
    the most popular ones—otherwise, this book would be entirely about the installation
    process!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL on CentOS 7
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*CentOS*, short for Community Enterprise Linux Operating System, was founded
    in 2004, and Red Hat acquired it in 2014\. CentOS is the community version of
    Red Hat, so they’re pretty much identical, but CentOS is free, and support comes
    from the community instead of Red Hat itself. CentOS 7 was released in 2014, and
    its end-of-life date is in 2024.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL 8.0
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To install MySQL 8.0 on CentOS 7 using the *yum* repository, complete the following
    steps.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Log in to Linux server
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Usually, for security reasons, users log into Linux servers as nonprivileged
    users. Here is an example of a user logging into Linux from a macOS terminal using
    a private key:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After you’ve successfully connected, you’ll see something like this in the
    terminal:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Become root in Linux
  id: totrans-49
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once you’re connected to the server, you need to become root:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will then see a prompt like the following in your terminal:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Becoming root is important because to install MySQL it is necessary to perform
    tasks such as creating the MySQL user in Linux, configuring directories, and setting
    permissions. It is also possible to use the `sudo` command for all examples we
    will show that should be executed by the root user. However, if you forget to
    prefix a command with `sudo`, the installation process will be incomplete.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This chapter will use the Linux root user in the majority of the examples (represented
    by the prompt `#` in the code lines). Another advantage of the `#` representation
    is that this is also the comment character in Linux. If you blindly copy/paste
    lines from the book, you won’t run any real commands in the shell.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Configure the yum repository
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Execute the following command to configure the MySQL *yum* repository:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Install MySQL 8.0 Community Server
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Because the MySQL *yum* repository has repositories for multiple MySQL versions
    (5.7 and 8.0 major versions), first we have to disable all repositories:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we need to enable the MySQL 8.0 repository and execute the following
    command to install MySQL 8.0:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Start the MySQL service
  id: totrans-65
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Now, start the MySQL service with the `systemctl` command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'It is also possible to start the MySQL process manually, which can be useful
    to troubleshoot initialization problems when MySQL is refusing to start. To start
    manually, indicate the location of the *my.cnf* file and which user can manipulate
    the database files and the process:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Discover the default password for the root user
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'When you install MySQL 8.0, MySQL creates a temporary password for the root
    user account. To identify the password of the root user account, execute the following
    command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The command provides output like the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Secure the MySQL installation
  id: totrans-75
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'MySQL provides a shell script that you can run on Unix systems, *mysql_secure_installation*,
    that enables you to improve the security of your server installation in the following
    ways:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: You can set a password for the root account.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can disable root access from outside the localhost.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can remove anonymous user accounts.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can remove the test database, which by default can be accessed by anonymous
    users.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Execute the command `mysql_secure_installation` to secure the MySQL server:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'It will prompt you for the current password of the root account:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Enter the temporary password obtained in the previous step and press Enter.
    The following message will appear:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-87
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This section will cover only the basics of changing the root password to grant
    access to the MySQL server. We will show more details about granting privileges
    and creating a password policy in [Chapter 8](ch08.xhtml#CH8_USER_MANAGEMENT).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: 'You will need to enter the new password for the root account twice. More recent
    MySQL versions come with a validation policy, which means that the new password
    needs to respect minimal requirements to be accepted. The default requirements
    are that passwords must be at least eight characters long and include:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: At least one numeric character
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one lowercase character
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one uppercase character
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At least one special (nonalphanumeric) character
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, it will prompt you with some yes/no questions about whether you want
    to make some initial setup changes. To ensure maximum protection, we recommend
    removing anonymous users, disabling remote root login, and removing the test database
    (i.e., answering *yes* for all options):'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Connect to MySQL
  id: totrans-96
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This step is optional, but we use it to verify that we executed all the steps
    correctly. Use this command to connect to the MySQL server:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'It will prompt for the password of the root user. Type the password and press
    Enter:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If successful, it will show the MySQL command line:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Start MySQL 8.0 upon server start (optional)
  id: totrans-103
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To set MySQL to start whenever the server boots up, use the following command:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Installing MariaDB 10.5
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To install MariaDB 10.5 on CentOS 7, you’ll need to execute similar steps as
    for the vanilla MySQL distribution.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-108
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, we need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: Install the MariaDB repository
  id: totrans-110
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The following set of commands will download the MariaDB repo and configure
    it for the next step. Note that in the `yum` commands, we are using the `-y` option.
    This option tells Linux to assume the answer is *yes* for all subsequent questions:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Install MariaDB
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'With the repository configured, the next command will install the latest stable
    version of MariaDB and its dependencies:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The end of the output will be similar to this:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The *Complete!* at the end of the log indicates a successful installation.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Start MariaDB
  id: totrans-119
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'With MariaDB installed, initialize the service with the `systemctl` command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'You can use this command to verify its status:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Secure MariaDB
  id: totrans-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'At this point, MariaDB will be running in insecure mode. In contrast to MySQL
    8.0, MariaDB will have an empty root password so you can access it instantly:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'You can execute `mysql_secure_installation` to secure MariaDB just like you
    would for MySQL 8.0 (see the previous section for details). There is a slight
    variation in output, with one extra question:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Answering *yes* changes the connection from TCP/IP to Unix socket mode. We will
    discuss the different connection types in [“MySQL 5.7 Default Files”](#MYSQL-SOCKET-TCP).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Installing Percona Server 8.0
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install Percona Server 8.0 on CentOS 7 using the following step.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-134
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Install the Percona repository
  id: totrans-136
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You can install the Percona *yum* repository by running the following command
    as root or with `sudo`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The installation creates a new repository file, */etc/yum.repos.d/percona-original-release.repo*.
    Now, enable the Percona Server 8.0 repository using this command:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Install Percona Server 8.0
  id: totrans-141
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To install the server, execute this command:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Initialize Percona Server 8.0 with systemctl
  id: totrans-144
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once you’ve installed the Percona Server 8.0 binaries, start the service:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'And validate its status:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: At this point, the steps are similar to the vanilla installation. Refer to the
    sections on obtaining the temporary password and executing the `mysql_secure_installation`
    command in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL 5.7
  id: totrans-151
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install MySQL 5.7 on CentOS 7 using the following steps.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-153
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Install the MySQL 5.7 repository
  id: totrans-155
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You can install the MySQL 5.7 *yum* repository by running the following command
    as root or with `sudo`:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The installation creates a new repository file, */etc/yum.repos.d/mysql-community.repo*.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Install the MySQL 5.7 binaries
  id: totrans-159
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To install the server, execute this command:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Initialize MySQL 5.7 with systemctl
  id: totrans-162
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once you’ve installed the MySQL 5.7 binaries, start the service:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'And run this command to validate its status:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: At this point, the steps are similar to the MySQL 8.0 vanilla installation.
    Refer to the sections on obtaining the temporary password and executing the `mysql_secure_installation`
    command in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Installing Percona Server 5.7
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install Percona Server 5.7 on CentOS 7 using the following steps.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-170
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: Install the Percona repository
  id: totrans-172
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You can install the Percona *yum* repository by running the following command
    as root or with `sudo`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The installation creates a new repository file, */etc/yum.repos.d/percona-original-release.repo*.
    Use this command to enable the Percona Server 5.7 repository:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Install the Percona Server 5.7 binaries
  id: totrans-177
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To install the server, execute this command:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Initialize Percona Server 5.7 with systemctl
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once you’ve installed the Percona Server 5.7 binaries, start the service:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'And validate its status:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: At this point, the steps are similar to the MySQL 8.0 vanilla installation.
    Refer to the sections on obtaining the temporary password and executing the `mysql_secure_installation`
    command in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL on CentOS 8
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The current version of CentOS is CentOS 8, and it is built on top of RHEL 8\.
    Typically, CentOS enjoys the same ten-year support lifecycle as RHEL itself. This
    traditional support lifecycle would give CentOS 8 an end-of-life date in 2029\.
    However, in December 2020, a Red Hat announcement signaled the intention to put
    a headstone on CentOS 8’s grave much sooner—in 2021\. (Red Hat will support CentOS
    7 alongside RHEL 7 through 2024.) Current CentOS users will need to migrate either
    to RHEL itself or to the newer CentOS Stream project. Some community projects
    are arising, but at this point, the future of CentOS is uncertain.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: However, we will share the installation steps here since many users are using
    RHEL 8 and Oracle Linux 8 in the industry.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL 8.0
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The latest MySQL 8.0 version is available to install from the default AppStream
    repository using the MySQL module that the CentOS 8 and RHEL 8 systems enable
    by default. So, there is some variation from the traditional `yum` method. Let’s
    take a look at the details.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-191
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: Install the MySQL 8.0 binaries
  id: totrans-193
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Run the following command to install the `mysql-server` package and a number
    of its dependencies:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'When prompted, press **y** and then Enter to confirm that you want to proceed:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Start MySQL
  id: totrans-198
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'At this point, you’ve installed MySQL on your server, but it isn’t yet operational.
    The package you installed configures MySQL to run as a `systemd` service named
    `mysqld.service`. To start MySQL, you need to use the `systemctl` command:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Check if the service is running
  id: totrans-201
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To check if the service is running correctly, run the following command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'If you successfully started MySQL, the output will show that the MySQL service
    is active:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Secure MySQL 8.0
  id: totrans-207
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: As with installing MySQL 8.0 on CentOS 7, you need to execute the `mysql_secure_installation`
    command (see the relevant section in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7)
    for details). The main difference is that there is *not* a temporary password
    for CentOS 8, so when the script requests the root password, leave it blank and
    press Enter.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: Start MySQL 8.0 upon server start (optional)
  id: totrans-209
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To set MySQL to start whenever the server boots up, use the following command:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Installing Percona Server 8.0
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To install Percona Server 8.0 on CentOS 8, you need to install the repository
    first. Let’s walk through the steps.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-214
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: Install the Percona Server 8.0 binaries
  id: totrans-216
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Run the following command to install the Percona repository:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'When prompted, press **y** and then Enter to confirm that you want to proceed:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Enable the repository for Percona 8.0
  id: totrans-221
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The installation creates a new repository file in */etc/yum.repos.d/percona-original-release.repo*.
    Enable the Percona Server 8.0 repository using this command:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The command prompts you to disable the RHEL 8 module for MySQL. You can do
    this now by pressing **y**:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Or do it manually with the following command:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Install the Percona Server 8.0 binaries
  id: totrans-228
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You’re now ready to install Percona Server 8.0 on your CentOS 8/RHEL 8 server.
    To avoid being prompted again about whether you want to proceed, add the `-y`
    to the command line:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: Start and secure Percona Server 8.0
  id: totrans-231
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Now that you’ve installed the Percona Server 8.0 binaries, you can start the
    `mysqld` service and set it to start at system boot:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Check the service status
  id: totrans-234
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'It is important to validate that you’ve completed all the steps successfully.
    Use this command to check the status of the service:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Tip
  id: totrans-238
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'If you ever want to disable the option of MySQL starting up at boot, you can
    do so by running the following command:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Installing MySQL 5.7
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install MySQL 5.7 on CentOS 8 using the following steps.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-243
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: Disable the MySQL default module
  id: totrans-245
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Systems such as RHEL 8, Oracle Linux 8, and CentOS 8 enable the MySQL module
    by default. Unless this module is disabled, it masks packages provided by MySQL
    repositories, preventing you from installing a version different than MySQL 8.0\.
    So, use these commands to remove this default module:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Configure the MySQL 5.7 repository
  id: totrans-248
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'There is no MySQL repository for CentOS 8, so we’ll use the CentOS 7 repository
    instead as a reference. Create a new repository file:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'And paste the following data into the file:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Install the MySQL 5.7 binaries
  id: totrans-253
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'With the default module disabled and the repository configured, run the following
    command to install the `mysql-server` package and its dependencies:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE63]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'When prompted, press **y** and then Enter to confirm that you want to proceed:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE64]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Start MySQL
  id: totrans-258
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You’ve installed the MySQL binaries on your server, but it isn’t yet operational.
    The package you installed configures MySQL to run as a `systemd` service named
    `mysqld.service`. To start MySQL, you need to use the `systemctl` command:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE65]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Check if the service is running
  id: totrans-261
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To check that the service is running correctly, run the following command:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE66]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'If you successfully started MySQL, the output will show that the MySQL service
    is active:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE67]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Secure MySQL 5.7
  id: totrans-267
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: At this point, the steps are similar to the MySQL 8.0 vanilla installation.
    Refer to the sections on obtaining the temporary password and executing the `mysql_secure_installation`
    command in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
- en: Start MySQL 5.7 upon server start (optional)
  id: totrans-269
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To set MySQL to start whenever the server boots up, use the following command:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE69]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: Installing MySQL on Ubuntu 20.04 LTS (Focal Fossa)
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Ubuntu](https://ubuntu.com) is a Linux distribution based on Debian that is
    composed mostly of free and open source software. Officially, there are three
    Ubuntu editions: Desktop, Server, and Core for IoT devices and robots. The version
    we will work with in this book is the Server version.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL 8.0
  id: totrans-274
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For Ubuntu, the process is slightly different since Ubuntu uses the *apt* repository.
    Let’s walk through the steps.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-276
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
- en: Configure the apt repository
  id: totrans-278
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'On Ubuntu 20.04 (Focal Fossa), you can install MySQL using the *apt* package
    repository. First, ensure that your system is up-to-date:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE70]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Install MySQL 8.0
  id: totrans-281
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Next, install the `mysql-server` package:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE71]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The `apt install` command will install MySQL but won’t prompt you to set a password
    or make any other configuration changes. Unlike the CentOS installation, Ubuntu
    initializes MySQL in *insecure mode*.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: For fresh installations of MySQL, you’ll want to run the database management
    system’s (DBMS’s) included security script. This script changes some of the less
    secure default options for remote root logins and the test database. We will address
    this problem in the securing step after initializing MySQL.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: Start MySQL
  id: totrans-286
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'At this point, you’ve installed MySQL on your server, but it isn’t yet operational.
    To start MySQL, you need to use the `systemctl` command:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE72]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Check if the service is running
  id: totrans-289
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To check that the service is running correctly, run the following command:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE73]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'If you successfully started MySQL, the output will show that the MySQL service
    is active:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE74]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: Secure MySQL 8.0
  id: totrans-294
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'At this point, the steps are similar to the vanilla installation on CentOS
    7 (see [“Installing MySQL 8.0”](#MYSQL8_CENTOS7)). However, MySQL 8.0 on Ubuntu
    is initialized unsecured, which means the root password is empty. To secure it,
    execute `mysql_secure_installation`:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE75]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: This will take you through a series of prompts to make some changes to the MySQL
    installation’s security options, which are similar to those of the CentOS version
    as described earlier.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a small variance here because in Ubuntu it is possible to change the
    validation policy, which manages password strength. In this example, we are setting
    the validation policy to MEDIUM (1):'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE76]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Installing Percona Server 8
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install Percona Server 8.0 on Ubuntu 20.04 LTS using the following steps.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-302
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: Install the GNU Privacy Guard
  id: totrans-304
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Oracle signs MySQL downloadable packages with GNU Privacy Guard (GnuPG), an
    open source alternative to the well-known Pretty Good Privacy (PGP) created by
    Phil Zimmermann. Most Linux distributions ship with GnuPG installed by default,
    but in this case you need to install it:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE77]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: Fetch the repository packages from the Percona website
  id: totrans-307
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Next, fetch the repository packages from the Percona repository with the `wget`
    command:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE78]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: Install the downloaded package with dpkg
  id: totrans-310
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Once downloaded, install the package with the following command:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE79]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: You can then check the repository configured in the */etc/apt/sources.list.d/percona-original-release.list*
    file.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: Enable the repository
  id: totrans-314
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The next step is enabling Percona Server 8.0 in the repository and refreshing
    it:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE80]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: Install the Percona Server 8.0 binaries
  id: totrans-317
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Then, install the `percona-server-server` package with the `apt-get install`
    command:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE81]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Start MySQL
  id: totrans-320
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'At this point, you’ve installed MySQL on your server, but it isn’t yet operational.
    To start MySQL, you need to use the `systemctl` command:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE82]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: Check if the service is running
  id: totrans-323
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To check that the service is running correctly, run the following command:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE83]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: At this point, Percona Server will be running in insecure mode. Executing `mysql_secure_installation`
    will take you through a series of prompts to make some changes to your MySQL installation’s
    security options, which are identical to those described for installing vanilla
    MySQL 8.0 in the previous section.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
- en: Installing MariaDB 10.5
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install MariaDB 10.5 on Ubuntu 20.04 LTS using the following steps.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-329
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: Update the system with the apt package manager
  id: totrans-331
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Ensure your system is up-to-date and install the `software-properties-common`
    package with the following commands:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE84]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: This package contains the common files for software properties like the D-Bus
    backend and an abstraction of the used *apt* repositories.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: Import the MariaDB GPG key
  id: totrans-335
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Run the following command to add the repository key to the system:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE85]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: Add the MariaDB repository
  id: totrans-338
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'After importing the repository GPG key, you need to add the *apt* repository
    by running the following command:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE86]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: Note
  id: totrans-341
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: There are different mirrors to download the MariaDB repository. In this example,
    we use *[*http://mariadb.mirror.globo.tech*](http://mariadb.mirror.globo.tech)*.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: Install the MariaDB 10.5 binaries
  id: totrans-343
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The next step is the installation of the MariaDB Server:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE87]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: Check if the service is running
  id: totrans-346
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To check if the MariaDB service is running correctly, run the following command:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE88]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: At this point, MariaDB 10.5 will be running in insecure mode. Executing `mysql_secure_installation`
    will take you through a series of prompts to make some changes to your MySQL installation’s
    security options, which are identical to those described for installing vanilla
    MySQL 8.0 on Ubuntu earlier in this section.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL 5.7
  id: totrans-350
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Install MySQL 5.7 on Ubuntu 20.04 LTS using the following steps.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
- en: Become root in Linux
  id: totrans-352
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: First, you need to become root. See the instructions in [“Installing MySQL 8.0”](#MYSQL8_CENTOS7).
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: Update the system with the apt package manager
  id: totrans-354
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'You can ensure your system is updated and install the `software-properties-common`
    package with the following command:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE89]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: Add and configure the MySQL 5.7 repository
  id: totrans-357
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Add the MySQL repository by running the following commands:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE90]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: At the prompt, choose “ubuntu bionic” as shown in [Figure 1-1](#FIG-MYSQL-BIONIC)
    and click OK.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0101](Images/lm2e_0101.png)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
- en: Figure 1-1\. Choose “ubuntu bionic”
  id: totrans-362
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The next prompt shows MySQL 8.0 chosen by default ([Figure 1-2](#FIG-MYSQL-OPTION)).
    With this option selected, press Enter.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0102](Images/lm2e_0102.png)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
- en: Figure 1-2\. Choose the MySQL Server & Cluster option
  id: totrans-365
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For the next option, as shown in [Figure 1-3](#FIG-MYSQL57-OPTION), choose MySQL
    5.7 and click OK.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0103](Images/lm2e_0103.png)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
- en: Figure 1-3\. Choose the MySQL 5.7 option
  id: totrans-368
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: After returning to the main screen, click OK to exit, as shown in [Figure 1-4](#FIG-MYSQL-OK).
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0104](Images/lm2e_0104.png)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
- en: Figure 1-4\. Click OK to exit
  id: totrans-371
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Next, you need to update the MySQL packages:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE91]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'Validate the Ubuntu policy to install MySQL 5.7:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE92]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: 'Check the output to see which MySQL 5.7 version is available:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE93]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: Install the MySQL 5.7 binaries
  id: totrans-379
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Now that you’ve verified that the MySQL 5.7 version is available (*5.7.33-1ubuntu18.04*),
    install it:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE95]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: The installation process will prompt you to choose the root password, as shown
    in [Figure 1-5](#FIG-MYSQL-ROOT-PASS).
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0105](Images/lm2e_0105.png)'
  id: totrans-383
  prefs: []
  type: TYPE_IMG
- en: Figure 1-5\. Define the root password and click OK
  id: totrans-384
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Check if the service is running
  id: totrans-385
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To check if the MySQL 5.7 service is running correctly, run the following command:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE96]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: At this point, MySQL 5.7 will have a password set for the root user. However,
    you’ll still want to run `mysql_secure_installation` to set the password policy,
    remove remote root login and anonymous users, and remove the test database. Refer
    [“Secure MySQL 8.0”](#secmysql8) for details.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL on macOS Big Sur
  id: totrans-389
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: MySQL for macOS is available in a few different forms. Since most of the time
    MySQL is installed on macOS for development purposes, we will demonstrate only
    how to install it using the native macOS installer (the *.dmg* file). Be aware
    that it is also possible to use the tarball to install MySQL on macOS.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: Installing MySQL 8
  id: totrans-391
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: First, download the MySQL *.dmg* file from the [MySQL website](https://oreil.ly/Ea6Dk).
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-393
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: According to Oracle, macOS Catalina packages work for Big Sur.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: Once downloaded, execute the package to start the install procedure, as shown
    in [Figure 1-6](#FIG-DMG-PACKAGE).
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0106](Images/lm2e_0106.png)'
  id: totrans-396
  prefs: []
  type: TYPE_IMG
- en: Figure 1-6\. MySQL 8.0.23 *.dmg* package
  id: totrans-397
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Next, you need to authorize MySQL to run, as shown in [Figure 1-7](#FIG-DMG-AUTH-REQUEST).
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0107](Images/lm2e_0107.png)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
- en: Figure 1-7\. MySQL 8.0.23 authorization request
  id: totrans-400
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '[Figure 1-8](#FIG-INTRO) shows the installer’s welcome screen.'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0108](Images/lm2e_0108.png)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
- en: Figure 1-8\. MySQL 8.0.23 initial screen
  id: totrans-403
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '[Figure 1-9](#FIG-LICENSE) shows the license agreement. Even with open source
    software, it is necessary to agree to the license terms; otherwise, you can’t
    proceed.'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0109](Images/lm2e_0109.png)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
- en: Figure 1-9\. MySQL 8.0.23 license agreement
  id: totrans-406
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Now you can define the location and customize the installation, as shown in
    [Figure 1-10](#FIG-INSTALL-OPTS).
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0110](Images/lm2e_0110.png)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
- en: Figure 1-10\. MySQL 8.0.23 installation customization
  id: totrans-409
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You are going to proceed with the standard installation. After clicking Install,
    you might get prompted to enter the macOS user password to run the installation
    with higher privileges, as [Figure 1-11](#FIG-MACOS-AUTH) shows.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0111](Images/lm2e_0111.png)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
- en: Figure 1-11\. macOS authorization request
  id: totrans-412
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Once you’ve installed MySQL, the installation process will prompt you to choose
    the *password encryption*. You should use the newer authentication method (the
    default option), as shown in [Figure 1-12](#FIG-MACOS-SEC), which is safer.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0112](Images/lm2e_0112.png)'
  id: totrans-414
  prefs: []
  type: TYPE_IMG
- en: Figure 1-12\. MySQL 8.0.23 password encryption
  id: totrans-415
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The last step consists of creating the root password and initializing MySQL,
    as shown in [Figure 1-13](#FIG-MACOS-ROOT-PASS).
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0113](Images/lm2e_0113.png)'
  id: totrans-417
  prefs: []
  type: TYPE_IMG
- en: Figure 1-13\. MySQL 8.0.23 root password
  id: totrans-418
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You’ve now installed MySQL Server, but it is not loaded (or started) by default.
    To start, open System Preferences and search for the MySQL icon, as shown in [Figure 1-14](#FIG-MACOS-MYSQL-ICON).
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0114](Images/lm2e_0114.png)'
  id: totrans-420
  prefs: []
  type: TYPE_IMG
- en: Figure 1-14\. MySQL in System Preferences
  id: totrans-421
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click the icon to open the MySQL panel. You should see something similar to
    [Figure 1-15](#FIG-MACOS-MYSQL-START-OPT).
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0115](Images/lm2e_0115.png)'
  id: totrans-423
  prefs: []
  type: TYPE_IMG
- en: Figure 1-15\. MySQL start options
  id: totrans-424
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Besides the obvious option, which is to start the MySQL process, there is a
    configuration panel (with the location of the MySQL files) and an option to reinitialize
    the database (you already initialized it during the installation). Start the MySQL
    process. You might be asked for the administrator password again.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: 'With MySQL running, it is possible to validate the connection and confirm that
    MySQL Server is running correctly. You can use [MySQL Workbench](https://oreil.ly/RVWbe)
    to test this, or install the MySQL client using `brew`:'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE97]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'Once you’ve installed the MySQL client, you can connect with the password you
    defined in [Figure 1-13](#FIG-MACOS-ROOT-PASS). In the terminal, run the following
    command:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE98]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: Installing MySQL on Windows 10
  id: totrans-432
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Oracle provides a [MySQL Installer for Windows](https://oreil.ly/N4enF) to facilitate
    the installation. Note that MySQL Installer is a 32-bit application, but it can
    install MySQL in 32-bit and 64-bit binaries. To initiate the installation process,
    you need to execute the installer file and choose the type of installation, as
    shown in [Figure 1-16](#FIG-WINDOWS-INSTALL-OPTS).
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: Choose the Developer Default setup type and click Next. We won’t go into detail
    on the other options because we don’t recommend using MySQL for production systems,
    mainly because the MySQL ecosystem is developed for Linux.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0116](Images/lm2e_0116.png)'
  id: totrans-435
  prefs: []
  type: TYPE_IMG
- en: Figure 1-16\. MySQL 8.0.23 Windows installation customization
  id: totrans-436
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Next, the installer checks whether all the requirements are satisfied ([Figure 1-17](#FIG-WINDOWS-INSTALL-REQS)).
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0117](Images/lm2e_0117.png)'
  id: totrans-438
  prefs: []
  type: TYPE_IMG
- en: Figure 1-17\. Installation requirements
  id: totrans-439
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click Execute. It might be necessary to install Microsoft Visual C++ ([Figure 1-18](#FIG-WINDOWS-INSTALL-VISUALC)).
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0118](Images/lm2e_0118.png)'
  id: totrans-441
  prefs: []
  type: TYPE_IMG
- en: Figure 1-18\. Install Microsoft Visual C++ if required
  id: totrans-442
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click Next, and the installer will show the products that are ready to install
    ([Figure 1-19](#FIG-WINDOWS-INSTALL-READY)).
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0119](Images/lm2e_0119.png)'
  id: totrans-444
  prefs: []
  type: TYPE_IMG
- en: Figure 1-19\. Click Execute to install the MySQL software
  id: totrans-445
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Click Execute and you will arrive at the screen where you can configure MySQL
    properties. You can use the default settings for TCP/IP and the X Protocol port,
    as shown in [Figure 1-20](#FIG-WINDOWS-INSTALL-CFG), or you can customize them
    if you like.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: Next, you will choose the authentication method. Select the newer version that
    is more secure, as shown in [Figure 1-21](#FIG-WINDOWS-INSTALL-AUTH).
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0120](Images/lm2e_0120.png)'
  id: totrans-448
  prefs: []
  type: TYPE_IMG
- en: Figure 1-20\. Type and networking configuration options
  id: totrans-449
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![lm2e 0121](Images/lm2e_0121.png)'
  id: totrans-450
  prefs: []
  type: TYPE_IMG
- en: Figure 1-21\. Password encryption—use SHA-256 based passwords
  id: totrans-451
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Next, specify the root user password and whether you want to add additional
    users to the MySQL database, as shown in [Figure 1-22](#FIG-WINDOWS-INSTALL-ADD-USER).
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0122](Images/lm2e_0122.png)'
  id: totrans-453
  prefs: []
  type: TYPE_IMG
- en: Figure 1-22\. Configuring users
  id: totrans-454
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: With the users configured, define the service name and user that will run the
    service, as shown in [Figure 1-23](#FIG-WINDOWS-INSTALL-SERVICE).
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0123](Images/lm2e_0123.png)'
  id: totrans-456
  prefs: []
  type: TYPE_IMG
- en: Figure 1-23\. Configuring the service name
  id: totrans-457
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When you click Next, the installer begins configuring MySQL. Once the MySQL
    installer finishes its execution, you should see something like [Figure 1-24](#FIG-WINDOWS-INSTALL-COMPLETE).
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0124](Images/lm2e_0124.png)'
  id: totrans-459
  prefs: []
  type: TYPE_IMG
- en: Figure 1-24\. If the installation went fine, there are no errors
  id: totrans-460
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Now your database server is operational. Since you selected the Developer profile,
    the installer will go through the MySQL Router installation. MySQL Router isn’t
    essential for this setup, and since we don’t recommend Windows for production,
    we’ll skip this part. We will dive into the details of the router in [“MySQL Router”](ch15.xhtml#MYSQL_ROUTER).
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: Now you can validate your server using [MySQL Workbench](https://oreil.ly/RVWbe),
    as shown in [Figure 1-25](#FIG-WINDOWS-WORKBENCH-INTRO). You should see a MySQL
    connection option.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0125](Images/lm2e_0125.png)'
  id: totrans-463
  prefs: []
  type: TYPE_IMG
- en: Figure 1-25\. The MySQL connection option in MySQL Workbench
  id: totrans-464
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Double-click the connection and Workbench will prompt you to input the password,
    as shown in [Figure 1-26](#FIG-WINDOWS-WORKBENCH-PASSWORD).
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0126](Images/lm2e_0126.png)'
  id: totrans-466
  prefs: []
  type: TYPE_IMG
- en: Figure 1-26\. Enter the root password to connect
  id: totrans-467
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You can now start using MySQL in your Windows platform, as shown in [Figure 1-27](#FIG-WINDOWS-WORKBENCH-CHECKING).
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
- en: '![lm2e 0127](Images/lm2e_0127.png)'
  id: totrans-469
  prefs: []
  type: TYPE_IMG
- en: Figure 1-27\. You can now begin testing your environment
  id: totrans-470
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The Contents of the MySQL Directory
  id: totrans-471
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'During the installation process, MySQL creates all the files that are needed
    to start the server. MySQL stores its files under a directory called the *data
    directory*. Database administrators (DBAs) commonly refer to this as the *datadir*,
    which is the name of the MySQL parameter that stores the path to this directory.
    The default location for Linux distributions is */var/lib/mysql*. You can check
    its location by running the following command in the MySQL instance:'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE101]'
  id: totrans-473
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: MySQL 5.7 Default Files
  id: totrans-475
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following list briefly describes the files and subdirectories typically
    found in the data directory:'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
- en: The REDO log files
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: MySQL creates the redo log files as *ib_logfile0* and *ib_logfile1* in the data
    directory. It writes to the redo log files in a circular fashion, so the files
    do not grow beyond their configuration size (configured by [`innodb_log_file_size`](https://oreil.ly/XRzLb)).
    As in any other relational database management system (RDBMS) that is ACID-compliant,
    the redo files are fundamental to provide data durability and the ability to recover
    from a crash scenario.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: The *auto.cnf* file
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: MySQL 5.6 introduced the *auto.cnf* file. It has only a single `[auto]` section
    containing a single [`server_uuid`](https://oreil.ly/zXlHS) setting and value.
    The `server_uuid` creates a unique signature for the server, and the replication
    layer uses it to communicate with different servers to replicate data.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  id: totrans-481
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: MySQL automatically creates the *auto.cnf* file in the data directory when initialized,
    and this file should not be changed. We explain the details in [Chapter 9](ch09.xhtml#CH9_OPTIONS_FILE).
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: The **.pem* files
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: In short, these files enable the use of encrypted connections for communication
    between a client and the MySQL server. Encrypted connections are a fundamental
    part of the network security layer to avoid unauthorized access while the data
    is in transit from the application to the MySQL server. MySQL 5.7 enables SSL
    by default and creates the certificates as well. However, it is possible to use
    certificates provided by different certificate authorities (CAs) in the market.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: The *performance_schema* subdirectory
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
- en: 'The MySQL Performance Schema is a feature for monitoring MySQL Server execution
    at a low level during runtime. When we can use Performance Schema to monitor a
    particular metric, we say that MySQL has instrumentation. For example, Performance
    Schema instruments can provide the number of users connected:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE103]'
  id: totrans-487
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: Note
  id: totrans-489
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Many people are surprised to see `NULL` in the `user` column. The `NULL` value
    is used for internal threads or for a user session that failed to authenticate.
    The same applies to the `host` column in the `performance_schema.accounts` table:'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE105]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-492
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: Although instrumentation has existed since MySQL 5.6, it was in MySQL 5.7 that
    it gained many improvements and became a fundamental part of the DBA tools to
    investigate and troubleshoot issues at the MySQL level.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: The *ibtmp1* file
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
- en: When the application needs to create temporary tables or MySQL needs to use
    an on-disk internal temporary table, MySQL creates them in a shared temporary
    tablespace. The default behavior is to create an auto-extending data file named
    *ibtmp1* that is slightly larger than 12 MB (its size is controlled by the [`innodb_temp_data_file_path`
    parameter](https://oreil.ly/KXDOo)).
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: The *ibdata1* file
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
- en: The *ibdata1* file is probably the most famous file in the MySQL ecosystem.
    For MySQL 5.7 and older, it holds data for the InnoDB data dictionary, the doublewrite
    buffer, the change buffer, and the undo logs. It may also contain table and index
    data if we disable the [`innodb_file_per_table` option](https://oreil.ly/v4X1O).
    When `innodb_file_per_table` is enabled, each user table has a tablespace and
    a dedicated file. Note that it is possible to have multiple *ibdata* files in
    the MySQL data directory.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-498
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: In MySQL 8.0, some of these components were removed from *ibdata1* and allocated
    into separate files. The remaining components are the change buffer table and
    index data if tables are created in the system tablespace (by disabling the `innodb_file_per_table`).
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: The *mysql.sock* file
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
- en: This is a Unix socket file that the server uses for communication with local
    clients. This file exists only when MySQL is running, and removing it or creating
    the file manually may lead to problems.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-502
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: A Unix socket is an interprocess communication mechanism that allows bidirectional
    data exchange between processes running on the same machine. IP sockets (mainly
    TCP/IP sockets) are a mechanism allowing communication between processes over
    the network.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
- en: 'You can connect to MySQL Server on Linux using two methods: the TCP protocol
    or a socket. For security purposes, if the application and MySQL are on the same
    server, you can disable remote TCP connections. There are two ways to do this
    in MySQL Server: set the [`bind-address`](https://oreil.ly/PQjrf) to `127.0.0.1`
    instead of the default `*` value (which accepts TCP/IP connections from everyone),
    or modify the [`skip-networking` parameter](https://oreil.ly/s20Ta), which disables
    network connections to MySQL.'
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: The *mysql* subdirectory
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
- en: 'The *mysql* directory corresponds to the MySQL system schema, which contains
    MySQL Server’s information as it runs. For example, it includes information on
    users and their privileges, time zone tables, and replication. You can see the
    files named according to their respective table names with the `ls` command:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE107]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: MySQL 8.0 Default Files
  id: totrans-508
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'MySQL 8.0 brought a few changes in the core of the data directory structure.
    Some of these changes are related to implementing the new data dictionary, and
    others to improving database management. The following list describes the new
    files and changes:'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
- en: The *undo* tablespace files
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: MySQL (InnoDB) uses *undo* files to undo the transactions that need to be rolled
    back and ensure isolated transactions whenever it needs to perform a consistent
    read.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
- en: From MySQL 8.0, the undo log files were separated from the system tablespace
    (*ibdata1*) and placed in the data directory. It is also possible to set another
    location by changing the [`innodb_undo_directory` parameter](https://oreil.ly/l1bIV).
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: The *.dblwr* files (introduced in version 8.0.20)
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: 'The doublewrite buffer is responsible for writing pages flushed from the buffer
    pool to the disk before MySQL writes the pages to the datafiles. The doublewrite
    filenames have the following format: *#ib_<page_size>_<file_number>.dblwr* (for
    example, *#ib_16384_0.dblwr*, *#ib_16384_0.dblwr*). It is possible to change the
    location of these files by modifying the [`innodb_doublewrite_dir` parameter](https://oreil.ly/e0ypB).'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
- en: The *mysql.ibd* file (introduced in version 8.0)
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: In MySQL 5.7, dictionary tables and system tables stored data and metadata in
    the *mysql* directory inside the *datadir*. In MySQL 8.0, this is all stored in
    the *mysql.ibd* file and is protected by the InnoDB mechanisms to ensure consistency.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: Using the Command-Line Interface
  id: totrans-517
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The *mysql* binary is a simple SQL shell with input line-editing capabilities.
    Its use is straightforward (we already used it a few times during the installation
    process). To invoke it, run the following command:'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE108]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: 'We can extend its functionality by executing queries in it:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE109]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: 'And we can execute more advanced commands, piping them with other commands
    to perform more complex tasks. For example, we can extract a dump from one database,
    send it across the network, and restore it into another MySQL server in the same
    command line:'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE110]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: MySQL 8.0 introduced *MySQL Shell*, which is way more powerful than its predecessor.
    MySQL Shell supports the JavaScript, Python, and SQL languages, providing development
    and administration capabilities for MySQL Server. We’ll go into more detail about
    this in [“MySQL Shell”](ch16.xhtml#MYSQL-SHELL).
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
- en: Using Docker
  id: totrans-525
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the advent of virtualization and its popularization with cloud services,
    many platforms have emerged, including [Docker](https://www.docker.com). Born
    in 2013, Docker is a solution that offers a portable and flexible way to deploy
    software. It provides resource isolation through the use of Linux features like
    *cgroups* and *kernel namespaces*.
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
- en: Docker is useful for DBAs who often need to install a specific version of MySQL,
    MariaDB, or Percona Server for MySQL to run some experiments. With Docker, it
    is possible to deploy a MySQL instance in seconds to perform some tests. Once
    you finish the tests, you can destroy the instance and release the operating system’s
    resources to other tasks. All the processes of deploying a virtual machine (VM),
    installing packages, and configuring the database are simpler when using Docker.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker
  id: totrans-528
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An advantage of using Docker is that once the service is running, the commands
    are the same in all operating systems. The commands being the same means that
    the learning curve for using Docker is faster compared to learning different Linux
    versions such as CentOS and Ubuntu, for example.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
- en: The process for [installing Docker](https://oreil.ly/K1zGS) is, in some ways,
    similar to installing MySQL. For Windows and macOS you just install the binaries,
    and after that the service is up and running. For Linux-based operating systems
    without a graphic interface, the process requires configuring the repository.
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker on CentOS 7
  id: totrans-531
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The CentOS packages for Docker are, in general, older than the ones available
    to RHEL and in official Docker repositories. At the time of writing, the Docker
    version provided by regular CentOS repositories is 1.13.1, whereas the upstream
    stable version is 20.10.3\. There is no difference for the purposes of this book,
    but we always recommend using the latest version for production environments.
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
- en: 'Execute the following command to install the Docker package from the default
    CentOS repository:'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE111]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: 'If you want to install Docker from the upstream repository to ensure that you
    are using the latest release, follow these steps:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
- en: 'Install `yum-utils` to enable the `yum-config-manager` command:'
  id: totrans-536
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE112]'
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'Use `yum-config-manager` to add the *docker-ce* repository:'
  id: totrans-538
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE113]'
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE113]'
- en: 'Install the necessary packages:'
  id: totrans-540
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE114]'
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE114]'
- en: 'Start the Docker service:'
  id: totrans-542
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE115]'
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE115]'
- en: 'Enable the Docker service to auto-start after a system reboot:'
  id: totrans-544
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE116]'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE116]'
- en: 'To validate whether the Docker service is running, execute the `systemctl status`
    command:'
  id: totrans-546
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE117]'
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'To verify that Docker Engine is installed correctly, you can run the *hello-world*
    container:'
  id: totrans-548
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE118]'
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE118]'
- en: Installing Docker on Ubuntu 20.04 (Focal Fossa)
  id: totrans-550
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To install the latest Docker release from the upstream repository, first remove
    any older versions of Docker (called *docker*, *docker.io*, or *docker-engine*).
    Uninstall them with this command:'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE119]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'With the default repository removed, you can initiate the installation process:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
- en: 'Make sure that Ubuntu is up-to-date with this command:'
  id: totrans-554
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE120]'
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE120]'
- en: 'Install packages to allow *apt* to use a repository over HTTPS:'
  id: totrans-556
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE121]'
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE121]'
- en: 'Next, add Docker’s official GPG key:'
  id: totrans-558
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE122]'
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE122]'
- en: 'With the key in place, add the Docker stable repository:'
  id: totrans-560
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE123]'
  id: totrans-561
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE123]'
- en: 'Now, use the `apt` command to install the Docker packages:'
  id: totrans-562
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE124]'
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE124]'
- en: 'Ubuntu will start the service for you, but you can check by running this command:'
  id: totrans-564
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE125]'
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE125]'
- en: 'To make the Docker service auto-start when the OS reboots, use:'
  id: totrans-566
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE126]'
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE126]'
- en: 'Check the Docker version you installed with:'
  id: totrans-568
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE127]'
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE127]'
- en: 'To verify that Docker Engine is installed correctly, you can run the *hello-world*
    container:'
  id: totrans-570
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE128]'
  id: totrans-571
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE128]'
- en: Deploying the MySQL container
  id: totrans-572
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Once you have Docker Engine installed and running, the next step is deploying
    the MySQL Docker container.
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  id: totrans-574
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: We designed the following instructions to get a test instance running quickly
    and easily; do not use this for a production deployment!
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
- en: 'To deploy the latest MySQL version with Docker, execute this command:'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE129]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: Docker Engine will launch the latest version of the MySQL instance and be remotely
    accessible from anywhere with the specified root password. Installing MySQL with
    Docker means that you do not have access to any of the tools, utilities, or standard
    libraries available in a traditional host (bare metal or VM). You’ll need to either
    deploy these tools separately or use commands shipped with the Docker image if
    you need them.
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, connect to the MySQL container using the MySQL client:'
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE130]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: Since you mapped the TCP port 3306 in the container to port 3306 on the Docker
    host with the parameter `-p 3306:3306`, you can connect to the MySQL database
    from any MySQL client (Workbench, MySQL Shell) available that can reach the host
    (hostname or IP) and that port.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at a few commands to manage the container.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
- en: 'To stop the MySQL Docker container, run:'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE131]'
  id: totrans-584
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: 'Don’t try to use `docker run` to start the container again. Instead, use this:'
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE132]'
  id: totrans-586
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'To investigate an issue—for example, if the container isn’t starting—access
    its logs using this command:'
  id: totrans-587
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE133]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: 'To remove the Docker container that you created, run:'
  id: totrans-589
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE134]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: 'To check which and how many Docker containers are running in the host, use:'
  id: totrans-591
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE135]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: 'It is possible to customize MySQL parametrization using command-line options
    to Docker Engine. To configure the [InnoDB buffer pool size](https://oreil.ly/1R2nJ)
    and the [flush method](https://oreil.ly/tiKl2), run the following:'
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE136]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: To run a MySQL version other than the latest version, first check that it is
    available in [Docker Hub](https://hub.docker.com). For example, say you want to
    run MySQL 5.7.31\. The first step is to check the [official MySQL Docker Images](https://oreil.ly/X0Uuu)
    list in Docker Hub to see if it exists.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve confirmed its existence, run it with the following command:'
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE137]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: It is possible to run multiple MySQL Docker instances at the same time, but
    a potential problem is TCP port conflicts. In the previous example, note that
    we mapped different host ports for the *mysql-5.7.31* container (3307 and 33061).
    Also, the *name* of the container needs to be unique.
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
- en: Deploying MariaDB and Percona Server containers
  id: totrans-599
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You follow the same steps described in the previous section for deploying a
    MySQL container to deploy a [MariaDB](https://oreil.ly/rHGjq) or [Percona Server](https://oreil.ly/TAWtw)
    container. The main difference is that they use different Docker images and have
    their own official repositories.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
- en: 'To deploy a MariaDB container, run:'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE138]'
  id: totrans-602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: 'And for Percona Server, run:'
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE139]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: Note
  id: totrans-605
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'We are mapping different ports for MariaDB (`-p 3308:3306`) and Percona (`-p
    3309:3306`) because we are deploying all the containers in the same host:'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE140]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '[PRE141]'
  id: totrans-608
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: If you are deploying a single container, you can use port 3306 or any custom
    port you might want to use.
  id: totrans-609
  prefs: []
  type: TYPE_NORMAL
- en: Using Sandboxes
  id: totrans-610
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In software development, a *sandbox* is a testing environment that isolates
    code changes and allows experimentation and testing before deploying to production.
    DBAs primarily use sandboxes for testing new software versions, performance tests,
    and bug analysis, and the data present in MySQL is disposable.
  id: totrans-611
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-612
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'It is common in the context of MySQL databases to hear the terms *master* and
    *slave*. The origins of these words are clearly negative. Oracle, Percona, and
    MariaDB have therefore decided to change this terminology and instead use *source*
    and *replica*. In this book, we will use both sets of terms because you will encounter
    both of them, but be aware that these companies will implement the following terminology
    for the upcoming releases:'
  id: totrans-613
  prefs: []
  type: TYPE_NORMAL
- en: '| **Old** | **New** |'
  id: totrans-614
  prefs: []
  type: TYPE_TB
- en: '| master | source |'
  id: totrans-615
  prefs: []
  type: TYPE_TB
- en: '| slave | replica |'
  id: totrans-616
  prefs: []
  type: TYPE_TB
- en: '| blacklist | blocklist |'
  id: totrans-617
  prefs: []
  type: TYPE_TB
- en: '| whitelist | allowlist |'
  id: totrans-618
  prefs: []
  type: TYPE_TB
- en: In 2018, [Giuseppe Maxia](https://oreil.ly/0wLPk) introduced [DBdeployer](https://oreil.ly/lZK98),
    a tool that provides an easy and fast way to deploy MySQL and its forks. It supports
    diverse MySQL topologies such as master/slave (source/replica), master/master
    (source/source), Galera Cluster, and Group Replication.
  id: totrans-619
  prefs: []
  type: TYPE_NORMAL
- en: Installing DBdeployer
  id: totrans-620
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The tool is developed in the *Go* language and works with macOS and Linux (Ubuntu
    and CentOS), and standalone executables are provided. Get the latest version here:'
  id: totrans-621
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE142]'
  id: totrans-622
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: 'If you have your */usr/local/bin/* directory in the `$PATH` variable, you should
    now be able to run the `dbdeployer` commands:'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE143]'
  id: totrans-624
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: Using DBdeployer
  id: totrans-625
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first step in using DBdeployer is to download the MySQL binary you want
    to run and unpack it into the directory where you store your binaries. We will
    use [*Linux - Generic* tarballs](https://oreil.ly/DoI1c) since they are compatible
    with most Linux distributions, and we will store our binaries in the */opt/mysql*
    directory:'
  id: totrans-626
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE144]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: 'The `unpack` command will extract and move the files to the specified directory.
    The expected output of this operation is:'
  id: totrans-628
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE145]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: 'We can now use the following command to create a new standalone MySQL sandbox
    with the newly extracted binary:'
  id: totrans-631
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE147]'
  id: totrans-632
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: 'And we can observe DBdeployer initializing MySQL:'
  id: totrans-633
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE148]'
  id: totrans-634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-635
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: 'Confirm that MySQL is running with the `ps` command:'
  id: totrans-636
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '[PRE151]'
  id: totrans-638
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: 'We can now connect to MySQL using DBdeployer’s `use` command:'
  id: totrans-639
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE152]'
  id: totrans-640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: 'or using the default root credentials:'
  id: totrans-641
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE153]'
  id: totrans-642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: Note
  id: totrans-643
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'We got the port information from the previous `ps` command. Remember that there
    are two ways to connect to MySQL: via TCP/IP or using a socket. We can also get
    the socket file location from the output of the `ps` command and connect with
    that, as shown here:'
  id: totrans-644
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE154]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: 'If we want to set up a replication environment with a source/replica topology,
    we can do it with the following command line:'
  id: totrans-646
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE155]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: 'And we will have three `mysqld` processes running:'
  id: totrans-648
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE156]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '[PRE157]'
  id: totrans-650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: 'Another topology that DBdeployer can configure is Group Replication. For this
    example, we will define a `base-port`. By doing this, we will order DBdeployer
    to configure our servers starting from port 49007:'
  id: totrans-651
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE158]'
  id: totrans-652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: 'Now let’s see an example of the deployment of Galera Cluster using Percona
    XtraDB Cluster 5.7.32\. We will indicate the `base-port`, and we want our nodes
    configured with the [`log-slave-updates` option](https://oreil.ly/oMhOY):'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE159]'
  id: totrans-654
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: 'As we’ve seen, it is possible to customize MySQL parameters. One interesting
    option is enabling MySQL replication using [*global transaction identifiers*](https://oreil.ly/QNCBh),
    or GTIDs (we’ll discuss GTIDs in more detail in [Chapter 13](ch13.xhtml#CH13_HA)):'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE160]'
  id: totrans-656
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: 'Our last example shows that it is possible to deploy multiple standalone versions
    at once—here, we create five standalone instances:'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE161]'
  id: totrans-658
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: 'The previous examples are just a small sample of DBdeployer’s capabilities.
    The full documentation is available on [GitHub](https://oreil.ly/5ygE0). Another
    option to understand the universe of possibilities is to use `--help` in the command
    line:'
  id: totrans-659
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE162]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-661
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: Upgrading MySQL Server
  id: totrans-662
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If the most common question to arise is about replication, the second most
    common is about how to upgrade a MySQL instance. If the procedure is not well
    tested before it’s done in production, the chances of having a problem are high.
    There are two types of upgrades that you can perform:'
  id: totrans-663
  prefs: []
  type: TYPE_NORMAL
- en: A *major upgrade* in MySQL would be changing versions from 5.6 to 5.7 or 5.7
    to 8.0\. Such an upgrade is trickier and more complex than a minor upgrade because
    the changes to the architecture are more substantial. For example, a considerable
    change in MySQL 8.0 involved modifying the data dictionary, which is now transactional
    and encapsulated by InnoDB.
  id: totrans-664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A *minor upgrade* would be changing from MySQL 5.7.29 to 5.7.30 or MySQL 8.0.22
    to MySQL 8.0.23\. Most of the time, you’ll need to install the new version using
    your distribution’s package manager. A minor upgrade is simpler than a major one
    because it does not involve any changes in the architecture. The modifications
    are focused on fixing bugs, improving the performance, and optimizing the code.
  id: totrans-665
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To start planning for an upgrade, first choose between two strategies. These
    are the recommended strategies according to the documentation and are the ones
    we use:'
  id: totrans-666
  prefs: []
  type: TYPE_NORMAL
- en: In-place upgrade
  id: totrans-667
  prefs: []
  type: TYPE_NORMAL
- en: This involves shutting down MySQL, replacing the old MySQL binaries or packages
    with the new ones, restarting MySQL in the existing data directory, and running
    `mysql_upgrade`.
  id: totrans-668
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-669
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'As of MySQL 8.0.16, the *mysql_upgrade* binary is deprecated, and the MySQL
    server itself executes its functionality (you can think of it as a “server upgrade”).
    MySQL added this change alongside the data dictionary upgrade (DD upgrade), which
    is a process to update the data dictionary table definitions. Benefits of the
    new process include:'
  id: totrans-670
  prefs: []
  type: TYPE_NORMAL
- en: Faster upgrades
  id: totrans-671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Simpler process
  id: totrans-672
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better security
  id: totrans-673
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Significant reduction in upgrade steps
  id: totrans-674
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: More easily automated
  id: totrans-675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No restarts
  id: totrans-676
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plug and play
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logical upgrade
  id: totrans-678
  prefs: []
  type: TYPE_NORMAL
- en: This involves exporting the data in SQL format from the old MySQL version using
    a backup or export utility such as *mysqldump* or *mysqlpump*, installing the
    new MySQL version, and applying the SQL data to the new MySQL version. In other
    words, this process involves rebuilding the entire data dictionary and the user
    data. A logical upgrade usually takes longer than an in-place upgrade.
  id: totrans-679
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of your chosen strategy, it is essential to establish a rollback
    strategy in case something goes wrong. The rollback strategy will vary based on
    the upgrade plan you choose, and the database size and the topology present (if
    you’re using replicas or Galera Cluster, for example) will influence this decision.
  id: totrans-680
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some additional points to take into consideration when planning an
    upgrade:'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
- en: Upgrading from MySQL 5.7 to 8.0 is supported. However, the upgrade is only supported
    between GA releases. For MySQL 8.0, it is required that you upgrade from a MySQL
    5.7 GA release (5.7.9 or higher). Upgrades from non-GA releases of MySQL 5.7 are
    not supported.
  id: totrans-682
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upgrading to the latest release is recommended before upgrading to the next
    version. For example, upgrade to the latest MySQL 5.7 release before upgrading
    to MySQL 8.0.
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upgrades that skip versions are not supported. For example, upgrading directly
    from MySQL 5.6 to 8.0 is not supported.
  id: totrans-684
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  id: totrans-685
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Based on our experience, moving from MySQL 5.6 to MySQL 5.7 is the upgrade that
    causes the most performance issues, especially if the application is using *derived
    tables* (see [“Nested Queries in the FROM Clause”](ch05.xhtml#ADV1-SEC-NESTEDFROM)).
    MySQL 5.7 modified the [`optimizer_switch` system variable](https://oreil.ly/m0Ky3),
    enabling the [`derived_merge` setting](https://oreil.ly/JROqc) by default, and
    this can hurt query performance.
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
- en: Another complicating change is that MySQL 5.7 implements network encryption
    by default (SSL). Applications that were not using SSL in MySQL 5.6 may suffer
    a substantial performance hit.
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
- en: Finally, MySQL 5.7 changed the [`sync_binlog`](https://oreil.ly/Khh3Q) default
    to synchronous mode. This mode is the safest but can harm performance due to the
    increased number of disk writes.
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s go through an example of upgrading from MySQL 5.7 upstream to MySQL 8.0
    upstream using the in-place method:'
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
- en: 'Stop the MySQL service. Perform a clean shutdown using `systemctl`:'
  id: totrans-690
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE164]'
  id: totrans-691
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE164]'
- en: 'Remove the old binaries:'
  id: totrans-692
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE165]'
  id: totrans-693
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE165]'
- en: This process only removes the binaries and does not touch the *datadir* (see
    [“The Contents of the MySQL Directory”](#MYSQL_DIRECTORY_CONTENT)).
  id: totrans-694
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Follow the regular steps for the installation process (see [“Installing MySQL
    on Linux”](#MYSQL-INSTALL-LINUX)). For example, to use MySQL 8.0 Community Version
    on CentOS 7 using `yum`:'
  id: totrans-695
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE166]'
  id: totrans-696
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE166]'
- en: 'Install the new binaries:'
  id: totrans-697
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE167]'
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE167]'
- en: 'Start the MySQL service:'
  id: totrans-699
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE168]'
  id: totrans-700
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE168]'
- en: 'We can observe in the logs that MySQL upgraded the data dictionary and that
    we’re now running MySQL 8.0.21:'
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE169]'
  id: totrans-702
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: '[PRE170]'
  id: totrans-703
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: Note
  id: totrans-704
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: We highly recommend before upgrading MySQL that you check the release notes.
    They contain a summary of the changes made and the bug fixes. Release notes are
    available for [MySQL upstream](https://oreil.ly/FcOVq), [Percona Server](https://oreil.ly/Mtt2J),
    and [MariaDB](https://oreil.ly/T8M9z).
  id: totrans-705
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议在升级MySQL之前查看发布说明。它们包含所做更改和bug修复的摘要。MySQL的发布说明可以在[MySQL upstream](https://oreil.ly/FcOVq)，[Percona
    Server](https://oreil.ly/Mtt2J)，和[MariaDB](https://oreil.ly/T8M9z)找到。
- en: A common question is whether it’s safe to upgrade to the latest major release.
    The answer is…it depends. As with any new product in the industry, early adopters
    tend to benefit from the new features, but they are testers as well, and they
    may discover and be affected by new bugs. When MySQL 8.0 was released, our recommendation
    was to wait for three minor releases before considering moving. The golden rule
    of this book is to test everything in advance before executing the next step.
    If you learn just that from this book, we will consider our mission accomplished.
  id: totrans-706
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的问题是是否安全升级到最新的主要版本。答案是……这取决于情况。和行业中的任何新产品一样，早期采纳者倾向于从新功能中受益，但他们也是测试者，可能会发现并受到新bug的影响。当MySQL
    8.0发布时，我们的建议是在考虑迁移之前等待三个次要版本。本书的黄金法则是在执行下一步之前先测试所有内容。如果你从本书中只学到这一点，我们将认为我们的使命已经完成。
