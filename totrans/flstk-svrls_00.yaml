- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why I Wrote This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When I first learned how to code I had no idea how broad of a spectrum software
    development was. All I wanted to do was to build an app. Oh boy, I learned how
    naive I was at that time once I started digging into and piecing together all
    of the things that it took to accomplish what I wanted to do.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the main things I learned was that applications typically consisted
    of two main parts: frontend (or client-side code) and backend APIs and services.
    At the time, cloud technologies were in their infancy and learning how to build
    full stack applications was overwhelming to say the least! This was made even
    harder because I wanted to build native mobile apps, and I learned that building
    mobile apps was much tougher to get started with than building web applications.'
  prefs: []
  type: TYPE_NORMAL
- en: Fast-forward almost 10 years and the landscape is starting to look much different.
    Things that once took a large team of developers to do can now sometimes be accomplished
    by a single developer. Tools like React Native, Flutter, and Cordova allow developers
    to build and ship cross-platform mobile applications using a single codebase.
    Cloud technologies like AWS Amplify, Firebase, and others allow the same developers
    to also leverage the cloud to build out the backends much more rapidly than ever
    before.
  prefs: []
  type: TYPE_NORMAL
- en: I think we are coming into a new paradigm where it is easier than ever to become
    a full stack developer and the definition of what a full stack developer *is*
    is starting to change. I wrote this book to lay out my vision of what this new
    paradigm looks like in practice and to showcase a technology that has been created
    specifically to take advantage of the most cutting-edge frontend and cloud technologies.
    What I am describing in this book is, in my opinion, the future of software engineering.
  prefs: []
  type: TYPE_NORMAL
- en: Who This Book Is For
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for any software engineer looking to build full stack applications,
    especially those interested in cloud computing. It is also aimed at frontend developers
    looking to learn how to use their existing skill set to build full stack applications
    using cloud technologies.
  prefs: []
  type: TYPE_NORMAL
- en: It is also a good resource for CTOs and startup founders looking to maximize
    efficiency and move with the most developer velocity possible while using the
    fewest resources. The techniques outlined in this book are ideal for rapid prototyping
    and fast experimentation, allowing developers and founders to get their idea to
    market quickly and have a product that is also scalable and durable should it
    succeed.
  prefs: []
  type: TYPE_NORMAL
- en: How This Book Is Organized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The goal of this book is to introduce you to all of the pieces needed to build
    a real-world and scalable full stack application using React and serverless technologies.
    It gradually introduces features (like authentication, APIs, and databases) and
    some techniques to implement these features, both on the frontend and backend,
    by building out different applications in each chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Each application you create will build upon knowledge learned in the previous
    chapter. In the last chapter, you will build out a sophisticated application utilizing
    many of the cloud services needed to build real-world applications in your job
    or startup. When you have finished working through this book, you should have
    the knowledge and understanding needed to apply what you have learned to build
    serverless applications on your own using React and AWS cloud technologies.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1, *Full Stack Development in the Era of Serverless Computing*](ch01.xhtml#ch1)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, I’ll describe serverless philosophy, the characteristics and
    benefits of serverless applications, and introduce you to AWS and AWS Amplify
    CLI.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2, *Getting Started with AWS Amplify*](ch02.xhtml#ch2)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will get going using AWS Amplify to create and deploy a
    serverless function. We’ll create the function, then add the API and interact
    with it.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3, *Creating Your First App*](ch03.xhtml#ch3)'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we’ll cover the basic process of creating a new full stack application
    from scratch by building a notes app. We will create a new React application,
    initialize a new Amplify project, add a GraphQL API, and then connect to and interact
    with the API from the client (React) application.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4, *Introduction to Authentication*](ch04.xhtml#ch4)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will walk through the process of adding authentication to
    an application. We will start by creating a new React application and adding basic
    authentication using the `withAuthenticator` higher-order component (HOC) from
    the AWS Amplify React library. We’ll read the user’s metadata and create a profile
    screen that will allow the user to see their information.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5, *Custom Authentication Strategies*](ch05.xhtml#ch5)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll look closer at authentication by creating a custom authentication
    flow with React, React Router, and AWS Amplify. The app will have a sign-up screen,
    a sign-in screen, and a forgotten-password screen. Once logged in, there will
    be a main menu that will allow them to navigate to their profile page, a map page,
    and a welcome screen that will serve as the main view of the app.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6, *Serverless Functions In-Depth: Part 1*](ch06.xhtml#ch6) and [Chapter 7,
    *Serverless Functions In-Depth: Part 2*](ch07.xhtml#ch7)'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we’ll introduce serverless functions and how to interact with them in
    a React application. We’ll walk through how to create, update, and delete serverless
    functions by creating an app that fetches shiba inu pictures from a CORS-protected
    API with our code living in an AWS Lambda function that we will create and configure
    using the AWS Amplify CLI.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8, *AWS AppSync In-Depth*](ch08.xhtml#ch8)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll build upon what we learned in [Chapter 3](ch03.xhtml#ch3)
    by building a more complex API that includes many-to-many relationships and multiple
    authorization types. We’ll build an event application that allows admins to create
    stages and performances. We’ll enable all users to be able to read event information
    regardless whether they are signed in, but we’ll only allow admin users who are
    signed in to create, update, or delete events and stages.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9, *Building Offline Apps with Amplify DataStore*](ch09.xhtml#ch9)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we’ll cover how to add offline functionality using Amplify
    DataStore.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10, *Working with Images and Storage*](ch10.xhtml#ch10)'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we’ll learn how to create a photo-sharing app that will allow users to
    upload and view images.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11, *Hosting: Deploying Your Application to the Amplify Console with
    CI and CD*](ch11.xhtml#ch11)'
  prefs: []
  type: TYPE_NORMAL
- en: In this final chapter, we’ll take the photo-sharing app we created in [Chapter 10](ch10.xhtml#ch10)
    and deploy it to a live domain using the Amplify Console. We’ll learn how to add
    continuous integration (CI) and continuous deployment (CD) by kicking off new
    builds when updates are merged to the master branch. Finally, we’ll learn how
    to add a custom domain so your app will be live on a real URL that you own.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/dabit3/full-stack-serverless-code*](https://github.com/dabit3/full-stack-serverless-code).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Full Stack Serverless*
    by Nader Dabit (O’Reilly). Copyright 2020 Nader Dabit, 978-1-492-05989-9.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/Full_Stack_Serverless*](https://oreil.ly/Full_Stack_Serverless).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on Facebook: [*http://facebook.com/oreilly*](http://facebook.com/oreilly)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*http://twitter.com/oreillymedia*](http://twitter.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*http://www.youtube.com/oreillymedia*](http://www.youtube.com/oreillymedia)'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thank you to my wife, Lilly, who has steadfastly supported me through my career
    and has gone above and beyond to keep our life in order as I worked late nights
    in the office and sometimes at home to write this book.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you to my kids, Victor and Eli, who are awesome and my inspiration; I
    love you both very much. And thank you to my parents for putting me in a position
    to be able to learn things and get second, third, and fourth chances at life.
  prefs: []
  type: TYPE_NORMAL
- en: 'My thanks go to many groups and individuals: to the the entire AWS Mobile team
    who took a chance on hiring me fresh out of a tumultuous consulting career to
    join their team, and gave me the opportunity to work with the smartest people
    I’ve ever met. To Michael Paris, Mohit Srivastava, Dennis Hills, Adrian Hall,
    Richard Threlkald, Michael Labieniec, Rohan Deshpande, Amit Patel, and all of
    my other teammates who have showed me the ropes and helped me learn everything
    I needed to learn to get going at my new job. To Russ Davis, Lee Johnson, and
    SchoolStatus for giving the opportunity to learn bleeding-edge technology on the
    job that ultimately catapulted my career into consulting. To Brian Noah, Nate
    Lubeck, and my team at Egood, the first “real” tech job I had, for exposing me
    to the world of meetups and conferences as well as what it takes to be a great
    developer.'
  prefs: []
  type: TYPE_NORMAL
