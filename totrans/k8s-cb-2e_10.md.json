["```\n$ kubectl create namespace sec\nnamespace/sec created\n\n```", "```\n$ kubectl create serviceaccount myappsa -n sec\nserviceaccount/myappsa created\n\n$ kubectl describe sa myappsa -n sec\nName:                myappsa\nNamespace:           sec\nLabels:              <none>\nAnnotations:         <none>\nImage pull secrets:  <none>\nMountable secrets:   <none>\nTokens:              <none>\nEvents:              <none>\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp\n  namespace: sec\nspec:\n  serviceAccountName: myappsa\n  containers:\n  - name: main\n    image: busybox:1.36\n    command:\n      - \"bin/sh\"\n      - \"-c\"\n      - \"sleep 10000\"\n```", "```\n$ kubectl apply -f serviceaccountpod.yaml\npod/myapp created\n\n```", "```\n$ kubectl exec myapp -n sec -- \\\n    cat /var/run/secrets/kubernetes.io/serviceaccount/token\neyJhbGciOiJSUzI1NiIsImtpZCI6IkdHeTRHOUUwNl ...\n\n```", "```\nsystem:serviceaccount:$NAMESPACE:$SERVICEACCOUNT\n```", "```\n$ kubectl get sa -n sec\nNAME      SECRETS   AGE\ndefault   0         3m45s\nmyappsa   0         3m2s\n\n```", "```\n$ kubectl auth can-i list pods --as=system:serviceaccount:sec:myappsa -n=sec\nno\n\n```", "```\n$ kubectl create rolebinding my-sa-view \\\n    --clusterrole=view \\\n    --serviceaccount=sec:myappsa \\\n    --namespace=sec\nrolebinding.rbac.authorization.k8s.io/my-sa-view created\n\n```", "```\n$ kubectl auth can-i list pods --as=system:serviceaccount:sec:myappsa -n=sec\nyes\n\n```", "```\n$ kubectl get roles -n=kube-system\nextension-apiserver-authentication-reader        2023-04-14T15:06:36Z\nkube-proxy                                       2023-04-14T15:06:38Z\nkubeadm:kubelet-config                           2023-04-14T15:06:36Z\nkubeadm:nodes-kubeadm-config                     2023-04-14T15:06:36Z\nsystem::leader-locking-kube-controller-manager   2023-04-14T15:06:36Z\nsystem::leader-locking-kube-scheduler            2023-04-14T15:06:36Z\nsystem:controller:bootstrap-signer               2023-04-14T15:06:36Z\nsystem:controller:cloud-provider                 2023-04-14T15:06:36Z\nsystem:controller:token-cleaner                  2023-04-14T15:06:36Z\nsystem:persistent-volume-provisioner             2023-04-14T15:06:39Z\n\n$ kubectl get clusterroles\nNAME                               CREATED AT\nadmin                              2023-04-14T15:06:36Z\ncluster-admin                      2023-04-14T15:06:36Z\nedit                               2023-04-14T15:06:36Z\nkubeadm:get-nodes                  2023-04-14T15:06:37Z\nsystem:aggregate-to-admin          2023-04-14T15:06:36Z\nsystem:aggregate-to-edit           2023-04-14T15:06:36Z\nsystem:aggregate-to-view           2023-04-14T15:06:36Z\nsystem:auth-delegator              2023-04-14T15:06:36Z\n...\n\n```", "```\n$ kubectl describe clusterroles/view\nName:           view\nLabels:         kubernetes.io/bootstrapping=rbac-defaults\n                rbac.authorization.k8s.io/aggregate-to-edit=true\nAnnotations:    rbac.authorization.kubernetes.io/autoupdate=true\nPolicyRule:\n  Resources                                     Non-Resource URLs     ...  ...\n  ---------                                     -----------------     ---  ---\n  bindings                                      []                    ...  ...\n  configmaps                                    []                    ...  ...\n  cronjobs.batch                                []                    ...  ...\n  daemonsets.extensions                         []                    ...  ...\n  deployments.apps                              []                    ...  ...\n  deployments.extensions                        []                    ...  ...\n  deployments.apps/scale                        []                    ...  ...\n  deployments.extensions/scale                  []                    ...  ...\n  endpoints                                     []                    ...  ...\n  events                                        []                    ...  ...\n  horizontalpodautoscalers.autoscaling          []                    ...  ...\n  ingresses.extensions                          []                    ...  ...\n  jobs.batch                                    []                    ...  ...\n  limitranges                                   []                    ...  ...\n  namespaces                                    []                    ...  ...\n  namespaces/status                             []                    ...  ...\n  persistentvolumeclaims                        []                    ...  ...\n  pods                                          []                    ...  ...\n  pods/log                                      []                    ...  ...\n  pods/status                                   []                    ...  ...\n  replicasets.extensions                        []                    ...  ...\n  replicasets.extensions/scale                  []                    ...  ...\n  ...\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp\n  namespace: sec\nspec:\n  serviceAccountName: myappsa\n  containers:\n  - name: main\n    image: busybox:1.36\n    command:\n      - \"sh\"\n      - \"-c\"\n      - \"sleep 10000\"\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: podreader\n  namespace: sec\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"get\", \"list\"]\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: podreaderbinding\n  namespace: sec\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: podreader\nsubjects:\n- kind: ServiceAccount\n  name: myappsa\n  namespace: sec\n```", "```\n$ kubectl create -f pod-reader.yaml\n$ kubectl create -f pod-reader-binding.yaml\n$ kubectl create -f pod-with-sa.yaml\n\n```", "```\n$ kubectl create role podreader \\\n    --verb=get --verb=list \\\n    --resource=pods -n=sec\n\n$ kubectl create rolebinding podreaderbinding \\\n    --role=sec:podreader \\\n    --serviceaccount=sec:myappsa \\\n    --namespace=sec\n\n```", "```\nkind: Pod\napiVersion: v1\nmetadata:\n  name: secpod\nspec:\n  containers:\n  - name: shell\n    image: ubuntu:20.04\n    command:\n      - \"bin/bash\"\n      - \"-c\"\n      - \"sleep 10000\"\n    securityContext:\n      runAsUser: 5000\n```", "```\n$ kubectl apply -f securedpod.yaml\npod/secpod created\n\n$ kubectl exec secpod -- ps aux\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n5000           1  0.0  0.0   2204   784 ?        Ss   15:56   0:00 sleep 10000\n5000          13  0.0  0.0   6408  1652 ?        Rs   15:56   0:00 ps aux\n\n```"]