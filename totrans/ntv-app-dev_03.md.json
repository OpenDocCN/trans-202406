["```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout...>\n  <android.support.design.widget.AppBarLayout...>\n    <android.support.v7.widget.Toolbar... />\n  </android.support.design.widget.AppBarLayout>\n  <FrameLayout...>\n  </FrameLayout>\n</LinearLayout>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<TextView... />\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  ...>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  ...>\n  <TextView\n    android:text=\"Hello world!\"\n    ...>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n  xmlns:bob=\"http://schemas.android.com/apk/res/android\"\n  bob:layout_width=\"match_parent\"\n  bob:layout_height=\"wrap_content\">\n\n  <TextView\n    bob:text=\"Hello world!\"\n    bob:layout_width=\"wrap_content\"\n    bob:layout_height=\"wrap_content\" />\n\n</LinearLayout>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n  ...>\n```", "```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n  <android.support.design.widget.AppBarLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\">\n\n    <android.support.v7.widget.Toolbar\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      app:navigationIcon=\"?attr/homeAsUpIndicator\" />\n\n  </android.support.design.widget.AppBarLayout>\n\n  <FrameLayout\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"0dp\"\n      android:layout_weight=\"1\">\n  </FrameLayout>\n\n</LinearLayout>\n```", "```\nmyView.visibility = View.GONE\n```", "```\nlet aView = UIView(frame: CGRect(x: 10.0, y: 30.0, width: 100.0, height: 50.0))\n```", "```\nlet aView = UIView(frame: .zero)\n```", "```\nlet aView = UIView(frame: CGRect(x: 10.0, y: 30.0, width: 100.0, height: 50.0))\n\nprint(aView.bounds) // Outputs x: 0.0, y: 0.0, width: 100.0, height: 50.0\n\nprint(aView.frame) // Outputs x: 10.0, y: 30.0, width: 100.0, height: 50.0\n```", "```\nclass ExampleViewController: UIViewController {\n\t@IBOutlet var blueRectangle: UIView!\n\n\t...\n}\n```", "```\nlet nib = UINib(nibName: \"CustomView\", bundle: nil)\nlet view = nib.instantiate(withOwner: nil, options: nil).first as? CustomView\n```", "```\nlet parentView = UIView(frame: .zero)\nlet childView = UIView(frame: .zero)\n\nparentView.addSubview(childView)\n```", "```\nchildView.removeFromSuperview()\n```", "```\nclass ExampleViewController: UIViewController {\n\n    // Set up the button whenever the view is loaded\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupButton()\n    }\n\n    // Method that does the actual button setup\n    func setupButton() {\n        // Create a button\n        let button = UIButton(frame: .zero)\n        button.translatesAutoresizingMaskIntoConstraints = false\n\n        // Add background color to the button\n        button.backgroundColor = .blue\n\n        // Add it to the view controller's view\n        view.addSubview(button)\n\n        // Add the spacing from the top of the view\n        button.topAnchor.constraint(equalTo: view.topAnchor, constant: 100.0).isActive =\n        true\n\n        // Add the spacing from the left edge of the view\n        button.leadingAnchor.constraint(equalTo: view.leadingAnchor,\n           constant: 16.0).isActive = true\n\n        // Add the spacing from the right edge of the view\n        button.trailingAnchor.constraint(equalTo: view.trailingAnchor,\n            constant: -16.0).isActive = true\n    }\n}\n```", "```\nmyView.alpha = 0.5\n```", "```\nmyView.alpha = 0.0\n```", "```\nmyView.isHidden = true // Hides the view\nmyView.isHidden = false // Un-hides the view\n```", "```\nmyView.backgroundColor = UIColor.blue\n```", "```\nmyView.backgroundColor = UIColor(red: 223.0, green: 23.0, blue: 0.0, alpha: 1.0)\n```", "```\n// Changes a view's background color to a semi-transparent color\nmyView.backgroundColor = UIColor(red: 223.0, green: 23.0, blue: 0.0, alpha: 0.5)\n\n// Changes the entire view to be semi-transparent\nmyView.alpha = 0.5\n```", "```\n// Give the view a fully transparent background\nmyView.backgroundColor = UIColor.clear\n```", "```\n// Create a 100x100 view at (0,0)\nlet view = UIView(frame: CGRect(x: 0.0, y: 0.0, width: 100.0, height: 100.0))\n\n// Resize the view to 50x50 and move it to (130, 55)\nview.frame = CGRect(x: 130.0, y: 55.0, width: 50.0, height: 50.0)\n```", "```\nclass ExampleViewController: UIViewController {\n\n    @IBOutlet var widthConstraint: NSLayoutConstraint!\n\n    ...\n\n    func resizeWidth() {\n        widthConstraint.constant = 50.0\n    }\n}\n```", "```\nclass ExampleViewController: UIViewController {\n\n    @IBOutlet var widthConstraint: NSLayoutConstraint!\n    @IBOutlet var otherWidthConstraint: NSLayoutConstraint!\n\n    /// ...\n\n    func resizeWidth() {\n        widthConstraint.isActive = false\n        otherWidthConstraint.isActive = true\n    }\n}\n```"]