- en: Appendix A. Linux Refresher
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If your Linux skills are rusty, here’s a very quick review of some details you’ll
    need for this book. (If you’re a complete beginner, this review might be too brief.
    Check out the recommended reading at the end.)
  prefs: []
  type: TYPE_NORMAL
- en: Commands, Arguments, and Options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To run a Linux command at the command line, type the command and press Enter.
    To kill a command in progress, press Ctrl-C.
  prefs: []
  type: TYPE_NORMAL
- en: 'A simple Linux command consists of a single word, which is usually the name
    of a program, followed by additional strings called *arguments*. For example,
    the following command consists of a program name, `ls`, and two arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Arguments that begin with a dash, such as `-l`, are called *options* because
    they change the command’s behavior. Other arguments might be filenames, directory
    names, usernames, hostnames, or any other strings that the program needs. Options
    usually (but not always) precede the rest of the arguments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command options come in various forms, depending on which program you run:'
  prefs: []
  type: TYPE_NORMAL
- en: 'A single letter, such as `-l`, sometimes followed by a value, as in `-n 10`.
    Usually the space between the letter and the value can be omitted: `-n10`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A word preceded by two dashes, such as `--long`, sometimes followed by a value,
    as in `--block-size 100`. The space between the option and its value may often
    be replaced by an equals sign: `--block-size=100`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A word preceded by one dash, such as `-type`, optionally followed by a value,
    as in `-type f`. This option format is rare; one command that uses it is `find`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single letter without a dash. This option format is rare; one command that
    uses it is `tar`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple options may often (depending on the command) be combined behind a single
    dash. For example, the command `ls -al` is equivalent to `ls -a -l`.
  prefs: []
  type: TYPE_NORMAL
- en: Options vary not only in appearance but also in meaning. In the command `ls
    -l`, the `-l` means “long output,” but in the command `wc -l` it means “lines
    of text.” Two programs also might use different options to mean the same thing,
    such as `-q` for “run quietly” versus `-s` for “run silently.” Inconsistencies
    like these make Linux harder to learn, but you eventually get used to them.
  prefs: []
  type: TYPE_NORMAL
- en: The Filesystem, Directories, and Paths
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux files are contained in directories (folders) that are organized into a
    tree structure, such as the one in [Figure A-1](#fig_filesystem). The tree begins
    in a directory called the *root*, denoted by a single forward slash (`/`), which
    may contain files and other directories, called *subdirectories*. For example,
    the directory *Music* has two subdirectories, *mp3* and *SheetMusic*. We call
    *Music* the parent directory of *mp3* and *SheetMusic*. Directories with the same
    parent are called *siblings*.
  prefs: []
  type: TYPE_NORMAL
- en: A path through the tree is written as a sequence of directory names separated
    by forward slashes, such as */home/smith/Music/mp3*. A path may also end with
    a filename, as in */home/smith/Music/mp3/catalog.txt*. These paths are called
    *absolute paths* because they begin at the root directory. Paths that begin elsewhere
    (and don’t start with a forward slash) are called *relative paths* because they
    are relative to the current directory. If your current directory is */home/smith/Music*,
    then some relative paths are *mp3* (a subdirectory) and *mp3/catalog.txt* (a file).
    Even a filename by itself, like *catalog.txt*, is a relative path with respect
    to */home/smith/Music/mp3*.
  prefs: []
  type: TYPE_NORMAL
- en: Two special relative paths are a single dot (`.`), which refers to the current
    directory, and two dots in a row (`..`), which refers to the current directory’s
    parent.^([1](app01.xhtml#idm46586635832560)) Both can be part of larger paths.
    For example, if your current directory is */home/smith/Music/mp3*, then the path
    `..` refers to *Music*, the path `../../../..` refers to the root directory, and
    the path *../SheetMusic* refers to a sibling of *mp3*.
  prefs: []
  type: TYPE_NORMAL
- en: '![A Linux directory tree, starting at the root](Images/elcl_aa01.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure A-1\. Paths in a Linux directory tree
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: You and every other user on a Linux system have a designated directory, called
    your *home directory*, where you can freely create, edit, and delete files and
    directories. Its path is usually */home/* followed by your username, such as */home/smith*.
  prefs: []
  type: TYPE_NORMAL
- en: Directory Movement
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At any moment, your command line (shell) operates in a given directory, called
    your *current directory*, *working directory*, or *current working directory*.
    View the path of your current directory with the `pwd` (print working directory)
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Move between directories with the `cd` (change directory) command, supplying
    the path (absolute or relative) to your desired destination:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Creating and Editing Files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Edit files with a standard Linux text editor by running any of the following
    commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '`emacs`'
  prefs: []
  type: TYPE_NORMAL
- en: Once emacs is running, type Ctrl-h followed by t for a tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '`nano`'
  prefs: []
  type: TYPE_NORMAL
- en: Visit [nano-editor.org](https://nano-editor.org) for documentation.
  prefs: []
  type: TYPE_NORMAL
- en: '`vim` or `vi`'
  prefs: []
  type: TYPE_NORMAL
- en: Run the command `vimtutor` for a tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a file, simply provide its name as an argument, and the editor creates
    it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Alternatively, create an empty file with the `touch` command, supplying the
    desired filename as an argument:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: File and Directory Handling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'List the files in a directory (by default, your current directory) with the
    `ls` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'See attributes of a file or directory with a “long” listing (`ls -l`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Left to right, the attributes are the file permissions (`-rw-r—r--`) described
    in [“File Permissions”](#section_permissions), the owner (`smith`) and group (`smith`),
    the size in bytes (`325`), the last modification date and time (`Jul 3` of this
    year at `17:44`), and the filename (`animals.txt`).
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, `ls` does not print filenames that begin with a dot. To list these
    files, which are often called *dot files* or *hidden files*, add the `-a` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Copy a file with the `cp` command, supplying the original filename and the
    new filename:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Rename a file with the `mv` (move) command, supplying the original filename
    and the new filename:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Delete a file with the `rm` (remove) command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Deletion on Linux is not friendly. The `rm` command does not ask “Are you sure?”
    and there is no trash can for restoring files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a directory with `mkdir`, rename it with `mv`, and delete it (if empty)
    with `rmdir`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Copy one or more files (or directories) into a directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Continuing, move one or more files (or directories) into a directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Delete a directory and all its contents with `rm -rf`. Take care before running
    this command because it is not reversible. See [“Never Delete the Wrong File Again
    (Thanks to History Expansion)”](ch03.xhtml#cs_never_delete) for safety tips.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: File Viewing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Print a text file on the screen with the `cat` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'View a text file one screenful at a time with the `less` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: While running `less`, display the next page by pressing the spacebar. To exit
    `less`, press q. For help, press h.
  prefs: []
  type: TYPE_NORMAL
- en: File Permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `chmod` command sets a file to be readable, writable, and/or executable
    by yourself, a given group of users, or everybody. [Figure A-2](#fig_chmod) is
    a brief refresher on file permissions.
  prefs: []
  type: TYPE_NORMAL
- en: '![File permission bits explained](Images/elcl_aa02.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure A-2\. File permission bits
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Here are some common operations with `chmod`. Make a file readable and writable
    by you, and only readable by everyone else:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Protect it from all other users:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Make a directory readable and enterable by everyone, but writable only by you:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Protect a directory from all other users:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Normal permissions don’t apply to the superuser, who can read and write all
    files and directories on the system.
  prefs: []
  type: TYPE_NORMAL
- en: Processes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you run a Linux command, it launches one or more Linux *processes*, each
    with a numeric process ID called a *PID*. See your shell’s current processes with
    the `ps` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'or all running processes for all users with:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Kill a process of your own with the `kill` command, supplying the PID as an
    argument. The superuser (Linux administrator) can kill any user’s process.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Viewing Documentation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `man` command prints documentation about any standard command on your Linux
    system. Simply type `man` followed by the name of the command. For example, to
    view documentation for the `cat` command, run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: The displayed document is known as the command’s *manpage*. When someone says
    “view the manpage for grep,” they mean run the command `man grep`.
  prefs: []
  type: TYPE_NORMAL
- en: '`man` displays documentation one page at a time using the program `less`,^([2](app01.xhtml#idm46586635650592))
    so the standard keystrokes for `less` will work. [Table A-1](#table_man) lists
    some common keystrokes.'
  prefs: []
  type: TYPE_NORMAL
- en: Table A-1\. Some keystrokes for viewing manpages with `less`
  prefs: []
  type: TYPE_NORMAL
- en: '| Keystroke | Action |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| h | Help—display a list of keystrokes for `less` |'
  prefs: []
  type: TYPE_TB
- en: '| spacebar | View the next page |'
  prefs: []
  type: TYPE_TB
- en: '| b | View the previous page |'
  prefs: []
  type: TYPE_TB
- en: '| Enter | Scroll down one line |'
  prefs: []
  type: TYPE_TB
- en: '| < | Jump to the beginning of the document |'
  prefs: []
  type: TYPE_TB
- en: '| > | Jump to the end of the document |'
  prefs: []
  type: TYPE_TB
- en: '| / | Search forward for text (type the text and press Enter) |'
  prefs: []
  type: TYPE_TB
- en: '| ? | Search backward for text (type the text and press Enter) |'
  prefs: []
  type: TYPE_TB
- en: '| n | Locate the next occurrence of the search text |'
  prefs: []
  type: TYPE_TB
- en: '| q | Quit `man` |'
  prefs: []
  type: TYPE_TB
- en: Shell Scripts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To run a bunch of Linux commands as a unit, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Place the commands in a file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insert a magical first line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make the file executable with `chmod`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute the file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The file is called a *script* or *shell script*. The magical first line should
    be the symbols `#!` (pronounced “shebang”) followed by the path to a program that
    reads and runs the script:^([3](app01.xhtml#idm46586635612992))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Here is a shell script that says hello and prints today’s date. Lines beginning
    with `#` are comments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Use a text editor to store these lines in a file called *howdy*. Then make
    the file executable by running either of these commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'and run it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: The leading dot and slash (`./`) indicate that the script is in your current
    directory. Without them, the Linux shell won’t find the script:^([4](app01.xhtml#idm46586635598592))
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Linux shells provide some programming language features that are useful in scripts.
    `bash`, for example, provides `if` statements, `for` loops, `while` loops, and
    other control structures. A few examples are sprinkled throughout the book. See
    `man bash` for the syntax.
  prefs: []
  type: TYPE_NORMAL
- en: Becoming the Superuser
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Some files, directories, and programs are protected from normal users, including
    you:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: “Permission denied” usually means you tried to access protected resources. They
    are accessible only to the Linux superuser (username `root`). Most Linux systems
    come with a program called `sudo` (pronounced “soo doo”) that lets you become
    the superuser for the duration of a single command. If you installed Linux yourself,
    your account is probably set up already to run `sudo`. If you’re one user on somebody
    else’s Linux system, you might not have superuser privileges; speak to your system
    administrator if you’re not sure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Assuming you’re set up properly, simply run `sudo`, supplying it with the desired
    command to run as the superuser. You’ll be prompted for your login password to
    prove your identity. Supply it correctly, and the command will run with root privileges:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: '`sudo` may remember (cache) your passphrase for a while, depending on how `sudo`
    is configured, so it might not prompt you every time.'
  prefs: []
  type: TYPE_NORMAL
- en: Further Reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For more basics of Linux use, read my previous book, [*Linux Pocket Guide*](https://oreil.ly/46N1v)
    (O’Reilly), or seek out [online tutorials](https://oreil.ly/KLTji).
  prefs: []
  type: TYPE_NORMAL
- en: ^([1](app01.xhtml#idm46586635832560-marker)) The dot and double dot are not
    expressions evaluated by the shell. They are hard links present in every directory.
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](app01.xhtml#idm46586635650592-marker)) Or another program if you redefine
    the value of the shell variable `PAGER`.
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](app01.xhtml#idm46586635612992-marker)) If you omit the shebang line, your
    default shell will run the script. It’s a good practice to include the line.
  prefs: []
  type: TYPE_NORMAL
- en: ^([4](app01.xhtml#idm46586635598592-marker)) That’s because the current directory
    is usually omitted from the shell’s search path, for security reasons. Otherwise,
    an attacker could place a malicious, executable script named `ls` in your current
    directory, and when you ran `ls`, the script would run instead of the true `ls`
    command.
  prefs: []
  type: TYPE_NORMAL
