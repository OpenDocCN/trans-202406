["```\napiVersion: v1\nkind: Config\nclusters:                   ![1](Images/1.png)\n- cluster:\n    certificate-authority: /Users/bmuschko/.minikube/ca.crt\n    extensions:\n    - extension:\n        last-update: Mon, 09 Oct 2023 07:33:01 MDT\n        provider: minikube.sigs.k8s.io\n        version: v1.30.1\n      name: cluster_info\n    server: https://127.0.0.1:63709\n  name: minikube\ncontexts:                   ![2](Images/2.png)\n- context:\n    cluster: minikube\n    user: bmuschko\n  name: bmuschko\n- context:\n    cluster: minikube\n    extensions:\n    - extension:\n        last-update: Mon, 09 Oct 2023 07:33:01 MDT\n        provider: minikube.sigs.k8s.io\n        version: v1.30.1\n      name: context_info\n    namespace: default\n    user: minikube\n  name: minikube\ncurrent-context: minikube   ![3](Images/3.png)\npreferences: {}\nusers:                      ![4](Images/4.png)\n- name: bmuschko\n  user:\n    client-key-data: <REDACTED>\n- name: minikube\n  user:\n    client-certificate: /Users/bmuschko/.minikube/profiles/minikube/client.crt\n    client-key: /Users/bmuschko/.minikube/profiles/minikube/client.key\n```", "```\n$ kubectl config view\napiVersion: v1\nkind: Config\nclusters:\n...\n\n```", "```\n$ kubectl config current-context\nminikube\n\n```", "```\n$ kubectl config use-context bmuschko\nSwitched to context \"bmuschko\".\n\n```", "```\n$ kubectl config set-credentials myuser \\\n  --client-key=myuser.key --client-certificate=myuser.crt \\\n  --embed-certs=true\n\n```", "```\n$ kubectl create role read-only --verb=list,get,watch \\\n  --resource=pods,deployments,services\nrole.rbac.authorization.k8s.io/read-only created\n\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: read-only\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  - services\n  verbs:\n  - list\n  - get\n  - watch\n- apiGroups:      ![1](Images/1.png)\n  - apps\n  resources:\n  - deployments\n  verbs:\n  - list\n  - get\n  - watch\n```", "```\n$ kubectl get roles\nNAME        CREATED AT\nread-only   2021-06-23T19:46:48Z\n\n```", "```\n$ kubectl describe role read-only\nName:         read-only\nLabels:       <none>\nAnnotations:  <none>\nPolicyRule:\n  Resources         Non-Resource URLs  Resource Names  Verbs\n  ---------         -----------------  --------------  -----\n  pods              []                 []              [list get watch]\n  services          []                 []              [list get watch]\n  deployments.apps  []                 []              [list get watch]\n\n```", "```\n$ kubectl create rolebinding read-only-binding --role=read-only --user=bmuschko\nrolebinding.rbac.authorization.k8s.io/read-only-binding created\n\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: read-only-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: read-only\nsubjects:\n- apiGroup: rbac.authorization.k8s.io\n  kind: User\n  name: bmuschko\n```", "```\n$ kubectl get rolebindings\nNAME                ROLE             AGE\nread-only-binding   Role/read-only   24h\n\n```", "```\n$ kubectl describe rolebinding read-only-binding\nName:         read-only-binding\nLabels:       <none>\nAnnotations:  <none>\nRole:\n  Kind:  Role\n  Name:  read-only\nSubjects:\n  Kind  Name      Namespace\n  ----  ----      ---------\n  User  bmuschko\n\n```", "```\n$ kubectl config current-context\nminikube\n$ kubectl create deployment myapp --image=:1.25.2 --port=80 --replicas=2\ndeployment.apps/myapp created\n\n```", "```\n$ kubectl config use-context bmuschko-context\nSwitched to context \"bmuschko-context\".\n\n```", "```\n$ kubectl get deployments\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nmyapp   2/2     2            2           8s\n\n```", "```\n$ kubectl get replicasets\nError from server (Forbidden): replicasets.apps is forbidden: User \"bmuschko\" \\\ncannot list resource \"replicasets\" in API group \"apps\" in the namespace \"default\"\n\n```", "```\n$ kubectl delete deployment myapp\nError from server (Forbidden): deployments.apps \"myapp\" is forbidden: User \\\n\"bmuschko\" cannot delete resource \"deployments\" in API group \"apps\" in the \\\nnamespace \"default\"\n\n```", "```\n$ kubectl auth can-i --list --as bmuschko\nResources          Non-Resource URLs   Resource Names   Verbs\n...\npods               []                  []               [list get watch]\nservices           []                  []               [list get watch]\ndeployments.apps   []                  []               [list get watch]\n$ kubectl auth can-i list pods --as bmuschko\nyes\n\n```", "```\n$ kubectl get serviceaccounts\nNAME      SECRETS   AGE\ndefault   0         4d\n\n```", "```\n$ kubectl create serviceaccount cicd-bot\nserviceaccount/cicd-bot created\n\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: cicd-bot\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: k97\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: sa-api\n  namespace: k97\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: list-objects\n  namespace: k97\nspec:\n  serviceAccountName: sa-api   ![1](Images/1.png)\n  containers:\n  - name: pods\n    image: alpine/curl:3.14\n    command: ['sh', '-c', 'while true; do curl -s -k -m 5 -H \\\n              \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/ \\\n              serviceaccount/token)\" https://kubernetes.default.svc.cluster. \\\n              local/api/v1/namespaces/k97/pods; sleep 10; done']   ![2](Images/2.png)\n  - name: deployments\n    image: alpine/curl:3.14\n    command: ['sh', '-c', 'while true; do curl -s -k -m 5 -H \\\n              \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/ \\\n              serviceaccount/token)\" https://kubernetes.default.svc.cluster. \\\n              local/apis/apps/v1/namespaces/k97/deployments;\n              sleep 10; done']                                     ![3](Images/3.png)\n```", "```\n$ kubectl apply -f setup.yaml\nnamespace/k97 created\nserviceaccount/sa-api created\npod/list-objects created\n\n```", "```\n$ kubectl logs list-objects -c pods -n k97\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"pods is forbidden: User \\\"system:serviceaccount:k97:sa-api\\\" \\\n              cannot list resource \\\"pods\\\" in API group \\\"\\\" in the \\\n              namespace \\\"k97\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"kind\": \"pods\"\n  },\n  \"code\": 403\n}\n$ kubectl logs list-objects -c deployments -n k97\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"deployments.apps is forbidden: User \\\n              \\\"system:serviceaccount:k97:sa-api\\\" cannot list resource \\\n              \\\"deployments\\\" in API group \\\"apps\\\" in the namespace \\\n              \\\"k97\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"group\": \"apps\",\n    \"kind\": \"deployments\"\n  },\n  \"code\": 403\n}\n\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: list-pods-role\n  namespace: k97\nrules:\n- apiGroups: [\"\"]\n  resources: [\"pods\"]\n  verbs: [\"list\"]\n```", "```\n$ kubectl apply -f role.yaml\nrole.rbac.authorization.k8s.io/list-pods-role created\n\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: serviceaccount-pod-rolebinding\n  namespace: k97\nsubjects:\n- kind: ServiceAccount\n  name: sa-api\nroleRef:\n  kind: Role\n  name: list-pods-role\n  apiGroup: rbac.authorization.k8s.io\n```", "```\n$ kubectl apply -f rolebinding.yaml\nrolebinding.rbac.authorization.k8s.io/serviceaccount-pod-rolebinding created\n\n```", "```\n$ kubectl logs list-objects -c pods -n k97\n{\n  \"kind\": \"PodList\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"resourceVersion\": \"628\"\n  },\n  \"items\": [\n      {\n        \"metadata\": {\n          \"name\": \"list-objects\",\n          \"namespace\": \"k97\",\n          ...\n      }\n  ]\n}\n\n```", "```\n$ kubectl logs list-objects -c deployments -n k97\n{\n  \"kind\": \"Status\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {},\n  \"status\": \"Failure\",\n  \"message\": \"deployments.apps is forbidden: User \\\n              \\\"system:serviceaccount:k97:sa-api\\\" cannot list resource \\\n              \\\"deployments\\\" in API group \\\"apps\\\" in the namespace \\\n              \\\"k97\\\"\",\n  \"reason\": \"Forbidden\",\n  \"details\": {\n    \"group\": \"apps\",\n    \"kind\": \"deployments\"\n  },\n  \"code\": 403\n}\n\n```", "```\n$ kube-apiserver --enable-admission-plugins=NamespaceLifecycle,PodSecurity,\\\n  LimitRanger\n\n```"]