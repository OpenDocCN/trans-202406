["```\n`cd hello-skaffold`\n`skaffold dev`\nListing files to watch...\n - skaffold-demo Generating tags...\n - skaffold-demo -> skaffold-demo:e50c9e7-dirty Checking cache...\n - skaffold-demo: Found Locally Tags used in deployment:\n - skaffold-demo -> skaffold-demo:39f0eb63b0ced173... Starting deploy... Helm release demo not installed. Installing... NAME: demo NAMESPACE: demo STATUS: deployed REVISION: 1 TEST SUITE: None Waiting for deployments to stabilize...\n - demo:deployment/demo is ready. Deployments stabilized in 1.097 second Press Ctrl+C to exit Watching for changes... ...\n```", "```\n...\nWatching for changes...\nTags used in deployment:\n - skaffold-demo -> skaffold-demo:39f0eb63b0ced173...\nStarting deploy...\nRelease \"demo\" has been upgraded. Happy Helming!\nNAME: demo\nNAMESPACE: demo\nSTATUS: deployed\nREVISION: 2\nTEST SUITE: None\nWaiting for deployments to stabilize...\n - demo:deployment/demo is ready.\nDeployments stabilized in 1.066 second\nWatching for changes...\n```", "```\nCleaning up...\nrelease \"demo\" uninstalled\n```", "```\napiVersion: apiextensions.crossplane.io/v1\nkind: Composition\nmetadata:\n  name: xpostgresqlinstances.aws.database.example.org\n  labels:\n    provider: aws\n    vpc: default\nspec:\n  writeConnectionSecretsToNamespace: crossplane-system\n  compositeTypeRef:\n    apiVersion: database.example.org/v1alpha1\n    kind: XPostgreSQLInstance\n  resources:\n    - name: rdsinstance\n      base:\n        apiVersion: database.aws.crossplane.io/v1beta1\n        kind: RDSInstance\n        spec:\n          forProvider:\n            region: us-east-1\n            dbInstanceClass: db.t2.small\n            masterUsername: postgres-admin\n            engine: postgres\n            engineVersion: \"12\"\n            skipFinalSnapshotBeforeDeletion: true\n            publiclyAccessible: false\n          writeConnectionSecretToRef:\n            namespace: crossplane-system\n...\n```", "```\napiVersion: apps/v1\nkind: Deployment\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n```", "```\napiVersion: apps/v1\nkind: Deployment\nspec:\n  replicas: 10\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 20%\n      maxUnavailable: 3\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: demo\n    `deployment``:` `blue`\n  type: ClusterIP\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: {{ .Values.appName }}-db-migrate\n  annotations:\n    \"helm.sh/hook\": pre-upgrade\n    \"helm.sh/hook-delete-policy\": hook-succeeded\nspec:\n  activeDeadlineSeconds: 60\n  template:\n      name: {{ .Values.appName }}-db-migrate\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: {{ .Values.appName }}-migration-job\n        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}\n        command:\n          - rails\n          - db:migrate\n```", "```\nannotations:\n  \"helm.sh/hook\": pre-upgrade\n  \"helm.sh/hook-delete-policy\": hook-succeeded\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: {{ .Values.appName }}-stage-0\n  annotations:\n    \"helm.sh/hook\": pre-upgrade\n    \"helm.sh/hook-delete-policy\": hook-succeeded\n    \"helm.sh/hook-weight\": 0\n```"]