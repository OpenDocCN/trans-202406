["```\nspec:\n  containers:\n  - name: demo\n    image: cloudnatived/demo:hello\n    ports:\n    - containerPort: 8888\n    `resources``:`\n      `requests``:`\n        `memory``:` `\"``10Mi``\"`\n        `cpu``:` `\"``100m``\"`\n```", "```\nspec:\n  containers:\n  - name: demo\n    image: cloudnatived/demo:hello\n    ports:\n    - containerPort: 8888\n    `resources``:`\n      `limits``:`\n        `memory``:` `\"``20Mi``\"`\n        `cpu``:` `\"``250m``\"`\n```", "```\nlivenessProbe:\n  httpGet:\n    path: /healthz\n    port: 8888\n  initialDelaySeconds: 3\n  periodSeconds: 3\n  failureThreshold: 2\n```", "```\nlivenessProbe:\n  tcpSocket:\n    port: 8888\n```", "```\nlivenessProbe:\n  exec:\n    command:\n    - cat\n    - /tmp/healthy\n```", "```\nreadinessProbe:\n  httpGet:\n    path: /healthz\n    port: 8888\n  initialDelaySeconds: 3\n  periodSeconds: 3\n```", "```\n`kubectl get pods`\nNAME             READY     STATUS    RESTARTS   AGE readiness-test   0/1       Running   0          56s\n```", "```\nlivenessProbe:\n  httpGet:\n    path: /healthz\n    port: 8888\n  failureThreshold: 2\n\nstartupProbe:\n  httpGet:\n    path: /healthz\n    port: 8888\n  failureThreshold: 10\n```", "```\napiVersion: policy/v1beta1\nkind: PodDisruptionBudget\nmetadata:\n  name: demo-pdb\nspec:\n  `minAvailable``:` `3`\n  selector:\n    matchLabels:\n      app: demo\n```", "```\napiVersion: policy/v1beta1\nkind: PodDisruptionBudget\nmetadata:\n  name: demo-pdb\nspec:\n  `maxUnavailable``:` `10%`\n  selector:\n    matchLabels:\n      app: demo\n```", "```\n`kubectl get namespaces`\nNAME           STATUS    AGE default        Active    1y kube-public    Active    1y kube-system    Active    1y\n```", "```\n`kubectl get pods --namespace prod`\n```", "```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: `demo`\n```", "```\n`cd demo/hello-namespace`\n`ls k8s`\ndeployment.yaml    limitrange.yaml    namespace.yaml     resourcequota.yaml service.yaml\n```", "```\nSERVICE.NAMESPACE.svc.cluster.local\n```", "```\ndemo.prod\n```", "```\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: demo-resourcequota\nspec:\n  hard:\n    pods: \"100\"\n```", "```\n`cd demo/hello-namespace`\n`kubectl create namespace demo`\nnamespace \"demo\" created `kubectl apply --namespace demo -f k8s/resourcequota.yaml`\nresourcequota \"demo-resourcequota\" created\n```", "```\nError from server (Forbidden): pods \"demo\" is forbidden: exceeded quota:\ndemo-resourcequota, requested: pods=1, used: pods=100, limited: pods=100\n```", "```\n`kubectl describe resourcequota -n demo`\nName:       demo-resourcequota Namespace:  demo Resource    Used  Hard --------    ----  ---- pods        1     100\n```", "```\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: demo-limitrange\nspec:\n  limits:\n  - default:\n      cpu: \"500m\"\n      memory: \"256Mi\"\n    defaultRequest:\n      cpu: \"200m\"\n      memory: \"128Mi\"\n    type: Container\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-brilliant-app\n  annotations:\n    example.com/owner: \"Customer Apps Team\"\n...\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: demo-job\nspec:\n  ttlSecondsAfterFinished: 60\n  template:\n    spec:\n      containers:\n...\n```", "```\naffinity:\n  nodeAffinity:\n    requiredDuringSchedulingIgnoredDuringExecution:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: cloud.google.com/gke-preemptible\n          operator: DoesNotExist\n```", "```\naffinity:\n  nodeAffinity:\n    preferredDuringSchedulingIgnoredDuringExecution:\n    - preference:\n        matchExpressions:\n        - key: cloud.google.com/gke-preemptible\n          operator: Exists\n      weight: 100\n```"]