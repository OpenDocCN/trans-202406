["```\nnpm i react-icons\n```", "```\nimport React from \"react\";\nimport { FaStar } from \"react-icons/fa\";\n\nexport default function StarRating() {\n  return [\n    <FaStar color=\"red\" />,\n    <FaStar color=\"red\" />,\n    <FaStar color=\"red\" />,\n    <FaStar color=\"grey\" />,\n    <FaStar color=\"grey\" />\n  ];\n}\n```", "```\nconst Star = ({ selected = false }) => (\n  <FaStar color={selected ? \"red\" : \"grey\"} />\n);\n```", "```\nconst createArray = length => [...Array(length)];\n\nexport default function StarRating({ totalStars = 5 }) {\n  return createArray(totalStars).map((n, i) => <Star key={i} />);\n}\n```", "```\nimport React, { useState } from \"react\";\nimport { FaStar } from \"react-icons/fa\";\n```", "```\nexport default function StarRating({ totalStars = 5 }) {\n  const [selectedStars] = useState(3);\n  return (\n    <>\n      {createArray(totalStars).map((n, i) => (\n        <Star key={i} selected={selectedStars > i} />\n      ))}\n      <p>\n        {selectedStars} of {totalStars} stars\n      </p>\n    </>\n  );\n}\n```", "```\nconst Star = ({ selected = false, onSelect = f => f }) => (\n  <FaStar color={selected ? \"red\" : \"grey\"} onClick={onSelect} />\n);\n```", "```\nexport default function StarRating({ totalStars = 5 }) {\n  const [selectedStars, setSelectedStars] = useState(0);\n  return (\n    <>\n      {createArray(totalStars).map((n, i) => (\n        <Star\n          key={i}\n          selected={selectedStars > i}\n          onSelect={() => setSelectedStars(i + 1)}\n        />\n      ))}\n      <p>\n        {selectedStars} of {totalStars} stars\n      </p>\n    </>\n  );\n}\n```", "```\nexport default function App() {\n  return <StarRating style={{ backgroundColor: \"lightblue\" }} />;\n}\n```", "```\nexport default function StarRating({ style = {}, totalStars = 5 }) {\n  const [selectedStars, setSelectedStars] = useState(0);\n  return (\n    <div style={{ padding: \"5px\", ...style }}>\n      {createArray(totalStars).map((n, i) => (\n        <Star\n          key={i}\n          selected={selectedStars > i}\n          onSelect={() => setSelectedStars(i + 1)}\n        />\n      ))}\n      <p>\n        {selectedStars} of {totalStars} stars\n      </p>\n    </div>\n  );\n}\n```", "```\nexport default function App() {\n  return (\n    <StarRating\n      style={{ backgroundColor: \"lightblue\" }}\n      onDoubleClick={e => alert(\"double click\")}\n    />\n  );\n}\n```", "```\nexport default function StarRating({ style = {}, totalStars = 5, ...props }) {\n  const [selectedStars, setSelectedStars] = useState(0);\n  return (\n    <div style={{ padding: 5, ...style }} {...props}>\n      ...\n    </div>\n  );\n}\n```", "```\n[\n  {\n    \"id\": \"0175d1f0-a8c6-41bf-8d02-df5734d829a4\",\n    \"title\": \"ocean at dusk\",\n    \"color\": \"#00c4e2\",\n    \"rating\": 5\n  },\n  {\n    \"id\": \"83c7ba2f-7392-4d7d-9e23-35adbe186046\",\n    \"title\": \"lawn\",\n    \"color\": \"#26ac56\",\n    \"rating\": 3\n  },\n  {\n    \"id\": \"a11e3995-b0bd-4d58-8c48-5e49ae7f7f23\",\n    \"title\": \"bright red\",\n    \"color\": \"#ff0000\",\n    \"rating\": 0\n  }\n]\n```", "```\nimport React, { useState } from \"react\";\nimport colorData from \"./color-data.json\";\nimport ColorList from \"./ColorList.js\";\n\nexport default function App() {\n  const [colors] = useState(colorData);\n  return <ColorList colors={colors} />;\n}\n```", "```\nimport React from \"react\";\nimport Color from \"./Color\";\n\nexport default function ColorList({ colors = [] }) {\n  if(!colors.length) return <div>No Colors Listed.</div>;\n  return (\n    <div>\n      {\n        colors.map(color => <Color key={color.id} {...color} />)\n      }\n    </div>\n  );\n}\n```", "```\nexport default function Color({ title, color, rating }) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      <div style={{ height: 50, backgroundColor: color }} />\n      <StarRating selectedStars={rating} />\n    </section>\n  );\n}\n```", "```\nexport default function StarRating({ totalStars = 5, selectedStars = 0 }) {\n  return (\n    <>\n      {createArray(totalStars).map((n, i) => (\n        <Star\n          key={i}\n          selected={selectedStars > i}\n        />\n      ))}\n      <p>\n        {selectedStars} of {totalStars} stars\n      </p>\n    </>\n  );\n}\n```", "```\nimport { FaTrash } from \"react-icons/fa\";\n\nexport default function Color({ id, title, color, rating, onRemove = f => f }) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      <button onClick={() => onRemove(id)}>\n        <FaTrash />\n      </button>\n      <div style={{ height: 50, backgroundColor: color }} />\n      <StarRating selectedStars={rating} />\n    </section>\n  );\n}\n```", "```\nexport default function ColorList({ colors = [], onRemoveColor = f => f }) {\n  if (!colors.length) return <div>No Colors Listed. (Add a Color)</div>;\n\nreturn (\n    colors.map(color => (\n          <Color key={color.id} {...color} onRemove={onRemoveColor} />\n        )\n      }\n    </div>\n  );\n}\n```", "```\nexport default function App() {\n  const [colors, setColors] = useState(colorData);\n  return (\n    <ColorList\n      colors={colors}\n      onRemoveColor={id => {\n        const newColors = colors.filter(color => color.id !== id);\n        setColors(newColors);\n      }}\n    />\n  );\n}\n```", "```\nexport default function StarRating({\n  totalStars = 5,\n  selectedStars = 0,\n  onRate = f => f\n}) {\n  return (\n    <>\n      {createArray(totalStars).map((n, i) => (\n        <Star\n          key={i}\n          selected={selectedStars > i}\n          onSelect={() => onRate(i + 1)}\n        />\n      ))}\n    </>\n  );\n}\n```", "```\nexport default function Color({\n  id,\n  title,\n  color,\n  rating,\n  onRemove = f => f,\n  onRate = f => f\n}) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      <button onClick={() => onRemove(id)}>\n        <FaTrash />\n      </button>\n      <div style={{ height: 50, backgroundColor: color }} />\n      <StarRating\n        selectedStars={rating}\n        onRate={rating => onRate(id, rating)}\n      />\n    </section>\n  );\n}\n```", "```\nexport default function ColorList({\n  colors = [],\n  onRemoveColor = f => f,\n  onRateColor = f => f\n}) {\nif (!colors.length) return <div>No Colors Listed. (Add a Color)</div>;\n  return (\n    <div className=\"color-list\">\n      {\n        colors.map(color => (\n          <Color\n            key={color.id}\n            {...color}\n            onRemove={onRemoveColor}\n            onRate={onRateColor}\n          />\n        )\n      }\n    </div>\n  );\n}\n```", "```\nexport default function App() {\n  const [colors, setColors] = useState(colorData);\n  return (\n    <ColorList\n      colors={colors}\n      onRateColor={(id, rating) => {\n        const newColors = colors.map(color =>\n          color.id === id ? { ...color, rating } : color\n        );\n        setColors(newColors);\n      }}\n      onRemoveColor={id => {\n        const newColors = colors.filter(color => color.id !== id);\n        setColors(newColors);\n      }}\n    />\n  );\n}\n```", "```\n<form>\n  <input type=\"text\" placeholder=\"color title...\" required />\n  <input type=\"color\" required />\n  <button>ADD</button>\n</form>\n```", "```\nimport React, { useRef } from \"react\";\n\nexport default function AddColorForm({ onNewColor = f => f }) {\n  const txtTitle = useRef();\n  const hexColor = useRef();\n\n  const submit = e => { ... }\n\n  return (...)\n}\n```", "```\n  return (\n    <form onSubmit={submit}>\n      <input ref={txtTitle} type=\"text\" placeholder=\"color title...\" required />\n      <input ref={hexColor} type=\"color\" required />\n      <button>ADD</button>\n    </form>\n  );\n}\n```", "```\nconst submit = e => {\n  e.preventDefault();\n  const title = txtTitle.current.value;\n  const color = hexColor.current.value;\n  onNewColor(title, color);\n  txtTitle.current.value = \"\";\n  hexColor.current.value = \"\";\n};\n```", "```\nimport React, { useState } from \"react\";\n\nexport default function AddColorForm({ onNewColor = f => f }) {\n  const [title, setTitle] = useState(\"\");\n  const [color, setColor] = useState(\"#000000\");\n\n  const submit = e => { ... };\n\n  return ( ... );\n}\n```", "```\n<form onSubmit={submit}>\n  <input\n    value={title}\n    onChange={event => setTitle(event.target.value)}\n    type=\"text\"\n    placeholder=\"color title...\"\n    required\n  />\n  <input\n    value={color}\n    onChange={event => setColor(event.target.value)}\n    type=\"color\"\n    required\n  />\n  <button>ADD</button>\n</form>\n}\n```", "```\nconst submit = e => {\n  e.preventDefault();\n  onNewColor(title, color);\n  setTitle(\"\");\n  setColor(\"\");\n};\n```", "```\nvalue={title}\nonChange={event => setTitle(event.target.value)}\n```", "```\nimport { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n  return [\n    { value, onChange: e => setValue(e.target.value) },\n    () => setValue(initialValue)\n  ];\n};\n```", "```\nimport React from \"react\";\nimport { useInput } from \"./hooks\";\n\nexport default function AddColorForm({ onNewColor = f => f }) {\n  const [titleProps, resetTitle] = useInput(\"\");\n  const [colorProps, resetColor] = useInput(\"#000000\");\n\n  const submit = event => { ... }\n\n  return ( ... )\n}\n```", "```\nreturn (\n  <form onSubmit={submit}>\n    <input\n      {...titleProps}\n      type=\"text\"\n      placeholder=\"color title...\"\n      required\n    />\n    <input {...colorProps} type=\"color\" required />\n    <button>ADD</button>\n  </form>\n);\n}\n```", "```\nconst submit = event => {\n  event.preventDefault();\n  onNewColor(titleProps.value, colorProps.value);\n  resetTitle();\n  resetColor();\n};\n```", "```\nimport React, { useState } from \"react\";\nimport colorData from \"./color-data.json\";\nimport ColorList from \"./ColorList.js\";\nimport AddColorForm from \"./AddColorForm\";\nimport { v4 } from \"uuid\";\n\nexport default function App() {\n  const [colors, setColors] = useState(colorData);\n  return (\n    <>\n      <AddColorForm\n        onNewColor={(title, color) => {\n          const newColors = [\n            ...colors,\n            {\n              id: v4(),\n              rating: 0,\n              title,\n              color\n            }\n          ];\n          setColors(newColors);\n        }}\n      />\n      <ColorList .../>\n    </>\n  );\n}\n```", "```\nimport React, { createContext } from \"react\";\nimport colors from \"./color-data\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nexport const ColorContext = createContext();\n\nrender(\n  <ColorContext.Provider value={{ colors }}>\n    <App />\n  </ColorContext.Provider>,\n  document.getElementById(\"root\")\n);\n```", "```\nimport React from \"react\";\nimport ColorList from \"./ColorList.js\";\nimport AddColorForm from \"./AddColorForm\";\n\nexport default function App() {\n  return (\n    <>\n      <AddColorForm />\n      <ColorList />\n    </>\n  );\n}\n```", "```\nimport React, { useContext } from \"react\";\nimport { ColorContext } from \"./\";\nimport Color from \"./Color\";\n\nexport default function ColorList() {\n  const { colors } = useContext(ColorContext);\n  if (!colors.length) return <div>No Colors Listed. (Add a Color)</div>;\n  return (\n    <div className=\"color-list\">\n      {\n        colors.map(color => <Color key={color.id} {...color} />)\n      }\n    </div>\n  );\n}\n```", "```\nexport default function ColorList() {\n  return (\n    <ColorContext.Consumer>\n      {context => {\n      if (!context.colors.length)\n      return <div>No Colors Listed. (Add a Color)</div>;\n        return (\n          <div className=\"color-list\">\n            {\n              context.colors.map(color =>\n  <Color key={color.id} {...color} />)\n            }\n          </div>\n        )\n      }}\n    </ColorContext.Consumer>\n  )\n}\n```", "```\nimport React, { createContext, useState } from \"react\";\nimport colorData from \"./color-data.json\";\n\nconst ColorContext = createContext();\n\nexport default function ColorProvider ({ children }) {\n  const [colors, setColors] = useState(colorData);\n  return (\n    <ColorContext.Provider value={{ colors, setColors }}>\n      {children}\n    </ColorContext.Provider>\n  );\n};\n```", "```\nexport default function ColorProvider ({ children }) {\n  const [colors, setColors] = useState(colorData);\n\n  const addColor = (title, color) =>\n    setColors([\n      ...colors,\n      {\n        id: v4(),\n        rating: 0,\n        title,\n        color\n      }\n    ]);\n\n  const rateColor = (id, rating) =>\n    setColors(\n      colors.map(color => (color.id === id ? { ...color, rating } : color))\n    );\n\n  const removeColor = id => setColors(colors.filter(color => color.id !== id));\n\n  return (\n    <ColorContext.Provider value={{ colors, addColor, removeColor, rateColor }}>\n      {children}\n    </ColorContext.Provider>\n  );\n};\n```", "```\nimport React, { createContext, useState, useContext } from \"react\";\nimport colorData from \"./color-data.json\";\nimport { v4 } from \"uuid\";\n\nconst ColorContext = createContext();\nexport const useColors = () => useContext(ColorContext);\n```", "```\nimport React from \"react\";\nimport { ColorProvider } from \"./color-hooks.js\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(\n  <ColorProvider>\n    <App />\n  </ColorProvider>,\n  document.getElementById(\"root\")\n);\n```", "```\nimport React from \"react\";\nimport Color from \"./Color\";\nimport { useColors } from \"./color-hooks\";\n\nexport default function ColorList() {\n  const { colors } = useColors();\n  return ( ... );\n}\n```", "```\nimport React from \"react\";\nimport StarRating from \"./StarRating\";\nimport { useColors } from \"./color-hooks\";\n\nexport default function Color({ id, title, color, rating }) {\n  const { rateColor, removeColor } = useColors();\n  return (\n    <section>\n      <h1>{title}</h1>\n      <button onClick={() => removeColor(id)}>X</button>\n      <div style={{ height: 50, backgroundColor: color }} />\n      <StarRating\n        selectedStars={rating}\n        onRate={rating => rateColor(id, rating)}\n      />\n    </section>\n  );\n}\n```", "```\nimport React from \"react\";\nimport { useInput } from \"./hooks\";\nimport { useColors } from \"./color-hooks\";\n\nexport default function AddColorForm() {\n  const [titleProps, resetTitle] = useInput(\"\");\n  const [colorProps, resetColor] = useInput(\"#000000\");\n  const { addColor } = useColors();\n\n  const submit = e => {\n    e.preventDefault();\n    addColor(titleProps.value, colorProps.value);\n    resetTitle();\n    resetColor();\n  };\n\n  return ( ... );\n}\n```"]