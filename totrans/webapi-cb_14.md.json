["```\n<ul>\n  <li>Battery charge level:<span id=\"battery-level\">--</span></li>\n  <li>Battery charge status:<span id=\"battery-charging\">--</span></li>\n</ul>\n```", "```\nconst batteryLevelItem = document.querySelector('#battery-level');\nconst batteryChargingItem = document.querySelector('#battery-charging');\n\nnavigator.getBattery().then(battery => {\n  // Battery level is a number between 0 and 1\\. Multiply by 100 to convert it to\n  // a percentage.\n  batteryLevelItem.textContent = `${battery.level * 100}%`;\n\n  batteryChargingItem.textContent = battery.charging ? 'Charging' : 'Not charging';\n});\n```", "```\nbattery.addEventListener('levelchange', () => {\n  batteryLevelItem.textContent = `${battery.level * 100}%`;\n});\n\nbattery.addEventListener('chargingchange', () => {\n  batteryChargingItem.textContent = battery.charging ? 'Charging' : 'Not charging';\n});\n```", "```\nif ('getBattery' in navigator) {\n  // request the battery status here\n} else {\n  // it's not supported\n}\n```", "```\nif (navigator.connection.effectiveType === '4g') {\n  // User can perform high-bandwidth activities.\n}\n```", "```\nnavigator.geolocation.getCurrentPosition(position => {\n  console.log('Latitude: ' + position.coords.latitude);\n  console.log('Longitude: ' + position.coords.longitude);\n}, error => {\n  // Either the user denied permission, or the device location could not\n  // be determined.\n  console.log(error);\n});\n```", "```\nconst permission = await navigator.permissions.query({\n  name: 'geolocation'\n});\n```", "```\n// Assuming you have a placeholder element in the page with the ID 'map'\nconst map = document.querySelector('#map');\n\nnavigator.geolocation.getCurrentPosition(position => {\n  const { latitude, longitude } = position.coords;\n\n  // Adjust the iframe size as desired.\n  const iframe = document.createElement('iframe');\n  iframe.width = 450;\n  iframe.height = 250;\n\n  // The map type is part of the URL path.\n  const url = new URL('https://www.google.com/maps/embed/v1/place');\n\n  // The 'key' parameter contains your API key.\n  url.searchParams.append('key', 'YOUR_GOOGLE_MAPS_API_KEY');\n\n  // The 'q' parameter contains the latitude and longitude coordinates\n  // separated by a comma.\n  url.searchParams.append('q', `${latitude},${longitude}`);\n  iframe.src = url;\n\n  map.appendChild(iframe);\n});\n```", "```\nasync function copySelection(textarea) {\n  const { selectionStart, selectionEnd } = textarea;\n  const selectedText = textarea.value.slice(selectionStart, selectionEnd);\n\n  try {\n    await navigator.clipboard.writeText(selectedText);\n  } catch (error) {\n    console.error('Clipboard error:', error);\n  }\n}\n```", "```\nasync function pasteToSelection(textarea) {\n  const currentValue = textarea.value;\n  const { selectionStart, selectionEnd } = textarea;\n\n  try {\n    const clipboardValue = await navigator.clipboard.readText();\n    const newValue = currentValue.slice(0, selectionStart)\n    + clipboardValue + currentValue.slice(selectionEnd);\n    textarea.value = newValue;\n  } catch (error) {\n    console.error('Clipboard error:', error);\n  }\n}\n```", "```\nconst permission = await navigator.permissions.query({\n  name: 'clipboard-read'\n});\n\nif (permission.state !== 'denied') {\n  // Continue with the clipboard read operation.\n}\n```", "```\nif ('share' in navigator) {\n  navigator.share({\n    title: 'Web API Cookbook',\n    text: 'Check out this awesome site!',\n    url: 'https://browserapis.dev'\n  });\n}\n```", "```\n// A single vibration for 500ms\nnavigator.vibrate(500);\n```", "```\n// Vibrate for 500ms three times, with a 250ms pause in between\nnavigator.vibrate([500, 250, 500, 250, 500]);\n```"]