["```\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n  - |\n    kind: InitConfiguration\n    nodeRegistration:\n      kubeletExtraArgs:\n        node-labels: \"ingress-ready=true\" ![1](Images/1.png)\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 443\n    hostPort: 443\n    protocol: TCP\n- role: worker\nnetworking:\n  disableDefaultCNI: true ![2](Images/2.png)\n  podSubnet: 192.168.0.0/16 ![3](Images/3.png)\n```", "```\n$ kind create cluster --name cnnp \\\n  --config cluster-config.yaml\n\nCreating cluster \"cnnp\" ...\n```", "```\n$ kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\nconfigmap/calico-config created\ncustomresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created\n...\nserviceaccount/calico-kube-controllers created\n\n$ kubectl -n kube-system set env daemonset/calico-node FELIX_IGNORELOOSERPF=true\ndaemonset.apps/calico-node env updated\n\n```", "```\n$ kubectl -n kube-system get pods | grep calico-node\ncalico-node-2j2wd     0/1     Running     0     18s\ncalico-node-4hx46     0/1     Running     0     18s\ncalico-node-qnvs6     0/1     Running     0     18s\n```", "```\n$ kubectl apply -f https://github.com/datawire/ambassador-operator/releases/latest\n/download/ambassador-operator-crds.yaml && \\\n  kubectl apply -n ambassador -f https://github.com/datawire/ambassador-operator/releases\n/latest/download/ambassador-operator-kind.yaml && \\\n  kubectl wait --timeout=180s \\\n-n ambassador --\nfor=condition=deployed \\\nambassadorinstallations/ambassador\ncustomresourcedefinition.apiextensions.k8s.io/ambassadorinstallations.getambassador.io created\nnamespace/ambassador created\nconfigmap/static-helm-values created\nserviceaccount/ambassador-operator created\nclusterrole.rbac.authorization.k8s.io/ambassador-operator-cluster created\nclusterrolebinding.rbac.authorization.k8s.io/ambassador-operator-cluster created\nrole.rbac.authorization.k8s.io/ambassador-operator created\nrolebinding.rbac.authorization.k8s.io/ambassador-operator created\ndeployment.apps/ambassador-operator created\nambassadorinstallation.getambassador.io/ambassador created\nambassadorinstallation.getambassador.io/ambassador condition met\n\n```", "```\n$ kubectl create ns npdemo\nnamespace/npdemo created\n```", "```\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    app: nginx\n  name: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - image: nginx:alpine\n        name: main\n        ports:\n        - containerPort: 80\n---\nkind: Service\napiVersion: v1\nmetadata:\n  name: nginx\nspec:\n  selector:\n    app: nginx\n  ports:\n  - port: 80\n---\nkind: Ingress ![1](Images/1.png)\napiVersion: extensions/v1beta1\nmetadata:\n  name: mainig\n  annotations:\n    kubernetes.io/ingress.class: ambassador\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /api\n        backend:\n          serviceName: nginx\n          servicePort: 80\n```", "```\n$ kubectl -n npdemo apply -f workload.yaml\ndeployment.apps/nginx created\nservice/nginx created\ningress.extensions/mainig created\n```", "```\n$ curl -s 127.0.0.1/api | wc -l\n\n  25\n```", "```\nkind: NetworkPolicy\napiVersion: networking.k8s.io/v1\nmetadata:\n  name: deny-all\nspec:\n  podSelector: {} ![1](Images/1.png)\n  policyTypes:\n  - Ingress ![2](Images/2.png)\n```", "```\n$ kubectl -n npdemo apply -f np-deny-all.yaml\nnetworkpolicy.networking.k8s.io/deny-all created\n\n$ kubectl -n npdemo describe netpol deny-all\nName:         deny-all\nNamespace:    npdemo\nCreated on:   2020-09-22 10:39:27 +0100 IST\nLabels:       <none>\nAnnotations:  <none>\nSpec:\nPodSelector:  <none> (Allowing the specific traffic to all pods in this namespace)\n  Allowing ingress traffic:\n    <none> (Selected pods are isolated for ingress connectivity)\n  Not affecting egress traffic\n  Policy Types: Ingress\n```", "```\n$ curl --max-time 3 127.0.0.1/api\ncurl: (28) Operation timed out after 3005 milliseconds with 0 bytes received\n```", "```\nkubectl --insecure-skip-tls-verify -s bbc.co.uk get --raw /\n```", "```\n$ linkerd check --pre\nkubernetes-api\n...\nStatus check results are √\n```", "```\n$ linkerd install | kubectl apply -f -\nnamespace/linkerd created\nclusterrole.rbac.authorization.k8s.io/linkerd-linkerd-identity created\n...\ndeployment.apps/linkerd-grafana created\n```", "```\n$ linkerd check\nkubernetes-api\n...\nStatus check results are √\n```", "```\n$ kubectl get -n npdemo deploy -o yaml | \\\n          linkerd inject - | kubectl apply -f -\n\n$ kubectl get -n ambassador deploy -o yaml | \\\n          linkerd inject - | kubectl apply -f -\n```", "```\n$ curl -sL https://run.linkerd.io/emojivoto.yml |\n  linkerd inject --enable-debug-sidecar - |\n  kubectl apply -f -\nnamespace \"emojivoto\" injected\n...\ndeployment.apps/web created\n```", "```\n$ kubectl -n emojivoto exec -it \\ ![1](Images/1.png)\n  $(kubectl -n emojivoto get po -o name | grep voting) \\ ![2](Images/2.png)\n  -c linkerd-debug -- /bin/bash ![3](Images/3.png)\n```", "```\nroot@voting-57bc56-s4l:/# tshark -i any \\ ![1](Images/1.png)\n                                 -d tcp.port==8080,ssl | ![2](Images/2.png)\n                          grep -v 127.0.0.1 ![3](Images/3.png)\n\nRunning as user \"root\" and group \"root.\" This could be dangerous.\nCapturing on 'any'\n\n 1 0.000000000 192.168.49.192 → 192.168.49.231 TCP 76 41704 → 4191 [SYN] Seq=0...\n 2 0.000023419 192.168.49.231 → 192.168.49.192 TCP 76 4191 → 41704 [SYN, ACK]...\n 3 0.000041904 192.168.49.192 → 192.168.49.231 TCP 68 41704 → 4191 [ACK] Seq=1...\n 4 0.000356637 192.168.49.192 → 192.168.49.231 HTTP 189 GET /ready HTTP/1.1\n 5 0.000397207 192.168.49.231 → 192.168.49.192 TCP 68 4191 → 41704 [ACK] Seq=1...\n 6 0.000483689 192.168.49.231 → 192.168.49.192 HTTP 149 HTTP/1.1 200 OK\n ...\n```", "```\n//go:generate go run github.com/cilium/ebpf/cmd/bpf2go\n  -cc clang-11 KProbeExample ./bpf/kprobe_example.c -- -I../headers\n```", "```\n#include \"common.h\"\n#include \"bpf_helpers.h\"\n\nchar __license[] SEC(\"license\") = \"Dual MIT/GPL\"; ![1](Images/1.png)\n\nstruct bpf_map_def SEC(\"maps\") kprobe_map = { ![2](Images/2.png)\n    .type = BPF_MAP_TYPE_ARRAY,\n    .key_size = sizeof(u32),\n    .value_size = sizeof(u64),\n    .max_entries = 1,\n};\n\nSEC(\"kprobe/sys_execve\")\nint kprobe_execve() { ![3](Images/3.png)\n    u32 key = 0;\n    u64 initval = 1, *valp;\n\n    valp = bpf_map_lookup_elem(&kprobe_map, &key);\n    if (!valp) {\n        bpf_map_update_elem(&kprobe_map, &key, &initval, BPF_ANY);\n        return 0;\n    }\n    __sync_fetch_and_add(valp, 1);\n\n    return 0;\n}\n```"]