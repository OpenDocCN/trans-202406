["```\nuser@host:~ [0]$ docker run --rm -i -t \\\n  -e HOST_ROOT=/ \\\n  --cap-add BPF \\\n  --cap-add SYS_PTRACE \\\n  --pid=host \\\n  $(ls /dev/falco* | xargs -I {} echo --device {}) \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  falcosecurity/falco-no-driver:latest\n```", "```\nDEMO    13:07:48.722501295: Notice A shell was spawned in a container with an attached terminal\n  (user=root user_loginuid=-1 <NA> (id=52af6056d922) shell=sh parent=<NA>\n  cmdline=sh -c unset $(env | grep -Eo '.*VERSION[^\\=]*') && exec bash terminal=34816\n  container_id=52af6056d922 image=<NA>)\n\n```", "```\n- macro: falco_privileged_containers\n  condition: (openshift_image or\n              user_trusted_containers or\n              container.image.repository in (trusted_images) or\n              container.image.repository in (falco_privileged_images) or\n              container.image.repository startswith istio/proxy_ or\n              container.image.repository startswith quay.io/sysdig)\n\n```", "```\n#!/bin/bash\n#\n# truffleproc â€” hunt secrets in process memory // 2021 @controlplaneio\n\nset -Eeuo pipefail\n\nPID=\"${1:-1}\"\nTMP_DIR=\"$(mktemp -d)\"\nSTRINGS_FILE=\"${TMP_DIR}/strings.txt\"\nRESULTS_FILE=\"${TMP_DIR}/results.txt\"\n\nCONTAINER_IMAGE=\"controlplane/build-step-git-secrets\"\nCONTAINER_SHA=\"51cfc58382387b164240501a482e30391f46fa0bed317199b08610a456078fe7\"\nCONTAINER=\"${CONTAINER_IMAGE}@sha256:${CONTAINER_SHA}\"\n\nmain() {\n  ensure_sudo\n\n  echo \"# coredumping pid ${PID}\"\n\n  coredump_pid\n\n  echo \"# extracting strings to ${TMP_DIR}\"\n\n  extract_strings_from_coredump\n\n  echo \"# finding secrets\"\n\n  find_secrets_in_strings || true\n\n echo \"# results in ${RESULTS_FILE}\"\n\n  less -N -R \"${RESULTS_FILE}\"\n}\n\nensure_sudo() {\n  sudo touch /dev/null\n}\n\ncoredump_pid() {\n  cd \"${TMP_DIR}\"\n\n  sudo grep -Fv \".so\" \"/proc/${PID}/maps\" | awk '/ 0 /{print $1}' | (\n    IFS=\"-\"\n    while read -r START END; do\n      START_ADDR=$(printf \"%llu\" \"0x${START}\")\n      END_ADDR=$(printf \"%llu\" \"0x${END}\")\n      sudo gdb \\\n        --quiet \\\n        --readnow \\\n        --pid \"${PID}\" \\\n        -ex \"dump memory ${PID}_mem_${START}.bin ${START_ADDR} ${END_ADDR}\" \\\n        -ex \"set confirm off\" \\\n        -ex \"set exec-file-mismatch off\" \\\n        -ex quit od |& grep -E \"^Reading symbols from\"\n    done | awk-unique\n  )\n}\n\nextract_strings_from_coredump() {\n  strings \"${TMP_DIR}\"/*.bin >\"${STRINGS_FILE}\"\n}\n\nfind_secrets_in_strings() {\n  local DATE MESSAGE\n  DATE=\"($(date --utc +%FT%T.%3NZ))\"\n  MESSAGE=\"for pid ${PID}\"\n\n  cd \"${TMP_DIR}\"\n  git init --quiet\n  git add \"${STRINGS_FILE}\"\n  git -c commit.gpgsign=false commit \\\n    -m \"Coredump of strings ${MESSAGE}\" \\\n    -m \"https://github.com/controlplaneio/truffleproc\" \\\n    --quiet\n\n  echo \"# ${0} results ${MESSAGE} ${DATE} | @controlplaneio\" >>\"${RESULTS_FILE}\"\n\n  docker run -i -e IS_IN_AUTOMATION= \\\n    -v \"$(git rev-parse --show-toplevel):/workdir:ro\" \\\n    -w /workdir \\\n    \"${CONTAINER}\" \\\n    bash |& command grep -P '\\e\\[' | awk-unique >> \"${RESULTS_FILE}\"\n}\n\nawk-unique() {\n  awk '!x[$0]++'\n}\n\nmain \"${@:-}\"\n```", "```\n$ procdump.sh $(pgrep -f bash)\n```", "```\n 1 # procdump.sh results for pid 5598 (2021-02-23 08:58:54.972Z) | @controlplaneio\n 2 Reason: High Entropy\n 3 Date: 2021-02-23 08:58:54\n 4 Hash: 699776ae32d13685afca891b0e9ae2f1156d2473\n 5 Filepath: strings.txt\n 6 Branch: origin/master\n 7 Commit: WIP\n 8\n 9 +SECRET_KEY=c0dd1e1eaf1e757e55e118fea7caba55e7105e51eaf1e55c0caa1d05efa57e57\n10 +GH_API_TOKEN=1abb1ebab1e5e1ec7ed5c07f1abe118b0071e551005edf1a710c8c10aca5ca1d\n```"]