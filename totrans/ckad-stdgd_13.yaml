- en: Chapter 13\. API Deprecations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 13 章 API 弃用
- en: The Kubernetes project periodically releases new versions. Every release adds
    new features and bug fixes but may also introduce deprecations to existing APIs.
    An API is the interface that application developers interact with when defining
    Kubernetes objects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 项目定期发布新版本。每个发布版本都会增加新功能和错误修复，但也可能引入现有 API 的弃用。API 是应用程序开发人员在定义 Kubernetes
    对象时与之交互的接口。
- en: Deprecations may come into effect if the Kubernetes team plans to change, replace,
    or completely remove support for an API. You need to understand how to handle
    API deprecations to avoid issues before updating nodes to a newer Kubernetes version.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Kubernetes 团队计划更改、替换或完全移除支持的 API，弃用可能会生效。您需要了解如何处理 API 弃用，以避免在将节点更新到较新的 Kubernetes
    版本之前出现问题。
- en: Understanding the Deprecation Policy
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解弃用策略
- en: The Kubernetes project releases [three versions per calendar year](https://kubernetes.io/blog/2021/07/20/new-kubernetes-release-cadence/).
    Optimally, the administrator of a Kubernetes cluster upgrades to the latest version
    as early as possible to incorporate enhancements and security fixes. However,
    upgrading a cluster doesn’t come without potential cost and risk. You need to
    ensure that existing objects running in the cluster will still be compatible with
    the version you are upgrading to.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 项目每年会发布 [三个版本](https://kubernetes.io/blog/2021/07/20/new-kubernetes-release-cadence/)。理想情况下，Kubernetes
    集群的管理员应尽早升级到最新版本，以便获得增强功能和安全修复。然而，升级集群并非没有潜在的成本和风险。您需要确保在升级到新版本时，现有的运行中对象仍然与之兼容。
- en: A Kubernetes release can deprecate an API, which means that it is scheduled
    for removal or replacement. The rules for introducing a deprecation follow the
    [deprecation policy](https://kubernetes.io/docs/reference/using-api/deprecation-policy/)
    explained in the Kubernetes documentation.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 发布版本可能会弃用一个 API，这意味着该 API 计划要被移除或替换。弃用引入的规则遵循 Kubernetes 文档中解释的 [弃用策略](https://kubernetes.io/docs/reference/using-api/deprecation-policy/)。
- en: The value you assign to the `version` attribute in a manifest specifies the
    API version. The use of a deprecated API renders a warning message when creating
    or updating the object. While you can still create or modify the object, a warning
    message informs the user about the action to take to ensure its future compatibility
    with newer Kubernetes versions. The [deprecated API migration guide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/)
    shows a list of deprecated APIs and the scheduled versions that will remove support
    for the API.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在清单中为 `version` 属性分配的值指定了 API 版本。使用已弃用的 API 在创建或更新对象时会显示警告消息。虽然您仍然可以创建或修改对象，但警告消息会告知用户采取措施，以确保其与较新的
    Kubernetes 版本未来兼容。[已弃用 API 迁移指南](https://kubernetes.io/docs/reference/using-api/deprecation-guide/)
    显示了一些已弃用的 API 和计划中将移除其支持的版本列表。
- en: Listing Available API Versions
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列出可用的 API 版本
- en: '`Kubectl` provides a command for discovering available API versions. The `api-versions`
    command lists all API versions in the format group/version:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`Kubectl` 提供了一个命令用于发现可用的 API 版本。`api-versions` 命令以 group/version 的格式列出所有 API
    版本：'
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Certain APIs, like the API for the group `autoscaling`, exist with different
    versions, `v1` and `v2`. Generally speaking, you can make your manifests more
    future-proof by choosing a higher major version. At the time of writing, the deprecation
    status of any of those APIs is not included in the output of the `api-versions`
    command. You will need to look up the status in the Kubernetes documentation.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 某些 API，如 `autoscaling` 组的 `v1` 和 `v2` 版本，存在不同的版本。一般来说，通过选择更高的主版本可以使您的清单更加未来兼容。在撰写本文时，`api-versions`
    命令的输出中不包含这些 API 的弃用状态。您需要在 Kubernetes 文档中查找其状态。
- en: Handling Deprecation Warnings
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理弃用警告
- en: Let’s demonstrate the effects of using a deprecated API. The following example
    assumes that you are running a Kubernetes cluster with a version between 1.23
    and 1.25\. [Example 13-1](#deprecated_hpa) shows a manifest for a Horizontal Pod
    Autoscaler that uses a beta API version for the group `autoscaling`.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们演示使用已弃用 API 的效果。以下示例假设您正在运行版本在 1.23 到 1.25 之间的 Kubernetes 集群。[示例 13-1](#deprecated_hpa)
    展示了一个使用 `autoscaling` 组的 beta API 版本的 Horizontal Pod Autoscaler 的清单。
- en: Example 13-1\. A Horizontal Pod Autoscaler definition using a deprecated API
  id: totrans-13
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 13-1\. 使用已弃用 API 定义的 Horizontal Pod Autoscaler
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Creating a new object from the YAML manifest will not result in an error. Kubernetes
    will happily create the object, but the command will let you know what will happen
    with the API in a future Kubernetes version. As shown in the following output,
    it is suggested that you replace the use of the API with `autoscaling/v2`:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从 YAML 清单创建新对象不会导致错误。Kubernetes 将愉快地创建对象，但命令会告知您在将来的 Kubernetes 版本中该 API 的用法。如下输出所示，建议您替换使用
    `autoscaling/v2` 的 API：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In addition to the warning message, you may also want to look at the deprecated
    API migration guide. An easy way to find information about the deprecated API
    is to search the deprecation guide for it. For example, you will find the [following
    passage](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#horizontalpodautoscaler-v126)
    about the API `autoscaling/v2beta2`:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 除了警告消息外，您可能还希望查看弃用 API 迁移指南。查找关于弃用 API 的信息的简便方法是在弃用指南中搜索它。例如，您将找到关于 API `autoscaling/v2beta2`
    的 [以下段落](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#horizontalpodautoscaler-v126)：
- en: The `autoscaling/v2beta2` API version of HorizontalPodAutoscaler is no longer
    served as of v1.26.
  id: totrans-18
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: HorizontalPodAutoscaler 的 `autoscaling/v2beta2` API 版本已在 v1.26 中停止服务。
- en: ''
  id: totrans-19
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Migrate manifests and API clients to use the `autoscaling/v2` API version, available
    since v1.23.
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移清单和 API 客户端以使用 `autoscaling/v2` API 版本，自 v1.23 起可用。
- en: ''
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: All existing persisted objects are accessible via the new API
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有现有的持久化对象可通过新的 API 访问
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Deprecated API Migration Guide
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 弃用 API 迁移指南
- en: All you need to do to future-proof your manifest is to assign the new API version.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为使清单未来兼容，您只需分配新的 API 版本。
- en: Handling a Removed or Replaced API
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理已移除或替换的 API
- en: The administrator of a Kubernetes cluster may decide to jump up multiple minor
    versions at once when upgrading. It is possible that you won’t catch that an API
    you are currently using has already been removed. It’s important to verify the
    compatibility of existing Kubernetes objects before upgrading the production cluster
    to avoid any disruptions.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 集群的管理员可能会决定一次跳过多个小版本进行升级。可能您并未注意到当前正在使用的 API 已经被移除。在升级生产集群之前，验证现有
    Kubernetes 对象的兼容性非常重要，以避免任何中断。
- en: Say you have been using the definition of a ClusterRole shown in [Example 13-2](#removed_clusterrole_api).
    Managing the object worked fine with Kubernetes 1.8; however, the administrator
    upgraded the cluster nodes all the way to 1.22.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您一直使用 [示例 13-2](#removed_clusterrole_api) 中展示的 ClusterRole 的定义。在 Kubernetes
    1.8 中管理该对象运作良好；然而，管理员将集群节点升级到了 1.22。
- en: Example 13-2\. A ClusterRole using the API version `rbac.authorization.k8s.io/v1beta1`
  id: totrans-32
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 13-2\. 使用 API 版本 `rbac.authorization.k8s.io/v1beta1` 的 ClusterRole
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Trying to create the object from the ClusterRole manifest file will not render
    a deprecation message. Instead, `kubectl` will return an error message. Consequently,
    the command did not create the object:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试从 ClusterRole 清单文件中创建对象将不会显示弃用消息。相反，`kubectl` 将返回一个错误消息。因此，命令未创建对象：
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You will not have a clear idea why the command failed just looking at the error
    message. It’s a good idea to check with the deprecated API migration guide. Searching
    the page for the API version `rbac.authorization.k8s.io/v1beta1` will give you
    the [following information](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#rbac-resources-v122).
    The solution here is to assign the replacement API `rbac.authorization.k8s.io/v1`
    instead:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅通过查看错误消息，你无法清楚地了解命令失败的原因。建议查阅弃用 API 迁移指南。在页面上搜索 API 版本 `rbac.authorization.k8s.io/v1beta1`
    将给出 [以下信息](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#rbac-resources-v122)。这里的解决方案是改用替代
    API `rbac.authorization.k8s.io/v1`：
- en: The `rbac.authorization.k8s.io/v1beta1` API version of ClusterRole, ClusterRoleBinding,
    Role, and RoleBinding is no longer served as of v1.22.
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`rbac.authorization.k8s.io/v1beta1` API 版本的 ClusterRole、ClusterRoleBinding、Role
    和 RoleBinding 已在 v1.22 中停止服务。'
- en: ''
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Migrate manifests and API clients to use the `rbac.authorization.k8s.io/v1`
    API version, available since v1.8.
  id: totrans-39
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移清单和 API 客户端以使用 `rbac.authorization.k8s.io/v1` API 版本，自 v1.8 起可用。
- en: ''
  id: totrans-40
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-41
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: All existing persisted objects are accessible via the new APIs
  id: totrans-42
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有现有的持久化对象可通过新的 API 访问
- en: ''
  id: totrans-43
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-44
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: No notable changes
  id: totrans-45
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无显著变化
- en: ''
  id: totrans-46
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-47
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Deprecated API Migration Guide
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 弃用 API 迁移指南
- en: Under certain conditions, a Kubernetes primitive may not provide a replacement
    API. As a representative use case I want to mention the PodSecurityPolicy primitive
    here. The feature has been replaced by a new Kubernetes-internal concept, the
    [Pod Security Admission](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#psp-v125).
    You should follow the release notes of upcoming Kubernetes releases to stay aware
    of more radical changes.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些条件下，Kubernetes 原语可能无法提供替代 API。作为一个典型的用例，我想提到 PodSecurityPolicy 原语。该功能已被一个新的
    Kubernetes 内部概念所取代，即 [Pod Security Admission](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#psp-v125)。您应该查阅即将发布的
    Kubernetes 版本的发布说明，以了解更加重大的变更。
- en: Summary
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Inevitably, you will run into API deprecations when using Kubernetes long term.
    As a developer, you need to know how to interpret deprecation warning messages.
    The Kubernetes documentation provides all the information you need to identify
    an alternative API or feature. It’s advisable to test all available YAML manifests
    for objects currently in use in production clusters before upgrading nodes to
    a newer Kubernetes version.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 长期使用 Kubernetes 时，您将不可避免地遇到 API 弃用问题。作为开发者，您需要知道如何解释弃用警告消息。Kubernetes 文档提供了识别替代
    API 或功能所需的所有信息。建议在将节点升级到新版本 Kubernetes 之前，测试所有当前生产集群中使用的 YAML 清单对象。
- en: Exam Essentials
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考试要点
- en: Keep the API deprecation documentation handy
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 随时保留 API 弃用文档
- en: The exam will likely expose you to an object that uses a deprecated API. You
    will need to keep the [Deprecated API Migration Guide](https://kubernetes.io/docs/reference/using-api/deprecation-guide/)
    documentation page handy to tackle such scenarios. The page describes deprecated,
    removed, and replaced APIs categorized by Kubernetes version. Use the browser’s
    search capability to quickly find relevant information about an API. The quick
    reference links on the right side of the page let you quickly navigate to a specific
    Kubernetes version.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 考试可能会使您遇到使用弃用 API 的对象。您需要随时保留 [弃用 API 迁移指南](https://kubernetes.io/docs/reference/using-api/deprecation-guide/)
    文档页面，以应对此类情况。该页面按 Kubernetes 版本分类描述了已弃用、已移除和已替换的 API。使用浏览器的搜索功能快速查找有关 API 的相关信息。页面右侧的快速参考链接让您可以快速导航到特定的
    Kubernetes 版本。
- en: Sample Exercises
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 样例练习
- en: Solutions to these exercises are available in [Appendix A](app01_split_009.xhtml#appendix_a_api_deprecations).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些练习的解决方案可以在 [附录 A](app01_split_009.xhtml#appendix_a_api_deprecations) 中找到。
- en: The Kubernetes administrator in charge of the cluster is planning to upgrade
    all nodes from Kubernetes 1.8 to 1.28\. You defined multiple Kubernetes YAML manifests
    that operate an application stack. The administrator provided you with a Kubernetes
    1.28 test environment. Make sure that all YAML manifests are compatible with Kubernetes
    version 1.28.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 负责集群的 Kubernetes 管理员计划将所有节点从 Kubernetes 1.8 升级到 1.28。您定义了多个 Kubernetes YAML
    清单，用于操作一个应用程序堆栈。管理员为您提供了一个 Kubernetes 1.28 测试环境。确保所有 YAML 清单与 Kubernetes 版本 1.28
    兼容。
- en: Navigate to the directory *app-a/ch13/deprecated* of the checked-out GitHub
    repository [*bmuschko/ckad-study-guide*](https://github.com/bmuschko/ckad-study-guide).
    Inspect the files *deployment.yaml* and *configmap.yaml* in the current directory.
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 转到已检出 GitHub 仓库 [*bmuschko/ckad-study-guide*](https://github.com/bmuschko/ckad-study-guide)
    的目录 *app-a/ch13/deprecated*。检查当前目录中的文件 *deployment.yaml* 和 *configmap.yaml*。
- en: Create the objects from the YAML manifests. Modify the definitions as needed.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 根据 YAML 清单创建对象。根据需要修改定义。
- en: Verify that the objects can be instantiated with Kubernetes 1.28.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保对象能在 Kubernetes 1.28 中实例化。
