["```\nnetwork:\n    version: 2\n    ethernets:\n        eth0:\n            dhcp4: false\n            dhcp6: false\n            addresses:\n            - '10.0.0.1/24'\n            optional: true\n    wifis:\n        wlan0:\n            access-points:\n                <your-ssid-here>:\n                    password: '<your-password-here>'\n            dhcp4: true\n            optional: true\n```", "```\n$ apt-get install isc-dhcp-server\n```", "```\n# Set a domain name, can basically be anything\noption domain-name \"cluster.home\";\n\n# Use Google DNS by default, you can substitute ISP-supplied values here\noption domain-name-servers 8.8.8.8, 8.8.4.4;\n\n# We'll use 10.0.0.X for our subnet\nsubnet 10.0.0.0 netmask 255.255.255.0 {\n    range 10.0.0.1 10.0.0.10;\n    option subnet-mask 255.255.255.0;\n    option broadcast-address 10.0.0.255;\n    option routers 10.0.0.1;\n}\ndefault-lease-time 600;\nmax-lease-time 7200;\nauthoritative;\n```", "```\nnet.ipv4.ip_forward=1\nnet.bridge.bridge-nf-call-ip6tables=1\nnet.bridge.bridge-nf-call-iptables=1\n```", "```\niptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE\niptables -A FORWARD -i wlan0 -o eth0 -m state \\\n  --state RELATED,ESTABLISHED -j ACCEPT\niptables -A FORWARD -i eth0 -o wlan0 -j ACCEPT\n```", "```\n# Add some prerequisites\nsudo apt-get install ca-certificates curl gnupg lsb-release\n\n# Install Docker's signing key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor \\\n-o /usr/share/keyrings/docker-archive-keyring.gpg\n```", "```\ndeb [arch=arm64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\\nhttps://download.docker.com/linux/ubuntu   focal stable\n```", "```\nsudo apt-get update; sudo apt-get install containerd.io\n```", "```\ncontainerd config default > config.toml\nsudo mv config.toml /etc/containerd/config.toml\n\n# Restart to pick up the config\nsudo systemctl restart containerd\n```", "```\n# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n| sudo apt-key add -\n```", "```\n# echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \\\n  | sudo tee /etc/apt/sources.list.d/kubernetes.list\n```", "```\n# sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo apt-get install -y kubelet kubeadm kubectl kubernetes-cni\n```", "```\n$ sudo kubeadm init --pod-network-cidr 10.244.0.0/16 \\\n        --apiserver-advertise-address 10.0.0.1 \\\n        --apiserver-cert-extra-sans kubernetes.cluster.home\n```", "```\n$ kubeadm join --token=*<token>* 10.0.0.1\n```", "```\n$ kubectl get nodes\n```", "```\n$ curl https://oreil.ly/kube-flannelyml \\\n  > kube-flannel.yaml\n```", "```\n$ curl https://oreil.ly/kube-flannelyml \\\n  | sed \"s/vxlan/host-gw/g\" \\\n  > kube-flannel.yaml\n```", "```\n$ kubectl apply -f kube-flannel.yaml\n```", "```\n$ kubectl describe --namespace=kube-system configmaps/kube-flannel-cfg\n$ kubectl describe --namespace=kube-system daemonsets/kube-flannel-ds\n```"]