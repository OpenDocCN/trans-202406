["```\n> db.serverCmdLineOpts()\n{\n    \"argv\" : [ \"mongod\", \"-f\", \"/var/lib/mongod.conf\" ],\n    \"parsed\" : {\n        \"replSet\": \"mySet\",\n        \"port\": \"27017\",\n        \"dbpath\": \"/var/lib/db\"\n    },\n    \"ok\" : 1\n}\n```", "```\n> db.shutdownServer()\n```", "```\n$ mongod --port 30000 --dbpath /var/lib/db\n```", "```\n> var config = {\n... \"_id\" : <setName>,\n... \"members\" : [\n...     {\"_id\" : 0, \"host\" : <host1>},\n...     {\"_id\" : 1, \"host\" : <host2>},\n...     {\"_id\" : 2, \"host\" : <host3>}\n... ]}\n> rs.initiate(config)\n```", "```\n> rs.add(\"spock:27017\")\n```", "```\n> rs.add({\"host\" : \"spock:27017\", \"priority\" : 0, \"hidden\" : true})\n```", "```\n> rs.remove(\"spock:27017\")\n```", "```\n> var config = rs.config()\n> config.members[0].host = \"spock:27017\"\nspock:27017\n> rs.reconfig(config)\n```", "```\n> rs.add({\"_id\" : 7, \"host\" : \"server-7:27017\", \"votes\" : 0})\n```", "```\n> rs.reconfig(config, {\"force\" : true})\n```", "```\n> rs.stepDown()\n```", "```\n> rs.stepDown(600) // 10 minutes\n```", "```\n> rs.freeze(10000)\n```", "```\n> rs.freeze(0)\n```", "```\n> rs.status()\n\n   \"set\" : \"replset\",\n   \"date\" : ISODate(\"2019-11-02T20:02:16.543Z\"),\n   \"myState\" : 1,\n   \"term\" : NumberLong(1),\n   \"heartbeatIntervalMillis\" : NumberLong(2000),\n   \"optimes\" : {\n         \"lastCommittedOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         },\n         \"readConcernMajorityOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         },\n         \"appliedOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         },\n         \"durableOpTime\" : {\n            \"ts\" : Timestamp(1478116934, 1),\n            \"t\" : NumberLong(1)\n         }\n      },\n\n   \"members\" : [\n      {\n            \"_id\" : 0,\n            \"name\" : \"m1.example.net:27017\",\n            \"health\" : 1,\n            \"state\" : 1,\n            \"stateStr\" : \"PRIMARY\",\n            \"uptime\" : 269,\n            \"optime\" : {\n                        \"ts\" : Timestamp(1478116934, 1),\n                        \"t\" : NumberLong(1)\n            },\n            \"optimeDate\" : ISODate(\"2019-11-02T20:02:14Z\"),\n            \"infoMessage\" : \"could not find member to sync from\",\n            \"electionTime\" : Timestamp(1478116933, 1),\n            \"electionDate\" : ISODate(\"2019-11-02T20:02:13Z\"),\n            \"configVersion\" : 1,\n            \"self\" : true\n      },\n      {\n            \"_id\" : 1,\n            \"name\" : \"m2.example.net:27017\",\n            \"health\" : 1,\n            \"state\" : 2,\n            \"stateStr\" : \"SECONDARY\",\n            \"uptime\" : 14,\n            \"optime\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDurable\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDate\" : ISODate(\"2019-11-02T20:02:14Z\"),\n            \"optimeDurableDate\" : ISODate(\"2019-11-02T20:02:14Z\"),\n            \"lastHeartbeat\" : ISODate(\"2019-11-02T20:02:15.618Z\"),\n            \"lastHeartbeatRecv\" : ISODate(\"2019-11-02T20:02:14.866Z\"),\n            \"pingMs\" : NumberLong(0),\n            \"syncingTo\" : \"m3.example.net:27017\",\n            \"configVersion\" : 1\n      },\n      {\n            \"_id\" : 2,\n            \"name\" : \"m3.example.net:27017\",\n            \"health\" : 1,\n            \"state\" : 2,\n            \"stateStr\" : \"SECONDARY\",\n            \"uptime\" : 14,\n            \"optime\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDurable\" : {\n               \"ts\" : Timestamp(1478116934, 1),\n               \"t\" : NumberLong(1)\n            },\n            \"optimeDate\" : ISODate(\"2019-11-02T20:02:14Z\"),\n            \"optimeDurableDate\" : ISODate(\"2019-11-02T20:02:14Z\"),\n            \"lastHeartbeat\" : ISODate(\"2019-11-02T20:02:15.619Z\"),\n            \"lastHeartbeatRecv\" : ISODate(\"2019-11-02T20:02:14.787Z\"),\n            \"pingMs\" : NumberLong(0),\n            \"syncingTo\" : \"m1.example.net:27018\",\n            \"configVersion\" : 1\n      }\n   ],\n   \"ok\" : 1\n}\n```", "```\n> server1.adminCommand({replSetGetStatus: 1})['syncingTo']\nserver0:27017\n> server2.adminCommand({replSetGetStatus: 1})['syncingTo']\nserver1:27017\n> server3.adminCommand({replSetGetStatus: 1})['syncingTo']\nserver1:27017\n> server4.adminCommand({replSetGetStatus: 1})['syncingTo']\nserver2:27017\n```", "```\n> secondary.adminCommand({\"replSetSyncFrom\" : \"server0:27017\"})\n```", "```\n> var config = rs.config()\n> // create the settings subobject, if it does not already exist\n> config.settings = config.settings || {}\n> config.settings.chainingAllowed = false\n> rs.reconfig(config)\n```", "```\n> rs.printReplicationInfo();\n    configured oplog size:   10.48576MB\n    log length start to end: 3590 secs (1.00hrs)\n    oplog first event time:  Tue Apr 10 2018 09:27:57 GMT-0400 (EDT)\n    oplog last event time:   Tue Apr 10 2018 10:27:47 GMT-0400 (EDT)\n    now:                     Tue Apr 10 2018 10:27:47 GMT-0400 (EDT)\n```", "```\n> rs.printSlaveReplicationInfo();\nsource: m1.example.net:27017\n    syncedTo: Tue Apr 10 2018 10:27:47 GMT-0400 (EDT)\n    0 secs (0 hrs) behind the primary\nsource: m2.example.net:27017\n    syncedTo: Tue Apr 10 2018 10:27:43 GMT-0400 (EDT)\n    0 secs (0 hrs) behind the primary\nsource: m3.example.net:27017\n    syncedTo: Tue Apr 10 2018 10:27:39 GMT-0400 (EDT)\n    0 secs (0 hrs) behind the primary\n```", "```\n    > use local\n    > db.oplog.rs.stats(1024*1024).maxSize\n    ```", "```\n    > db.adminCommand({replSetResizeOplog: 1, size: 16000})\n    ```"]