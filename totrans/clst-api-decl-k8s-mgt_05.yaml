- en: Chapter 5\. The Future of Cluster API and Kubernetes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud native architecture is not going away. To drive scale, the enterprise
    relies on modular, mircroservice-based applications. Automation and orchestration
    of complex deployments will only become more critical as time goes on. Containers
    and Kubernetes adoption will continue to accelerate, with more and more companies
    deploying multiple clusters that employ different Kubernetes distributions across
    a variety of environments.
  prefs: []
  type: TYPE_NORMAL
- en: As use cases become more sophisticated and diverse, bare metal and edge deployments
    will become more important. The ecosystem must grow to meet these challenges,
    along with providers and tooling for new environments. Kubernetes itself is approaching
    maturity but will remain the nexus of an ecosystem of innovation, with continual
    development of integrations and supporting tools.
  prefs: []
  type: TYPE_NORMAL
- en: Experimental Features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cluster API includes experimental features that provide a glimpse into what
    the future might hold. These features live in the *exp* directory and can be enabled
    by users who want to experiment.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the time of this writing, Cluster API provides the following experimental
    features:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ClusterClass`'
  prefs: []
  type: TYPE_NORMAL
- en: An easier, more flexible way to create clusters
  prefs: []
  type: TYPE_NORMAL
- en: '`ClusterResourceSet`'
  prefs: []
  type: TYPE_NORMAL
- en: A way to apply a set of resources to a group of clusters
  prefs: []
  type: TYPE_NORMAL
- en: Ignition bootstrap configuration
  prefs: []
  type: TYPE_NORMAL
- en: A bootstrapping engine for bringing up workload nodes that use Ignition-based
    Linux operating systems
  prefs: []
  type: TYPE_NORMAL
- en: '`MachinePool`'
  prefs: []
  type: TYPE_NORMAL
- en: A feature similar to `MachineDeployment`, except that orchestration is handled
    by the infrastructure provider
  prefs: []
  type: TYPE_NORMAL
- en: Ongoing Cluster API Development
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cluster API is open source and welcomes improvements by users, contributors,
    and maintainers. With these contributions, Cluster API will support a broader
    range of clouds, environments, and cluster types. The current road map is focused,
    among other things, on improving security, user experience, and provider support.
  prefs: []
  type: TYPE_NORMAL
- en: Cluster API will continue to strengthen its position as the go-to orchestration
    tool for managing Kubernetes clusters with an increasing number of contributions
    and contributors, a growing set of infrastructure and platform providers supporting
    it, and more organizations using it. With Cluster API, people will increasingly
    be able to think of clusters the way they think of nodes now, moving entire applications
    from cluster to cluster whenever they need to.
  prefs: []
  type: TYPE_NORMAL
- en: As big players and the open source community contribute to Cluster API, the
    capabilities for managing clusters and infrastructure declaratively will deepen
    and grow.
  prefs: []
  type: TYPE_NORMAL
