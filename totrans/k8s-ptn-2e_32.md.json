["```\nalice,4bc01e30-406b-4514,\"system:authenticated,developers\",\"scopes:openid\"\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: random-sa                   ![1](assets/1.png)\n  namespace: default\nautomountServiceAccountToken: false ![2](assets/2.png)\n...\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: random\nspec:\n  serviceAccountName: default      ![1](assets/1.png)\n  containers:\n    volumeMounts:\n    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount ![2](assets/2.png)\n      name: kube-api-access-vzfp7  ![3](assets/3.png)\n      readOnly: true\n  ...\n  volumes:\n  - name: kube-api-access-vzfp7\n    projected:                     ![4](assets/4.png)\n      defaultMode: 420\n      sources:\n      - serviceAccountToken:\n          expirationSeconds: 3600  ![5](assets/5.png)\n          path: token              ![6](assets/6.png)\n    ...\n```", "```\n$ kubectl exec random -- \\\n     cat /var/run/secrets/kubernetes.io/serviceaccount/token\neyJhbGciOiJSUzI1NiIsImtpZCI6InVHYV9NZEVYOEZteUNUZFl...\n```", "```\napiVersion: v1\nkind: Secret\ntype: kubernetes.io/service-account-token           ![1](assets/1.png)\nmetadata:\n  name: random-sa\n  annotations:\n    kubernetes.io/service-account.name: \"random-sa\" ![2](assets/2.png)\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: developer-ro ![1](assets/1.png)\n  namespace: default ![2](assets/2.png)\nrules:\n- apiGroups:\n  - \"\"               ![3](assets/3.png)\n  resources:         ![4](assets/4.png)\n  - pods\n  - services\n  verbs:             ![5](assets/5.png)\n  - get\n  - list\n  - watch\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: dev-rolebinding\nsubjects:               ![1](assets/1.png)\n- kind: User            ![2](assets/2.png)\n  name: alice\n  apiGroup: \"rbac.authorization.k8s.io\"\n- kind: ServiceAccount  ![3](assets/3.png)\n  name: contractor\n  apiGroup: \"\"\nroleRef:\n  kind: Role            ![4](assets/4.png)\n  name: developer-ro\n  apiGroup: rbac.authorization.k8s.io\n```", "```\nrules:\n- apiGroups:\n  - \"\"\n  - \"networking.k8s.io\"\n  resources:\n  - \"*\"  ![1](assets/1.png)\n  verbs:\n  - \"*\"  ![2](assets/2.png)\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: view-pod ![1](assets/1.png)\nrules:\n- apiGroups:     ![2](assets/2.png)\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - get\n  - list\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: view\n  labels:\n    rbac.authorization.k8s.io/aggregate-to-edit: \"true\"   ![1](assets/1.png)\naggregationRule:\n  clusterRoleSelectors:\n  - matchLabels:\n      rbac.authorization.k8s.io/aggregate-to-view: \"true\" ![2](assets/2.png)\nrules: []  ![3](assets/3.png)\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: test-sa-crb\nsubjects:             ![1](assets/1.png)\n- kind: ServiceAccount\n  name: test-sa\n  namespace: test\nroleRef:              ![2](assets/2.png)\n  kind: ClusterRole\n  name: view-pod\n  apiGroup: rbac.authorization.k8s.io\n```"]