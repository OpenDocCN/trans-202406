["```\nwebPreferences: {\n  nodeIntegration: false\n},\n```", "```\nwindow.loadURL('http://localhost:1234');\n```", "```\ncp src/config.example.js src/config.js\n```", "```\nconst config = {\n  LOCAL_WEB_URL: 'http://localhost:1234/',\n  PRODUCTION_WEB_URL: 'https://YOUR_DEPLOYED_WEB_APP_URL',\n  PRODUCTION_API_URL: 'https://YOUR_DEPLOYED_API_URL'\n};\n\nmodule.exports = config;\n```", "```\nconst config = require('./config');\n```", "```\n// load the URL\n if (is.development) {\n   window.loadURL(config.LOCAL_WEB_URL);\n } else {\n   window.loadURL(config.PRODUCTION_WEB_URL);\n }\n```", "```\nconst { is, setContentSecurityPolicy } = require('electron-util');\n```", "```\n// set the CSP in production mode\n if (!is.development) {\n   setContentSecurityPolicy(`\n default-src 'none';\n script-src 'self';\n img-src 'self' https://www.gravatar.com;\n style-src 'self' 'unsafe-inline';\n font-src 'self';\n connect-src 'self' ${config.PRODUCTION_API_URL};\n base-uri 'none';\n form-action 'none';\n frame-ancestors 'none';\n `);\n }\n```", "```\nconst { app, BrowserWindow } = require('electron');\nconst { is, setContentSecurityPolicy } = require('electron-util');\nconst config = require('./config');\n\n// to avoid garbage collection, declare the window as a variable\nlet window;\n\n// specify the details of the browser window\nfunction createWindow() {\n  window = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      nodeIntegration: false\n    }\n  });\n\n  // load the URL\n  if (is.development) {\n    window.loadURL(config.LOCAL_WEB_URL);\n  } else {\n    window.loadURL(config.PRODUCTION_WEB_URL);\n  }\n\n  // if in development mode, open the browser dev tools\n  if (is.development) {\n    window.webContents.openDevTools();\n  }\n\n  // set the CSP in production mode\n  if (!is.development) {\n    setContentSecurityPolicy(`\n default-src 'none';\n script-src 'self';\n img-src 'self' https://www.gravatar.com;\n style-src 'self' 'unsafe-inline';\n font-src 'self';\n connect-src 'self' ${config.PRODUCTION_API_URL};\n base-uri 'none';\n form-action 'none';\n frame-ancestors 'none';\n `);\n  }\n\n  // when the window is closed, dereference the window object\n  window.on('closed', () => {\n    window = null;\n  });\n}\n\n// when electron is ready, create the application window\napp.on('ready', createWindow);\n\n// quit when all windows are closed.\napp.on('window-all-closed', () => {\n  // On macOS only quit when a user explicitly quits the application\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  // on macOS, re-create the window when the icon is clicked in the dock\n  if (window === null) {\n    createWindow();\n  }\n});\n```"]