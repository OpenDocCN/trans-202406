["```\nCREATE PROCEDURE show_version()\nSELECT VERSION() AS 'MySQL Version';\n```", "```\nCREATE PROCEDURE show_part_of_day()\nBEGIN\n  DECLARE cur_time, day_part TEXT;\n  SET cur_time = CURTIME();\n  IF cur_time < '12:00:00' THEN\n    SET day_part = 'morning';\n  ELSEIF cur_time = '12:00:00' THEN\n    SET day_part = 'noon';\n  ELSE\n    SET day_part = 'afternoon or night';\n  END IF;\n  SELECT cur_time, day_part;\nEND;\n```", "```\nCALL cookbook.show_version();\n```", "```\nCREATE FUNCTION avg_mail_size()\nRETURNS FLOAT READS SQL DATA\nRETURN (SELECT AVG(size) FROM mail);\n```", "```\nCREATE FUNCTION avg_mail_size(user VARCHAR(8))\nRETURNS FLOAT READS SQL DATA\nBEGIN\n  DECLARE avg FLOAT;\n  IF user IS NULL\n  THEN # average message size over all users\n    SET avg = (SELECT AVG(size) FROM mail);\n  ELSE # average message size for given user\n    SET avg = (SELECT AVG(size) FROM mail WHERE srcuser = user);\n  END IF;\n  RETURN avg;\nEND;\n```", "```\nmysql> `delimiter $$`\nmysql> `CREATE FUNCTION avg_mail_size(user VARCHAR(8))`\n    -> `RETURNS FLOAT READS SQL DATA`\n    -> `BEGIN`\n    ->   `DECLARE avg FLOAT;`\n    ->   `IF user IS NULL`\n    ->   `THEN # average message size over all users`\n    ->     `SET avg = (SELECT AVG(size) FROM mail);`\n    ->   `ELSE # average message size for given user`\n    ->     `SET avg = (SELECT AVG(size) FROM mail WHERE srcuser = user);`\n    ->   `END IF;`\n    ->   `RETURN avg;`\n    -> `END;`\n    -> `$$`\nQuery OK, 0 rows affected (0.02 sec)\nmysql> `delimiter ;`\n```", "```\nmysql> `SELECT avg_mail_size(NULL), avg_mail_size('barb');`\n+---------------------+-----------------------+\n| avg_mail_size(NULL) | avg_mail_size('barb') |\n+---------------------+-----------------------+\n|         237386.5625 |                 52232 |\n+---------------------+-----------------------+\n```", "```\nCREATE FUNCTION sales_tax_rate(state_code CHAR(2))\nRETURNS DECIMAL(3,2) READS SQL DATA\nBEGIN\n  DECLARE rate DECIMAL(3,2);\n  DECLARE CONTINUE HANDLER FOR NOT FOUND SET rate = 0;\n  SELECT tax_rate INTO rate FROM sales_tax_rate WHERE state = state_code;\n  RETURN rate;\nEND;\n```", "```\nmysql> `SELECT sales_tax_rate('VT'), sales_tax_rate('NY');`\n+----------------------+----------------------+\n| sales_tax_rate('VT') | sales_tax_rate('NY') |\n+----------------------+----------------------+\n|                 0.01 |                 0.09 |\n+----------------------+----------------------+\n```", "```\nmysql> `SELECT sales_tax_rate('ZZ');`\n+----------------------+\n| sales_tax_rate('ZZ') |\n+----------------------+\n|                 0.00 |\n+----------------------+\n```", "```\nmysql> `SELECT 150*sales_tax_rate('VT'), 150*sales_tax_rate('NY');`\n+--------------------------+--------------------------+\n| 150*sales_tax_rate('VT') | 150*sales_tax_rate('NY') |\n+--------------------------+--------------------------+\n|                     1.50 |                    13.50 |\n+--------------------------+--------------------------+\n```", "```\nCREATE FUNCTION sales_tax(state_code CHAR(2), sales_amount DECIMAL(10,2))\nRETURNS DECIMAL(10,2) READS SQL DATA\nRETURN sales_amount * sales_tax_rate(state_code);\n```", "```\nmysql> `SELECT sales_tax('VT',150), sales_tax('NY',150);`\n+---------------------+---------------------+\n| sales_tax('VT',150) | sales_tax('NY',150) |\n+---------------------+---------------------+\n|                1.50 |               13.50 |\n+---------------------+---------------------+\n```", "```\nCREATE PROCEDURE mail_sender_stats(IN user VARCHAR(8),\n                                   OUT messages INT,\n                                   OUT total_size INT,\n                                   OUT avg_size INT)\nBEGIN\n  # Use IFNULL() to return 0 for SUM() and AVG() in case there are\n  # no rows for the user (those functions return NULL in that case).\n  SELECT COUNT(*), IFNULL(SUM(size),0), IFNULL(AVG(size),0)\n  INTO messages, total_size, avg_size\n  FROM mail WHERE srcuser = user;\nEND;\n```", "```\nmysql> `CALL mail_sender_stats('barb',@messages,@total_size,@avg_size);`\nmysql> `SELECT @messages, @total_size, @avg_size;`\n+-----------+-------------+-----------+\n| @messages | @total_size | @avg_size |\n+-----------+-------------+-----------+\n|         3 |      156696 |     52232 |\n+-----------+-------------+-----------+\n```", "```\nCREATE TABLE auction\n(\n  id   INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  ts   TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  item VARCHAR(30) NOT NULL,\n  bid  DECIMAL(10,2) NOT NULL,\n  PRIMARY KEY (id)\n);\n```", "```\nCREATE TABLE auction_log\n(\n  action ENUM('create','update','delete'),\n  id    INT UNSIGNED NOT NULL,\n  ts    TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  item  VARCHAR(30) NOT NULL,\n  bid   DECIMAL(10,2) NOT NULL,\n  INDEX (id)\n);\n```", "```\nCREATE TRIGGER ai_auction AFTER INSERT ON auction\nFOR EACH ROW\nINSERT INTO auction_log (action,id,ts,item,bid)\nVALUES('create',NEW.id,NOW(),NEW.item,NEW.bid);\n\nCREATE TRIGGER au_auction AFTER UPDATE ON auction\nFOR EACH ROW\nINSERT INTO auction_log (action,id,ts,item,bid)\nVALUES('update',NEW.id,NOW(),NEW.item,NEW.bid);\n\nCREATE TRIGGER ad_auction AFTER DELETE ON auction\nFOR EACH ROW\nINSERT INTO auction_log (action,id,ts,item,bid)\nVALUES('delete',OLD.id,OLD.ts,OLD.item,OLD.bid);\n```", "```\nmysql> `INSERT INTO auction (item,bid) VALUES('chintz pillows',5.00);`\nmysql> `SELECT LAST_INSERT_ID();`\n+------------------+\n| LAST_INSERT_ID() |\n+------------------+\n|              792 |\n+------------------+\n```", "```\nmysql> `UPDATE auction SET bid = 7.50 WHERE id = 792;`\n*`... time passes ...`*\nmysql> `UPDATE auction SET bid = 9.00 WHERE id = 792;`\n*`... time passes ...`*\nmysql> `UPDATE auction SET bid = 10.00 WHERE id = 792;`\n*`... time passes ...`*\nmysql> `DELETE FROM auction WHERE id = 792;`\n```", "```\nmysql> `SELECT * FROM auction_log WHERE id = 792 ORDER BY ts;`\n+--------+-----+---------------------+----------------+-------+\n| action | id  | ts                  | item           | bid   |\n+--------+-----+---------------------+----------------+-------+\n| create | 792 | 2014-01-09 14:57:41 | chintz pillows |  5.00 |\n| update | 792 | 2014-01-09 14:57:50 | chintz pillows |  7.50 |\n| update | 792 | 2014-01-09 14:57:57 | chintz pillows |  9.00 |\n| update | 792 | 2014-01-09 14:58:03 | chintz pillows | 10.00 |\n| delete | 792 | 2014-01-09 14:58:03 | chintz pillows | 10.00 |\n+--------+-----+---------------------+----------------+-------+\n```", "```\nCREATE TABLE mark_log\n(\n  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n  ts      TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  message VARCHAR(100)\n);\n```", "```\nCREATE EVENT mark_insert\nON SCHEDULE EVERY 5 MINUTE\nDO INSERT INTO mark_log (message) VALUES('-- MARK --');\n```", "```\nmysql> `SELECT * FROM mark_log;`\nEmpty set (0.00 sec)\n```", "```\nmysql> `SHOW VARIABLES LIKE 'event_scheduler';`\n+-----------------+-------+\n| Variable_name   | Value |\n+-----------------+-------+\n| event_scheduler | OFF   |\n+-----------------+-------+\n```", "```\nSET GLOBAL event_scheduler = 1;\n```", "```\n[mysqld]\nevent_scheduler=1\n```", "```\nSET PERSIST event_scheduler = 1;\n```", "```\n    DROP EVENT mark_insert;\n    ```", "```\n    ALTER EVENT mark_insert DISABLE;\n    ```", "```\n    ALTER EVENT mark_insert ENABLE;\n    ```", "```\n    CREATE EVENT mark_expire\n    ON SCHEDULE EVERY 1 DAY\n    DO DELETE FROM mark_log WHERE ts < NOW() - INTERVAL 2 DAY;\n    ```", "```\nSET @stmt = CONCAT('CREATE TABLE ',@tbl_name,' (i INT)');\nPREPARE stmt FROM @stmt;\nEXECUTE stmt;\nDEALLOCATE PREPARE stmt;\nSET @stmt = CONCAT('INSERT INTO ',@tbl_name,' (i) VALUES(',@val,')');\nPREPARE stmt FROM @stmt;\nEXECUTE stmt;\nDEALLOCATE PREPARE stmt;\n```", "```\nCREATE PROCEDURE exec_stmt(stmt_str TEXT)\nBEGIN\n  SET @_stmt_str = stmt_str;\n  PREPARE stmt FROM @_stmt_str;\n  EXECUTE stmt;\n  DEALLOCATE PREPARE stmt;\nEND;\n```", "```\nCALL exec_stmt(CONCAT('CREATE TABLE ',@tbl_name,' (i INT)'));\nCALL exec_stmt(CONCAT('INSERT INTO ',@tbl_name,' (i) VALUES(',@val,')'));\n```", "```\n    CREATE FUNCTION quote_identifier(id TEXT)\n    RETURNS TEXT DETERMINISTIC\n    RETURN CONCAT('`',REPLACE(id,'`','``'),'`');\n    ```", "```\nSET @tbl_name = quote_identifier(@tbl_name);\nSET @val = QUOTE(@val);\nCALL exec_stmt(CONCAT('CREATE TABLE ',@tbl_name,' (i INT)'));\nCALL exec_stmt(CONCAT('INSERT INTO ',@tbl_name,' (i) VALUES(',@val,')'));\n```", "```\nCREATE PROCEDURE us_population()\nBEGIN\n  DECLARE done BOOLEAN DEFAULT FALSE; ![1](Images/1.png)\n  DECLARE state_pop, total_pop BIGINT DEFAULT 0;\n  DECLARE cur CURSOR FOR SELECT pop FROM states; ![2](Images/2.png)\n  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE; ![3](Images/3.png)\n\n  OPEN cur;\n  fetch_loop: LOOP\n    FETCH cur INTO state_pop; ![4](Images/4.png)\n    IF done THEN ![5](Images/5.png)\n      LEAVE fetch_loop;\n    END IF;\n    SET total_pop = total_pop + state_pop; ![6](Images/6.png)\n  END LOOP;\n  CLOSE cur;\n  SELECT total_pop AS 'Total U.S. Population'; ![7](Images/7.png)\nEND;\n```", "```\nmysql> `CALL us_population();`\n+-----------------------+\n| Total U.S. Population |\n+-----------------------+\n|             331223695 |\n+-----------------------+\nmysql> `SELECT SUM(pop) AS 'Total U.S. Population' FROM states;`\n+-----------------------+\n| Total U.S. Population |\n+-----------------------+\n|             331223695 |\n+-----------------------+\n```", "```\nmysql> `DROP INDEX bad_index ON limbs;`\nERROR 1091 (42000): Can't DROP 'bad_index'; check that column/key exists\n```", "```\nCREATE PROCEDURE drop_index(index_name VARCHAR(64), table_name VARCHAR(64))\nBEGIN\n  DECLARE CONTINUE HANDLER FOR 1091\n    SELECT CONCAT('Unknown index: ', index_name) AS Message;\n  CALL exec_stmt(CONCAT('DROP INDEX ', index_name, ' ON ', table_name));\nEND;\n```", "```\nmysql> `CALL drop_index('bad_index', 'limbs');`\n+--------------------------+\n| Message                  |\n+--------------------------+\n| Unknown index: bad_index |\n+--------------------------+\n```", "```\nDECLARE CONTINUE HANDLER FOR 1091 BEGIN END;\n```", "```\nmysql> `SELECT @@sql_mode\\G`\n*************************** 1\\. row ***************************\n@@sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,↩\n            ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION\n1 row in set (0,00 sec)\n\nmysql> `SELECT 1/0;`\n+------+\n| 1/0  |\n+------+\n| NULL |\n+------+\n1 row in set, 1 warning (0.00 sec)\nmysql> `SHOW WARNINGS;`\n+---------+------+---------------+\n| Level   | Code | Message       |\n+---------+------+---------------+\n| Warning | 1365 | Division by 0 |\n+---------+------+---------------+\n```", "```\nCREATE FUNCTION divide(numerator FLOAT, divisor FLOAT)\nRETURNS FLOAT DETERMINISTIC\nBEGIN\n  IF divisor = 0 THEN\n    SIGNAL SQLSTATE '22012'\n           SET MYSQL_ERRNO = 1365, MESSAGE_TEXT = 'unexpected 0 divisor';\n  END IF;\n  RETURN numerator / divisor;\nEND;\n```", "```\nmysql> `SELECT divide(1,0);`\nERROR 1365 (22012): unexpected 0 divisor\n```", "```\nCREATE PROCEDURE drop_user_warn(user TEXT, host TEXT)\nBEGIN\n  DECLARE account TEXT;\n  DECLARE CONTINUE HANDLER FOR 1396\n  BEGIN\n    DECLARE msg TEXT;\n    SET msg = CONCAT('Unknown user: ', account);\n    SIGNAL SQLSTATE '01000' SET MYSQL_ERRNO = 1642, MESSAGE_TEXT = msg;\n  END;\n  SET account = CONCAT(QUOTE(user),'@',QUOTE(host));\n  CALL exec_stmt(CONCAT('DROP USER ',account));\nEND;\n```", "```\nmysql> `CALL drop_user_warn('bad-user','localhost');`\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\nmysql> `SHOW WARNINGS;`\n+---------+------+--------------------------------------+\n| Level   | Code | Message                              |\n+---------+------+--------------------------------------+\n| Warning | 1642 | Unknown user: 'bad-user'@'localhost' |\n+---------+------+--------------------------------------+\n```", "```\nALTER TABLE movies_actors_link ADD FOREIGN KEY(movie_id) REFERENCES movies(id);\nALTER TABLE movies_actors_link ADD FOREIGN KEY(actor_id) REFERENCES actors(id);\n```", "```\nmysql> `INSERT` `INTO` `movies_actors_link` `VALUES``(``7``,` `1``)``;`\nERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint \nfails (`cookbook`.`movies_actors_link`, CONSTRAINT `movies_actors_link_ibfk_1` \nFOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`))\n```", "```\nmysql>  `GET` `DIAGNOSTICS` `CONDITION` `1`\n    ->  `@``err_number` `=` `MYSQL_ERRNO``,`\n    ->  `@``err_sqlstate` `=` `RETURNED_SQLSTATE``,`\n    ->  `@``err_message` `=` `MESSAGE_TEXT``;`\nQuery OK, 0 rows affected (0.01 sec)\n```", "```\nmysql> `SELECT` `@``err_number``,` `@``err_sqlstate``,` `@``err_message``\\``G`\n*************************** 1. row ***************************\n  @err_number: 1452\n@err_sqlstate: 23000\n @err_message: Cannot add or update a child row: a foreign key constraint \n               fails (`cookbook`.`movies_actors_link`, \n               CONSTRAINT `movies_actors_link_ibfk_1` \n               FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`))\n1 row in set (0.00 sec)\n```", "```\nCREATE TABLE `movies_actors_log` (\n  `err_ts` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  `err_number` int DEFAULT NULL,\n  `err_sqlstate` char(5) DEFAULT NULL,\n  `err_message` TEXT DEFAULT NULL,\n  `movie_id` int unsigned DEFAULT NULL,\n  `actor_id` int unsigned DEFAULT NULL\n);\n```", "```\nCREATE PROCEDURE insert_movies_actors_link(movie INT, actor INT)\nBEGIN\n  DECLARE e_number INT; ![1](Images/1.png)\n  DECLARE e_sqlstate CHAR(5);\n  DECLARE e_message TEXT;\n\n  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION ![2](Images/2.png)\n    BEGIN\n      GET DIAGNOSTICS CONDITION 1\n        e_number = MYSQL_ERRNO, ![3](Images/3.png)\n        e_sqlstate = RETURNED_SQLSTATE,\n        e_message = MESSAGE_TEXT;\n      INSERT INTO movies_actors_log(err_number, err_sqlstate, err_message,  ![4](Images/4.png)\n                                    movie_id, actor_id)\n        VALUES(e_number, e_sqlstate, e_message, movie, actor);\n      RESIGNAL; ![5](Images/5.png)\n    END;\n\n  INSERT INTO movies_actors_link VALUES(movie, actor); ![6](Images/6.png)\nEND\n```", "```\nmysql>  `CALL` `insert_movies_actors_link``(``7``,` `11``)``;`\nERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint \nfails (`cookbook`.`movies_actors_link`, CONSTRAINT `movies_actors_link_ibfk_1` \nFOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`))\nmysql>  `CALL` `insert_movies_actors_link``(``6``,` `11``)``;`\nERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint \nfails (`cookbook`.`movies_actors_link`, CONSTRAINT `movies_actors_link_ibfk_2` \nFOREIGN KEY (`actor_id`) REFERENCES `actors` (`id`))\nmysql>  `CALL` `insert_movies_actors_link``(``null``,` `10``)``;`\nERROR 1048 (23000): Column 'movie_id' cannot be null\nmysql>  `CALL` `insert_movies_actors_link``(``6``,` `null``)``;`\nERROR 1048 (23000): Column 'actor_id' cannot be null\nmysql>  `CALL` `insert_movies_actors_link``(``6``,` `9``)``;`\nERROR 1062 (23000): Duplicate entry '6-9' for key 'movies_actors_link.movie_id'\n```", "```\nmysql> `SELECT` `*` `FROM` `movies_actors_log``\\``G`\n*************************** 1. row ***************************\n      err_ts: 2021-03-12 21:11:30\n  err_number: 1452\nerr_sqlstate: 23000\n err_message: Cannot add or update a child row: a foreign key constraint fails \n              (`cookbook`.`movies_actors_link`, \n              CONSTRAINT `movies_actors_link_ibfk_1` \n              FOREIGN KEY (`movie_id`) REFERENCES `movies` (`id`))\n    movie_id: 7\n    actor_id: 11\n*************************** 2. row ***************************\n      err_ts: 2021-03-12 21:11:38\n  err_number: 1452\nerr_sqlstate: 23000\n err_message: Cannot add or update a child row: a foreign key constraint fails \n              (`cookbook`.`movies_actors_link`, \n              CONSTRAINT `movies_actors_link_ibfk_2` \n              FOREIGN KEY (`actor_id`) REFERENCES `actors` (`id`))\n    movie_id: 6\n    actor_id: 11\n*************************** 3. row ***************************\n      err_ts: 2021-03-12 21:11:49\n  err_number: 1048\nerr_sqlstate: 23000\n err_message: Column 'movie_id' cannot be null\n    movie_id: NULL\n    actor_id: 10\n*************************** 4. row ***************************\n      err_ts: 2021-03-12 21:11:56\n  err_number: 1048\nerr_sqlstate: 23000\n err_message: Column 'actor_id' cannot be null\n    movie_id: 6\n    actor_id: NULL\n*************************** 5. row ***************************\n      err_ts: 2021-03-12 21:12:00\n  err_number: 1062\nerr_sqlstate: 23000\n err_message: Duplicate entry '6-9' for key 'movies_actors_link.movie_id'\n    movie_id: 6\n    actor_id: 9\n5 rows in set (0.00 sec)\n```", "```\nCREATE TABLE contact_info\n(\n  id     INT NOT NULL AUTO_INCREMENT,\n  name   VARCHAR(30),   # name of person\n  state  CHAR(2),       # state of residence\n  email  VARCHAR(50),   # email address\n  url    VARCHAR(255),  # web address\n  PRIMARY KEY (id)\n);\n```", "```\nCREATE TRIGGER bi_contact_info BEFORE INSERT ON contact_info\nFOR EACH ROW\nBEGIN\n  IF (SELECT COUNT(*) FROM states WHERE abbrev = NEW.state) = 0 THEN\n    SIGNAL SQLSTATE 'HY000'\n           SET MYSQL_ERRNO = 1525, MESSAGE_TEXT = 'invalid state code';\n  END IF;\n  IF INSTR(NEW.email,'@') = 0 THEN\n    SIGNAL SQLSTATE 'HY000'\n           SET MYSQL_ERRNO = 1525, MESSAGE_TEXT = 'invalid email address';\n  END IF;\n  SET NEW.url = TRIM(LEADING 'http://' FROM NEW.url);\n  SET NEW.url = TRIM(LEADING 'https://' FROM NEW.url);\nEND;\n```", "```\nmysql> `INSERT INTO contact_info (name,state,email,url)`\n    -> `VALUES('Jen','NY','jen@example.com','http://www.example.com');`\nmysql> `INSERT INTO contact_info (name,state,email,url)`\n    -> `VALUES('Jen','XX','jen@example.com','http://www.example.com');`\nERROR 1525 (HY000): invalid state code\nmysql> `INSERT INTO contact_info (name,state,email,url)`\n    -> `VALUES('Jen','NY','jen','http://www.example.com');`\nERROR 1525 (HY000): invalid email address\nmysql> `SELECT * FROM contact_info;`\n+----+------+-------+-----------------+-----------------+\n| id | name | state | email           | url             |\n+----+------+-------+-----------------+-----------------+\n|  1 | Jen  | NY    | jen@example.com | www.example.com |\n+----+------+-------+-----------------+-----------------+\n```"]