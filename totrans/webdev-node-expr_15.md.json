["```\n[NOTE]\n```", "```\nconst cors = require('cors')\n\napp.use(cors())\n```", "```\nconst cors = require('cors')\n\napp.use('/api', cors())\n```", "```\nnpm install --save-dev node-fetch@2.6.0\n```", "```\nconst fetch = require('node-fetch')\n\nconst baseUrl = 'http://localhost:3000'\n\nconst _fetch = async (method, path, body) => {\n  body = typeof body === 'string' ? body : JSON.stringify(body)\n  const headers = { 'Content-Type': 'application/json' }\n  const res = await fetch(baseUrl + path, { method, body, headers })\n  if(res.status < 200 || res.status > 299)\n    throw new Error(`API returned status ${res.status}`)\n  return res.json()\n}\n\ndescribe('API tests', () => {\n\n  test('GET /api/vacations', async () => {\n    const vacations = await _fetch('get', '/api/vacations')\n    expect(vacations.length).not.toBe(0)\n    const vacation0 = vacations[0]\n    expect(vacation0.name).toMatch(/\\w/)\n    expect(typeof vacation0.price).toBe('number')\n  })\n\n  test('GET /api/vacation/:sku', async() => {\n    const vacations = await _fetch('get', '/api/vacations')\n    expect(vacations.length).not.toBe(0)\n    const vacation0 = vacations[0]\n    const vacation = await _fetch('get', '/api/vacation/' + vacation0.sku)\n    expect(vacation.name).toBe(vacation0.name)\n  })\n\n  test('POST /api/vacation/:sku/notify-when-in-season', async() => {\n    const vacations = await _fetch('get', '/api/vacations')\n    expect(vacations.length).not.toBe(0)\n    const vacation0 = vacations[0]\n    // at this moment, all we can do is make sure the HTTP request is successful\n    await _fetch('post', `/api/vacation/${vacation0.sku}/notify-when-in-season`,\n      { email: 'test@meadowlarktravel.com' })\n  })\n\n  test('DELETE /api/vacation/:id', async() => {\n    const vacations = await _fetch('get', '/api/vacations')\n    expect(vacations.length).not.toBe(0)\n    const vacation0 = vacations[0]\n    // at this moment, all we can do is make sure the HTTP request is successful\n    await _fetch('delete', `/api/vacation/${vacation0.sku}`)\n  })\n\n})\n```", "```\nexports.getVacationsApi = async (req, res) => {\n  const vacations = await db.getVacations({ available: true })\n  res.json(vacations)\n}\n\nexports.getVacationBySkuApi = async (req, res) => {\n  const vacation = await db.getVacationBySku(req.params.sku)\n  res.json(vacation)\n}\n\nexports.addVacationInSeasonListenerApi = async (req, res) => {\n  await db.addVacationInSeasonListener(req.params.sku, req.body.email)\n  res.json({ message: 'success' })\n}\n\nexports.requestDeleteVacationApi = async (req, res) => {\n  const { email, notes } = req.body\n  res.status(500).json({ message: 'not yet implemented' })\n}\n```", "```\napp.get('/api/vacations', handlers.getVacationsApi)\napp.get('/api/vacation/:sku', handlers.getVacationBySkuApi)\napp.post('/api/vacation/:sku/notify-when-in-season',\n  handlers.addVacationInSeasonListenerApi)\napp.delete('/api/vacation/:sku', handlers.requestDeleteVacationApi)\n```"]