["```\nkubectl apply \\\n-f https://storage.googleapis.com/tekton-releases/pipeline/previous/v0.37.0/release.yaml\n```", "```\nnamespace/tekton-pipelines created\npodsecuritypolicy.policy/tekton-pipelines created\nclusterrole.rbac.authorization.k8s.io/tekton-pipelines-controller-cluster-access created\nclusterrole.rbac.authorization.k8s.io/tekton-pipelines-controller-tenant-access created\nclusterrole.rbac.authorization.k8s.io/tekton-pipelines-webhook-cluster-access created\nrole.rbac.authorization.k8s.io/tekton-pipelines-controller created\nrole.rbac.authorization.k8s.io/tekton-pipelines-webhook created\nrole.rbac.authorization.k8s.io/tekton-pipelines-leader-election created\nrole.rbac.authorization.k8s.io/tekton-pipelines-info created\nserviceaccount/tekton-pipelines-controller created\nserviceaccount/tekton-pipelines-webhook created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-pipelines-controller-cluster-access created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-pipelines-controller-tenant-access created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-pipelines-webhook-cluster-access created\nrolebinding.rbac.authorization.k8s.io/tekton-pipelines-controller created\nrolebinding.rbac.authorization.k8s.io/tekton-pipelines-webhook created\nrolebinding.rbac.authorization.k8s.io/tekton-pipelines-controller-leaderelection created\nrolebinding.rbac.authorization.k8s.io/tekton-pipelines-webhook-leaderelection created\nrolebinding.rbac.authorization.k8s.io/tekton-pipelines-info created\ncustomresourcedefinition.apiextensions.k8s.io/clustertasks.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/pipelines.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/pipelineruns.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/resolutionrequests.resolution.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/pipelineresources.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/runs.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/tasks.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/taskruns.tekton.dev created\nsecret/webhook-certs created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/validation.webhook.pipeline.tekton.dev created\nmutatingwebhookconfiguration.admissionregistration.k8s.io/webhook.pipeline.tekton.dev created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/config.webhook.pipeline.tekton.dev created\nclusterrole.rbac.authorization.k8s.io/tekton-aggregate-edit created\nclusterrole.rbac.authorization.k8s.io/tekton-aggregate-view created\nconfigmap/config-artifact-bucket created\nconfigmap/config-artifact-pvc created\nconfigmap/config-defaults created\nconfigmap/feature-flags created\nconfigmap/pipelines-info created\nconfigmap/config-leader-election created\nconfigmap/config-logging created\nconfigmap/config-observability created\nconfigmap/config-registry-cert created\ndeployment.apps/tekton-pipelines-controller created\nservice/tekton-pipelines-controller created\nhorizontalpodautoscaler.autoscaling/tekton-pipelines-webhook created\ndeployment.apps/tekton-pipelines-webhook created\nservice/tekton-pipelines-webhook created\n```", "```\nkubectl get pods -w -n tekton-pipelines\n```", "```\nNAME                                           READY   STATUS    RESTARTS   AGE\ntekton-pipelines-controller-5fd68749f5-tz8dv   1/1     Running   0          3m4s\ntekton-pipelines-webhook-58dcdbfd9b-hswpk      1/1     Running   0          3m4s\n```", "```\nkubectl apply \\\n-f https://storage.googleapis.com/tekton-releases/triggers/previous/v0.20.1/release.yaml\n```", "```\npodsecuritypolicy.policy/tekton-triggers created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-admin created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-core-interceptors created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-core-interceptors-secrets created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-eventlistener-roles created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-eventlistener-clusterroles created\nrole.rbac.authorization.k8s.io/tekton-triggers-admin created\nrole.rbac.authorization.k8s.io/tekton-triggers-admin-webhook created\nrole.rbac.authorization.k8s.io/tekton-triggers-core-interceptors created\nrole.rbac.authorization.k8s.io/tekton-triggers-info created\nserviceaccount/tekton-triggers-controller created\nserviceaccount/tekton-triggers-webhook created\nserviceaccount/tekton-triggers-core-interceptors created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-triggers-controller-admin created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-triggers-webhook-admin created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-triggers-core-interceptors created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-triggers-core-interceptors-secrets created\nrolebinding.rbac.authorization.k8s.io/tekton-triggers-controller-admin created\nrolebinding.rbac.authorization.k8s.io/tekton-triggers-webhook-admin created\nrolebinding.rbac.authorization.k8s.io/tekton-triggers-core-interceptors created\nrolebinding.rbac.authorization.k8s.io/tekton-triggers-info created\ncustomresourcedefinition.apiextensions.k8s.io/clusterinterceptors.triggers.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/clustertriggerbindings.triggers.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/eventlisteners.triggers.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/triggers.triggers.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/triggerbindings.triggers.tekton.dev created\ncustomresourcedefinition.apiextensions.k8s.io/triggertemplates.triggers.tekton.dev created\nsecret/triggers-webhook-certs created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/validation.webhook.triggers.tekton.dev created\nmutatingwebhookconfiguration.admissionregistration.k8s.io/webhook.triggers.tekton.dev created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/config.webhook.triggers.tekton.dev created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-aggregate-edit created\nclusterrole.rbac.authorization.k8s.io/tekton-triggers-aggregate-view created\nconfigmap/config-defaults-triggers created\nconfigmap/feature-flags-triggers created\nconfigmap/triggers-info created\nconfigmap/config-logging-triggers created\nconfigmap/config-observability-triggers created\nservice/tekton-triggers-controller created\ndeployment.apps/tekton-triggers-controller created\nservice/tekton-triggers-webhook created\ndeployment.apps/tekton-triggers-webhook created\ndeployment.apps/tekton-triggers-core-interceptors created\nservice/tekton-triggers-core-interceptors created\nclusterinterceptor.triggers.tekton.dev/cel created\nclusterinterceptor.triggers.tekton.dev/bitbucket created\nclusterinterceptor.triggers.tekton.dev/github created\nclusterinterceptor.triggers.tekton.dev/gitlab created\nsecret/tekton-triggers-core-interceptors-certs created\n```", "```\nkubectl get pods -w -n tekton-pipelines\n```", "```\nNAME                                                 READY   STATUS    RESTARTS   AGE\ntekton-pipelines-controller-5fd68749f5-tz8dv         1/1     Running   0          27m\ntekton-pipelines-webhook-58dcdbfd9b-hswpk            1/1     Running   0          27m\ntekton-triggers-controller-854d44fd5d-8jf9q          1/1     Running   0          105s\ntekton-triggers-core-interceptors-5454f8785f-dhsrb   1/1     Running   0          104s\ntekton-triggers-webhook-86d75f875-zmjf4              1/1     Running   0          105s\n```", "```\nkubectl apply \\\n-f https://storage.googleapis.com/tekton-releases/dashboard/previous/v0.28.0/tekton-dashboard-release.yaml\n```", "```\ncustomresourcedefinition.apiextensions.k8s.io/extensions.dashboard.tekton.dev created\nserviceaccount/tekton-dashboard created\nrole.rbac.authorization.k8s.io/tekton-dashboard-info created\nclusterrole.rbac.authorization.k8s.io/tekton-dashboard-backend created\nclusterrole.rbac.authorization.k8s.io/tekton-dashboard-tenant created\nrolebinding.rbac.authorization.k8s.io/tekton-dashboard-info created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-dashboard-backend created\nconfigmap/dashboard-info created\nservice/tekton-dashboard created\ndeployment.apps/tekton-dashboard created\nclusterrolebinding.rbac.authorization.k8s.io/tekton-dashboard-tenant created\n```", "```\nkubectl get pods -w -n tekton-pipelines\n```", "```\nNAME                                                READY STATUS   RESTARTS        AGE\ntekton-dashboard-786b6b5579-sscgz                   1/1   Running  0               2m25s\ntekton-pipelines-controller-5fd68749f5-tz8dv        1/1   Running  1 (7m16s ago)   5d7h\ntekton-pipelines-webhook-58dcdbfd9b-hswpk           1/1   Running  1 (7m6s ago)    5d7h\ntekton-triggers-controller-854d44fd5d-8jf9q         1/1   Running  2 (7m9s ago)    5d7h\ntekton-triggers-core-interceptors-5454f8785f-dhsrb  1/1   Running  1 (7m7s ago)    5d7h\ntekton-triggers-webhook-86d75f875-zmjf4             1/1   Running  2 (7m9s ago)    5d7h\n```", "```\nkubectl port-forward svc/tekton-dashboard 9097:9097 -n tekton-pipelines\n```", "```\ntkn version\n```", "```\nClient version: 0.25.0\nPipeline version: v0.37.0\nTriggers version: v0.20.1\nDashboard version: v0.28.0\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task ![1](assets/1.png)\nmetadata:\n  name: hello ![2](assets/2.png)\nspec:\n  steps: ![3](assets/3.png)\n    - name: say-hello ![4](assets/4.png)\n      image: registry.access.redhat.com/ubi8/ubi ![5](assets/5.png)\n      command:\n        - /bin/bash\n      args: ['-c', 'echo Hello GitOps Cookbook reader!']\n```", "```\nkubectl create -f helloworld-task.yaml\n```", "```\ntask.tekton.dev/hello created\n```", "```\nkubectl get tasks\n```", "```\nNAME    AGE\nhello   90s\n```", "```\ntkn task start --showlog hello\n```", "```\nTaskRun started: hello-run-8bmzz\nWaiting for logs to be available...\n[say-hello] Hello World\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: build-app\nspec:\n  workspaces: ![1](assets/1.png)\n    - name: source\n      description: The git repo will be cloned onto the volume backing this workspace\n  params: ![2](assets/2.png)\n    - name: contextDir\n      description: the context dir within source\n      default: quarkus\n    - name: tlsVerify\n      description: tls verify\n      type: string\n      default: \"false\"\n    - name: url\n      default: https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n    - name: revision\n      default: master\n    - name: subdirectory\n      default: \"\"\n    - name: sslVerify\n      description: defines if http.sslVerify should be set to true or false in the global git config\n      type: string\n      default: \"false\"\n  steps:\n    - image: 'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0'\n      name: clone\n      resources: {}\n      script: |\n        CHECKOUT_DIR=\"$(workspaces.source.path)/$(params.subdirectory)\"\n        cleandir() {\n          # Delete any existing contents of the repo directory if it exists.\n          #\n          # We don't just \"rm -rf $CHECKOUT_DIR\" because $CHECKOUT_DIR might be \"/\"\n          # or the root of a mounted volume.\n          if [[ -d \"$CHECKOUT_DIR\" ]] ; then\n            # Delete non-hidden files and directories\n            rm -rf \"$CHECKOUT_DIR\"/*\n            # Delete files and directories starting with . but excluding ..\n            rm -rf \"$CHECKOUT_DIR\"/.[!.]*\n            # Delete files and directories starting with .. plus any other character\n            rm -rf \"$CHECKOUT_DIR\"/..?*\n          fi\n        }\n        /ko-app/git-init \\\n          -url \"$(params.url)\" \\\n          -revision \"$(params.revision)\" \\\n          -path \"$CHECKOUT_DIR\" \\\n          -sslVerify=\"$(params.sslVerify)\"\n        cd \"$CHECKOUT_DIR\"\n        RESULT_SHA=\"$(git rev-parse HEAD)\"\n    - name: build-sources\n      image: gcr.io/cloud-builders/mvn\n      command:\n        - mvn\n      args:\n        - -DskipTests\n        - clean\n        - install\n      env:\n        - name: user.home\n          value: /home/tekton\n      workingDir: \"/workspace/source/$(params.contextDir)\"\n```", "```\nkubectl create -f build-app-task.yaml\n```", "```\ntask.tekton.dev/build-app created\n```", "```\nkubectl get tasks\n```", "```\nNAME        AGE\nbuild-app   3s\n```", "```\ntkn task ls\n```", "```\nNAME        DESCRIPTION   AGE\nbuild-app                 10 seconds ago\n```", "```\ntkn task start build-app \\\n  --param contextDir='quarkus' \\\n  --workspace name=source,emptyDir=\"\" \\\n  --showlog\n```", "```\n? Value for param `tlsVerify` of type `string`? (Default is `false`) false\n? Value for param `url` of type `string`? (Default is `https://github.com/gitops-cookbook/tekton-tutorial-greeter.git`) https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n? Value for param `revision` of type `string`? (Default is `master`) master\n? Value for param `subdirectory` of type `string`? (Default is ``)\n? Value for param `sslVerify` of type `string`? (Default is `false`) false\nTaskRun started: build-app-run-rzcd8\nWaiting for logs to be available...\n[clone] {\"level\":\"info\",\"ts\":1659278019.0018234,\"caller\":\"git/git.go:169\",\"msg\":\"Successfully cloned https://github.com/gitops-cookbook/tekton-tutorial-greeter.git @ d9291c456db1ce29177b77ffeaa9b71ad80a50e6 (grafted, HEAD, origin/master) in path /workspace/source/\"}\n[clone] {\"level\":\"info\",\"ts\":1659278019.0227938,\"caller\":\"git/git.go:207\",\"msg\":\"Successfully initialized and updated submodules in path /workspace/source/\"}\n\n[build-sources] [INFO] Scanning for projects...\n[build-sources] Downloading from central: https://repo.maven.apache.org/maven2/io/quarkus/quarkus-universe-bom/1.6.1.Final/quarkus-universe-bom-1.6.1.Final.pom\nDownloaded from central: https://repo.maven.apache.org/maven2/io/quarkus/quarkus-universe-bom/1.6.1.Final/quarkus-universe-bom-1.6.1.Final.pom (412 kB at 118 kB/s)\n[build-sources] [INFO]\n...\n[build-sources] [INFO] Installing /workspace/source/quarkus/target/tekton-quarkus-greeter.jar to /root/.m2/repository/com/redhat/developers/tekton-quarkus-greeter/1.0.0-SNAPSHOT/tekton-quarkus-greeter-1.0.0-SNAPSHOT.jar\n[build-sources] [INFO] Installing /workspace/source/quarkus/pom.xml to /root/.m2/repository/com/redhat/developers/tekton-quarkus-greeter/1.0.0-SNAPSHOT/tekton-quarkus-greeter-1.0.0-SNAPSHOT.pom\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-sources] [INFO] BUILD SUCCESS\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-sources] [INFO] Total time:  04:41 min\n[build-sources] [INFO] Finished at: 2022-07-31T14:38:22Z\n[build-sources] [INFO] ------------------------------------------------------------------------\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n  generateName: build-app-run- ![1](assets/1.png)\n  labels:\n    app.kubernetes.io/managed-by: tekton-pipelines\n    tekton.dev/task: build-app\nspec:\n  params:\n  - name: contextDir\n    value: quarkus\n  - name: revision\n    value: master\n  - name: sslVerify\n    value: \"false\"\n  - name: subdirectory\n    value: \"\"\n  - name: tlsVerify\n    value: \"false\"\n  - name: url\n    value: https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n  taskRef: ![2](assets/2.png)\n    kind: Task\n    name: build-app\n  workspaces:\n  - emptyDir: {}\n    name: source\n```", "```\nkubectl create -f build-app-taskrun.yaml\n```", "```\ntaskrun.tekton.dev/build-app-run-65vmh created\n```", "```\ntkn taskrun ls\n```", "```\nNAME                  STARTED          DURATION   STATUS\nbuild-app-run-65vmh   1 minutes ago   2m37s      Succeeded\nbuild-app-run-rzcd8   2 minutes ago   3m58s      Succeeded\n```", "```\ntkn taskrun logs build-app-run-65vmh -f\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: github-secret\n  annotations:\n    tekton.dev/git-0: https://github.com ![1](assets/1.png)\ntype: kubernetes.io/basic-auth ![2](assets/2.png)\nstringData:\n  username: YOUR_USERNAME ![3](assets/3.png)\n  password: YOUR_PASSWORD ![4](assets/4.png)\n```", "```\nkubectl create -f git-secret.yaml\n```", "```\nsecret/git-secret created\n```", "```\nkubectl create secret generic git-secret \\\n    --type=kubernetes.io/basic-auth \\\n    --from-literal=username=YOUR_USERNAME \\\n    --from-literal=password=YOUR_PASSWORD\n```", "```\nkubectl annotate secret git-secret \"tekton.dev/git-0=https://github.com\"\n```", "```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tekton-bot-sa\nsecrets:\n  - name: git-secret ![1](assets/1.png)\n```", "```\nkubectl create -f tekton-bot-sa.yaml\n```", "```\nserviceaccount/tekton-bot-sa created\n```", "```\nkubectl create serviceaccount tekton-bot-sa\n```", "```\nkubectl patch serviceaccount tekton-bot-sa -p '{\"secrets\": [{\"name\": \"git-secret\"}]}'\n```", "```\ntkn task start build-app \\\n  --serviceaccount='tekton-bot-sa' \\ ![1](assets/1.png)\n  --param url='https://github.com/gitops-cookbook/tekton-greeter-private.git' \\ ![2](assets/2.png)\n  --param contextDir='quarkus' \\\n  --workspace name=source,emptyDir=\"\" \\\n  --showlog\n```", "```\n...\n[clone] {\"level\":\"info\",\"ts\":1659354692.1365478,\"caller\":\"git/git.go:169\",\"msg\":\"Successfully cloned https://github.com/gitops-cookbook/tekton-greeter-private.git @ 5250e1fa185805373e620d1c04a0c48129efd2ee (grafted, HEAD, origin/master) in path /workspace/source/\"}\n[clone] {\"level\":\"info\",\"ts\":1659354692.1546066,\"caller\":\"git/git.go:207\",\"msg\":\"Successfully initialized and updated submodules in path /workspace/source/\"}\n...\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-sources] [INFO] BUILD SUCCESS\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-sources] [INFO] Total time:  04:30 min\n[build-sources] [INFO] Finished at: 2022-07-31T15:30:01Z\n[build-sources] [INFO] ------------------------------------------------------------------------\n```", "```\nkubectl create secret docker-registry container-registry-secret \\\n  --docker-server='YOUR_REGISTRY_SERVER' \\\n  --docker-username='YOUR_REGISTRY_USER' \\\n  --docker-password='YOUR_REGISTRY_PASS'\n```", "```\nsecret/container-registry-secret created\n```", "```\nkubectl get secrets\n```", "```\nNAME                        TYPE                             DATA   AGE\ncontainer-registry-secret   kubernetes.io/dockerconfigjson   1      1s\n```", "```\nkubectl create serviceaccount tekton-registry-sa\n```", "```\nkubectl patch serviceaccount tekton-registry-sa \\\n  -p '{\"secrets\": [{\"name\": \"container-registry-secret\"}]}'\n```", "```\nserviceaccount/tekton-registry-sa patched\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: build-push-app\nspec:\n  workspaces:\n    - name: source\n      description: The git repo will be cloned onto the volume backing this workspace\n  params:\n    - name: contextDir\n      description: the context dir within source\n      default: quarkus\n    - name: tlsVerify\n      description: tls verify\n      type: string\n      default: \"false\"\n    - name: url\n      default: https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n    - name: revision\n      default: master\n    - name: subdirectory\n      default: \"\"\n    - name: sslVerify\n      description: defines if http.sslVerify should be set to true or false in the global git config\n      type: string\n      default: \"false\"\n    - name: storageDriver\n      type: string\n      description: Storage driver\n      default: vfs\n    - name: destinationImage\n      description: the fully qualified image name\n      default: \"\"\n  steps:\n    - image: 'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0'\n      name: clone\n      resources: {}\n      script: |\n        CHECKOUT_DIR=\"$(workspaces.source.path)/$(params.subdirectory)\"\n        cleandir() {\n          # Delete any existing contents of the repo directory if it exists.\n          #\n          # We don't just \"rm -rf $CHECKOUT_DIR\" because $CHECKOUT_DIR might be \"/\"\n          # or the root of a mounted volume.\n          if [[ -d \"$CHECKOUT_DIR\" ]] ; then\n            # Delete non-hidden files and directories\n            rm -rf \"$CHECKOUT_DIR\"/*\n            # Delete files and directories starting with . but excluding ..\n            rm -rf \"$CHECKOUT_DIR\"/.[!.]*\n            # Delete files and directories starting with .. plus any other character\n            rm -rf \"$CHECKOUT_DIR\"/..?*\n          fi\n        }\n        /ko-app/git-init \\\n          -url \"$(params.url)\" \\\n          -revision \"$(params.revision)\" \\\n          -path \"$CHECKOUT_DIR\" \\\n          -sslVerify=\"$(params.sslVerify)\"\n        cd \"$CHECKOUT_DIR\"\n        RESULT_SHA=\"$(git rev-parse HEAD)\"\n    - name: build-sources\n      image: gcr.io/cloud-builders/mvn\n      command:\n        - mvn\n      args:\n        - -DskipTests\n        - clean\n        - install\n      env:\n        - name: user.home\n          value: /home/tekton\n      workingDir: \"/workspace/source/$(params.contextDir)\"\n    - name: build-and-push-image\n      image: quay.io/buildah/stable\n      script: |\n        #!/usr/bin/env bash\n        buildah --storage-driver=$STORAGE_DRIVER --tls-verify=$(params.tlsVerify) bud --layers -t $DESTINATION_IMAGE $CONTEXT_DIR\n        buildah --storage-driver=$STORAGE_DRIVER --tls-verify=$(params.tlsVerify) push $DESTINATION_IMAGE docker://$DESTINATION_IMAGE\n      env:\n        - name: DESTINATION_IMAGE\n          value: \"$(params.destinationImage)\"\n        - name: CONTEXT_DIR\n          value: \"/workspace/source/$(params.contextDir)\"\n        - name: STORAGE_DRIVER\n          value: \"$(params.storageDriver)\"\n      workingDir: \"/workspace/source/$(params.contextDir)\"\n      volumeMounts:\n        - name: varlibc\n          mountPath: /var/lib/containers\n  volumes:\n    - name: varlibc\n      emptyDir: {}\n```", "```\nkubectl create -f build-push-app.yaml\n```", "```\ntask.tekton.dev/build-push-app created\n```", "```\ntkn task start build-push-app \\\n  --serviceaccount='tekton-registry-sa' \\\n  --param url='https://github.com/gitops-cookbook/tekton-tutorial-greeter.git' \\\n  --param destinationImage='quay.io/gitops-cookbook/tekton-greeter:latest' \\ ![1](assets/1.png)\n  --param contextDir='quarkus' \\\n  --workspace name=source,emptyDir=\"\" \\\n  --use-param-defaults \\\n  --showlog\n```", "```\n...\nDownloaded from central: https://repo.maven.apache.org/maven2/org/codehaus/plexus/plexus-utils/3.0.5/plexus-utils-3.0.5.jar (230 kB at 301 kB/s)\n[build-sources] [INFO] Installing /workspace/source/quarkus/target/tekton-quarkus-greeter.jar to /root/.m2/repository/com/redhat/developers/tekton-quarkus-greeter/1.0.0-SNAPSHOT/tekton-quarkus-greeter-1.0.0-SNAPSHOT.jar\n[build-sources] [INFO] Installing /workspace/source/quarkus/pom.xml to /root/.m2/repository/com/redhat/developers/tekton-quarkus-greeter/1.0.0-SNAPSHOT/tekton-quarkus-greeter-1.0.0-SNAPSHOT.pom\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-sources] [INFO] BUILD SUCCESS\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-sources] [INFO] Total time:  02:59 min\n[build-sources] [INFO] Finished at: 2022-08-02T06:18:37Z\n[build-sources] [INFO] ------------------------------------------------------------------------\n[build-and-push-image] STEP 1/2: FROM registry.access.redhat.com/ubi8/openjdk-11\n[build-and-push-image] Trying to pull registry.access.redhat.com/ubi8/openjdk-11:latest...\n[build-and-push-image] Getting image source signatures\n[build-and-push-image] Checking if image destination supports signatures\n[build-and-push-image] Copying blob sha256:1e09a5ee0038fbe06a18e7f355188bbabc387467144abcd435f7544fef395aa1\n[build-and-push-image] Copying blob sha256:0d725b91398ed3db11249808d89e688e62e511bbd4a2e875ed8493ce1febdb2c\n[build-and-push-image] Copying blob sha256:1e09a5ee0038fbe06a18e7f355188bbabc387467144abcd435f7544fef395aa1\n[build-and-push-image] Copying blob sha256:0d725b91398ed3db11249808d89e688e62e511bbd4a2e875ed8493ce1febdb2c\n[build-and-push-image] Copying blob sha256:e441d34134fac91baa79be3e2bb8fb3dba71ba5c1ea012cb5daeb7180a054687\n[build-and-push-image] Copying blob sha256:e441d34134fac91baa79be3e2bb8fb3dba71ba5c1ea012cb5daeb7180a054687\n[build-and-push-image] Copying config sha256:0c308464b19eaa9a01c3fdd6b63a043c160d4eea85e461bbbb7d01d168f6d993\n[build-and-push-image] Writing manifest to image destination\n[build-and-push-image] Storing signatures\n[build-and-push-image] STEP 2/2: COPY target/quarkus-app /deployments/\n[build-and-push-image] COMMIT quay.io/gitops-cookbook/tekton-greeter:latest\n[build-and-push-image] --> 42fe38b4346\n[build-and-push-image] Successfully tagged quay.io/gitops-cookbook/tekton-greeter:latest\n[build-and-push-image] 42fe38b43468c3ca32262dbea6fd78919aba2bd35981cd4f71391e07786c9e21\n[build-and-push-image] Getting image source signatures\n[build-and-push-image] Copying blob sha256:647a854c512bad44709221b6b0973e884f29bcb5a380ee32e95bfb0189b620e6\n[build-and-push-image] Copying blob sha256:f2ee6b2834726167d0de06f3bbe65962aef79855c5ede0d2ba93b4408558d9c9\n[build-and-push-image] Copying blob sha256:8e0e04b5c700a86f4a112f41e7e767a9d7c539fe3391611313bf76edb07eeab1\n[build-and-push-image] Copying blob sha256:69c55192bed92cbb669c88eb3c36449b64ac93ae466abfff2a575273ce05a39e\n[build-and-push-image] Copying config sha256:42fe38b43468c3ca32262dbea6fd78919aba2bd35981cd4f71391e07786c9e21\n[build-and-push-image] Writing manifest to image destination\n[build-and-push-image] Storing signatures\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  name: kubectl\nspec:\n  params:\n    - name: SCRIPT\n      description: The kubectl CLI arguments to run\n      type: string\n      default: \"kubectl help\"\n  steps:\n    - name: oc\n      image: quay.io/openshift/origin-cli:latest ![1](assets/1.png)\n      script: |\n        #!/usr/bin/env bash\n\n        $(params.SCRIPT)\n```", "```\nkubectl create -f kubectl-task.yaml\n```", "```\ntask.tekton.dev/kubectl created\n```", "```\nkubectl create serviceaccount tekton-deployer-sa\n```", "```\nserviceaccount/tekton-deployer-sa created\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: task-role\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n      - services\n      - endpoints\n      - configmaps\n      - secrets\n    verbs:\n      - \"*\"\n  - apiGroups:\n      - apps\n    resources:\n      - deployments\n      - replicasets\n    verbs:\n      - \"*\"\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - apps\n    resources:\n      - replicasets\n    verbs:\n      - get\n```", "```\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: task-role-binding\nroleRef:\n  kind: Role\n  name: task-role\n  apiGroup: rbac.authorization.k8s.io\nsubjects:\n  - kind: ServiceAccount\n    name: tekton-deployer-sa\n```", "```\nkubectl create -f task-role.yaml\nkubectl create -f task-role-binding.yaml\n```", "```\nrole.rbac.authorization.k8s.io/task-role created\nrolebinding.rbac.authorization.k8s.io/task-role-binding created\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n  name: kubectl-taskrun\nspec:\n  serviceAccountName: tekton-deployer-sa\n  taskRef:\n    name: kubectl\n  params:\n    - name: SCRIPT\n      value: |\n        kubectl create deploy tekton-greeter --image=quay.io/gitops-cookbook/tekton-greeter:latest\n```", "```\nkubectl create -f kubectl-taskrun.yaml\n```", "```\ntaskrun.tekton.dev/kubectl-run created\n```", "```\ntkn taskrun logs kubectl-run -f\n```", "```\n? Select taskrun: kubectl-run started 9 seconds ago\n[oc] deployment.apps/tekton-greeter created\n```", "```\nkubectl get deploy\n\nNAME             READY   UP-TO-DATE   AVAILABLE   AGE\ntekton-greeter   1/1     1            0           30s\n```", "```\nkubectl expose deploy/tekton-greeter --port 8080\nkubectl port-forward svc/tekton-greeter 8080:8080\n```", "```\ncurl localhost:8080\n```", "```\nMeeow!! from Tekton ----\n```", "```\nkubectl patch serviceaccount tekton-deployer-sa \\\n  -p '{\"secrets\": [{\"name\": \"container-registry-secret\"}]}'\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: tekton-greeter-pipeline\nspec:\n  params: ![1](assets/1.png)\n    - name: GIT_REPO\n      type: string\n    - name: GIT_REF\n      type: string\n    - name : DESTINATION_IMAGE\n      type: string\n    - name : SCRIPT\n      type: string\n  tasks: ![2](assets/2.png)\n    - name: build-push-app\n      taskRef: ![3](assets/3.png)\n        name: build-push-app\n      params:\n        - name: url\n          value: \"$(params.GIT_REPO)\"\n        - name: revision\n          value: \"$(params.GIT_REF)\"\n        - name: destinationImage\n          value: \"$(params.DESTINATION_IMAGE)\"\n      workspaces:\n        - name: source\n    - name: deploy-app\n      taskRef:\n        name: kubectl\n      params:\n        - name: SCRIPT\n          value: \"$(params.SCRIPT)\"\n      workspaces:\n        - name: source\n      runAfter: ![4](assets/4.png)\n        - build-push-app\n  workspaces: ![5](assets/5.png)\n    - name: source\n```", "```\nkubectl create -f tekton-greeter-pipeline.yaml\n```", "```\npipeline.tekton.dev/tekton-greeter-pipeline created\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: PipelineRun\nmetadata:\n  generateName: tekton-greeter-pipeline-run-\nspec:\n  params:\n  - name: GIT_REPO\n    value: https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n  - name: GIT_REF\n    value: \"master\"\n  - name: DESTINATION_IMAGE\n    value: \"quay.io/gitops-cookbook/tekton-greeter:latest\"\n  - name: SCRIPT\n    value: |\n        kubectl create deploy tekton-greeter --image=quay.io/gitops-cookbook/tekton-greeter:latest\n  pipelineRef:\n    name: tekton-greeter-pipeline\n  workspaces:\n    - name: source\n      emptyDir: {}\n```", "```\nkubectl create -f tekton-greeter-pipelinerun.yaml\n```", "```\ntkn pipelinerun ls\n```", "```\nNAME                                STARTED         DURATION   STATUS\ntekton-greeter-pipeline-run-ntl5r   7 seconds ago   ---        Running\n```", "```\ntkn hub install task git-clone\ntkn hub install task maven\ntkn hub install task buildah\ntkn hub install task kubernetes-actions\n```", "```\nTask git-clone(0.7) installed in default namespace\nTask maven(0.2) installed in default namespace\nTask buildah(0.4) installed in default namespace\nTask kubernetes-actions(0.2) installed in default namespace\n```", "```\nkubectl get tasks\n```", "```\nNAME                 AGE\n...\nbuildah              50s\ngit-clone            52s\nkubernetes-actions   49s\nmaven                51s\n...\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: app-source-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n```", "```\nkubectl create -f app-source-pvc.yaml\n```", "```\npersistentvolumeclaim/app-source-pvc created\n```", "```\nkubectl get pvc\n\nNAME             STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\napp-source-pvc   Bound    pvc-e85ade46-aaca-4f3f-b644-d8ff99fd9d5e   1Gi        RWO            standard       61s\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: tekton-greeter-pipeline-hub\nspec:\n  params:\n  - default: https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n    name: GIT_REPO\n    type: string\n  - default: master\n    name: GIT_REF\n    type: string\n  - default: quay.io/gitops-cookbook/tekton-greeter:latest\n    name: DESTINATION_IMAGE\n    type: string\n  - default: kubectl create deploy tekton-greeter --image=quay.io/gitops-cookbook/tekton-greeter:latest\n    name: SCRIPT\n    type: string\n  - default: ./Dockerfile\n    name: CONTEXT_DIR\n    type: string\n  - default: .\n    name: IMAGE_DOCKERFILE\n    type: string\n  - default: .\n    name: IMAGE_CONTEXT_DIR\n    type: string\n  tasks:\n  - name: fetch-repo\n    params:\n    - name: url\n      value: $(params.GIT_REPO)\n    - name: revision\n      value: $(params.GIT_REF)\n    - name: deleteExisting\n      value: \"true\"\n    - name: verbose\n      value: \"true\"\n    taskRef:\n      kind: Task\n      name: git-clone\n    workspaces:\n    - name: output\n      workspace: app-source\n  - name: build-app\n    params:\n    - name: GOALS\n      value:\n      - -DskipTests\n      - clean\n      - package\n    - name: CONTEXT_DIR\n      value: $(params.CONTEXT_DIR)\n    runAfter:\n    - fetch-repo\n    taskRef:\n      kind: Task\n      name: maven\n    workspaces:\n    - name: maven-settings\n      workspace: maven-settings\n    - name: source\n      workspace: app-source\n  - name: build-push-image\n    params:\n    - name: IMAGE\n      value: $(params.DESTINATION_IMAGE)\n    - name: DOCKERFILE\n      value: $(params.IMAGE_DOCKERFILE)\n    - name: CONTEXT\n      value: $(params.IMAGE_CONTEXT_DIR)\n    runAfter:\n    - build-app\n    taskRef:\n      kind: Task\n      name: buildah\n    workspaces:\n    - name: source\n      workspace: app-source\n  - name: deploy\n    params:\n    - name: script\n      value: $(params.SCRIPT)\n    runAfter:\n    - build-push-image\n    taskRef:\n      kind: Task\n      name: kubernetes-actions\n  workspaces:\n  - name: app-source\n  - name: maven-settings\n```", "```\nkubectl create -f tekton-greeter-pipeline-hub.yaml\n```", "```\ntkn pipeline start tekton-greeter-pipeline-hub \\\n  --serviceaccount='tekton-deployer-sa' \\\n  --param GIT_REPO='https://github.com/gitops-cookbook/tekton-tutorial-greeter.git' \\\n  --param GIT_REF='master' \\\n  --param CONTEXT_DIR='quarkus' \\\n  --param DESTINATION_IMAGE='quay.io/gitops-cookbook/tekton-greeter:latest' \\\n  --param IMAGE_DOCKERFILE='quarkus/Dockerfile' \\\n  --param IMAGE_CONTEXT_DIR='quarkus' \\\n  --param SCRIPT='kubectl create deploy tekton-greeter --image=quay.io/gitops-cookbook/tekton-greeter:latest' \\\n  --workspace name=app-source,claimName=app-source-pvc \\\n  --workspace name=maven-settings,emptyDir=\"\" \\\n  --use-param-defaults \\\n  --showlog\n```", "```\n[fetch-repo : clone] + CHECKOUT_DIR=/workspace/output/\n[fetch-repo : clone] + /ko-app/git-init '-url=https://github.com/gitops-cookbook/tekton-tutorial-greeter.git' '-revision=master' '-refspec=' '-path=/workspace/output/' '-sslVerify=true' '-submodules=true' '-depth=1' '-sparseCheckoutDirectories='\n[fetch-repo : clone] {\"level\":\"info\",\"ts\":1660819038.5526028,\"caller\":\"git/git.go:170\",\"msg\":\"Successfully cloned https://github.com/gitops-cookbook/tekton-tutorial-greeter.git @ d9291c456db1ce29177b77ffeaa9b71ad80a50e6 (grafted, HEAD, origin/master) in path /workspace/output/\"}\n[fetch-repo : clone] {\"level\":\"info\",\"ts\":1660819038.5722632,\"caller\":\"git/git.go:208\",\"msg\":\"Successfully initialized and updated submodules in path /workspace/output/\"}\n[fetch-repo : clone] + cd /workspace/output/\n[fetch-repo : clone] + git rev-parse HEAD\n[fetch-repo : clone] + RESULT_SHA=d9291c456db1ce29177b77ffeaa9b71ad80a50e6\n[fetch-repo : clone] + EXIT_CODE=0\n[fetch-repo : clone] + '[' 0 '!=' 0 ]\n[fetch-repo : clone] + printf '%s' d9291c456db1ce29177b77ffeaa9b71ad80a50e6\n[fetch-repo : clone] + printf '%s' https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\n...\n[build-app : mvn-goals] [INFO] [org.jboss.threads] JBoss Threads version 3.1.1.Final\n[build-app : mvn-goals] [INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 1296ms\n[build-app : mvn-goals] [INFO] ------------------------------------------------------------------------\n[build-app : mvn-goals] [INFO] BUILD SUCCESS\n[build-app : mvn-goals] [INFO] ------------------------------------------------------------------------\n[build-app : mvn-goals] [INFO] Total time:  03:18 min\n[build-app : mvn-goals] [INFO] Finished at: 2022-08-18T10:31:00Z\n[build-app : mvn-goals] [INFO] ------------------------------------------------------------------------\n[build-push-image : build] STEP 1/2: FROM registry.access.redhat.com/ubi8/openjdk-11\n[build-push-image : build] Trying to pull registry.access.redhat.com/ubi8/openjdk-11:latest...\n[build-push-image : build] Getting image source signatures\n[build-push-image : build] Checking if image destination supports signatures\n[build-push-image : build] Copying blob sha256:e441d34134fac91baa79be3e2bb8fb3dba71ba5c1ea012cb5daeb7180a054687\n[build-push-image : build] Copying blob sha256:1e09a5ee0038fbe06a18e7f355188bbabc387467144abcd435f7544fef395aa1\n[build-push-image : build] Copying blob sha256:0d725b91398ed3db11249808d89e688e62e511bbd4a2e875ed8493ce1febdb2c\n[build-push-image : build] Copying blob sha256:e441d34134fac91baa79be3e2bb8fb3dba71ba5c1ea012cb5daeb7180a054687\n[build-push-image : build] Copying blob sha256:1e09a5ee0038fbe06a18e7f355188bbabc387467144abcd435f7544fef395aa1\n[build-push-image : build] Copying blob sha256:0d725b91398ed3db11249808d89e688e62e511bbd4a2e875ed8493ce1febdb2c\n[build-push-image : build] Copying config sha256:0c308464b19eaa9a01c3fdd6b63a043c160d4eea85e461bbbb7d01d168f6d993\n[build-push-image : build] Writing manifest to image destination\n[build-push-image : build] Storing signatures\n[build-push-image : build] STEP 2/2: COPY target/quarkus-app /deployments/\n[build-push-image : build] COMMIT quay.io/gitops-cookbook/tekton-greeter:latest\n[build-push-image : build] --> c07e36a8e61\n[build-push-image : build] Successfully tagged quay.io/gitops-cookbook/tekton-greeter:latest\n[build-push-image : build] c07e36a8e6104d2e5c7d79a6cd34cd7b44eb093c39ef6c1487a37d7bd2305b8a\n[build-push-image : build] Getting image source signatures\n[build-push-image : build] Copying blob sha256:7853a7797845542e3825d4f305e4784ea7bf492cd4364fc93b9afba3ac0c9553\n[build-push-image : build] Copying blob sha256:8e0e04b5c700a86f4a112f41e7e767a9d7c539fe3391611313bf76edb07eeab1\n[build-push-image : build] Copying blob sha256:647a854c512bad44709221b6b0973e884f29bcb5a380ee32e95bfb0189b620e6\n[build-push-image : build] Copying blob sha256:69c55192bed92cbb669c88eb3c36449b64ac93ae466abfff2a575273ce05a39e\n[build-push-image : build] Copying config sha256:c07e36a8e6104d2e5c7d79a6cd34cd7b44eb093c39ef6c1487a37d7bd2305b8a\n[build-push-image : build] Writing manifest to image destination\n[build-push-image : build] Storing signatures\n[build-push-image : build] sha256:12dd3deb6305b9e125309b68418d0bb81f805e0fe7ac93942dc94764aee9f492quay.io/gitops-cookbook/tekton-greeter:latest\n[deploy : kubectl] deployment.apps/tekton-greeter created\n```", "```\nkubectl apply \\\n-f https://raw.githubusercontent.com/gitops-cookbook/chapters/main/chapters/ch06/rbac.yaml\n```", "```\nserviceaccount/tekton-triggers-sa created\nrolebinding.rbac.authorization.k8s.io/triggers-example-eventlistener-binding configured\nclusterrolebinding.rbac.authorization.k8s.io/triggers-example-eventlistener-clusterbinding configured\n```", "```\napiVersion: triggers.tekton.dev/v1alpha1\nkind: TriggerTemplate\nmetadata:\n  name: tekton-greeter-triggertemplate\nspec:\n  params:\n    - name: git-revision\n    - name: git-commit-message\n    - name: git-repo-url\n    - name: git-repo-name\n    - name: content-type\n    - name: pusher-name\n  resourcetemplates:\n    - apiVersion: tekton.dev/v1beta1\n      kind: PipelineRun\n      metadata:\n        labels:\n          tekton.dev/pipeline: tekton-greeter-pipeline-hub\n        name: tekton-greeter-pipeline-webhook-$(uid)\n      spec:\n        params:\n          - name: GIT_REPO\n            value: $(tt.params.git-repo-url)\n          - name: GIT_REF\n            value: $(tt.params.git-revision)\n        serviceAccountName: tekton-triggers-example-sa\n        pipelineRef:\n          name: tekton-greeter-pipeline-hub\n        workspaces:\n        - name: app-source\n          persistentVolumeClaim:\n            claimName: app-source-pvc\n        - name: maven-settings\n          emptyDir: {}\n```", "```\napiVersion: triggers.tekton.dev/v1alpha1\nkind: TriggerBinding\nmetadata:\n  name: tekton-greeter-triggerbinding\nspec:\n  params:\n  - name: git-repo-url\n    value: $(body.repository.clone_url)\n  - name: git-revision\n    value: $(body.after)\n```", "```\napiVersion: triggers.tekton.dev/v1alpha1\nkind: EventListener\nmetadata:\n  name: tekton-greeter-eventlistener\nspec:\n  serviceAccountName: tekton-triggers-example-sa\n  triggers:\n  - bindings:\n    - ref: tekton-greeter-triggerbinding\n    template:\n      ref: tekton-greeter-triggertemplate\n```", "```\nkubectl create -f tekton-greeter-triggertemplate.yaml\nkubectl create -f tekton-greeter-triggerbinding.yaml\nkubectl create -f tekton-greeter-eventlistener.yaml\n```", "```\ntriggertemplate.triggers.tekton.dev/tekton-greeter-triggertemplate created\ntriggerbinding.triggers.tekton.dev/tekton-greeter-triggerbinding created\neventlistener.triggers.tekton.dev/tekton-greeter-eventlistener created\n```", "```\nkubectl get pods\n```", "```\nNAME                                            READY  STATUS   RESTARTS AGE\nel-tekton-greeter-eventlistener-5db7b9fcf9-6nrgx  1/1  Running  0        10s\n```", "```\nkubectl get svc\n```", "```\nNAME                              TYPE        CLUSTER-IP      EXTERNAL-IP↳\n   PORT(S)             AGE\nel-tekton-greeter-eventlistener   ClusterIP   10.100.36.199   <none>     ↳\n   8080/TCP,9000/TCP   10s\n...\n```", "```\nkubectl port-forward svc/el-tekton-greeter-eventlistener 8080\n```", "```\ncurl -X POST \\\n  http://localhost:8080 \\\n  -H 'Content-Type: application/json' \\\n  -d '{ \"after\": \"d9291c456db1ce29177b77ffeaa9b71ad80a50e6\", \"repository\": { \"clone_url\" : \"https://github.com/gitops-cookbook/tekton-tutorial-greeter.git\" } }'\n```", "```\n{\"eventListener\":\"tekton-greeter-eventlistener\",\"namespace\":\"default\",\"eventListenerUID\":\"c00567eb-d798-4c4a-946d-f1732fdfc313\",\"eventID\":\"17dd25bb-a1fe-4f84-8422-c3abc5f10066\"}\n```", "```\ntkn pipelinerun ls\n```", "```\ntekton-greeter-pipeline-3244b67f-31d3-4597-af1c-3c1aa6693719   4 seconds ago   ---        Running\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Task\nmetadata:\n  annotations:\n    tekton.dev/pipelines.minVersion: 0.12.1\n    tekton.dev/tags: git\n  name: git-update-deployment\n  labels:\n    app.kubernetes.io/version: '0.2'\n    operator.tekton.dev/provider-type: community\nspec:\n  description: >-\n    This Task can be used to update image digest in a Git repo using kustomize.\n    It requires a secret with credentials for accessing the git repo.\n  params:\n    - name: GIT_REPOSITORY\n      type: string\n    - name: GIT_REF\n      type: string\n    - name: NEW_IMAGE\n      type: string\n    - name: NEW_DIGEST\n      type: string\n    - name: KUSTOMIZATION_PATH\n      type: string\n  results:\n    - description: The commit SHA\n      name: commit\n  steps:\n    - image: 'docker.io/alpine/git:v2.26.2'\n      name: git-clone\n      resources: {}\n      script: >\n        rm -rf git-update-digest-workdir\n\n        git clone $(params.GIT_REPOSITORY) -b $(params.GIT_REF)\n        git-update-digest-workdir\n      workingDir: $(workspaces.workspace.path)\n    - image: 'quay.io/wpernath/kustomize-ubi:latest'\n      name: update-digest\n      resources: {}\n      script: >\n        cd git-update-digest-workdir/$(params.KUSTOMIZATION_PATH)\n\n        kustomize edit set image $(params.NEW_IMAGE)@$(params.NEW_DIGEST)\n\n        echo \"##########################\"\n\n        echo \"### kustomization.yaml ###\"\n\n        echo \"##########################\"\n\n        cat kustomization.yaml\n      workingDir: $(workspaces.workspace.path)\n    - image: 'docker.io/alpine/git:v2.26.2'\n      name: git-commit\n      resources: {}\n      script: |\n        cd git-update-digest-workdir\n\n        git config user.email \"tektonbot@redhat.com\"\n        git config user.name \"My Tekton Bot\"\n\n        git status\n        git add $(params.KUSTOMIZATION_PATH)/kustomization.yaml\n        git commit -m \"[ci] Image digest updated\"\n\n        git push\n\n        RESULT_SHA=\"$(git rev-parse HEAD | tr -d '\\n')\"\n        EXIT_CODE=\"$?\"\n        if [ \"$EXIT_CODE\" != 0 ]\n        then\n          exit $EXIT_CODE\n        fi\n        # Make sure we don't add a trailing newline to the result!\n        echo -n \"$RESULT_SHA\" > $(results.commit.path)\n      workingDir: $(workspaces.workspace.path)\n  workspaces:\n    - description: The workspace consisting of maven project.\n      name: workspace\n```", "```\nkubectl create -f git-update-deployment-task.yaml\n```", "```\ntask.tekton.dev/git-update-deployment created\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: Pipeline\nmetadata:\n  name: pacman-pipeline\nspec:\n  params:\n  - default: https://github.com/gitops-cookbook/pacman-kikd.git\n    name: GIT_REPO\n    type: string\n  - default: master\n    name: GIT_REVISION\n    type: string\n  - default: quay.io/gitops-cookbook/pacman-kikd\n    name: DESTINATION_IMAGE\n    type: string\n  - default: .\n    name: CONTEXT_DIR\n    type: string\n  - default: 'https://github.com/gitops-cookbook/pacman-kikd-manifests.git'\n    name: CONFIG_GIT_REPO\n    type: string\n  - default: main\n    name: CONFIG_GIT_REVISION\n    type: string\n  tasks:\n  - name: fetch-repo\n    params:\n    - name: url\n      value: $(params.GIT_REPO)\n    - name: revision\n      value: $(params.GIT_REVISION)\n    - name: deleteExisting\n      value: \"true\"\n    taskRef:\n      name: git-clone\n    workspaces:\n    - name: output\n      workspace: app-source\n  - name: build-app\n    taskRef:\n      name: maven\n    params:\n      - name: GOALS\n        value:\n          - -DskipTests\n          - clean\n          - package\n      - name: CONTEXT_DIR\n        value: \"$(params.CONTEXT_DIR)\"\n    workspaces:\n      - name: maven-settings\n        workspace: maven-settings\n      - name: source\n        workspace: app-source\n    runAfter:\n      - fetch-repo\n  - name: build-push-image\n    taskRef:\n      name: buildah\n    params:\n    - name: IMAGE\n      value: \"$(params.DESTINATION_IMAGE)\"\n    workspaces:\n      - name: source\n        workspace: app-source\n    runAfter:\n      - build-app\n  - name: git-update-deployment\n    params:\n    - name: GIT_REPOSITORY\n      value: $(params.CONFIG_GIT_REPO)\n    - name: NEW_IMAGE\n      value: $(params.DESTINATION_IMAGE)\n    - name: NEW_DIGEST\n      value: $(tasks.build-push-image.results.IMAGE_DIGEST) ![1](assets/1.png)\n    - name: KUSTOMIZATION_PATH\n      value: env/dev\n    - name: GIT_REF\n      value: $(params.CONFIG_GIT_REVISION)\n    runAfter:\n      - build-push-image\n    taskRef:\n      kind: Task\n      name: git-update-deployment\n    workspaces:\n    - name: workspace\n      workspace: app-source\n  workspaces:\n    - name: app-source\n    - name: maven-settings\n```", "```\nkubectl create -f pacman-pipeline.yaml\n```", "```\npipeline.tekton.dev/pacman-pipeline created\n```", "```\nkubectl patch serviceaccount tekton-bot-sa -p '{\"secrets\": [{\"name\": \"git-secret\"}]}'\nkubectl patch serviceaccount tekton-bot-sa \\\n -p '{\"secrets\": [{\"name\": \"containerregistry-\nsecret\"}]}'\n```", "```\ntkn pipeline start pacman-pipeline \\\n  --serviceaccount='tekton-bot-sa' \\\n  --param GIT_REPO='https://github.com/gitops-cookbook/pacman-kikd.git' \\\n  --param GIT_REVISION='main' \\\n  --param DESTINATION_IMAGE='quay.io/gitops-cookbook/pacman-kikd:latest' \\\n  --param CONFIG_GIT_REPO='https://github.com/gitops-cookbook/pacman-kikd-manifests.git' \\\n  --param CONFIG_GIT_REVISION='main' \\\n  --workspace name=app-source,claimName=app-source-pvc \\\n  --workspace name=maven-settings,emptyDir=\"\" \\\n  --use-param-defaults \\\n  --showlog\n```", "```\ntkn hub install task helm-upgrade-from-repo\n```", "```\nhelm repo add gitops-cookbook https://gitops-cookbook.github.io/helm-charts/\n```", "```\n\"gitops-cookbook\" has been added to your repositories\n```", "```\nhelm install pacman gitops-cookbook/pacman\n```", "```\nNAME: pacman\nLAST DEPLOYED: Mon Aug 15 17:02:21 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nUSER-SUPPLIED VALUES:\n{}\n```", "```\nkubectl get pods -l=app.kubernetes.io/name=pacman\n```", "```\nNAME                      READY   STATUS    RESTARTS   AGE\npacman-6798d65d84-9mt8p   1/1     Running   0          30s\n```", "```\napiVersion: tekton.dev/v1beta1\nkind: TaskRun\nmetadata:\n  generateName: helm-pacman-run-\nspec:\n  serviceAccountName: tekton-deployer-sa ![1](assets/1.png)\n  taskRef:\n    name: helm-upgrade-from-repo\n  params:\n  - name: helm_repo\n    value: https://gitops-cookbook.github.io/helm-charts/\n  - name: chart_name\n    value: gitops-cookbook/pacman\n  - name: release_version\n    value: 0.1.0\n  - name: release_name\n    value: pacman\n  - name: overwrite_values\n    value: replicaCount=2 ![2](assets/2.png)\n```", "```\nkubectl create -f helm-pacman-taskrun.yaml\n```", "```\ntaskrun.tekton.dev/helm-pacman-run-qghx8 created\n```", "```\ntkn taskrun logs -f\n```", "```\n[upgrade-from-repo] current installed helm releases\n[upgrade-from-repo] NAME        NAMESPACE       REVISION        UPDATED                                         STATUS          CHART           APP VERSION\n[upgrade-from-repo] pacman      default         1               2022-08-15 17:02:21.633934129 +0200 +0200       deployed        pacman-0.1.0    1.0.0\n[upgrade-from-repo] parsing helms repo name...\n[upgrade-from-repo] adding helm repo...\n[upgrade-from-repo] \"gitops-cookbook\" has been added to your repositories\n[upgrade-from-repo] adding updating repo...\n[upgrade-from-repo] Hang tight while we grab the latest from your chart repositories...\n[upgrade-from-repo] ...Successfully got an update from the \"gitops-cookbook\" chart repository\n[upgrade-from-repo] Update Complete. ⎈Happy Helming!⎈\n[upgrade-from-repo] installing helm chart...\n[upgrade-from-repo] history.go:56: [debug] getting history for release pacman\n[upgrade-from-repo] upgrade.go:123: [debug] preparing upgrade for pacman\n[upgrade-from-repo] upgrade.go:131: [debug] performing update for pacman\n[upgrade-from-repo] upgrade.go:303: [debug] creating upgraded release for pacman\n[upgrade-from-repo] client.go:203: [debug] checking 2 resources for changes\n[upgrade-from-repo] client.go:466: [debug] Looks like there are no changes for Service \"pacman\"\n[upgrade-from-repo] wait.go:47: [debug] beginning wait for 2 resources with timeout of 5m0s\n[upgrade-from-repo] ready.go:277: [debug] Deployment is not ready: default/pacman. 1 out of 2 expected pods are ready\n[upgrade-from-repo] ready.go:277: [debug] Deployment is not ready: default/pacman. 1 out of 2 expected pods are ready\n[upgrade-from-repo] ready.go:277: [debug] Deployment is not ready: default/pacman. 1 out of 2 expected pods are ready\n[upgrade-from-repo] upgrade.go:138: [debug] updating status for upgraded release for pacman\n[upgrade-from-repo] Release \"pacman\" has been upgraded. Happy Helming!\n[upgrade-from-repo] NAME: pacman\n[upgrade-from-repo] LAST DEPLOYED: Mon Aug 15 15:23:31 2022\n[upgrade-from-repo] NAMESPACE: default\n[upgrade-from-repo] STATUS: deployed\n[upgrade-from-repo] REVISION: 2\n[upgrade-from-repo] TEST SUITE: None\n[upgrade-from-repo] USER-SUPPLIED VALUES:\n[upgrade-from-repo] replicaCount: 2\n[upgrade-from-repo]\n[upgrade-from-repo] COMPUTED VALUES:\n[upgrade-from-repo] image:\n[upgrade-from-repo]   containerPort: 8080\n[upgrade-from-repo]   pullPolicy: Always\n[upgrade-from-repo]   repository: quay.io/gitops-cookbook/pacman-kikd\n[upgrade-from-repo]   tag: 1.0.0\n[upgrade-from-repo] replicaCount: 2\n[upgrade-from-repo] securityContext: {}\n[upgrade-from-repo]\n[upgrade-from-repo] HOOKS:\n[upgrade-from-repo] MANIFEST:\n[upgrade-from-repo] ---\n[upgrade-from-repo] # Source: pacman/templates/service.yaml\n[upgrade-from-repo] apiVersion: v1\n[upgrade-from-repo] kind: Service\n[upgrade-from-repo] metadata:\n[upgrade-from-repo]   labels:\n[upgrade-from-repo]     app.kubernetes.io/name: pacman\n[upgrade-from-repo]   name: pacman\n[upgrade-from-repo] spec:\n[upgrade-from-repo]   ports:\n[upgrade-from-repo]     - name: http\n[upgrade-from-repo]       port: 8080\n[upgrade-from-repo]       targetPort: 8080\n[upgrade-from-repo]   selector:\n[upgrade-from-repo]     app.kubernetes.io/name: pacman\n[upgrade-from-repo] ---\n[upgrade-from-repo] # Source: pacman/templates/deployment.yaml\n[upgrade-from-repo] apiVersion: apps/v1\n[upgrade-from-repo] kind: Deployment\n[upgrade-from-repo] metadata:\n[upgrade-from-repo]   name: pacman\n[upgrade-from-repo]   labels:\n[upgrade-from-repo]     app.kubernetes.io/name: pacman\n[upgrade-from-repo]     app.kubernetes.io/version: \"1.0.0\"\n[upgrade-from-repo] spec:\n[upgrade-from-repo]   replicas: 2\n[upgrade-from-repo]   selector:\n[upgrade-from-repo]     matchLabels:\n[upgrade-from-repo]       app.kubernetes.io/name: pacman\n[upgrade-from-repo]   template:\n[upgrade-from-repo]     metadata:\n[upgrade-from-repo]       labels:\n[upgrade-from-repo]         app.kubernetes.io/name: pacman\n[upgrade-from-repo]     spec:\n[upgrade-from-repo]       containers:\n[upgrade-from-repo]           - image: \"quay.io/gitops-cookbook/pacman-kikd:1.0.0\"\n[upgrade-from-repo]             imagePullPolicy: Always\n[upgrade-from-repo]             securityContext:\n[upgrade-from-repo]               {}\n[upgrade-from-repo]             name: pacman\n[upgrade-from-repo]             ports:\n[upgrade-from-repo]               - containerPort: 8080\n[upgrade-from-repo]                 name: http\n[upgrade-from-repo]                 protocol: TCP\n[upgrade-from-repo]\n```", "```\nkubectl get deploy -l=app.kubernetes.io/name=pacman\n```", "```\npacman              2/2     2            2           9s\n```", "```\nbrew tap drone/drone && brew install drone\n```", "```\nexport DRONE_TOKEN=\"<YOUR-TOKEN>\"\n```", "```\ndrone info\n```", "```\ndrone repo enable https://github.com/gitops-cookbook/pacman-kikd.git\n```", "```\ndrone secret add --name image_registry \\\n--data quay.io https://github.com/gitops-cookbook/pacman-kikd.git\n\ndrone secret add --name image_registry_user \\\n--data YOUR_REGISTRY_USER https://github.com/gitops-cookbook/pacman-kikd.git\n\ndrone secret add --name image_registry_password \\\n--data YOUR_REGISTRY_PASS https://github.com/gitops-cookbook/pacman-kikd.git\n\ndrone secret add --name destination_image \\\n--data quay.io/YOUR_REGISTRY_USER>/pacman-kikd.git https://github.com/gitops-cookbook/pacman-kikd.git\n```", "```\nkind: pipeline\ntype: docker\nname: java-pipeline\nplatform:\n  os: linux\n  arch: arm64\ntrigger:\n  branch:\n    - main\nclone:\n  disable: true\nsteps:\n  - name: clone sources\n    image: alpine/git\n    pull: if-not-exists\n    commands:\n      - git clone https://github.com/gitops-cookbook/pacman-kikd.git .\n      - git checkout $DRONE_COMMIT\n  - name: maven-build\n    image: maven:3-jdk-11\n    commands:\n      - mvn install -DskipTests=true -B\n      - mvn test -B\n  - name: publish\n    image: plugins/docker:20.13\n    pull: if-not-exists\n    settings:\n      tags: \"latest\"\n      dockerfile: Dockerfile\n      insecure: true\n      mtu: 1400\n      username:\n        from_secret: image_registry_user\n      password:\n        from_secret: image_registry_password\n      registry:\n        from_secret: image_registry\n      repo:\n        from_secret: destination_image\n```", "```\ndrone exec --pipeline=java-pipeline\n```", "```\n# This is a basic workflow to help you get started with Actions\n\nname: pacman-ci-action ![1](assets/1.png)\n\nenv: ![2](assets/2.png)\n  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}\n  REGISTRY_USER: ${{ github.actor }}\n  REGISTRY_PASSWORD: ${{ github.token }}\n  APP_NAME: pacman\n  IMAGE_TAGS: 1.0.0 ${{ github.sha }}\n\n# Controls when the workflow will run\non:\n  # Triggers the workflow on push or pull request events but only for the\n  # \"main\" branch\n  push: ![3](assets/3.png)\n    branches: [ \"main\" ]\n  pull_request:\n    branches: [ \"main\" ]\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in\n# parallel\njobs:\n  # This workflow contains a single job called \"build-and-push\"\n  build-and-push: ![4](assets/4.png)\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the\n    # job\n    steps: ![5](assets/5.png)\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can\n      # access it\n      - uses: actions/checkout@v3\n\n      - name: Set up JDK 11\n        uses: actions/setup-java@v3\n        with:\n          java-version: '11'\n          distribution: 'adopt'\n          cache: maven\n\n      - name: Build with Maven\n        run: mvn --batch-mode package\n\n      - name: Buildah Action ![6](assets/6.png)\n        id: build-image\n        uses: redhat-actions/buildah-build@v2\n        with:\n          image: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}\n          tags: ${{ env.IMAGE_TAGS }}\n          containerfiles: |\n            ./Dockerfile\n      - name: Push to Registry ![7](assets/7.png)\n        id: push-to-registry\n        uses: redhat-actions/push-to-registry@v2\n        with:\n          image: ${{ steps.build-image.outputs.image }}\n          tags: ${{ steps.build-image.outputs.tags }}\n          registry: ${{ env.IMAGE_REGISTRY }}\n          username: ${{ env.REGISTRY_USER }}\n          password: ${{ env.REGISTRY_PASSWORD }}\n```"]