- en: Chapter 3\. Learning to Use the Kubernetes Client
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章。学习使用 Kubernetes 客户端
- en: This chapter gathers recipes around the basic usage of the Kubernetes CLI, `kubectl`.
    See [Chapter 1](ch01.html#ch_getting_started) for how to install the CLI tool;
    for advanced use cases, see [Chapter 7](ch07.html#ch_kube_api), where we show
    how to use the Kubernetes API.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章汇集了围绕 Kubernetes CLI `kubectl` 的基本用法的实用技巧。请参阅 [第一章](ch01.html#ch_getting_started)
    了解如何安装 CLI 工具；对于高级用例，请参阅 [第七章](ch07.html#ch_kube_api)，我们将展示如何使用 Kubernetes API。
- en: 3.1 Listing Resources
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.1 列出资源
- en: Problem
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to list Kubernetes resources of a certain kind.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要列出特定类型的 Kubernetes 资源。
- en: Solution
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use the `get` verb of `kubectl` along with the resource type. To list all pods,
    do this:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubectl`的`get`动词，加上资源类型。要列出所有 pod，请执行以下操作：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To list all services and deployments (note that there is no space after the
    comma), do this:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有服务和部署（请注意逗号后面没有空格），请执行以下操作：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To list a specific deployment, do this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出特定部署，请执行以下操作：
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To list all resources, do this:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有资源，请执行以下操作：
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that `kubectl get` is a very basic but extremely useful command to get
    a quick overview what is going on in the cluster—​it’s essentially the equivalent
    to `ps` on Unix.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`kubectl get`是一个非常基本但极其有用的命令，可以快速查看集群中的情况——它本质上相当于 Unix 上的 `ps` 命令。
- en: Discussion
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: We strongly recommend enabling autocompletion to avoid having to remember all
    the Kubernetes resource names. Head to [Recipe 12.1](ch12.html#kubectl_autocomplete)
    for details on how to do this.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议启用自动完成功能，以避免记住所有 Kubernetes 资源名称。请参阅 [Recipe 12.1](ch12.html#kubectl_autocomplete)
    获取详细信息。
- en: 3.2 Deleting Resources
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.2 删除资源
- en: Problem
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You no longer need resources and want to get rid of them.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你不再需要资源并希望摆脱它们。
- en: Solution
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use the `delete` verb of `kubectl` along with the type and name of the resource
    you want to delete.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`kubectl`的`delete`动词，加上你想要删除的资源的类型和名称。
- en: 'To delete all resources in the namespace `my-app`, as well as the namespace
    itself, do this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除命名空间`my-app`中的所有资源，以及命名空间本身，请执行以下操作：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Note that you cannot delete the `default` namespace in Kubernetes. This is
    another reason why it is worth creating your own namespaces, as it can be much
    easier to clean up the environment. Having said that, you can still delete all
    objects in a namespace, such as the `default` namespace, with the following command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，在 Kubernetes 中你不能删除`default`命名空间。这也是创建自己命名空间的一个好理由，因为这样清理环境会更容易。话虽如此，你仍然可以通过以下命令删除`default`命名空间中的所有对象：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you’re wondering how to create a namespace, see [Recipe 7.3](ch07.html#namespace).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果想知道如何创建命名空间，请参阅 [Recipe 7.3](ch07.html#namespace)。
- en: 'You can also delete specific resources and/or influence the process by which
    they are destroyed. To delete services and deployments labeled with `app=niceone`,
    do this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以删除特定资源和/或影响它们被销毁的过程。要删除标记有`app=niceone`的服务和部署，请执行以下操作：
- en: '[PRE6]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To force deletion of a pod named `hangingpod`, do this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要强制删除名为`hangingpod`的 pod，请执行以下操作：
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To delete all pods in the namespace `test`, do this:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除命名空间`test`中的所有 pod，请执行以下操作：
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Discussion
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Do not delete supervised objects such as pods or replica sets that are directly
    controlled by a deployment. Rather, kill their supervisors or use dedicated operations
    to get rid of the managed resources. For example, if you scale a deployment to
    zero replicas (see [Recipe 9.1](ch09.html#scaling-deployments)), then you effectively
    delete all the pods it looks after.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 不要删除由部署直接控制的监督对象，如 pod 或副本集。相反，终止它们的监督或使用专门的操作来摆脱托管资源。例如，如果将部署的副本数缩减至零（参见 [Recipe
    9.1](ch09.html#scaling-deployments)），那么你有效地删除了它管理的所有 pod。
- en: Another aspect to take into account is cascading versus direct deletion—​for
    example, when you delete a custom resource definition (CRD), as shown in [Recipe
    15.4](ch15.html#writing_crd), all its dependent objects are deleted too. To learn
    more about how to influence the cascading deletion policy, read [Garbage Collection](https://oreil.ly/8AcpW)
    in the Kubernetes documentation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要考虑的方面是级联删除与直接删除的区别——例如，当你删除自定义资源定义（CRD）时，如 [Recipe 15.4](ch15.html#writing_crd)
    中所示，其依赖对象也会被删除。要了解如何影响级联删除策略，请阅读 Kubernetes 文档中的 [垃圾回收](https://oreil.ly/8AcpW)。
- en: 3.3 Watching Resource Changes with kubectl
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.3 使用 kubectl 监视资源变更
- en: Problem
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to watch the changes to Kubernetes objects in an interactive manner
    in the terminal.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你希望在终端中以交互方式观察 Kubernetes 对象的变更。
- en: Solution
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'The `kubectl` command has a `--watch` option that gives you this behavior.
    For example, to watch pods, do this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubectl` 命令有一个 `--watch` 选项，可以实现这种行为。例如，要监视 Pods，请执行以下操作：'
- en: '[PRE9]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note that this is a blocking and auto-updating command, akin to `top`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这是一个阻塞和自动更新的命令，类似于 `top`。
- en: Discussion
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'The `--watch` option is useful, but some prefer the formatting of the output
    from the [`watch` command](https://oreil.ly/WPueN), as in:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`--watch` 选项很有用，但有些人更喜欢来自 [`watch` 命令](https://oreil.ly/WPueN) 的输出格式，例如：'
- en: '[PRE10]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 3.4 Editing Objects with kubectl
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.4 使用 kubectl 编辑对象
- en: Problem
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to update the properties of a Kubernetes object.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要更新 Kubernetes 对象的属性。
- en: Solution
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use the `edit` verb of `kubectl` along with the object type:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `kubectl` 的 `edit` 命令以及对象类型：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now edit the `nginx` pod in your editor—​for example, add a new label called
    `mylabel` with the value `true`. Once you save, you’ll see something like this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在编辑器中编辑 `nginx` 的 Pod —— 例如，添加一个名为 `mylabel` 值为 `true` 的新标签。保存后，你会看到类似这样的输出：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Discussion
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: 'If your editor isn’t opening or you want to specify which editor should be
    used, set the `EDITOR` or `KUBE_EDITOR` environment variable to the name of the
    editor you’d like to use. For example:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的编辑器无法打开，或者你想指定使用哪个编辑器，请将 `EDITOR` 或 `KUBE_EDITOR` 环境变量设置为你希望使用的编辑器名称。例如：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Also be aware that not all changes trigger an object update.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同样要注意，并非所有更改都会触发对象更新。
- en: Some triggers have shortcuts; for example, if you want to change the image version
    a deployment uses, simply use `kubectl set image`, which updates the existing
    container images of resources (valid for deployments, replica sets/replication
    controllers, daemon sets, jobs, and simple pods).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有些触发器有快捷方式；例如，如果你想要更改 Deployment 使用的镜像版本，只需使用 `kubectl set image`，它会更新资源（适用于
    Deployments、ReplicaSets/Replication Controllers、DaemonSets、Jobs 和简单 Pods）的现有容器镜像。
- en: 3.5 Asking kubectl to Explain Resources and Fields
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.5 请求 kubectl 解释资源和字段
- en: Problem
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to gain a deeper understanding of a certain resource—for example, a
    `Service`—and/or understand what exactly a certain field in a Kubernetes manifest
    means, including default values and if it’s required or optional.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你想更深入地了解某个资源，例如一个 `Service`，和/或者准确理解 Kubernetes 清单中某个字段的含义，包括默认值以及是否必填或可选。
- en: Solution
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use the `explain` verb of `kubectl`:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `kubectl` 的 `explain` 命令：
- en: '[PRE14]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Discussion
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: The [`kubectl explain`](https://oreil.ly/chI_-) command pulls the descriptions
    of resources and fields from the [Swagger/OpenAPI definitions](https://oreil.ly/19vi3),
    exposed by the API server.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '[`kubectl explain`](https://oreil.ly/chI_-) 命令从 API 服务器公开的 [Swagger/OpenAPI
    定义](https://oreil.ly/19vi3) 中提取资源和字段的描述信息。'
- en: You can think of `kubectl explain` as a way to describe the structure of Kubernetes
    resources, whereas `kubectl describe` is a way to describe the values of objects,
    which are instances of those structured resources.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把 `kubectl explain` 看作是描述 Kubernetes 资源结构的一种方式，而 `kubectl describe` 则是描述对象值的一种方式，它们是这些结构化资源的实例。
- en: See Also
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Ross Kukulinski’s blog post, [“kubectl explain — #HeptioProTip”](https://oreil.ly/LulwG)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ross Kukulinski 的博客文章，[“kubectl explain — #HeptioProTip”](https://oreil.ly/LulwG)
