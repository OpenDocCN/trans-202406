["```\n$ cd /bin\n$ ls -l bash cat ls grep\n-rwxr-xr-x 1 root root 1113504 Jun  6  2019 bash\n-rwxr-xr-x 1 root root   35064 Jan 18  2018 cat\n-rwxr-xr-x 1 root root  219456 Sep 18  2019 grep\n-rwxr-xr-x 1 root root  133792 Jan 18  2018 ls\n```", "```\n$ cat /etc/shells\n/bin/sh\n/bin/bash\n/bin/csh\n/bin/zsh\n```", "```\n$ echo $SHELL\n/bin/bash\n```", "```\n#!/bin/bash\n# Print a prompt\necho -n '$ '\n# Read the user's input in a loop. Exit when the user presses Ctrl-D.\nwhile read line; do\n # Ignore the input $line and print a message\n echo \"I'm sorry, I'm afraid I can't do that\"\n # Print the next prompt\n echo -n '$ '\ndone\n```", "```\n$ bash\n```", "```\n$\n```", "```\n$ PS1=\"%% \"\n%% ls                                 *The prompt has changed*\nanimals.txt\n%% echo \"This is a new shell\"\nThis is a new shell\n```", "```\n%% exit\n$\n```", "```\n#!/bin/bash\ncd /etc\necho \"Here is my current directory:\"\npwd\n```", "```\n$ chmod +x cdtest\n```", "```\n$ pwd\n/home/smith\n$ ./cdtest\nHere is my current directory:\n/etc\n```", "```\n$ pwd\n/home/smith\n```", "```\n$ cut -f1 grades | sort | uniq -c | sort -nr | head -n1 | cut -c9\n```", "```\n$ printenv | sort -i | less\n⋮\nDISPLAY=:0\nEDITOR=emacs\nHOME=/home/smith\nLANG=en_US.UTF-8\nPWD=/home/smith/Music\nSHELL=/bin/bash\nTERM=xterm-256color\nUSER=smith\n⋮\n```", "```\n$ title=\"Efficient Linux\"\n$ echo $title\nEfficient Linux\n$ printenv title                               *(produces no output)*\n```", "```\n$ MY_VARIABLE=10                  *A local variable*\n$ export MY_VARIABLE              *Export it to become an environment variable*\n$ export ANOTHER_VARIABLE=20      *Or, set and export in a single command*\n```", "```\n$ export E=\"I am an environment variable\"     *Set an environment variable*\n$ L=\"I am just a local variable\"              *Set a local variable*\n$ echo $E\nI am an environment variable\n$ echo $L\nI am just a local variable\n$ bash                                        *Run a child shell*\n$ echo $E                                     *Environment variable was copied*\nI am an environment variable\n$ echo $L                                     *Local variable was not copied*\n                                              *Empty string is printed*\n$ exit                                        *Exit the child shell*\n```", "```\n$ export E=\"I am the original value\"          *Set an environment variable*\n$ bash                                        *Run a child shell*\n$ echo $E\nI am the original value                       *Parent's value was copied*\n$ E=\"I was modified in a child\"               *Change the child's copy*\n$ echo $E\nI was modified in a child\n$ exit                                        *Exit the child shell*\n$ echo $E\nI am the original value                       *Parent's value is unchanged*\n```", "```\n$ alias                        *List aliases*\nalias gd='pushd'\nalias l='ls -CF'\nalias pd='popd'\n$ bash --norc                  *Run a child shell and ignore bashrc files*\n$ alias                        *List aliases - none are known*\n$ echo $HOME                   *Environment variables are known*\n/home/smith\n$ exit                         *Exit the child shell*\n```", "```\n$ (ls -l)                                      *Launches ls -l in a subshell*\n-rw-r--r-- 1 smith smith 325 Oct 13 22:19 animals.txt\n$ (alias)                                      *View aliases in a subshell*\nalias gd=*pushd*\nalias l=*ls -CF*\nalias pd=*popd*\n⋮\n$ (l)                                          *Run an alias from the parent*\nanimals.txt\n```", "```\n$ echo $BASH_SUBSHELL         *Check the current shell*\n0                             *Not a subshell*\n$ bash                        *Run a child shell*\n$ echo $BASH_SUBSHELL         *Check the child shell*\n0                             *Not a subshell*\n$ exit                        *Exit the child shell*\n$ (echo $BASH_SUBSHELL)       *Run an explicit subshell*\n1                             *Yes, it's a subshell*\n```", "```\n# Place in $HOME/.bash_profile or other personal startup file\nif [ -f \"$HOME/.bashrc\" ]\nthen\n  source \"$HOME/.bashrc\"\nfi\n```", "```\n$ source ~/.bash_profile             *Uses the builtin \"source\" command*\n$ . ~/.bash_profile                  *Uses a dot*\n```"]