["```\ndocker run -it --rm -d --name web -p 8080:80 \\\n  -v ~/site-content:/usr/share/nginx/html nginx\n\n```", "```\ndocker volume create site-content\n```", "```\ndocker run -it --rm -d --name web \\\n  -v site-content:/usr/share/nginx/html:ro nginx\n\n```", "```\ndocker run -it --rm -d --name web â€”-tmpfs /var/log/nginx nginx\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-app\n    image: nginx\n    volumeMounts:\n    - name: web-data\n      mountPath: /app/config\n  volumes:\n  - name: web-data\n```", "```\nkubectl apply -f nginx-pod.yaml\n```", "```\nkubectl get pod my-pod -o yaml | grep -A 5 \"  volumes:\"\n```", "```\n  volumes:\n  - emptyDir: {}\n    name: web-data\n  - name: default-token-2fp89\n    secret:\n      defaultMode: 420\n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-volume\nspec:\n  capacity:\n    storage: 3Gi\n  accessModes:\n    - ReadWriteOnce\n  local:\n    path: /app/data\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: kubernetes.io/hostname\n          operator: In\n          values:\n          - node1\n```", "```\nkubectl describe pv my-volume\nName:              my-volume\nLabels:            <none>\nAnnotations:       <none>\nFinalizers:        [kubernetes.io/pv-protection]\nStorageClass:\nStatus:            Available\nClaim:\nReclaim Policy:    Retain\nAccess Modes:      RWO\nVolumeMode:        Filesystem\nCapacity:          3Gi\nNode Affinity:\n  Required Terms:\n    Term 0:        kubernetes.io/hostname in [node1]\nMessage:\nSource:\n    Type:  LocalVolume (a persistent volume backed by local storage on a node)\n    Path:  /app/data\nEvents:    <none>\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-claim\nspec:\n  storageClassName: \"\"\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    volumeMounts:\n    - mountPath: \"/app/data\"\n      name: my-volume\n  volumes:\n  - name: my-volume\n    persistentVolumeClaim:\n      claimName: my-claim\n```", "```\nkubectl describe pvc my-claim\nName:          my-claim\nNamespace:     default\nStorageClass:\nStatus:        Bound\nVolume:        my-volume\nLabels:        <none>\nAnnotations:   pv.kubernetes.io/bind-completed: yes\n               pv.kubernetes.io/bound-by-controller: yes\nFinalizers:    [kubernetes.io/pvc-protection]\nCapacity:      3Gi\nAccess Modes:  RWO\nVolumeMode:    Filesystem\nMounted By:    <none>\nEvents:        <none>\n```", "```\nset GH_LINK=https://raw.githubusercontent.com\nkubectl apply -f \\\n  $GH_LINK/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml\n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: local-path\nprovisioner: rancher.io/local-path\nvolumeBindingMode: WaitForFirstConsumer\nreclaimPolicy: Delete\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-local-path-claim\nspec:\n  storageClassName: local-path\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n```"]