["```\n$ sudo apt-get remove docker docker.io containerd runc\n$ sudo apt-get remove docker-engine\n```", "```\n$ sudo apt-get update\n$ sudo apt-get install \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n$ sudo mkdir -p /etc/apt/keyrings\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg |\\\n    sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n$ sudo chmod a+r /etc/apt/keyrings/docker.gpg\n$ echo \\\n    \"deb [arch=$(dpkg --print-architecture) \\\n signed-by=/etc/apt/keyrings/docker.gpg] \\\n https://download.docker.com/linux/ubuntu \\\n $(lsb_release -cs) stable\" |\\\n    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n```", "```\n$ sudo apt-get update\n$ sudo apt-get install \\\n    docker-ce \\\n    docker-ce-cli \\\n    containerd.io \\\n    docker-compose-plugin\n```", "```\n$ sudo dnf remove -y \\\n    docker \\\n    docker-client \\\n    docker-client-latest \\\n    docker-common \\\n    docker-latest \\\n    docker-latest-logrotate \\\n    docker-logrotate \\\n    docker-selinux \\\n    docker-engine-selinux \\\n    docker-engine\n```", "```\n$ sudo dnf -y install dnf-plugins-core\n$ sudo dnf config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/fedora/docker-ce.repo\n```", "```\n$ sudo dnf install -y \\\n    docker-ce \\\n    docker-ce-cli \\\n    containerd.io \\\n    docker-compose-plugin\n```", "```\n$ sudo systemctl enable docker\n```", "```\n$ sudo systemctl start docker\n```", "```\n$ mkdir docker-host\n$ cd docker-host\n```", "```\nputs (<<-EOT)\n -----------------------------------------------------------------\n [WARNING] This exposes an unencrypted Docker TCP port on the VM!!\n\n This is NOT secure and may expose your system to significant risk\n if left running and exposed to the broader network.\n -----------------------------------------------------------------\n\nEOT\n\n$script = <<-SCRIPT\necho \\'{\"hosts\": [\"tcp://0.0.0.0:2375\", \"unix:///var/run/docker.sock\"]}\\' | \\\nsudo tee /etc/docker/daemon.json\nsudo mkdir -p /etc/systemd/system/docker.service.d\necho -e \\\"[Service]\\nExecStart=\\nExecStart=/usr/bin/dockerd\\\" | \\\nsudo tee /etc/systemd/system/docker.service.d/docker.conf\nsudo systemctl daemon-reload\nsudo systemctl restart docker\nSCRIPT\n\nVagrant.configure(2) do |config|\n\n  # Pick a compatible Vagrant Box\n  config.vm.box = 'bento/ubuntu-20.04'\n\n  # Install Docker if it is not already on the VM image\n  config.vm.provision :docker\n\n  # Configure Docker to listen on an unencrypted local port\n  config.vm.provision \"shell\",\n    inline: $script,\n    run: \"always\"\n\n  # Port-forward the Docker port to\n  # 12375 (or another open port) on our host machine\n  config.vm.network \"forwarded_port\",\n    guest: 2375,\n    host: 12375,\n    protocol: \"tcp\",\n    auto_correct: true\n\nend\n```", "```\n$ git clone https://github.com/bluewhalebook/\\\ndocker-up-and-running-3rd-edition.git --config core.autocrlf=input\n$ cd docker-up-and-running-3rd-edition/chapter_03/vagrant\n$ ls Vagrantfile\n```", "```\n$ vagrant up\n…\nBringing machine 'default' up with 'virtualbox' provider…\n==> default: Importing base box 'bento/ubuntu-20.04'…\n==> default: Matching MAC address for NAT networking…\n==> default: Checking if box 'bento/ubuntu-20.04' version '…' is up to date…\n==> default: A newer version of the box 'bento/ubuntu-20.04' for provider…\n==> default: available! You currently have version '…'. The latest is version\n==> default: '202206.03.0'. Run `vagrant box update` to update.\n==> default: Setting the name of the VM: vagrant_default_1654970697417_18732\n==> default: Clearing any previously set network interfaces…\n…\n==> default: Running provisioner: docker…\n default: Installing Docker onto machine…\n==> default: Running provisioner: shell…\n default: Running: inline script\n default: {\"hosts\": [\"tcp://0.0.0.0:2375\", \"unix:///var/run/docker.sock\"]}\n default: [Service]\n default: ExecStart=\n default: ExecStart=/usr/bin/dockerd\n```", "```\n$ docker -H 127.0.0.1:12375 version\nClient:\n Cloud integration: v1.0.24\n Version:           20.10.14\n API version:       1.41\n…\n\nServer: Docker Engine - Community\n Engine:\n Version:          20.10.17\n API version:      1.41 (minimum version 1.12)\n…\n```", "```\n$ docker context list\nNAME       TYPE … DOCKER ENDPOINT             …\ndefault *  moby … unix:///var/run/docker.sock …\n…\n```", "```\n$ docker context create vagrant --docker host=tcp://127.0.0.1:12375\nvagrant\nSuccessfully created context \"vagrant\"\n\n$ docker context use vagrant\nvagrant\n```", "```\n$ docker context list\nNAME       TYPE … DOCKER ENDPOINT             …\ndefault    moby … unix:///var/run/docker.sock …\nvagrant *  moby … tcp://127.0.0.1:12375       …\n…\n```", "```\n$ vagrant ssh\n…\nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64)\n…\nvagrant@vagrant:~$ exit\n```", "```\n$ vagrant halt\n…\n==> default: Attempting graceful shutdown of VM…\n\n$ docker version\nCannot connect to … daemon at tcp://127.0.0.1:12375\\. Is the … daemon running?\n\n$ docker context use default\ndefault\n```", "```\n$ docker container run --rm -ti docker.io/ubuntu:latest /bin/bash\n\nroot@aa9b72ae1fea:/#\n```", "```\n$ docker container run --rm -ti docker.io/fedora:latest /bin/bash\n\n[root@5c97201e827b /]# exit\n```", "```\n$ docker container run --rm -ti docker.io/alpine:latest /bin/sh\n\n/ # exit\n```", "```\n$ sudo dockerd -H unix:///var/run/docker.sock \\\n  --config-file /etc/docker/daemon.json\n```", "```\n$ docker container run --rm -it --privileged --pid=host debian \\\n  nsenter -t 1 -m -u -n -i sh\n\n/ # cat /etc/os-release\nPRETTY_NAME=\"Docker Desktop\"\n\n/ # ps | grep dockerd\n 1540 root      1:05 /usr/local/bin/dockerd\n --containerd /var/run/desktop-containerd/containerd.sock\n --pidfile /run/desktop/docker.pid\n --swarm-default-advertise-addr=eth0\n --host-gateway-ip 192.168.65.2\n\n/ # exit\n```"]