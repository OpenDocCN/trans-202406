- en: Appendix C. Role-Based Access Control (RBAC)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 C. 基于角色的访问控制（RBAC）
- en: When the Operator SDK generates an Operator project (regardless of whether it
    is a Helm, Ansible, or Go-based Operator), it creates a number of manifest files
    for deploying the Operator. Many of these files grant permissions to the deployed
    Operator to perform the various tasks it does throughout its lifetime.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当操作员 SDK 生成操作员项目（无论是基于 Helm、Ansible 还是 Go 的操作员）时，它会创建多个清单文件来部署操作员。其中许多文件授予部署操作员在其生命周期中执行各种任务所需的权限。
- en: 'The Operator SDK generates three files related to Operator permissions:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 操作员 SDK 生成了三个与操作员权限相关的文件：
- en: '*deploy/service_account.yaml*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*deploy/service_account.yaml*'
- en: Instead of authenticating as a user, Kubernetes provides a programmatic authentication
    method in the form of *service accounts*. A service account functions as the identity
    for the Operator pod when making requests against the Kubernetes API. This file
    simply defines the service account itself, and you do not need to manually edit
    it. More information on service accounts is available in [the Kubernetes documentation](https://oreil.ly/8oXS-).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes 不提供作为用户进行身份验证的方法，而是提供了一种程序化的身份验证方法，即*服务帐户*。服务帐户在操作员 pod 对 Kubernetes
    API 发出请求时充当身份。此文件仅定义服务帐户本身，您无需手动编辑它。有关服务帐户的更多信息，请参阅[Kubernetes 文档](https://oreil.ly/8oXS-)。
- en: '*deploy/role.yaml*'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*deploy/role.yaml*'
- en: This file creates and configures a *role* for the service account. The role
    dictates what permissions the service account has when interacting with the cluster
    APIs. The Operator SDK generates this file with extremely wide permissions that,
    for security reasons, you will want to edit before deploying your Operator in
    production. In the next section we explain more about refining the default permissions
    in this file.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件为服务帐户创建和配置了一个*角色*。角色在与集群 API 交互时决定了服务帐户拥有的权限。出于安全原因，操作员 SDK 生成此文件时授予了极其广泛的权限，因此您在将操作员部署到生产环境之前需要进行编辑。在下一节中，我们将详细解释如何在此文件中精细调整默认权限。
- en: '*deploy/role_binding.yaml*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*deploy/role_binding.yaml*'
- en: This file creates a *role binding*, which maps the service account to the role.
    You do not need to make any changes to the generated file.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件创建了一个*角色绑定*，将服务帐户映射到角色。您无需对生成的文件进行任何更改。
- en: Fine-Tuning the Role
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 精细调整角色
- en: 'At its most basic level, a role maps resource types to the actions (known as
    “verbs” in the role resource terminology) a user or service account may take on
    resources of those types. For example, the following role grants view (but not
    create or delete) permissions for deployments:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在其最基本的层面上，角色将资源类型映射到用户或服务帐户可以对这些类型资源执行的操作（在角色资源术语中称为“动词”）。例如，以下角色为部署授予了查看权限（但不包括创建或删除权限）：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Since the Operator SDK does not know the extent to which your Operator will
    need to interact with the cluster, the default role allows all actions on a variety
    of Kubernetes resource types. The following snippet, taken from an SDK-generated
    Operator project, illustrates this. The `*` wildcard allows all actions on the
    given resources:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于操作员 SDK 不知道操作员需要与集群交互的程度，因此默认角色允许在多种 Kubernetes 资源类型上执行所有操作。以下片段摘自由 SDK 生成的操作员项目，通配符`*`允许对给定资源执行所有操作：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Not surprisingly, it is considered a bad practice to grant such open and wide-reaching
    permissions to a service account. The specific changes you should make vary depending
    on the scope and behavior of your Operator. Generally speaking, you should restrict
    access as much as possible while still allowing your Operator to function.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不奇怪，将如此开放和广泛的权限授予服务帐户被视为一种不良实践。您应根据操作员的范围和行为对所做的特定更改进行限制。一般来说，您应尽可能限制访问权限，同时确保操作员可以正常运行。
- en: 'For example, the following role snippet provides the minimal functionality
    needed by the Visitors Site Operator:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下角色片段提供了访客站点操作员所需的最小功能：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Full details on configuring Kubernetes roles are outside the scope of this book.
    You can find more information in the [Kubernetes RBAC documentation](https://oreil.ly/osBC3).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 关于配置 Kubernetes 角色的详细信息超出了本书的范围。您可以在[Kubernetes RBAC 文档](https://oreil.ly/osBC3)中找到更多信息。
