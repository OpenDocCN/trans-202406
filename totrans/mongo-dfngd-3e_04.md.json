["```\n> db.movies.insertOne({\"title\" : \"Stand by Me\"})\n```", "```\n> db.movies.drop()\ntrue\n> db.movies.insertMany([{\"title\" : \"Ghostbusters\"},\n...                        {\"title\" : \"E.T.\"},\n...                        {\"title\" : \"Blade Runner\"}]);\n{\n      \"acknowledged\" : true,\n       \"insertedIds\" : [\n           ObjectId(\"572630ba11722fac4b6b4996\"),\n           ObjectId(\"572630ba11722fac4b6b4997\"),\n           ObjectId(\"572630ba11722fac4b6b4998\")\n       ]\n}\n> db.movies.find()\n{ \"_id\" : ObjectId(\"572630ba11722fac4b6b4996\"), \"title\" : \"Ghostbusters\" }\n{ \"_id\" : ObjectId(\"572630ba11722fac4b6b4997\"), \"title\" : \"E.T.\" }\n{ \"_id\" : ObjectId(\"572630ba11722fac4b6b4998\"), \"title\" : \"Blade Runner\" }\n```", "```\n> db.movies.insertMany([\n    ... {\"_id\" : 0, \"title\" : \"Top Gun\"},\n    ... {\"_id\" : 1, \"title\" : \"Back to the Future\"},\n    ... {\"_id\" : 1, \"title\" : \"Gremlins\"},\n    ... {\"_id\" : 2, \"title\" : \"Aliens\"}])\n2019-04-22T12:27:57.278-0400 E QUERY    [js] BulkWriteError: write \nerror at item 2 in bulk operation :\nBulkWriteError({\n    \"writeErrors\" : [\n        {\n            \"index\" : 2,\n            \"code\" : 11000,\n            \"errmsg\" : \"E11000 duplicate key error collection: \n test.movies index: _id_ dup key: { _id: 1.0 }\",\n            \"op\" : {\n                \"_id\" : 1,\n                \"title\" : \"Gremlins\"\n            }\n        }\n    ],\n    \"writeConcernErrors\" : [ ],\n    \"nInserted\" : 2,\n    \"nUpserted\" : 0,\n    \"nMatched\" : 0,\n    \"nModified\" : 0,\n    \"nRemoved\" : 0,\n    \"upserted\" : [ ]\n})\nBulkWriteError@src/mongo/shell/bulk_api.js:367:48\nBulkWriteResult/this.toError@src/mongo/shell/bulk_api.js:332:24\nBulk/this.execute@src/mongo/shell/bulk_api.js:1186:23\nDBCollection.prototype.insertMany@src/mongo/shell/crud_api.js:314:5\n@(shell):1:1\n```", "```\n> db.movies.insertMany([\n... {\"_id\" : 3, \"title\" : \"Sixteen Candles\"},\n... {\"_id\" : 4, \"title\" : \"The Terminator\"},\n... {\"_id\" : 4, \"title\" : \"The Princess Bride\"},\n... {\"_id\" : 5, \"title\" : \"Scarface\"}],\n... {\"ordered\" : false})\n2019-05-01T17:02:25.511-0400 E QUERY    [thread1] BulkWriteError: write\nerror at item 2 in bulk operation :\nBulkWriteError({\n  \"writeErrors\" : [\n    {\n      \"index\" : 2,\n      \"code\" : 11000,\n      \"errmsg\" : \"E11000 duplicate key error index: test.movies.$_id_\n dup key: { : 4.0 }\",\n      \"op\" : {\n        \"_id\" : 4,\n        \"title\" : \"The Princess Bride\"\n      }\n    }\n  ],\n  \"writeConcernErrors\" : [ ],\n  \"nInserted\" : 3,\n  \"nUpserted\" : 0,\n  \"nMatched\" : 0,\n  \"nModified\" : 0,\n  \"nRemoved\" : 0,\n  \"upserted\" : [ ]\n})\nBulkWriteError@src/mongo/shell/bulk_api.js:367:48\nBulkWriteResult/this.toError@src/mongo/shell/bulk_api.js:332:24\nBulk/this.execute@src/mongo/shell/bulk_api.js:1186.23\nDBCollection.prototype.insertMany@src/mongo/shell/crud_api.js:314:5\n@(shell):1:1\n```", "```\n> db.movies.find()\n{ \"_id\" : 0, \"title\" : \"Top Gun\"}\n{ \"_id\" : 1, \"title\" : \"Back to the Future\"}\n{ \"_id\" : 3, \"title\" : \"Sixteen Candles\"}\n{ \"_id\" : 4, \"title\" : \"The Terminator\"}\n{ \"_id\" : 5, \"title\" : \"Scarface\"}\n> db.movies.deleteOne({\"_id\" : 4})\n{ \"acknowledged\" : true, \"deletedCount\" : 1 }\n> db.movies.find()\n{ \"_id\" : 0, \"title\" : \"Top Gun\"}\n{ \"_id\" : 1, \"title\" : \"Back to the Future\"}\n{ \"_id\" : 3, \"title\" : \"Sixteen Candles\"}\n{ \"_id\" : 5, \"title\" : \"Scarface\"}\n```", "```\n> db.movies.find()\n{ \"_id\" : 0, \"title\" : \"Top Gun\", \"year\" : 1986 }\n{ \"_id\" : 1, \"title\" : \"Back to the Future\", \"year\" : 1985 }\n{ \"_id\" : 3, \"title\" : \"Sixteen Candles\", \"year\" : 1984 }\n{ \"_id\" : 4, \"title\" : \"The Terminator\", \"year\" : 1984 }\n{ \"_id\" : 5, \"title\" : \"Scarface\", \"year\" : 1983 }\n> db.movies.deleteMany({\"year\" : 1984})\n{ \"acknowledged\" : true, \"deletedCount\" : 2 }\n> db.movies.find()\n{ \"_id\" : 0, \"title\" : \"Top Gun\", \"year\" : 1986 }\n{ \"_id\" : 1, \"title\" : \"Back to the Future\", \"year\" : 1985 }\n{ \"_id\" : 5, \"title\" : \"Scarface\", \"year\" : 1983 }\n```", "```\n> db.mailing.list.deleteMany({\"opt-out\" : true})\n```", "```\n> db.movies.find()\n{ \"_id\" : 0, \"title\" : \"Top Gun\", \"year\" : 1986 }\n{ \"_id\" : 1, \"title\" : \"Back to the Future\", \"year\" : 1985 }\n{ \"_id\" : 3, \"title\" : \"Sixteen Candles\", \"year\" : 1984 }\n{ \"_id\" : 4, \"title\" : \"The Terminator\", \"year\" : 1984 }\n{ \"_id\" : 5, \"title\" : \"Scarface\", \"year\" : 1983 }\n> db.movies.deleteMany({})\n{ \"acknowledged\" : true, \"deletedCount\" : 5 }\n> db.movies.find()\n```", "```\n> db.movies.drop()\ntrue\n```", "```\n{\n    \"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7a\"),\n    \"name\" : \"joe\",\n    \"friends\" : 32,\n    \"enemies\" : 2\n}\n```", "```\n> var joe = db.users.findOne({\"name\" : \"joe\"});\n> joe.relationships = {\"friends\" : joe.friends, \"enemies\" : joe.enemies};\n{\n    \"friends\" : 32,\n    \"enemies\" : 2\n}\n> joe.username = joe.name;\n\"joe\"\n> delete joe.friends;\ntrue\n> delete joe.enemies;\ntrue\n> delete joe.name;\ntrue\n> db.users.replaceOne({\"name\" : \"joe\"}, joe);\n```", "```\n{\n    \"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7a\"),\n    \"username\" : \"joe\",\n    \"relationships\" : {\n        \"friends\" : 32,\n        \"enemies\" : 2\n    }\n}\n```", "```\n> db.people.find()\n{\"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7b\"), \"name\" : \"joe\", \"age\" : 65}\n{\"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7c\"), \"name\" : \"joe\", \"age\" : 20}\n{\"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7d\"), \"name\" : \"joe\", \"age\" : 49}\n```", "```\n> joe = db.people.findOne({\"name\" : \"joe\", \"age\" : 20});\n{\n    \"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7c\"),\n    \"name\" : \"joe\",\n    \"age\" : 20\n}\n> joe.age++;\n> db.people.replaceOne({\"name\" : \"joe\"}, joe);\nE11001 duplicate key on update\n```", "```\n> db.people.replaceOne({\"_id\" : ObjectId(\"4b2b9f67a1f631733d917a7c\")}, joe)\n```", "```\n{\n    \"_id\" : ObjectId(\"4b253b067525f35f94b60a31\"),\n    \"url\" : \"www.example.com\",\n    \"pageviews\" : 52\n}\n```", "```\n> db.analytics.updateOne({\"url\" : \"www.example.com\"},\n... {\"$inc\" : {\"pageviews\" : 1}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }\n```", "```\n> db.analytics.findOne()\n{\n    \"_id\" : ObjectId(\"4b253b067525f35f94b60a31\"),\n    \"url\" : \"www.example.com\",\n    \"pageviews\" : 53\n}\n```", "```\n> db.users.findOne()\n{\n    \"_id\" : ObjectId(\"4b253b067525f35f94b60a31\"),\n    \"name\" : \"joe\",\n    \"age\" : 30,\n    \"sex\" : \"male\",\n    \"location\" : \"Wisconsin\"\n}\n```", "```\n> db.users.updateOne({\"_id\" : ObjectId(\"4b253b067525f35f94b60a31\")},\n... {\"$set\" : {\"favorite book\" : \"War and Peace\"}})\n```", "```\n> db.users.findOne()\n{\n    \"_id\" : ObjectId(\"4b253b067525f35f94b60a31\"),\n    \"name\" : \"joe\",\n    \"age\" : 30,\n    \"sex\" : \"male\",\n    \"location\" : \"Wisconsin\",\n    \"favorite book\" : \"War and Peace\"\n}\n```", "```\n> db.users.updateOne({\"name\" : \"joe\"},\n... {\"$set\" : {\"favorite book\" : \"Green Eggs and Ham\"}})\n```", "```\n> db.users.updateOne({\"name\" : \"joe\"},\n... {\"$set\" : {\"favorite book\" :\n...     [\"Cat's Cradle\", \"Foundation Trilogy\", \"Ender's Game\"]}})\n```", "```\n> db.users.updateOne({\"name\" : \"joe\"},\n... {\"$unset\" : {\"favorite book\" : 1}})\n```", "```\n> db.blog.posts.findOne()\n{\n    \"_id\" : ObjectId(\"4b253b067525f35f94b60a31\"),\n    \"title\" : \"A Blog Post\",\n    \"content\" : \"...\",\n    \"author\" : {\n        \"name\" : \"joe\",\n        \"email\" : \"joe@example.com\"\n    }\n}\n> db.blog.posts.updateOne({\"author.name\" : \"joe\"},\n... {\"$set\" : {\"author.name\" : \"joe schmoe\"}})\n\n> db.blog.posts.findOne()\n{\n    \"_id\" : ObjectId(\"4b253b067525f35f94b60a31\"),\n    \"title\" : \"A Blog Post\",\n    \"content\" : \"...\",\n    \"author\" : {\n        \"name\" : \"joe schmoe\",\n        \"email\" : \"joe@example.com\"\n    }\n}\n```", "```\n> db.blog.posts.updateOne({\"author.name\" : \"joe\"}, \n... {\"author.name\" : \"joe schmoe\"})\n```", "```\n> db.games.insertOne({\"game\" : \"pinball\", \"user\" : \"joe\"})\n```", "```\n> db.games.updateOne({\"game\" : \"pinball\", \"user\" : \"joe\"},\n... {\"$inc\" : {\"score\" : 50}})\n```", "```\n> db.games.findOne()\n{\n     \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n     \"game\" : \"pinball\",\n     \"user\" : \"joe\",\n     \"score\" : 50\n}\n```", "```\n> db.games.updateOne({\"game\" : \"pinball\", \"user\" : \"joe\"},\n... {\"$inc\" : {\"score\" : 10000}})\n```", "```\n> db.games.findOne()\n{\n     \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n     \"game\" : \"pinball\",\n     \"user\" : \"joe\",\n     \"score\" : 10050\n}\n```", "```\n> db.strcounts.insert({\"count\" : \"1\"})\nWriteResult({ \"nInserted\" : 1 })\n> db.strcounts.update({}, {\"$inc\" : {\"count\" : 1}})\nWriteResult({\n  \"nMatched\" : 0,\n  \"nUpserted\" : 0,\n  \"nModified\" : 0,\n  \"writeError\" : {\n    \"code\" : 16837,\n    \"errmsg\" : \"Cannot apply $inc to a value of non-numeric type.\n {_id: ObjectId('5726c0d36855a935cb57a659')} has the field 'count' of\n non-numeric type String\"\n  }\n})\n```", "```\n> db.blog.posts.findOne()\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"title\" : \"A blog post\",\n    \"content\" : \"...\"\n}\n> db.blog.posts.updateOne({\"title\" : \"A blog post\"},\n... {\"$push\" : {\"comments\" :\n...     {\"name\" : \"joe\", \"email\" : \"joe@example.com\",\n...     \"content\" : \"nice post.\"}}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }\n> db.blog.posts.findOne()\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"title\" : \"A blog post\",\n    \"content\" : \"...\",\n    \"comments\" : [\n        {\n            \"name\" : \"joe\",\n            \"email\" : \"joe@example.com\",\n            \"content\" : \"nice post.\"\n        }\n    ]\n}\n```", "```\n> db.blog.posts.updateOne({\"title\" : \"A blog post\"},\n... {\"$push\" : {\"comments\" :\n...     {\"name\" : \"bob\", \"email\" : \"bob@example.com\",\n...     \"content\" : \"good post.\"}}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }\n> db.blog.posts.findOne()\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"title\" : \"A blog post\",\n    \"content\" : \"...\",\n    \"comments\" : [\n        {\n            \"name\" : \"joe\",\n            \"email\" : \"joe@example.com\",\n            \"content\" : \"nice post.\"\n        },\n        {\n            \"name\" : \"bob\",\n            \"email\" : \"bob@example.com\",\n            \"content\" : \"good post.\"\n        }\n    ]\n}\n```", "```\n> db.stock.ticker.updateOne({\"_id\" : \"GOOG\"},\n... {\"$push\" : {\"hourly\" : {\"$each\" : [562.776, 562.790, 559.123]}}})\n```", "```\n> db.movies.updateOne({\"genre\" : \"horror\"},\n... {\"$push\" : {\"top10\" : {\"$each\" : [\"Nightmare on Elm Street\", \"Saw\"],\n...                        \"$slice\" : -10}}})\n```", "```\n> db.movies.updateOne({\"genre\" : \"horror\"},\n... {\"$push\" : {\"top10\" : {\"$each\" : [{\"name\" : \"Nightmare on Elm Street\",\n...                                    \"rating\" : 6.6},\n...                                   {\"name\" : \"Saw\", \"rating\" : 4.3}],\n...                        \"$slice\" : -10,\n...                        \"$sort\" : {\"rating\" : -1}}}})\n```", "```\n> db.papers.updateOne({\"authors cited\" : {\"$ne\" : \"Richie\"}},\n... {$push : {\"authors cited\" : \"Richie\"}})\n```", "```\n> db.users.findOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")})\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"username\" : \"joe\",\n    \"emails\" : [\n        \"joe@example.com\",\n        \"joe@gmail.com\",\n        \"joe@yahoo.com\"\n    ]\n}\n```", "```\n> db.users.updateOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")},\n... {\"$addToSet\" : {\"emails\" : \"joe@gmail.com\"}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 0 }\n> db.users.findOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")})\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"username\" : \"joe\",\n    \"emails\" : [\n        \"joe@example.com\",\n        \"joe@gmail.com\",\n        \"joe@yahoo.com\",\n    ]\n}\n> db.users.updateOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")},\n... {\"$addToSet\" : {\"emails\" : \"joe@hotmail.com\"}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }\n> db.users.findOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")})\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"username\" : \"joe\",\n    \"emails\" : [\n        \"joe@example.com\",\n        \"joe@gmail.com\",\n        \"joe@yahoo.com\",\n        \"joe@hotmail.com\"\n    ]\n}\n```", "```\n> db.users.updateOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")}, \n... {\"$addToSet\" : {\"emails\" : {\"$each\" :\n...     [\"joe@php.net\", \"joe@example.com\", \"joe@python.org\"]}}})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 1 }\n> db.users.findOne({\"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\")})\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"username\" : \"joe\",\n    \"emails\" : [\n        \"joe@example.com\",\n        \"joe@gmail.com\",\n        \"joe@yahoo.com\",\n        \"joe@hotmail.com\"\n        \"joe@php.net\"\n        \"joe@python.org\"\n    ]\n}\n```", "```\n> db.lists.insertOne({\"todo\" : [\"dishes\", \"laundry\", \"dry cleaning\"]})\n```", "```\n> db.lists.updateOne({}, {\"$pull\" : {\"todo\" : \"laundry\"}})\n```", "```\n> db.lists.findOne()\n{\n    \"_id\" : ObjectId(\"4b2d75476cc613d5ee930164\"),\n    \"todo\" : [\n        \"dishes\",\n        \"dry cleaning\"\n    ]\n}\n```", "```\n> db.blog.posts.findOne()\n{\n    \"_id\" : ObjectId(\"4b329a216cc613d5ee930192\"),\n    \"content\" : \"...\",\n    \"comments\" : [\n        {\n            \"comment\" : \"good post\",\n            \"author\" : \"John\",\n            \"votes\" : 0\n        },\n        {\n            \"comment\" : \"i thought it was too short\",\n            \"author\" : \"Claire\",\n            \"votes\" : 3\n        },\n        {\n            \"comment\" : \"free watches\",\n            \"author\" : \"Alice\",\n            \"votes\" : -5\n        },\n        {\n            \"comment\" : \"vacation getaways\",\n            \"author\" : \"Lynn\",\n            \"votes\" : -7\n        }\n    ]\n}\n```", "```\n> db.blog.updateOne({\"post\" : post_id},\n... {\"$inc\" : {\"comments.0.votes\" : 1}})\n```", "```\n> db.blog.updateOne({\"comments.author\" : \"John\"},\n... {\"$set\" : {\"comments.$.author\" : \"Jim\"}})\n```", "```\ndb.blog.updateOne(\n   {\"post\" : post_id },\n   { $set: { \"comments.$[elem].hidden\" : true } },\n   {\n     arrayFilters: [ { \"elem.votes\": { $lte: -5 } } ]\n   }\n)\n```", "```\n// check if we have an entry for this page\nblog = db.analytics.findOne({url : \"/blog\"})\n\n// if we do, add one to the number of views and save\nif (blog) {\n  blog.pageviews++;\n  db.analytics.save(blog);\n}\n// otherwise, create a new document for this page\nelse {\n  db.analytics.insertOne({url : \"/blog\", pageviews : 1})\n}\n```", "```\n> db.analytics.updateOne({\"url\" : \"/blog\"}, {\"$inc\" : {\"pageviews\" : 1}}, \n... {\"upsert\" : true})\n```", "```\n> db.users.updateOne({\"rep\" : 25}, {\"$inc\" : {\"rep\" : 3}}, {\"upsert\" : true})\nWriteResult({\n    \"acknowledged\" : true,\n    \"matchedCount\" : 0,\n    \"modifiedCount\" : 0,\n    \"upsertedId\" : ObjectId(\"5a93b07aaea1cb8780a4cf72\")\n})\n> db.users.findOne({\"_id\" : ObjectId(\"5727b2a7223502483c7f3acd\")} )\n{ \"_id\" : ObjectId(\"5727b2a7223502483c7f3acd\"), \"rep\" : 28 }\n```", "```\n> db.users.updateOne({}, {\"$setOnInsert\" : {\"createdAt\" : new Date()}},\n... {\"upsert\" : true})\n{\n    \"acknowledged\" : true,\n    \"matchedCount\" : 0,\n    \"modifiedCount\" : 0,\n    \"upsertedId\" : ObjectId(\"5727b4ac223502483c7f3ace\")\n}\n> db.users.findOne()\n{\n    \"_id\" : ObjectId(\"5727b4ac223502483c7f3ace\"),\n    \"createdAt\" : ISODate(\"2016-05-02T20:12:28.640Z\")\n}\n```", "```\n> db.users.updateOne({}, {\"$setOnInsert\" : {\"createdAt\" : new Date()}},\n... {\"upsert\" : true})\n{ \"acknowledged\" : true, \"matchedCount\" : 1, \"modifiedCount\" : 0 }\n> db.users.findOne()\n{\n    \"_id\" : ObjectId(\"5727b4ac223502483c7f3ace\"),\n    \"createdAt\" : ISODate(\"2016-05-02T20:12:28.640Z\")\n}\n```", "```\n> var x = db.testcol.findOne()\n> x.num = 42\n42\n> db.testcol.save(x)\n```", "```\ndb.testcol.replaceOne({\"_id\" : x._id}, x)\n```", "```\n> db.users.insertMany([\n... {birthday: \"10/13/1978\"},\n... {birthday: \"10/13/1978\"},\n... {birthday: \"10/13/1978\"}])\n{\n    \"acknowledged\" : true,\n    \"insertedIds\" : [\n        ObjectId(\"5727d6fc6855a935cb57a65b\"),\n        ObjectId(\"5727d6fc6855a935cb57a65c\"),\n        ObjectId(\"5727d6fc6855a935cb57a65d\")\n    ]\n}\n> db.users.updateMany({\"birthday\" : \"10/13/1978\"},\n... {\"$set\" : {\"gift\" : \"Happy Birthday!\"}})\n{ \"acknowledged\" : true, \"matchedCount\" : 3, \"modifiedCount\" : 3 }\n```", "```\n{\n    \"_id\" : ObjectId(),\n    \"status\" : \"*`state`*\",\n    \"priority\" : *`N`*\n}\n```", "```\nvar cursor = db.processes.find({\"status\" : \"READY\"});\nps = cursor.sort({\"priority\" : -1}).limit(1).next();\ndb.processes.updateOne({\"_id\" : ps._id}, {\"$set\" : {\"status\" : \"RUNNING\"}});\ndo_something(ps);\ndb.processes.updateOne({\"_id\" : ps._id}, {\"$set\" : {\"status\" : \"DONE\"}});\n```", "```\nvar cursor = db.processes.find({\"status\" : \"READY\"});\ncursor.sort({\"priority\" : -1}).limit(1);\nwhile ((ps = cursor.next()) != null) {\n    var result = db.processes.updateOne({\"_id\" : ps._id, \"status\" : \"READY\"},\n                              {\"$set\" : {\"status\" : \"RUNNING\"}});\n\n    if (result.modifiedCount === 1) {\n        do_something(ps);\n        db.processes.updateOne({\"_id\" : ps._id}, {\"$set\" : {\"status\" : \"DONE\"}});\n        break;\n    }\n    cursor = db.processes.find({\"status\" : \"READY\"});\n    cursor.sort({\"priority\" : -1}).limit(1);\n}\n```", "```\n> db.processes.findOneAndUpdate({\"status\" : \"READY\"},\n... {\"$set\" : {\"status\" : \"RUNNING\"}},\n... {\"sort\" : {\"priority\" : -1}})\n{\n    \"_id\" : ObjectId(\"4b3e7a18005cab32be6291f7\"),\n    \"priority\" : 1,\n    \"status\" : \"READY\"\n}\n```", "```\n> db.processes.findOneAndUpdate({\"status\" : \"READY\"},\n... {\"$set\" : {\"status\" : \"RUNNING\"}},\n... {\"sort\" : {\"priority\" : -1},\n...  \"returnNewDocument\": true})\n{\n    \"_id\" : ObjectId(\"4b3e7a18005cab32be6291f7\"),\n    \"priority\" : 1,\n    \"status\" : \"RUNNING\"\n}\n```", "```\nps = db.processes.findOneAndUpdate({\"status\" : \"READY\"},\n                                   {\"$set\" : {\"status\" : \"RUNNING\"}},\n                                   {\"sort\" : {\"priority\" : -1},\n                                    \"returnNewDocument\": true})\ndo_something(ps)\ndb.process.updateOne({\"_id\" : ps._id}, {\"$set\" : {\"status\" : \"DONE\"}})\n```"]