["```\nmkdir pacman\nmkdir pacman/templates\n\ncd pacman\n```", "```\napiVersion: v2\nname: pacman\ndescription: A Helm chart for Pacman\n\ntype: application\n\nversion: 0.1.0 ![1](assets/1.png)\n\nappVersion: \"1.0.0\" ![2](assets/2.png)\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Chart.Name}} ![1](assets/1.png)\n  labels:\n    app.kubernetes.io/name: {{ .Chart.Name}}\n    {{- if .Chart.AppVersion }} ![2](assets/2.png)\n    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }} ![3](assets/3.png)\n    {{- end }}\nspec:\n  replicas: {{ .Values.replicaCount }} ![4](assets/4.png)\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: {{ .Chart.Name}}\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: {{ .Chart.Name}}\n    spec:\n      containers:\n          - image: \"{{ .Values.image.repository }}:\n          {{ .Values.image.tag | default .Chart.AppVersion}}\" ![5](assets/5.png) ![6](assets/6.png)\n            imagePullPolicy: {{ .Values.image.pullPolicy }} ![7](assets/7.png)\n            securityContext:\n              {{- toYaml .Values.securityContext | nindent 14 }}\n            name: {{ .Chart.Name}}\n            ports:\n              - containerPort: {{ .Values.image.containerPort }}\n                name: http\n                protocol: TCP\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n  name: {{ .Chart.Name }}\nspec:\n  ports:\n    - name: http\n      port: {{ .Values.image.containerPort }}\n      targetPort: {{ .Values.image.containerPort }}\n  selector:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n```", "```\nimage: ![1](assets/1.png)\n  repository: quay.io/gitops-cookbook/pacman-kikd ![2](assets/2.png)\n  tag: \"1.0.0\"\n  pullPolicy: Always\n  containerPort: 8080\n\nreplicaCount: 1\nsecurityContext: {} ![3](assets/3.png)\n```", "```\nsecurityContext:\n  capabilities:\n    drop:\n    - ALL\n  readOnlyRootFilesystem: true\n  runAsNonRoot: true\n  runAsUser: 1000\n```", "```\npacman\n    ├── Chart.yaml ![1](assets/1.png)\n    ├── templates ![2](assets/2.png)\n    │   ├── deployment.yaml ![3](assets/3.png)\n    │   ├── service.yaml\n    └── values.yaml ![4](assets/4.png)\n```", "```\nhelm template .\n```", "```\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/name: pacman\n  name: pacman ![1](assets/1.png)\nspec:\n  ports:\n    - name: http\n      port: 8080 ![2](assets/2.png)\n      targetPort: 8080\n  selector:\n    app.kubernetes.io/name: pacman\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pacman\n  labels:\n    app.kubernetes.io/name: pacman\n    app.kubernetes.io/version: \"1.0.0\" ![3](assets/3.png)\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: pacman\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: pacman\n    spec:\n      containers:\n          - image: \"quay.io/gitops-cookbook/pacman-kikd:1.0.0\" ![4](assets/4.png)\n            imagePullPolicy: Always\n            securityContext: ![5](assets/5.png)\n              {}\n            name: pacman\n            ports:\n              - containerPort: 8080\n                name: http\n                protocol: TCP\n```", "```\nhelm template  --set replicaCount=3 .\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pacman\n  labels:\n    app.kubernetes.io/name: pacman\n    app.kubernetes.io/version: \"1.0.0\"\nspec:\n  replicas: 3\n...\n```", "```\nhelm install pacman .\n```", "```\nLAST DEPLOYED: Sat Jan 22 15:13:50 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n```", "```\nkubectl get pods\n\nNAME                    READY   STATUS    RESTARTS   AGE\npacman-7947b988-kzjbc   1/1     Running   0          60s\n```", "```\nkubectl get deployment\n\nNAME     READY   UP-TO-DATE   AVAILABLE   AGE\npacman   1/1     1            1           4m50s\n```", "```\nkubectl get services\n\nNAME     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\npacman   ClusterIP   172.30.129.123   <none>        8080/TCP   9m55s\n```", "```\nhelm history pacman\n\nREVISION\tUPDATED                 \tSTATUS  \tCHART       ↳\n   APP VERSION   DESCRIPTION\n1       \tSat Jan 22 15:23:22 2022\tdeployed\tpacman-0.1.0↳\n   1.0.0         Install complete\n```", "```\nhelm uninstall pacman\n\nrelease \"pacman\" uninstalled\n```", "```\n...\nspec:\n  replicas: {{ .Values.replicaCount }}\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: {{ .Chart.Name}}\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: {{ .Chart.Name}}\n...\n```", "```\nservice.yaml\n----\n...\nselector:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n----\n```", "```\n{{- define \"pacman.selectorLabels\" -}} ![1](assets/1.png)\napp.kubernetes.io/name: {{ .Chart.Name}} ![2](assets/2.png)\n{{- end }}\n```", "```\nspec:\n  replicas: {{ .Values.replicaCount }}\n  selector:\n    matchLabels:\n      {{- include \"pacman.selectorLabels\" . | nindent 6 }} ![1](assets/1.png)\n  template:\n    metadata:\n      labels:\n        {{- include \"pacman.selectorLabels\" . | nindent 8 }} ![2](assets/2.png)\n    spec:\n      containers:\n```", "```\nhelm template .\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/name: pacman\n  name: pacman\nspec:\n  ports:\n    - name: http\n      port: 8080\n      targetPort: 8080\n  selector:\n    app.kubernetes.io/name: pacman ![1](assets/1.png)\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pacman\n  labels:\n    app.kubernetes.io/name: pacman\n    app.kubernetes.io/version: \"1.0.0\"\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: pacman ![2](assets/2.png)\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: pacman ![3](assets/3.png)\n    spec:\n      containers:\n          - image: \"quay.io/gitops-cookbook/pacman-kikd:1.0.0\"\n            imagePullPolicy: Always\n            securityContext:\n              {}\n            name: pacman\n            ports:\n              - containerPort: 8080\n                name: http\n                protocol: TCP\n```", "```\n{{- define \"pacman.selectorLabels\" -}}\napp.kubernetes.io/name: {{ .Chart.Name}}\napp.kubernetes.io/version: {{ .Chart.AppVersion}} ![1](assets/1.png)\n{{- end }}\n```", "```\nhelm template .\n```", "```\n---\n# Source: pacman/templates/service.yaml apiVersion: v1\nkind: Service\nmetadata:\n...\n  selector:\n    app.kubernetes.io/name: pacman\n    app.kubernetes.io/version: 1.0.0 ![1](assets/1.png)\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pacman\n  labels:\n    app.kubernetes.io/name: pacman\n    app.kubernetes.io/version: \"1.0.0\"\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: pacman\n      app.kubernetes.io/version: 1.0.0 ![2](assets/2.png)\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: pacman\n        app.kubernetes.io/version: 1.0.0 ![3](assets/3.png)\n    spec:\n...\n```", "```\nhelm install pacman .\n```", "```\nhelm history pacman\n\nREVISION   UPDATED                   STATUS    CHART          APP VERSION↳\n  DESCRIPTION\n1          Sun Jan 23 16:00:09 2022  deployed  pacman-0.1.0   1.0.0↳\n  Install complete\n```", "```\nimage:\n  repository: quay.io/gitops-cookbook/pacman-kikd\n  tag: \"1.1.0\" ![1](assets/1.png)\n  pullPolicy: Always\n  containerPort: 8080\n\nreplicaCount: 1\nsecurityContext: {}\n```", "```\napiVersion: v2\nname: pacman\ndescription: A Helm chart for Pacman\n\ntype: application\nversion: 0.1.0\nappVersion: \"1.1.0\" ![1](assets/1.png)\n```", "```\nhelm upgrade pacman .\n```", "```\nRelease \"pacman\" has been upgraded. Happy Helming!\nNAME: pacman\nLAST DEPLOYED: Mon Jan 24 11:39:28 2022\nNAMESPACE: asotobue-dev\nSTATUS: deployed\nREVISION: 2 ![1](assets/1.png)\nTEST SUITE: None\n```", "```\nhelm history pacman\n\nREVISION UPDATED                  STATUS    \tCHART       \tAPP VERSION↳\nDESCRIPTION\n1        Mon Jan 24 10:22:06 2022 superseded\tpacman-0.1.0\t1.0.0↳\nInstall complete\n2        Mon Jan 24 11:39:28 2022 deployed  \tpacman-0.1.0\t1.1.0↳\nUpgrade complete\n```", "```\nhelm rollback pacman 1\n\nRollback was a success! Happy Helming!\n```", "```\nhelm history pacman\n\nREVISION  UPDATED                   STATUS    \tCHART       \tAPP VERSION↳\nDESCRIPTION\n1         Mon Jan 24 10:22:06 2022  superseded\tpacman-0.1.0\t1.0.0↳\nInstall complete\n2         Mon Jan 24 11:39:28 2022  superseded\tpacman-0.1.0\t1.1.0↳\nUpgrade complete\n3         Mon Jan 24 12:31:58 2022  deployed  \tpacman-0.1.0\t1.0.0↳\nRollback to\n```", "```\nimage:\n  tag: \"1.2.0\"\n```", "```\nhelm template pacman -f newvalues.yaml .\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pacman\n...\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: pacman\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: pacman\n    spec:\n      containers:\n          - image: \"quay.io/gitops-cookbook/pacman-kikd:1.2.0\"\n            imagePullPolicy: Always\n...\n```", "```\nhelm package .\n```", "```\nSuccessfully packaged chart and saved it to:↳\ngitops-cookbook/code/05_helm/04_package/pacman/pacman-0.1.0.tgz\n```", "```\nrepo\n├── index.yaml\n├── pacman-0.1.0.tgz\n```", "```\napiVersion: v1\nentries:\n  pacman:\n  - apiVersion: v2\n    appVersion: 1.0.0\n    created: \"2022-01-24T16:42:54.080959+01:00\"\n    description: A Helm chart for Pacman\n    digest: aa3cce809ffcca86172fc793d7804d1c61f157b9b247680a67d5b16b18a0798d\n    name: pacman\n    type: application\n    urls:\n    - pacman-0.1.0.tgz\n    version: 0.1.0\ngenerated: \"2022-01-24T16:42:54.080485+01:00\"\n```", "```\nhelm package --sign --key 'me@example.com' \\\n  --keyring /home/me/.gnupg/secring.gpg  .\n```", "```\n.\n├── Chart.yaml\n├── pacman-0.1.0.tgz ![1](assets/1.png)\n├── pacman-0.1.0.tgz.prov ![2](assets/2.png)\n├── templates\n│  ├── deployment.yaml\n│  └── service.yaml\n└── values.yaml\n```", "```\nhelm verify pacman-0.1.0.tgz\n\nSigned by: alexs (book) <asotobu@example.com>\nUsing Key With Fingerprint: 57C4511D738BC0B288FAF9D69B40EB787040F3CF\nChart Hash Verified:↳\nsha256:d8b2e0c5e12a8425df2ea3a903807b93aabe4a6ff8277511a7865c847de3c0bf ![1](assets/1.png)\n```", "```\nhelm repo add bitnami https://charts.bitnami.com/bitnami ![1](assets/1.png)\n```", "```\nhelm repo list\n\nNAME     \tURL\nstable   \thttps://charts.helm.sh/stable\nbitnami  \thttps://charts.bitnami.com/bitnami ![1](assets/1.png)\n```", "```\nhelm search repo postgresql\n```", "```\nNAME                               \tCHART VERSION\tAPP VERSION↳\n\tDESCRIPTION\nbitnami/postgresql                 \t10.16.2      \t11.14.0↳\n    \tChart for PostgreSQL, an object-relational data...\nbitnami/postgresql-ha              \t8.2.6        \t11.14.0↳\n    \tChart for PostgreSQL with HA architecture (usin...\nstable/postgresql                  \t8.6.4        \t11.7.0↳\n     \tDEPRECATED Chart for PostgreSQL, an object-rela...\nstable/pgadmin                     \t1.2.2        \t4.18.0↳\n     \tpgAdmin is a web based administration tool for ...\nstable/stolon                      \t1.6.5        \t0.16.0↳\n     \tDEPRECATED - Stolon - PostgreSQL cloud native H...\nstable/gcloud-sqlproxy             \t0.6.1        \t1.11↳\n       \tDEPRECATED Google Cloud SQL Proxy\nstable/prometheus-postgres-exporter\t1.3.1        \t0.8.0↳\n      \tDEPRECATED A Helm chart for prometheus postgres...\n```", "```\nhelm install my-db \\ ![1](assets/1.png)\n--set postgresql.postgresqlUsername=my-default,postgresql.↳\npostgresqlPassword=postgres,postgresql.postgresqlDatabase=mydb,↳\npostgresql.persistence.enabled=false \\ ![2](assets/2.png)\nbitnami/postgresql ![3](assets/3.png)\n```", "```\nNAME: my-db\nLAST DEPLOYED: Mon Jan 24 22:33:56 2022\nNAMESPACE: asotobue-dev\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nCHART NAME: postgresql\nCHART VERSION: 10.16.2\nAPP VERSION: 11.14.0\n\n** Please be patient while the chart is being deployed **\n\nPostgreSQL can be accessed via port 5432 on the following DNS names↳\nfrom within your cluster:\n\n    my-db-postgresql.asotobue-dev.svc.cluster.local - Read/Write connection\n\nTo get the(((\"passwords\", \"Helm Charts\")))(((\"Helm\", \"Charts\", \"passwords\")))(((\"Charts\", \"passwords\"))) password for \"postgres\" run:\n\n    export POSTGRES_ADMIN_PASSWORD=$(kubectl get secret↳\n     --namespace asotobue-dev my-db-postgresql -o↳\n     jsonpath=\"{.data.postgresql-postgres-password}\" | base64 --decode)\n\nTo get the password for \"my-default\" run:\n\n    export POSTGRES_PASSWORD=$(kubectl get secret↳\n     --namespace asotobue-dev my-db-postgresql -o↳\n     jsonpath=\"{.data.postgresql-password}\" | base64 --decode)\n\nTo connect to your database run the following command:\n\n    kubectl run my-db-postgresql-client --rm --tty -i --restart='Never'↳\n     --namespace asotobue-dev↳\n     --image docker.io/bitnami/postgresql:11.14.0-debian-10-r28↳\n     --env=\"PGPASSWORD=$POSTGRES_PASSWORD\"↳\n     --command -- psql --host my-db-postgresql -U my-default -d mydb↳\n     -p 5432\n\nTo connect to your (((\"Helm\", \"Charts\", \"connecting to databases\")))(((\"Charts\", \"databases\", \"connecting to\")))(((\"databases\", \"connecting to\", \"Helm Charts\")))database from outside the cluster execute the following commands:\n\n    kubectl port-forward --namespace asotobue-dev svc/my-db-postgresql 5432:5432 &\n    PGPASSWORD=\"$POSTGRES_PASSWORD\" psql --host 127.0.0.1 -U my-default -d mydb -p 5432\n```", "```\nkubectl get pods\n\nNAME                 READY   STATUS    RESTARTS   AGE\nmy-db-postgresql-0   1/1     Running   0          23s\n```", "```\nkubectl get services\n\nNAME                        TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE\nmy-db-postgresql            ClusterIP   172.30.35.1   <none>        5432/TCP   3m33s\nmy-db-postgresql-headless   ClusterIP   None          <none>        5432/TCP   3m33s\n```", "```\nkubectl get statefulset\n\nNAME               READY   AGE\nmy-db-postgresql   1/1     4m24s\n```", "```\nkubectl get secrets\n\nNAME                          TYPE                                  DATA   AGE\nmy-db-postgresql              Opaque                                2      5m23s\nsh.helm.release.v1.my-db.v1   helm.sh/release.v1                    1      5m24s\n```", "```\nhelm show values bitnami/postgresql\n```", "```\n## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies\n## configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets\n## and storageClass\n##\n\n## @param global.imageRegistry Global Docker image registry\n## @param global.imagePullSecrets Global Docker registry secret names as an array\n## @param global.storageClass Global StorageClass for Persistent Volume(s)\n##\nglobal:\n  imageRegistry: \"\"\n  ## E.g.\n  ## imagePullSecrets:\n  ##   - myRegistryKeySecretName\n  ##\n  imagePullSecrets: []\n...\n```", "```\nmkdir music\nmkdir music/templates\n\ncd music\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Chart.Name}}\n  labels:\n    app.kubernetes.io/name: {{ .Chart.Name}}\n    {{- if .Chart.AppVersion }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}\n    {{- end }}\nspec:\n  replicas: {{ .Values.replicaCount }}\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: {{ .Chart.Name}}\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: {{ .Chart.Name}}\n    spec:\n      containers:\n          - image: \"{{ .Values.image.repository }}:↳\n          {{ .Values.image.tag | default .Chart.AppVersion}}\"\n            imagePullPolicy: {{ .Values.image.pullPolicy }}\n            name: {{ .Chart.Name}}\n            ports:\n              - containerPort: {{ .Values.image.containerPort }}\n                name: http\n                protocol: TCP\n            env:\n              - name: QUARKUS_DATASOURCE_JDBC_URL\n                value: {{ .Values.postgresql.server | ↳\n                default (printf \"%s-postgresql\" ( .Release.Name )) | quote }}\n              - name: QUARKUS_DATASOURCE_USERNAME\n                value: {{ .Values.postgresql.postgresqlUsername | ↳\n                default (printf \"postgres\" ) | quote }}\n              - name: QUARKUS_DATASOURCE_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.postgresql.secretName | ↳\n                    default (printf \"%s-postgresql\" ( .Release.Name )) | quote }}\n                    key: {{ .Values.postgresql.secretKey }}\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n  name: {{ .Chart.Name }}\nspec:\n  ports:\n    - name: http\n      port: {{ .Values.image.containerPort }}\n      targetPort: {{ .Values.image.containerPort }}\n  selector:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n```", "```\napiVersion: v2\nname: music\ndescription: A Helm chart for Music service\n\ntype: application\nversion: 0.1.0\nappVersion: \"1.0.0\"\n\ndependencies: ![1](assets/1.png)\n  - name: postgresql ![2](assets/2.png)\n    version: 10.16.2 ![3](assets/3.png)\n    repository: \"https://charts.bitnami.com/bitnami\" ![4](assets/4.png)\n```", "```\nimage:\n  repository: quay.io/gitops-cookbook/music\n  tag: \"1.0.0\"\n  pullPolicy: Always\n  containerPort: 8080\n\nreplicaCount: 1\n\npostgresql: ![1](assets/1.png)\n  server: jdbc:postgresql://music-db-postgresql:5432/mydb\n  postgresqlUsername: my-default\n  secretName: music-db-postgresql\n  secretKey: postgresql-password\n```", "```\nhelm dependency update\n```", "```\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the \"stable\" chart repository\n...Successfully got an update from the \"bitnami\" chart repository\nUpdate Complete. ⎈Happy Helming!⎈\nSaving 1 charts\nDownloading postgresql from repo https://charts.bitnami.com/bitnami\nDeleting outdated charts\n```", "```\nmusic\n├── Chart.lock\n├── Chart.yaml\n├── charts\n│    └── postgresql-10.16.2.tgz ![1](assets/1.png)\n├── templates\n│    ├── deployment.yaml\n│    └── service.yaml\n└── values.yaml\n```", "```\nhelm install music-db --set postgresql.postgresqlPassword=postgres postgresql.postgresqlDatabase=mydb,postgresql.persistence.enabled=false .\n```", "```\nNAME: music-db\nLAST DEPLOYED: Tue Jan 25 17:53:17 2022\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n```", "```\nkubectl get pods\n\nNAME                     READY   STATUS    RESTARTS      AGE\nmusic-67dbf986b7-5xkqm   1/1     Running   1 (32s ago)   39s\nmusic-db-postgresql-0    1/1     Running   0             39s\n```", "```\nkubectl get statefulset\n\nNAME                  READY   AGE\nmusic-db-postgresql   1/1     53s\n```", "```\nkubectl get services\n\nNAME                         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE\nkubernetes                   ClusterIP   10.96.0.1     <none>        443/TCP    40d\nmusic                        ClusterIP   10.104.110.34 <none>        8080/TCP   82s\nmusic-db-postgresql          ClusterIP   10.110.71.13  <none>        5432/TCP   82s\nmusic-db-postgresql-headless ClusterIP   None          <none>        5432/TCP   82s\n```", "```\nkubectl port-forward service/music 8080:8080\n\nForwarding from 127.0.0.1:8080 -> 8080\nForwarding from [::1]:8080 -> 8080\n```", "```\ncurl localhost:8080/song\n```", "```\n[\n  {\n    \"id\": 1,\n    \"artist\": \"DT\",\n    \"name\": \"Quiero Munchies\"\n  },\n  {\n    \"id\": 2,\n    \"artist\": \"Lin-Manuel Miranda\",\n    \"name\": \"We Don't Talk About Bruno\"\n  },\n  {\n    \"id\": 3,\n    \"artist\": \"Imagination\",\n    \"name\": \"Just An Illusion\"\n  },\n  {\n    \"id\": 4,\n    \"artist\": \"Txarango\",\n    \"name\": \"Tanca Els Ulls\"\n  },\n  {\n    \"id\": 5,\n    \"artist\": \"Halsey\",\n    \"name\": \"Could Have Been Me\"\n  }\n]\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Chart.Name}}\n  labels:\n    app.kubernetes.io/name: {{ .Chart.Name}}\n    {{- if .Chart.AppVersion }}\n    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}\n    {{- end }}\nspec:\n  replicas: {{ .Values.replicaCount }}\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: {{ .Chart.Name}}\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: {{ .Chart.Name}}\n    spec:\n      containers:\n          - image: \"{{ .Values.image.repository }}:↳\n          {{ .Values.image.tag | default .Chart.AppVersion}}\"\n            imagePullPolicy: {{ .Values.image.pullPolicy }}\n            name: {{ .Chart.Name}}\n            ports:\n              - containerPort: {{ .Values.image.containerPort }}\n                name: http\n                protocol: TCP\n            env:\n              - name: GREETING\n                valueFrom:\n                  configMapKeyRef:\n                    name: {{ .Values.configmap.name}} ![1](assets/1.png)\n                    key: greeting ![2](assets/2.png)\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: greeting-config ![1](assets/1.png)\ndata:\n  greeting: Aloha ![2](assets/2.png)\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n  name: {{ .Chart.Name }}\nspec:\n  ports:\n    - name: http\n      port: {{ .Values.image.containerPort }}\n      targetPort: {{ .Values.image.containerPort }}\n  selector:\n    app.kubernetes.io/name: {{ .Chart.Name }}\n```", "```\nimage:\n  repository: quay.io/gitops-cookbook/greetings\n  tag: \"1.0.0\"\n  pullPolicy: Always\n  containerPort: 8080\n\nreplicaCount: 1\n\nconfigmap:\n  name: greeting-config ![1](assets/1.png)\n```", "```\nhelm install greetings .\n```", "```\nkubectl port-forward service/greetings 8080:8080\n```", "```\ncurl localhost:8080\nAloha Ada ![1](assets/1.png)\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: greeting-config\ndata:\n  greeting: Hola ![1](assets/1.png)\n```", "```\nhelm upgrade greetings .\n```", "```\ncurl localhost:8080\nAloha Alexandra ![1](assets/1.png)\n```", "```\nkubectl get pods\n\nNAME                         READY   STATUS    RESTARTS   AGE\ngreetings-64ddfcb649-m5pml   1/1     Running   0          2m21s ![1](assets/1.png)\n```", "```\nspec:\n  replicas: {{ .Values.replicaCount }}\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: {{ .Chart.Name}}\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: {{ .Chart.Name}}\n      annotations:\n        checksum/config: {{ include (print $.Template.BasePath \"/configmap.yaml\")↳\n         . | sha256sum }} ![1](assets/1.png)\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: greeting-config\ndata:\n  greeting: Namaste ![1](assets/1.png)\n```", "```\nhelm upgrade greetings .\n```", "```\ncurl localhost:8080\nNamaste Alexandra ![1](assets/1.png)\n```", "```\nkubectl get pods\n\nNAME                         READY   STATUS              RESTARTS   AGE\ngreetings-5c6b86dbbd-2p9bd   0/1     ContainerCreating   0          3s ![1](assets/1.png)\ngreetings-64ddfcb649-m5pml   1/1     Running             0          2m21s\n```", "```\nkubectl describe pod greetings-5c6b86dbbd-s4n7b\n```", "```\nName:                 greetings-5c6b86dbbd-s4n7b\nNamespace:            asotobue-dev\nPriority:             -3\nPriority Class Name:  sandbox-users-pods\nNode:                 ip-10-0-186-34.ec2.internal/10.0.186.34\nStart Time:           Thu, 27 Jan 2022 11:55:02 +0100\nLabels:               app.kubernetes.io/name=greetings\n                      pod-template-hash=5c6b86dbbd\nAnnotations:          checksum/config:↳\n59e9100616a11d65b691a914cd429dc6011a34e02465173f5f53584b4aa7cba8 ![1](assets/1.png)\n```"]