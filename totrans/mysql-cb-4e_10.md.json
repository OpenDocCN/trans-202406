["```\nmysql> `SELECT * FROM states ORDER BY name;`\n+----------------+--------+------------+----------+\n| name           | abbrev | statehood  | pop      |\n+----------------+--------+------------+----------+\n| Alabama        | AL     | 1819-12-14 |  5039877 |\n| Alaska         | AK     | 1959-01-03 |   732673 |\n| Arizona        | AZ     | 1912-02-14 |  7276316 |\n| Arkansas       | AR     | 1836-06-15 |  3025891 |\n| California     | CA     | 1850-09-09 | 39237836 |\n| Colorado       | CO     | 1876-08-01 |  5812069 |\n| Connecticut    | CT     | 1788-01-09 |  3605597 |\n…\n```", "```\nmysql> `SELECT COUNT(*) FROM driver_log;`\n+----------+\n| COUNT(*) |\n+----------+\n|       10 |\n+----------+\n```", "```\nmysql> `SELECT COUNT(*) FROM states;`\n+----------+\n| COUNT(*) |\n+----------+\n|       50 |\n+----------+\n```", "```\nSELECT TABLE_ROWS FROM INFORMATION_SCHEMA.TABLES\nWHERE TABLE_SCHEMA = 'cookbook' AND TABLE_NAME = 'states';\n```", "```\n    mysql> `SELECT COUNT(*) FROM driver_log WHERE miles > 200;`\n    +----------+\n    | COUNT(*) |\n    +----------+\n    |        4 |\n    +----------+\n    ```", "```\n    mysql> `SELECT COUNT(*) FROM driver_log WHERE name = 'Suzi';`\n    +----------+\n    | COUNT(*) |\n    +----------+\n    |        2 |\n    +----------+\n    ```", "```\n    mysql> `SELECT COUNT(*) FROM states`\n        -> `WHERE statehood BETWEEN '1800-01-01' AND '1899-12-31';`\n    +----------+\n    | COUNT(*) |\n    +----------+\n    |       29 |\n    +----------+\n    ```", "```\nSELECT COUNT(*), COUNT(mycol) FROM mytbl;\n```", "```\nmysql> `SELECT`\n    -> `COUNT(IF(DAYOFWEEK(trav_date)=7,1,NULL)) AS 'Saturday trips',`\n    -> `COUNT(IF(DAYOFWEEK(trav_date)=1,1,NULL)) AS 'Sunday trips'`\n    -> `FROM driver_log;`\n+----------------+--------------+\n| Saturday trips | Sunday trips |\n+----------------+--------------+\n|              3 |            1 |\n+----------------+--------------+\n```", "```\nmysql> `SELECT`\n    -> `COUNT(IF(DAYOFWEEK(trav_date) IN (1,7),1,NULL)) AS 'weekend trips',`\n    -> `COUNT(IF(DAYOFWEEK(trav_date) IN (1,7),NULL,1)) AS 'weekday trips'`\n    -> `FROM driver_log;`\n+---------------+---------------+\n| weekend trips | weekday trips |\n+---------------+---------------+\n|             4 |             6 |\n+---------------+---------------+\n```", "```\n    mysql> `SELECT`\n        -> `MIN(t) AS earliest, MAX(t) AS latest,`\n        -> `MIN(size) AS smallest, MAX(size) AS largest`\n        -> `FROM mail;`\n    +---------------------+---------------------+----------+---------+\n    | earliest            | latest              | smallest | largest |\n    +---------------------+---------------------+----------+---------+\n    | 2014-05-11 10:15:08 | 2014-05-19 22:21:51 |      271 | 2394482 |\n    +---------------------+---------------------+----------+---------+\n    ```", "```\n    mysql> `SELECT MIN(pop) AS 'fewest people', MAX(pop) AS 'most people'`\n        -> `FROM states;`\n    +---------------+-------------+\n    | fewest people | most people |\n    +---------------+-------------+\n    |        578803 |    39237836 |\n    +---------------+-------------+\n    ```", "```\n    mysql> `SELECT`\n        -> `MIN(name) AS first,`\n        -> `MAX(name) AS last,`\n        -> `MIN(CHAR_LENGTH(name)) AS shortest,`\n        -> `MAX(CHAR_LENGTH(name)) AS longest`\n        -> `FROM states;`\n    +---------+---------+----------+---------+\n    | first   | last    | shortest | longest |\n    +---------+---------+----------+---------+\n    | Alabama | Wyoming |        4 |      14 |\n    +---------+---------+----------+---------+\n    ```", "```\n    mysql> `SELECT`\n        -> `SUM(size) AS 'total traffic',`\n        -> `AVG(size) AS 'average message size'`\n        -> `FROM mail;`\n    +---------------+----------------------+\n    | total traffic | average message size |\n    +---------------+----------------------+\n    |       3798185 |          237386.5625 |\n    +---------------+----------------------+\n    ```", "```\n    mysql> `SELECT`\n        -> `SUM(miles) AS 'total miles',`\n        -> `AVG(miles) AS 'average miles/day'`\n        -> `FROM driver_log;`\n    +-------------+-------------------+\n    | total miles | average miles/day |\n    +-------------+-------------------+\n    |        2166 |          216.6000 |\n    +-------------+-------------------+\n    ```", "```\n    mysql> `SELECT SUM(pop) FROM states;`\n    +-----------+\n    | SUM(pop)  |\n    +-----------+\n    | 331223695 |\n    +-----------+\n    ```", "```\nmysql> `SELECT t1 FROM time_val;`\n+----------+\n| t1       |\n+----------+\n| 15:00:00 |\n| 05:01:30 |\n| 12:30:20 |\n+----------+\n```", "```\nmysql> `SELECT SUM(TIME_TO_SEC(t1)) AS 'total seconds',`\n    -> `SEC_TO_TIME(SUM(TIME_TO_SEC(t1))) AS 'total time'`\n    -> `FROM time_val;`\n+---------------+------------+\n| total seconds | total time |\n+---------------+------------+\n|        117110 | 32:31:50   |\n+---------------+------------+\n```", "```\nmysql> `SELECT DISTINCT name FROM driver_log ORDER BY name;`\n+-------+\n| name  |\n+-------+\n| Ben   |\n| Henry |\n| Suzi  |\n+-------+\n```", "```\nmysql> `SELECT name FROM driver_log ORDER BY NAME;`\n+-------+\n| name  |\n+-------+\n| Ben   |\n| Ben   |\n| Ben   |\n| Henry |\n| Henry |\n| Henry |\n| Henry |\n| Henry |\n| Suzi  |\n| Suzi  |\n+-------+\n```", "```\nmysql> `SELECT COUNT(DISTINCT name) FROM driver_log;`\n+----------------------+\n| COUNT(DISTINCT name) |\n+----------------------+\n|                    3 |\n+----------------------+\n```", "```\nCOUNT(DISTINCT *`val`*) + IF(COUNT(IF(*`val`* IS NULL,1,NULL))=0,0,1)\nCOUNT(DISTINCT *`val`*) + IF(SUM(ISNULL(*`val`*))=0,0,1)\nCOUNT(DISTINCT *`val`*) + (SUM(ISNULL(*`val`*))<>0);\n```", "```\nmysql> `SELECT DISTINCT srcuser, dstuser FROM mail`\n    -> `ORDER BY srcuser, dstuser;`\n+---------+---------+\n| srcuser | dstuser |\n+---------+---------+\n| barb    | barb    |\n| barb    | tricia  |\n| gene    | barb    |\n| gene    | gene    |\n| gene    | tricia  |\n| phil    | barb    |\n| phil    | phil    |\n| phil    | tricia  |\n| tricia  | gene    |\n| tricia  | phil    |\n+---------+---------+\nmysql> `SELECT COUNT(DISTINCT srcuser, dstuser) FROM mail;`\n+----------------------------------+\n| COUNT(DISTINCT srcuser, dstuser) |\n+----------------------------------+\n|                               10 |\n+----------------------------------+\n```", "```\nmysql> `CREATE VIEW trip_summary_view AS`\n    -> `SELECT`\n    -> `COUNT(IF(DAYOFWEEK(trav_date) IN (1,7),1,NULL)) AS weekend_trips,`\n    -> `COUNT(IF(DAYOFWEEK(trav_date) IN (1,7),NULL,1)) AS weekday_trips`\n    -> `FROM driver_log;`\n```", "```\nmysql> `SELECT * FROM trip_summary_view;`\n+---------------+---------------+\n| weekend_trips | weekday_trips |\n+---------------+---------------+\n|             4 |             6 |\n+---------------+---------------+\n```", "```\nmysql> `SELECT MAX(pop) FROM states;`\n+----------+\n| MAX(pop) |\n+----------+\n| 39237836 |\n+----------+\n```", "```\nmysql> `SELECT MAX(pop), name FROM states WHERE pop = MAX(pop);`\nERROR 1111 (HY000): Invalid use of group function\n```", "```\nmysql> `SET @max = (SELECT MAX(pop) FROM states);`\nmysql> `SELECT pop AS 'highest population', name FROM states WHERE pop = @max;`\n+--------------------+------------+\n| highest population | name       |\n+--------------------+------------+\n|           39237836 | California |\n+--------------------+------------+\n```", "```\nSELECT pop AS 'highest population', name FROM states\nWHERE pop = (SELECT MAX(pop) FROM states);\n```", "```\nmysql> `SELECT MAX(CHAR_LENGTH(reviews_virtual)) FROM reviews;`\n+-----------------------------------+\n| MIN(CHAR_LENGTH(reviews_virtual)) |\n+-----------------------------------+\n|                                 2 |\n+-----------------------------------+\n```", "```\nmysql> `SELECT JSON_EXTRACT(appliences_review, \"$. reviewTime\") as ReviewTime,`\n    -> `JSON_EXTRACT(appliences_review, \"$.reviewerID\") as ReviwerID,` \n    -> `JSON_EXTRACT(appliences_review, \"$.asin\") as ProductID` \n    -> `JSON_EXTRACT(appliences_review, \"$.overall\") as Rating FROM` \n    -> `reviews WHERE CHAR_LENGTH(reviews_virtual) =` \n    -> `(SELECT MIN(CHAR_LENGTH(reviews_virtual)) FROM reviews);` \n+---------------+------------------+--------------+--------+\n| ReviewTime    | ReviwerID        | ProductID    | Rating |\n+---------------+------------------+--------------+--------+\n| \"03 8, 2015\"  | \"A3B1B4E184FSUZ\" | \"B000VL060M\" | 5.0    |\n| \"03 8, 2015\"  | \"A3B1B4E184FSUZ\" | \"B0015UGPWQ\" | 5.0    |\n| \"03 8, 2015\"  | \"A3B1B4E184FSUZ\" | \"B000VL060M\" | 5.0    |\n| \"03 8, 2015\"  | \"A3B1B4E184FSUZ\" | \"B0015UGPWQ\" | 5.0    |\n| \"02 9, 2015\"  | \"A3B1B4E184FSUZ\" | \"B0042U16YI\" | 5.0    |\n| \"07 25, 2016\" | \"AJPRN1TD1A0SD\"  | \"B00BIZDI0A\" | 3.0    |\n+---------------+------------------+--------------+--------+\n```", "```\nmysql> `CREATE TEMPORARY TABLE tmp SELECT MAX(pop) as maxpop FROM states;`\nmysql> `SELECT states.* FROM states INNER JOIN tmp`\n    -> `ON states.pop = tmp.maxpop;`\n+------------+--------+------------+----------+\n| name       | abbrev | statehood  | pop      |\n+------------+--------+------------+----------+\n| California | CA     | 1850-09-09 | 39237836 |\n+------------+--------+------------+----------+\n```", "```\nmysql> `WITH` `maxpop`\n    -> `AS` `(``SELECT` `MAX``(``pop``)` `as` `maxpop` `FROM` `states``)`\n    -> `SELECT` `states``.``*` `FROM` `states`\n    -> `JOIN` `maxpop` `ON` `states``.``pop` `=` `maxpop``.``maxpop``;`\n+------------+--------+------------+----------+ | name       | abbrev | statehood  | pop      |\n+------------+--------+------------+----------+ | California | CA     | 1850-09-09 | 39237836 |\n+------------+--------+------------+----------+ 1 row in set (0.00 sec)\n```", "```\n    SELECT\n    MIN(str_col COLLATE utf8mb4_0900_as_cs) AS min,\n    MAX(str_col COLLATE utf8mb4_0900_as_cs) AS max\n    FROM tbl;\n    ```", "```\n    SELECT\n    MIN(str_col COLLATE utf8mb4_0900_ai_ci) AS min,\n    MAX(str_col COLLATE utf8mb4_0900_ai_ci) AS max\n    FROM tbl;\n    ```", "```\n    SELECT\n    MIN(UPPER(str_col)) AS min,\n    MAX(UPPER(str_col)) AS max\n    FROM tbl;\n    ```", "```\n    SELECT\n    MIN(CONVERT(str_col USING utf8mb4) COLLATE utf8mb4_0900_ai_ci) AS min,\n    MAX(CONVERT(str_col USING utf8mb4) COLLATE utf8mb4_0900_ai_ci) AS max\n    FROM tbl;\n    ```", "```\nmysql> `SELECT COUNT(*) FROM mail;`\n+----------+\n| COUNT(*) |\n+----------+\n|       16 |\n+----------+\n```", "```\nmysql> `SELECT srcuser, COUNT(*) FROM mail GROUP BY srcuser;`\n+---------+----------+\n| srcuser | COUNT(*) |\n+---------+----------+\n| barb    |        3 |\n| gene    |        6 |\n| phil    |        5 |\n| tricia  |        2 |\n+---------+----------+\n```", "```\nmysql> `SELECT srcuser,`\n    -> `SUM(size) AS 'total bytes',`\n    -> `AVG(size) AS 'bytes per message'`\n    -> `FROM mail GROUP BY srcuser;`\n+---------+-------------+-------------------+\n| srcuser | total bytes | bytes per message |\n+---------+-------------+-------------------+\n| barb    |      156696 |        52232.0000 |\n| gene    |     1033108 |       172184.6667 |\n| phil    |       18974 |         3794.8000 |\n| tricia  |     2589407 |      1294703.5000 |\n+---------+-------------+-------------------+\n```", "```\nmysql> `SELECT srcuser, srchost, COUNT(srcuser) FROM mail`\n    -> `GROUP BY srcuser, srchost;`\n+---------+---------+----------------+\n| srcuser | srchost | COUNT(srcuser) |\n+---------+---------+----------------+\n| barb    | saturn  |              2 |\n| barb    | venus   |              1 |\n| gene    | mars    |              2 |\n| gene    | saturn  |              2 |\n| gene    | venus   |              2 |\n| phil    | mars    |              3 |\n| phil    | venus   |              2 |\n| tricia  | mars    |              1 |\n| tricia  | saturn  |              1 |\n+---------+---------+----------------+\n```", "```\nmysql> `SELECT srcuser, MAX(size), MAX(t) FROM mail GROUP BY srcuser;`\n+---------+-----------+---------------------+\n| srcuser | MAX(size) | MAX(t)              |\n+---------+-----------+---------------------+\n| barb    |     98151 | 2014-05-14 14:42:21 |\n| gene    |    998532 | 2014-05-19 22:21:51 |\n| phil    |     10294 | 2014-05-19 12:49:23 |\n| tricia  |   2394482 | 2014-05-14 17:03:01 |\n+---------+-----------+---------------------+\n```", "```\nmysql> `SELECT srcuser, dstuser, MAX(size) FROM mail GROUP BY srcuser, dstuser;`\n+---------+---------+-----------+\n| srcuser | dstuser | MAX(size) |\n+---------+---------+-----------+\n| barb    | barb    |     98151 |\n| barb    | tricia  |     58274 |\n| gene    | barb    |      2291 |\n| gene    | gene    |     23992 |\n| gene    | tricia  |    998532 |\n| phil    | barb    |     10294 |\n| phil    | phil    |      1048 |\n| phil    | tricia  |      5781 |\n| tricia  | gene    |    194925 |\n| tricia  | phil    |   2394482 |\n+---------+---------+-----------+\n```", "```\nmysql> `SELECT name, MAX(miles) AS 'longest trip'`\n    -> `FROM driver_log GROUP BY name;`\n+-------+--------------+\n| name  | longest trip |\n+-------+--------------+\n| Ben   |          152 |\n| Henry |          300 |\n| Suzi  |          502 |\n+-------+--------------+\n```", "```\nmysql> `SELECT name, trav_date, MAX(miles) AS 'longest trip'`\n    -> `FROM driver_log GROUP BY name;`\n+-------+------------+--------------+\n| name  | trav_date  | longest trip |\n+-------+------------+--------------+\n| Ben   | 2014-07-30 |          152 |\n| Henry | 2014-07-29 |          300 |\n| Suzi  | 2014-07-29 |          502 |\n+-------+------------+--------------+\n```", "```\n+--------+-------+------------+-------+\n| rec_id | name  | trav_date  | miles |\n+--------+-------+------------+-------+\n|      1 | Ben   | 2014-07-30 |   152 |    ← Ben's longest trip\n|      2 | Suzi  | 2014-07-29 |   391 |\n|      3 | Henry | 2014-07-29 |   300 |    ← Henry's longest trip\n|      4 | Henry | 2014-07-27 |    96 |\n|      5 | Ben   | 2014-07-29 |   131 |\n|      6 | Henry | 2014-07-26 |   115 |\n|      7 | Suzi  | 2014-08-02 |   502 |    ← Suzi's longest trip\n|      8 | Henry | 2014-08-01 |   197 |\n|      9 | Ben   | 2014-08-02 |    79 |\n|     10 | Henry | 2014-07-30 |   203 |\n+--------+-------+------------+-------+\n```", "```\nmysql> `SET sql_mode = 'ONLY_FULL_GROUP_BY';`\nmysql> `SELECT name, trav_date, MAX(miles) AS 'longest trip'`\n    -> `FROM driver_log GROUP BY name;`\nERROR 1055 (42000): 'cookbook.driver_log.trav_date' isn't in GROUP BY\n```", "```\nmysql> `CREATE TEMPORARY TABLE t`\n    -> `SELECT name, MAX(miles) AS miles FROM driver_log GROUP BY name;`\nmysql> `SELECT d.name, d.trav_date, d.miles AS 'longest trip'`\n    -> `FROM driver_log AS d INNER JOIN t USING (name, miles) ORDER BY name;`\n+-------+------------+--------------+\n| name  | trav_date  | longest trip |\n+-------+------------+--------------+\n| Ben   | 2014-07-30 |          152 |\n| Henry | 2014-07-29 |          300 |\n| Suzi  | 2014-08-02 |          502 |\n+-------+------------+--------------+\n```", "```\nmysql>  `WITH` `t` `AS`\n    ->  `(``SELECT` `name``,` `MAX``(``miles``)` `AS` `miles` `FROM` `driver_log` `GROUP` `BY` `name``)`\n    ->  `SELECT` `d``.``name``,` `d``.``trav_date``,` `d``.``miles` `AS` `'longest trip'`\n    ->  `FROM` `driver_log` `AS` `d` `INNER` `JOIN` `t` `USING` `(``name``,` `miles``)` `ORDER` `BY` `name``;`\n+-------+------------+--------------+ | name  | trav_date  | longest trip |\n+-------+------------+--------------+ | Ben   | 2014-07-30 |          152 |\n| Henry | 2014-07-29 |          300 |\n| Suzi  | 2014-08-02 |          502 |\n+-------+------------+--------------+ 3 rows in set (0.01 sec)\n```", "```\nmysql> `SELECT subject, test, score FROM expt ORDER BY subject, test;`\n+---------+------+-------+\n| subject | test | score |\n+---------+------+-------+\n| Jane    | A    |    47 |\n| Jane    | B    |    50 |\n| Jane    | C    |  NULL |\n| Jane    | D    |  NULL |\n| Marvin  | A    |    52 |\n| Marvin  | B    |    45 |\n| Marvin  | C    |    53 |\n| Marvin  | D    |  NULL |\n+---------+------+-------+\n```", "```\nmysql> `SELECT subject,`\n    -> `COUNT(score) AS n,`\n    -> `SUM(score) AS total,`\n    -> `AVG(score) AS average,`\n    -> `MIN(score) AS lowest,`\n    -> `MAX(score) AS highest`\n    -> `FROM expt GROUP BY subject;`\n+---------+---+-------+---------+--------+---------+\n| subject | n | total | average | lowest | highest |\n+---------+---+-------+---------+--------+---------+\n| Jane    | 2 |    97 | 48.5000 |     47 |      50 |\n| Marvin  | 3 |   150 | 50.0000 |     45 |      53 |\n+---------+---+-------+---------+--------+---------+\n```", "```\nmysql> `SELECT subject,`\n    -> `COUNT(score) AS n,`\n    -> `SUM(score) AS total,`\n    -> `AVG(score) AS average,`\n    -> `MIN(score) AS lowest,`\n    -> `MAX(score) AS highest`\n    -> `FROM expt WHERE score IS NULL GROUP BY subject;`\n+---------+---+-------+---------+--------+---------+\n| subject | n | total | average | lowest | highest |\n+---------+---+-------+---------+--------+---------+\n| Jane    | 0 |  NULL |    NULL |   NULL |    NULL |\n| Marvin  | 0 |  NULL |    NULL |   NULL |    NULL |\n+---------+---+-------+---------+--------+---------+\n```", "```\nmysql> `SELECT subject,`\n    -> `COUNT(score) AS n,`\n    -> `IFNULL(SUM(score),0) AS total,`\n    -> `IFNULL(AVG(score),0) AS average,`\n    -> `IFNULL(MIN(score),'Unknown') AS lowest,`\n    -> `IFNULL(MAX(score),'Unknown') AS highest`\n    -> `FROM expt WHERE score IS NULL GROUP BY subject;`\n+---------+---+-------+---------+---------+---------+\n| subject | n | total | average | lowest  | highest |\n+---------+---+-------+---------+---------+---------+\n| Jane    | 0 |     0 |  0.0000 | Unknown | Unknown |\n| Marvin  | 0 |     0 |  0.0000 | Unknown | Unknown |\n+---------+---+-------+---------+---------+---------+\n```", "```\nmysql> `SELECT COUNT(*), COUNT(score) FROM expt;`\n+----------+--------------+\n| COUNT(*) | COUNT(score) |\n+----------+--------------+\n|        8 |            5 |\n+----------+--------------+\n```", "```\nmysql> `SELECT COUNT(*) - COUNT(score) AS missing FROM expt;`\n+---------+\n| missing |\n+---------+\n|       3 |\n+---------+\n```", "```\nmysql> `SELECT subject,`\n    -> `COUNT(*) AS total,`\n    -> `COUNT(score) AS 'nonmissing',`\n    -> `COUNT(*) - COUNT(score) AS missing`\n    -> `FROM expt GROUP BY subject;`\n+---------+-------+------------+---------+\n| subject | total | nonmissing | missing |\n+---------+-------+------------+---------+\n| Jane    |     4 |          2 |       2 |\n| Marvin  |     4 |          3 |       1 |\n+---------+-------+------------+---------+\n```", "```\nmysql> `SELECT COUNT(*), name FROM driver_log`\n    -> `WHERE COUNT(*) > 3`\n    -> `GROUP BY name;`\nERROR 1111 (HY000): Invalid use of group function\n```", "```\nmysql> `SELECT COUNT(*), name FROM driver_log`\n    -> `GROUP BY name`\n    -> `HAVING COUNT(*) > 3;`\n+----------+-------+\n| COUNT(*) | name  |\n+----------+-------+\n|        5 | Henry |\n+----------+-------+\n```", "```\nmysql> `SELECT COUNT(*) AS count, name FROM driver_log`\n    -> `GROUP BY name`\n    -> `HAVING count > 3;`\n+-------+-------+\n| count | name  |\n+-------+-------+\n|     5 | Henry |\n+-------+-------+\n```", "```\nmysql> `SELECT trav_date, COUNT(trav_date) FROM driver_log`\n    -> `GROUP BY trav_date HAVING COUNT(trav_date) = 1;`\n+------------+------------------+\n| trav_date  | COUNT(trav_date) |\n+------------+------------------+\n| 2014-07-26 |                1 |\n| 2014-07-27 |                1 |\n| 2014-08-01 |                1 |\n+------------+------------------+\nmysql> `SELECT trav_date, COUNT(trav_date) FROM driver_log`\n    -> `GROUP BY trav_date HAVING COUNT(trav_date) > 1;`\n+------------+------------------+\n| trav_date  | COUNT(trav_date) |\n+------------+------------------+\n| 2014-07-29 |                3 |\n| 2014-07-30 |                2 |\n| 2014-08-02 |                2 |\n+------------+------------------+\n```", "```\nmysql> `SELECT srcuser, dstuser FROM mail`\n    -> `GROUP BY srcuser, dstuser HAVING COUNT(*) = 1;`\n+---------+---------+\n| srcuser | dstuser |\n+---------+---------+\n| barb    | barb    |\n| gene    | tricia  |\n| phil    | barb    |\n| tricia  | gene    |\n| tricia  | phil    |\n+---------+---------+\n```", "```\nmysql> `SELECT`\n    -> `MONTHNAME(statehood) AS month,`\n    -> `DAYOFMONTH(statehood) AS day,`\n    -> `COUNT(*) AS count`\n    -> `FROM states GROUP BY month, day HAVING count > 1;`\n+----------+------+-------+\n| month    | day  | count |\n+----------+------+-------+\n| February |   14 |     2 |\n| June     |    1 |     2 |\n| March    |    1 |     2 |\n| May      |   29 |     2 |\n| November |    2 |     2 |\n+----------+------+-------+\n```", "```\nmysql> `SELECT COUNT(pop), COUNT(DISTINCT pop) FROM states;`\n+------------+---------------------+\n| COUNT(pop) | COUNT(DISTINCT pop) |\n+------------+---------------------+\n|         50 |                  50 |\n+------------+---------------------+\n```", "```\nmysql> `SELECT MIN(pop), MAX(pop) FROM states;`\n+----------+----------+\n| MIN(pop) | MAX(pop) |\n+----------+----------+\n|   578803 | 39237836 |\n+----------+----------+\n```", "```\nmysql> ``SELECT FLOOR(pop/5000000) AS `max population (millions)`,``\n    -> `` COUNT(*) AS `number of states` ``\n    -> `` FROM states GROUP BY `max population (millions)` ``\n    -> ``ORDER BY `max population (millions)`;``\n+---------------------------+------------------+\n| max population (millions) | number of states |\n+---------------------------+------------------+\n|                         0 |               26 |\n|                         1 |               14 |\n|                         2 |                6 |\n|                         3 |                1 |\n|                         4 |                1 |\n|                         5 |                1 |\n|                         7 |                1 |\n+---------------------------+------------------+\n```", "```\nmysql> ``SELECT FLOOR(pop/5000000)*5 AS `max population (millions)`,``\n    -> `` COUNT(*) AS `number of states` ``\n    -> `` FROM states GROUP BY `max population (millions)` ``\n    -> ``ORDER BY `max population (millions)`;``\n+---------------------------+------------------+\n| max population (millions) | number of states |\n+---------------------------+------------------+\n|                         0 |               26 |\n|                         5 |               14 |\n|                        10 |                6 |\n|                        15 |                1 |\n|                        20 |                1 |\n|                        25 |                1 |\n|                        35 |                1 |\n+---------------------------+------------------+\n```", "```\nFLOOR((*`x`*+(*`n`*-1))/*`n`*)\n```", "```\nmysql> ``SELECT FLOOR((pop+4999999)/5000000)*5 AS `max population (millions)`,``\n    -> `` COUNT(*) AS `number of states` ``\n    -> `` FROM states GROUP BY `max population (millions)` ``\n    -> ``ORDER BY `max population (millions)`;``\n+---------------------------+------------------+\n| max population (millions) | number of states |\n+---------------------------+------------------+\n|                         5 |               26 |\n|                        10 |               14 |\n|                        15 |                6 |\n|                        20 |                1 |\n|                        25 |                1 |\n|                        30 |                1 |\n|                        40 |                1 |\n+---------------------------+------------------+\n```", "```\nmysql> ``SELECT FLOOR(LOG10(pop)) AS `log10(population)`,``\n    -> `` COUNT(*) AS `number of states` ``\n    -> ``FROM states GROUP BY `log10(population)`;``\n+-------------------+------------------+\n| log10(population) | number of states |\n+-------------------+------------------+\n|                 5 |                5 |\n|                 6 |               35 |\n|                 7 |               10 |\n+-------------------+------------------+\n```", "```\nmysql> `SELECT name, SUM(miles)`\n    -> `FROM driver_log`\n    -> `GROUP BY name;`\n+-------+------------+\n| name  | SUM(miles) |\n+-------+------------+\n| Ben   |        362 |\n| Henry |        911 |\n| Suzi  |        893 |\n+-------+------------+\n```", "```\nmysql> `SELECT name, SUM(miles)`\n    -> `FROM driver_log`\n    -> `GROUP BY name`\n    -> `HAVING SUM(miles) = MAX(SUM(miles));`\nERROR 1111 (HY000): Invalid use of group function\n```", "```\nmysql> `SELECT name, SUM(miles)`\n    -> `FROM driver_log`\n    -> `GROUP BY name`\n    -> `ORDER BY SUM(miles) DESC LIMIT 1;`\n+-------+------------+\n| name  | SUM(miles) |\n+-------+------------+\n| Henry |        911 |\n+-------+------------+\n```", "```\nmysql> `SELECT LEFT(name,1) AS letter, COUNT(*) FROM states`\n    -> `GROUP BY letter ORDER BY COUNT(*) DESC LIMIT 1;`\n+--------+----------+\n| letter | COUNT(*) |\n+--------+----------+\n| M      |        8 |\n+--------+----------+\n```", "```\nmysql> `SET @max = (SELECT COUNT(*) FROM states`\n    -> `GROUP BY LEFT(name,1) ORDER BY COUNT(*) DESC LIMIT 1);`\nmysql> `SELECT LEFT(name,1) AS letter, COUNT(*) FROM states`\n    -> `GROUP BY letter HAVING COUNT(*) = @max;`\n+--------+----------+\n| letter | COUNT(*) |\n+--------+----------+\n| M      |        8 |\n| N      |        8 |\n+--------+----------+\nmysql> `SELECT LEFT(name,1) AS letter, COUNT(*) FROM states`\n    -> `GROUP BY letter HAVING COUNT(*) =`\n    ->   `(SELECT COUNT(*) FROM states`\n    ->   `GROUP BY LEFT(name,1) ORDER BY COUNT(*) DESC LIMIT 1);`\n+--------+----------+\n| letter | COUNT(*) |\n+--------+----------+\n| M      |        8 |\n| N      |        8 |\n+--------+----------+\n```", "```\nmysql> `SELECT trav_date,`\n    -> `COUNT(*) AS 'number of drivers', SUM(miles) As 'miles logged'`\n    -> `FROM driver_log GROUP BY trav_date;`\n+------------+-------------------+--------------+\n| trav_date  | number of drivers | miles logged |\n+------------+-------------------+--------------+\n| 2014-07-26 |                 1 |          115 |\n| 2014-07-27 |                 1 |           96 |\n| 2014-07-29 |                 3 |          822 |\n| 2014-07-30 |                 2 |          355 |\n| 2014-08-01 |                 1 |          197 |\n| 2014-08-02 |                 2 |          581 |\n+------------+-------------------+--------------+\n```", "```\nmysql> `SELECT YEAR(trav_date) AS year, MONTH(trav_date) AS month,`\n    -> `COUNT(*) AS 'number of drivers', SUM(miles) As 'miles logged'`\n    -> `FROM driver_log GROUP BY year, month;`\n+------+-------+-------------------+--------------+\n| year | month | number of drivers | miles logged |\n+------+-------+-------------------+--------------+\n| 2014 |     7 |                 7 |         1388 |\n| 2014 |     8 |                 3 |          778 |\n+------+-------+-------------------+--------------+\n```", "```\n    GROUP BY DATE(*`col_name`*)\n    GROUP BY FROM_DAYS(TO_DAYS(*`col_name`*))\n    GROUP BY YEAR(*`col_name`*), MONTH(*`col_name`*), DAYOFMONTH(*`col_name`*)\n    GROUP BY DATE_FORMAT(*`col_name`*,'%Y-%m-%e')\n    ```", "```\n+-------+--------------+------------------------+\n| name  | miles/driver | percent of total miles |\n+-------+--------------+------------------------+\n| Ben   |          362 |                16.7128 |\n| Henry |          911 |                42.0591 |\n| Suzi  |          893 |                41.2281 |\n+-------+--------------+------------------------+\n```", "```\nmysql> `SELECT @total := SUM(miles) AS 'total miles' FROM driver_log;`\n+-------------+\n| total miles |\n+-------------+\n|        2166 |\n+-------------+\n```", "```\nmysql> `SELECT name,`\n    -> `SUM(miles) AS 'miles/driver',`\n    -> `(SUM(miles)*100)/@total AS 'percent of total miles'`\n    -> `FROM driver_log GROUP BY name;`\n+-------+--------------+------------------------+\n| name  | miles/driver | percent of total miles |\n+-------+--------------+------------------------+\n| Ben   |          362 |                16.7128 |\n| Henry |          911 |                42.0591 |\n| Suzi  |          893 |                41.2281 |\n+-------+--------------+------------------------+\n```", "```\nSELECT name,\nSUM(miles) AS 'miles/driver',\n(SUM(miles)*100)/(SELECT SUM(miles) FROM driver_log)\n  AS 'percent of total miles'\nFROM driver_log GROUP BY name;\n```", "```\nmysql> `SELECT name, AVG(miles) AS driver_avg FROM driver_log`\n    -> `GROUP BY name`\n    -> `HAVING driver_avg < (SELECT AVG(miles) FROM driver_log);`\n+-------+------------+\n| name  | driver_avg |\n+-------+------------+\n| Ben   |   120.6667 |\n| Henry |   182.2000 |\n+-------+------------+\n```", "```\nmysql> `SELECT name, SUM(miles) AS 'miles/driver'`\n    -> `FROM driver_log GROUP BY name WITH ROLLUP;`\n+-------+--------------+\n| name  | miles/driver |\n+-------+--------------+\n| Ben   |          362 |\n| Henry |          911 |\n| Suzi  |          893 |\n| NULL  |         2166 |\n+-------+--------------+\nmysql> `SELECT name, AVG(miles) AS driver_avg FROM driver_log`\n    -> `GROUP BY name WITH ROLLUP;`\n+-------+------------+\n| name  | driver_avg |\n+-------+------------+\n| Ben   |   120.6667 |\n| Henry |   182.2000 |\n| Suzi  |   446.5000 |\n| NULL  |   216.6000 |\n+-------+------------+\n```", "```\nmysql> `SELECT srcuser, dstuser, COUNT(*)`\n    -> `FROM mail GROUP BY srcuser, dstuser;`\n+---------+---------+----------+\n| srcuser | dstuser | COUNT(*) |\n+---------+---------+----------+\n| barb    | barb    |        1 |\n| barb    | tricia  |        2 |\n| gene    | barb    |        2 |\n| gene    | gene    |        3 |\n| gene    | tricia  |        1 |\n| phil    | barb    |        1 |\n| phil    | phil    |        2 |\n| phil    | tricia  |        2 |\n| tricia  | gene    |        1 |\n| tricia  | phil    |        1 |\n+---------+---------+----------+\n```", "```\nmysql> `SELECT srcuser, dstuser, COUNT(*)`\n    -> `FROM mail GROUP BY srcuser, dstuser WITH ROLLUP;`\n+---------+---------+----------+\n| srcuser | dstuser | COUNT(*) |\n+---------+---------+----------+\n| barb    | barb    |        1 |\n| barb    | tricia  |        2 |\n| barb    | NULL    |        3 |\n| gene    | barb    |        2 |\n| gene    | gene    |        3 |\n| gene    | tricia  |        1 |\n| gene    | NULL    |        6 |\n| phil    | barb    |        1 |\n| phil    | phil    |        2 |\n| phil    | tricia  |        2 |\n| phil    | NULL    |        5 |\n| tricia  | gene    |        1 |\n| tricia  | phil    |        1 |\n| tricia  | NULL    |        2 |\n| NULL    | NULL    |       16 |\n+---------+---------+----------+\n```", "```\nName: Ben; days on road: 3; miles driven: 362\n  date: 2014-07-29, trip length: 131\n  date: 2014-07-30, trip length: 152\n  date: 2014-08-02, trip length: 79\nName: Henry; days on road: 5; miles driven: 911\n  date: 2014-07-26, trip length: 115\n  date: 2014-07-27, trip length: 96\n  date: 2014-07-29, trip length: 300\n  date: 2014-07-30, trip length: 203\n  date: 2014-08-01, trip length: 197\nName: Suzi; days on road: 2; miles driven: 893\n  date: 2014-07-29, trip length: 391\n  date: 2014-08-02, trip length: 502\n```", "```\n# select total miles per driver and construct a dictionary that\n# maps each driver name to days on the road and miles driven\nname_map = {}\ncursor = conn.cursor()\ncursor.execute('''\n SELECT name, COUNT(name), SUM(miles)\n FROM driver_log GROUP BY name\n ''')\nfor (name, days, miles) in cursor:\n  name_map[name] = (days, miles)\n\n# select trips for each driver and print the report, displaying the\n# summary entry for each driver prior to the list of trips\ncursor.execute('''\n SELECT name, trav_date, miles\n FROM driver_log ORDER BY name, trav_date\n ''')\ncur_name = \"\"\nfor (name, trav_date, miles) in cursor:\n  if cur_name != name:  # new driver; print driver's summary info\n    print(\"Name: %s; days on road: %d; miles driven: %d\" %\n          (name, name_map[name][0], name_map[name][1]))\n    cur_name = name\n  print(\"  date: %s, trip length: %d\" % (trav_date, miles))\ncursor.close()\n```", "```\n# get list of trips for the drivers\ncursor = conn.cursor()\ncursor.execute('''\n SELECT name, trav_date, miles FROM driver_log\n ORDER BY name, trav_date\n ''')\n# fetch rows into data structure because we\n# must iterate through them multiple times\nrows = cursor.fetchall()\ncursor.close()\n\n# iterate through rows once to construct a dictionary that\n# maps each driver name to days on the road and miles driven\n# (the dictionary entries are lists rather than tuples because\n# we need mutable values that can be modified in the loop)\nname_map = {}\nfor (name, trav_date, miles) in rows:\n  if name not in name_map: # initialize entry if nonexistent\n    name_map[name] = [0, 0]\n  name_map[name][0] += 1     # count days\n  name_map[name][1] += miles # sum miles\n\n# iterate through rows again to print the report, displaying the\n# summary entry for each driver prior to the list of trips\ncur_name = \"\"\nfor (name, trav_date, miles) in rows:\n  if cur_name != name:  # new driver; print driver's summary info\n    print(\"Name: %s; days on road: %d; miles driven: %d\" %\n          (name, name_map[name][0], name_map[name][1]))\n    cur_name = name\n  print(\"  date: %s, trip length: %d\" % (trav_date, miles))\n```", "```\nTotal miles driven by all drivers combined: 2166\n\nName: Ben; days on road: 3; miles driven: 362\n  date: 2014-07-29, trip length: 131\n  date: 2014-07-30, trip length: 152\n  date: 2014-08-02, trip length: 79\nName: Henry; days on road: 5; miles driven: 911\n  date: 2014-07-26, trip length: 115\n  date: 2014-07-27, trip length: 96\n  date: 2014-07-29, trip length: 300\n  date: 2014-07-30, trip length: 203\n  date: 2014-08-01, trip length: 197\nName: Suzi; days on road: 2; miles driven: 893\n  date: 2014-07-29, trip length: 391\n  date: 2014-08-02, trip length: 502\n```", "```\n    CREATE TEMPORARY TABLE t LIKE driver_log;\n    START TRANSACTION;\n    INSERT INTO t SELECT name, MAX(miles) AS miles FROM driver_log GROUP BY name;\n    SELECT d.name, d.trav_date, d.miles AS 'longest trip'\n    FROM driver_log AS d INNER JOIN t USING (name, miles) ORDER BY name;\n    COMMIT;\n    DROP TABLE t;\n    ```", "```\nWITH *`result_name`* AS (SELECT ...)\nSELECT ...\n```", "```\nmysql>  `WITH` ![1](Images/1.png)\n    ->  `trips` `AS` `(``SELECT` `name``,` `trav_date``,` `miles` `FROM` `driver_log``)``,` ![2](Images/2.png)\n    ->  `summaries` `AS` `(`\n    ->      `SELECT` `name``,` `COUNT``(``name``)` `AS` `days_on_road``,` `SUM``(``miles``)` `AS` `miles_driven` ![3](Images/3.png)\n    ->      `FROM` `driver_log` `GROUP` `BY` `name``)`\n    ->  `SELECT` `trips``.``name``,` `days_on_road``,` `miles_driven``,` `trav_date``,` `miles` ![4](Images/4.png)\n    ->  `FROM` `summaries` `LEFT` `JOIN` `trips` `USING``(``name``)``;`\n+-------+--------------+--------------+------------+-------+ | name  | days_on_road | miles_driven | trav_date  | miles |\n+-------+--------------+--------------+------------+-------+ | Ben   |            3 |          362 | 2014-08-02 |    79 |  ![5](Images/5.png)\n| Ben   |            3 |          362 | 2014-07-29 |   131 |\n| Ben   |            3 |          362 | 2014-07-30 |   152 |\n| Suzi  |            2 |          893 | 2014-08-02 |   502 |\n| Suzi  |            2 |          893 | 2014-07-29 |   391 |\n| Henry |            5 |          911 | 2014-07-30 |   203 |\n| Henry |            5 |          911 | 2014-08-01 |   197 |\n| Henry |            5 |          911 | 2014-07-26 |   115 |\n| Henry |            5 |          911 | 2014-07-27 |    96 |\n| Henry |            5 |          911 | 2014-07-29 |   300 |\n+-------+--------------+--------------+------------+-------+ 10 rows in set (0.00 sec)\n```"]