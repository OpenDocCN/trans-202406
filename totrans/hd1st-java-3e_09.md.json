["```\npublic class Doctor {\n\n  boolean worksAtHospital;\n\n  void treatPatient() {\n\n    // perform a checkup\n  }\n}\n```", "```\npublic class FamilyDoctor extends Doctor {\n\n  boolean makesHouseCalls;\n\n  void giveAdvice() {\n    // give homespun advice\n  }\n}\n```", "```\npublic class Surgeon extends Doctor {\n\n  void treatPatient() {\n    // perform surgery\n  }\n\n  void makeIncision() {\n    // make incision (yikes!)\n  }\n}\n```", "```\npublic members *are* inherited\nprivate members are *not* inherited\n```", "```\n    Dog myDog = new Dog();\n    ```", "```\n    Dog myDog = new Dog();\n    ```", "```\n    Dog myDog = new Dog();\n    ```", "```\nAnimal myDog = new Dog();\n```", "```\n    public class Overloads {\n      String uniqueID;\n\n      public int addNums(int a, int b) {\n        return a + b;\n      }\n\n      public double addNums(double a, double b) {\n        return a + b;\n      }\n\n      public void setUniqueID(String theID) {\n        // lots of validation code, and then:\n        uniqueID = theID;\n      }\n\n      public void setUniqueID(int ssNumber) {\n        String numString = \"\" + ssNumber;\n        setUniqueID(numString);\n      }\n    }\n    ```", "```\nA’s m1, A’s m2, C’s m3, 6\n\nB’s m1, A’s m2, A’s m3,\n\nA’s m1, B’s m2, A’s m3,\n\nB’s m1, A’s m2, C’s m3, 13\n\nB’s m1, C’s m2, A’s m3,\n\nB’s m1, A’s m2, C’s m3, 6\n\nA’s m1, A’s m2, C’s m3, 13\n```", "```\npublic class MonsterTestDrive {\n\n  public static void main(String[] args) {\n    Monster[] monsters = new Monster[3];\n    monsters[0] = new Vampire();\n    monsters[1] = new Dragon();\n    monsters[2] = new Monster();\n    for (int i = 0; i < monsters.length; i++) {\n      monsters[i].frighten(i);\n    }\n  }\n}\n\nclass Monster {\n  ![Images](Images/a.png)\n}\n\nclass Vampire extends Monster {\n  ![Images](Images/b.png)\n}\n\nclass Dragon extends Monster {\n  boolean frighten(int degree) {\n    System.out.println(\"breathe fire\");\n    return true;\n  }\n}\n```", "```\npublic class Rowboat extends Boat {\n   public void rowTheBoat() {\n      System.out.print(\"stroke natasha\");\n   }\n}\npublic class Boat {\n   private int length ;\n   public void setLength ( int len ) {\n         length = len;\n   }\n   public int getLength() {\n      return length ;\n   }\n   public void move() {\n      System.out.print(\"drift \");\n   }\n}\n\npublic class TestBoats {\n   public static void main(String[] args){\n      Boat b1 = new Boat();\n      Sailboat b2 = new Sailboat();\n      Rowboat b3 = new Rowboat();\n      b2.setLength(32);\n      b1.move();\n      b3.move();\n      b2.move();\n   }\n}\npublic class Sailboat extends Boat {\n   public void move() {\n      System.out.print(\"hoist sail \");\n   }\n}\n```"]