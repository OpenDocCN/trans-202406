["```\n$ sudo bpftool perf show\npid 232272  fd 16: prog_id 392  kprobe  func __x64_sys_execve  offset 0\npid 232272  fd 17: prog_id 394  kprobe  func do_execve  offset 0\npid 232272  fd 19: prog_id 396  tracepoint  sys_enter_execve\npid 232272  fd 20: prog_id 397  raw_tracepoint  sched_process_exec\npid 232272  fd 21: prog_id 398  raw_tracepoint  sched_process_exec\n```", "```\nSEC(\"ksyscall/execve\")\nint BPF_KPROBE_SYSCALL(kprobe_sys_execve, char *pathname)\n```", "```\nSEC(\"kprobe/do_execve\")\nint BPF_KPROBE(kprobe_do_execve, struct filename *filename)\n```", "```\nint `do_execve`(struct `filename` *`filename`,\n    const char `__user` *const `__user` *__argv,\n    const char `__user` *const `__user` *__envp)\n```", "```\nconst char *name = BPF_CORE_READ(filename, name);\nbpf_probe_read_kernel(&data.command, sizeof(data.command), name);\n```", "```\nSEC(\"fentry/do_execve\")\nint BPF_PROG(fentry_execve, struct filename *filename)\n```", "```\nSEC(\"kretprobe/do_unlinkat\")\nint BPF_KRETPROBE(do_unlinkat_exit, long ret)\n```", "```\nSEC(\"fexit/do_unlinkat\")\nint BPF_PROG(do_unlinkat_exit, int dfd, struct filename *name, long ret)\n```", "```\n$ cat /sys/kernel/tracing/available_events \ntls:tls_device_offload_set\ntls:tls_device_decrypted\n...\nsyscalls:sys_exit_execveat\nsyscalls:sys_enter_execveat\nsyscalls:sys_exit_execve\nsyscalls:sys_enter_execve\n...\n```", "```\nSEC(\"tp/syscalls/sys_enter_execve\")\n```", "```\n$ cat /sys/kernel/tracing/events/syscalls/sys_enter_execve/format\nname: sys_enter_execve\nID: 622\nformat:\n  field:unsigned short common_type;         offset:0;  size:2; signed:0;\n  field:unsigned char common_flags;         offset:2;  size:1; signed:0;\n  field:unsigned char common_preempt_count; offset:3;  size:1; signed:0;\n  field:int common_pid;                     offset:4;  size:4; signed:1;\n\n  field:int __syscall_nr;                   offset:8;  size:4; signed:1;\n  field:const char * filename;              offset:16; size:8; signed:0;\n  field:const char *const * argv;           offset:24; size:8; signed:0;\n  field:const char *const * envp;           offset:32; size:8; signed:0;\n\nprint fmt: \"filename: 0x%08lx, argv: 0x%08lx, envp: 0x%08lx\", \n((unsigned long)(REC->filename)), ((unsigned long)(REC->argv)), \n((unsigned long)(REC->envp))\n```", "```\nstruct my_syscalls_enter_execve {\n   unsigned short common_type;\n   unsigned char common_flags;\n   unsigned char common_preempt_count;\n   int common_pid;\n\n   long syscall_nr;\n   long filename_ptr;\n   long argv_ptr;\n   long envp_ptr;\n};\n```", "```\nint tp_sys_enter_execve(struct my_syscalls_enter_execve *ctx) {\n```", "```\nbpf_probe_read_user_str(&data.command, sizeof(data.command), ctx->filename_ptr);\n```", "```\nSEC(\"tp_btf/sched_process_exec\")\nint handle_exec(struct trace_event_raw_sched_process_exec *ctx)\n```", "```\nSEC(\"uprobe/usr/lib/aarch64-linux-gnu/libssl.so.3/SSL_write\")\n```", "```\nbpftool prog load hello.bpf.o /sys/fs/bpf/hello\nbpftool net attach xdp id 540 dev eth0\n```", "```\n$ ip link set dev eth0 xdp obj hello.bpf.o sec xdp\n```", "```\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 xdpgeneric qdisc fq_codel\nstate UP mode DEFAULT group default qlen 1000\n    link/ether 52:55:55:3a:1b:a2 brd ff:ff:ff:ff:ff:ff\n    prog/xdp id 1255 tag 9d0e949f89f1a82c jited\n```", "```\n$ ip link set dev eth0 xdp off\n```", "```\ncase `BPF_PROG_TYPE_CGROUP_SOCK`:\n    `switch` (`expected_attach_type`) {\n    case `BPF_CGROUP_INET_SOCK_CREATE`:\n    case `BPF_CGROUP_INET_SOCK_RELEASE`:\n    case `BPF_CGROUP_INET4_POST_BIND`:\n    case `BPF_CGROUP_INET6_POST_BIND`:\n        return 0;\n    default:\n        return -`EINVAL`;\n    }\n```", "```\n    strace -e bpf -o outfile ./hello\n    ```", "```\n    libbpf: Kernel error message: XDP program already attached\n    Error: interface xdpgeneric attach failed: Device or resource busy\n    ```"]