["```\n<resources>\n   <declare-styleable name=\"BottomBorderTextView\">\n       <attr name=\"borderColor\" format=\"color\" />\n   </declare-styleable>\n</resources>\n```", "```\n<com.myapp.BottomBorderTextView\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"wrap_content\"\n  android:text=\"Hello world!\"\n  app:borderColor=\"#FFFF9900\" />\n```", "```\nclass SomeView: UIView {\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n    }\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n    }\n\n    // Customization goes here\n}\n```", "```\nclass SomeView: UIView {\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n        setupView()\n    }\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        setupView()\n    }\n\n    private func setupView() {\n        backgroundColor = .red\n\n        let button = UIButton(type: .custom)\n        button.titleLabel?.text = \"Click Me!\"\n\n        addSubview(button)\n    }\n}\n```", "```\nclass SomeView: UIView {\n    var buttonText: String = \"Click Me!\" {\n        didSet {\n            button.titleLabel?.text = self.buttonText\n        }\n    }\n    lazy var button: UIButton = {\n        let button = UIButton(type: .custom)\n        addSubview(button)\n        return button\n    }()\n\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n        setupView()\n    }\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        setupView()\n    }\n\n    convenience init(frame: CGRect, buttonText: String) {\n        self.init(frame: frame)\n        self.buttonText = buttonText\n    }\n\n    private func setupView() {\n        backgroundColor = .red\n        button.titleLabel?.text = buttonText\n    }\n}\n\nlet noClicky = SomeView(frame: CGRect.zero, buttonText: \"Don't click me!\")\n```", "```\nclass SomeViewController: UIViewController {\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        let clickMeButton =\n          SomeView(frame: CGRect(x: 0.0, y: 0.0, width: 100.0, height: 50.0),\n          buttonText: \"Click Me!\")\n        view.addSubview(clickMeButton)\n    }\n}\n```", "```\n@IBDesignable class SomeView: UIView {\n    @IBInspectable var buttonText: String = \"Click Me!\" {\n        didSet {\n            button.titleLabel?.text = self.buttonText\n        }\n    }\n    lazy var button: UIButton = {\n        let button = UIButton(type: .custom)\n        addSubview(button)\n        return button\n    }()\n\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n        setupView()\n    }\n\n    override init(frame: CGRect) {\n        super.init(frame: frame)\n        setupView()\n    }\n\n    convenience init(frame: CGRect, buttonText: String) {\n        self.init(frame: frame)\n        self.buttonText = buttonText\n    }\n\n    private func setupView() {\n        backgroundColor = .red\n        button.titleLabel?.text = buttonText\n    }\n}\n```"]