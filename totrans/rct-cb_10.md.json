["```\n$ npm install -g lighthouse\n```", "```\n$ lighthouse http://localhost:3000\n```", "```\nimport { useState } from 'react'\nimport { unstable_trace as trace } from 'scheduler/tracing'\nimport './App.css'\n\nfunction App({ onRender }) {\n  const [year, setYear] = useState(2023)\n\n  return (\n    <div className=\"App\">\n      <h1>Year: {year}</h1>\n      <button onClick={() => setYear((y) => y - 1)}>Previous</button>\n      <button onClick={() => setYear((y) => y + 1)}>Next</button>\n      <br />\n      <YearCalendar year={year} onRender={onRender} />\n    </div>\n  )\n}\n\nexport default App\n```", "```\nimport { useState, Profiler } from 'react'\nimport { unstable_trace as trace } from 'scheduler/tracing'\nimport './App.css'\n\nfunction App({ onRender }) {\n  const [year, setYear] = useState(2023)\n\n  return (\n    <div className=\"App\">\n      <h1>Year: {year}</h1>\n      <Profiler id=\"app\" onRender={() => {}}>\n        <button onClick={() => setYear((y) => y - 1)}>\n          Previous\n        </button>\n        <button onClick={() => setYear((y) => y + 1)}>Next</button>\n        <br />\n        <YearCalendar year={year} onRender={onRender} />\n      </Profiler>\n    </div>\n  )\n}\n\nexport default App\n```", "```\nimport { useState, Profiler } from 'react'\nimport { unstable_trace as trace } from 'scheduler/tracing'\nimport './App.css'\n\nlet renders = []\nlet tracker = (\n  id,\n  phase,\n  actualDuration,\n  baseDuration,\n  startTime,\n  commitTime,\n  interactions\n) => {\n  renders.push({\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions: JSON.stringify(Array.from(interactions)),\n  })\n}\n\nfunction App({ onRender }) {\n  const [year, setYear] = useState(2023)\n\n  return (\n    <div>\n      ....\n      <Profiler id=\"app\" onRender={tracker}>\n        ....\n      </Profiler>\n      <button onClick={() => console.table(renders)}>Stats</button>\n    </div>\n  )\n}\n```", "```\nimport { unstable_trace as trace } from 'scheduler/tracing'\n...\n<button\n  onClick={() => {\n    trace('previous button click', performance.now(), () => {\n      setYear((y) => y - 1)\n    })\n  }}\n/>\n```", "```\n[\n    {\n        \"__count\":1,\n        \"id\":1,\n        \"name\":\"previous button click\",\n        \"timestamp\":4447.909999988042\n    }\n]\n```", "```\nimport { useState, Profiler } from 'react'\nimport YearCalendar from './YearCalendar'\nimport { unstable_trace as trace } from 'scheduler/tracing'\nimport './App.css'\n\nfunction App({ onRender }) {\n  const [year, setYear] = useState(2023)\n\n  return (\n    <div className=\"App\">\n      <h1>Year: {year}</h1>\n      <Profiler id=\"app\" onRender={onRender || (() => {})}>\n        <button\n          onClick={() => {\n            trace('previous button click', performance.now(), () => {\n              setYear((y) => y - 1)\n            })\n          }}\n        >\n          Previous\n        </button>\n        <button onClick={() => setYear((y) => y + 1)}>Next</button>\n        <br />\n        <YearCalendar year={year} onRender={onRender} />\n      </Profiler>\n    </div>\n  )\n}\n\nexport default App\n```", "```\n<Profiler id='app' onRender={onRender || (() => {})}>\n```", "```\nimport { render, screen } from '@testing-library/react'\nimport user from '@testing-library/user-event'\nimport App from './App'\n\nlet renders = []\nlet tracker = (\n  id,\n  phase,\n  actualDuration,\n  baseDuration,\n  startTime,\n  commitTime,\n  interactions\n) => {\n  renders.push({\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions: JSON.stringify(Array.from(interactions)),\n  })\n}\n\nlet startTime = 0\n\ndescribe('App', () => {\n  beforeEach(() => {\n    renders = []\n    startTime = performance.now()\n  })\n  afterEach(() => {\n    console.log('Time taken: ', performance.now() - startTime)\n    console.table(renders)\n  })\n  it('should move between years', async () => {\n    render(<App onRender={tracker} />)\n    user.click(screen.getByRole('button', { name: /previous/i }))\n    user.click(screen.getByRole('button', { name: /previous/i }))\n    user.click(screen.getByRole('button', { name: /previous/i }))\n    user.click(screen.getByRole('button', { name: /next/i }))\n    user.click(screen.getByRole('button', { name: /next/i }))\n    user.click(screen.getByRole('button', { name: /next/i }))\n  }, 30000)\n})\n```", "```\nconst beforeDate = new Date()\nfor (let i = 0; i < 1000; i++) {}\nconst afterDate = new Date()\nconsole.log(\n  '1,000 loops took',\n  afterDate.getTime() - beforeDate.getTime()\n)\n```", "```\nconsole.time('1,000 loops')\nfor (let i = 0; i < 1000; i++) {}\nconsole.timeEnd('1,000 loops')\n```", "```\n1,000 loops: 0ms\n```", "```\n> performance.now()\n< 10131.62500000908\n```", "```\n> performance.now()\n< 4194\n```", "```\nperformance.now()\n151405.8\n```", "```\nconst before0 = performance.now()\nfor (let i = 0; i < 1000; i++) {}\nconst after0 = performance.now()\nconsole.log('1,000 loops took', after0 - before0)\nconst before1 = performance.now()\nfor (let i = 0; i < 100000; i++) {}\nconst after1 = performance.now()\nconsole.log('100,000 loops took', after1 - before1)\n```", "```\n1,000 loops took 0.03576700000007804\n100,000 loops took 1.6972319999999854\n```", "```\nfunction* timekeeper() {\n  let now = 0\n  while (true) yield -now + (now = performance.now())\n}\n```", "```\nconst before0 = performance.now()\nfor (let i = 0; i < 1000; i++) {}\nconst after0 = performance.now()\nconsole.log('1,000 loops took', after0 - before0)\nconst before1 = performance.now()\nfor (let i = 0; i < 100000; i++) {}\nconst after1 = performance.now()\nconsole.log('100,000 loops took', after1 - before1)\n```", "```\nconst t = timekeeper()\nt.next()\nfor (let i = 0; i < 1000; i++) {}\nconsole.log('1,000 loops took', t.next().value)\nfor (let i = 0; i < 100000; i++) {}\nconsole.log('100,000 loops took', t.next().value)\n```", "```\n1,000 loops took 0.05978800000002593\n100,000 loops took 19.585223999999926\n```", "```\n$ ls -l build/static/js\ntotal 1336\n-rw-r--r--  1 davidg  admin  161800 12:07 2.4db4d779.chunk.js\n-rw-r--r--  1 davidg  admin    1290 12:07 2.4db4d779.chunk.js.LICENSE.txt\n-rw-r--r--  1 davidg  admin  461100 12:07 2.4db4d779.chunk.js.map\n-rw-r--r--  1 davidg  admin    4206 12:07 3.307a63d5.chunk.js\n-rw-r--r--  1 davidg  admin    9268 12:07 3.307a63d5.chunk.js.map\n-rw-r--r--  1 davidg  admin    3082 12:07 main.e8a3e1cb.chunk.js\n-rw-r--r--  1 davidg  admin    6001 12:07 main.e8a3e1cb.chunk.js.map\n-rw-r--r--  1 davidg  admin    2348 12:07 runtime-main.67df5f2e.js\n-rw-r--r--  1 davidg  admin   12467 12:07 runtime-main.67df5f2e.js.map\n$\n```", "```\nimport { lazy } from 'react'\n```", "```\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom'\nimport People from './People'\nimport Offices from './Offices'\nimport './About.css'\n\nconst About = () => (\n  <div className=\"About\">\n    <div className=\"About-tabs\">\n      <NavLink\n        to=\"/about/people\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        People\n      </NavLink>\n      <NavLink\n        to=\"/about/offices\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        Offices\n      </NavLink>\n    </div>\n    <Switch>\n      <Route path=\"/about/people\">\n        <People />\n      </Route>\n      <Route path=\"/about/offices\">\n        <Offices />\n      </Route>\n      <Redirect to=\"/about/people\" />\n    </Switch>\n  </div>\n)\n\nexport default About\n```", "```\n//import Offices from \"./Offices\"\nconst Offices = lazy(() => import('./Offices'))\n```", "```\nimport { lazy, Suspense } from 'react'\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom'\nimport People from './People'\n// import Offices from './Offices'\nimport './About.css'\n\nconst Offices = lazy(() => import('./Offices'))\n\nconst About = () => (\n  <div className=\"About\">\n    <div className=\"About-tabs\">\n      <NavLink\n        to=\"/about/people\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        People\n      </NavLink>\n      <NavLink\n        to=\"/about/offices\"\n        className=\"About-tab\"\n        activeClassName=\"active\"\n      >\n        Offices\n      </NavLink>\n    </div>\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route path=\"/about/people\">\n          <People />\n        </Route>\n        <Route path=\"/about/offices\">\n          <Offices />\n        </Route>\n        <Redirect to=\"/about/people\" />\n      </Switch>\n    </Suspense>\n  </div>\n)\n\nexport default About\n```", "```\n$ yarn build\n...Builds code\n$ ls -l build/static/js\ntotal 1352\n-rw-r--r--  1 davidg  admin     628 12:09 0.a30b3768.chunk.js\n-rw-r--r--  1 davidg  admin     599 12:09 0.a30b3768.chunk.js.map\n-rw-r--r--  1 davidg  admin  161801 12:09 3.f7664178.chunk.js\n-rw-r--r--  1 davidg  admin    1290 12:09 3.f7664178.chunk.js.LICENSE.txt\n-rw-r--r--  1 davidg  admin  461100 12:09 3.f7664178.chunk.js.map\n-rw-r--r--  1 davidg  admin    4206 12:09 4.a74be2bf.chunk.js\n-rw-r--r--  1 davidg  admin    9268 12:09 4.a74be2bf.chunk.js.map\n-rw-r--r--  1 davidg  admin    3095 12:09 main.e4de2e45.chunk.js\n-rw-r--r--  1 davidg  admin    6089 12:09 main.e4de2e45.chunk.js.map\n-rw-r--r--  1 davidg  admin    2361 12:09 runtime-main.9df06006.js\n-rw-r--r--  1 davidg  admin   12496 12:09 runtime-main.9df06006.js.map\n```", "```\nimport { useEffect, useState } from 'react'\nimport { get } from './fakeios'\n\nconst usePeopleSlow = (...ids) => {\n  const [people, setPeople] = useState([])\n\n  useEffect(() => {\n    let didCancel = false\n    ;(async () => {\n      const result = []\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i]\n        result.push(await get('/people/' + id))\n      }\n      if (!didCancel) {\n        setPeople(result)\n      }\n    })()\n    return () => {\n      didCancel = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...ids])\n\n  return people\n}\n\nexport default usePeopleSlow\n```", "```\nconst peopleSlow = usePeopleSlow(1, 2, 3, 4)\n```", "```\nconst result = []\nfor (let i = 0; i < ids.length; i++) {\n  const id = ids[i]\n  result.push(await get('/people/' + id))\n}\n```", "```\nconst [res1, res2, res3] = await Promise.all(\n  get('/people/1'),\n  get('/people/2'),\n  get('/people/3')\n)\n```", "```\nimport { useEffect, useState } from 'react'\nimport { get } from './fakeios'\n\nconst usePeopleFast = (...ids) => {\n  const [people, setPeople] = useState([])\n\n  useEffect(() => {\n    let didCancel = false\n    ;(async () => {\n      const result = await Promise.all(\n        ids.map((id) => get('/people/' + id))\n      )\n      if (!didCancel) {\n        setPeople(result)\n      }\n    })()\n    return () => {\n      didCancel = true\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...ids])\n\n  return people\n}\n\nexport default usePeopleFast\n```", "```\nconst result = await Promise.all(\n  ids.map((id) => get('/people/' + id))\n)\n```", "```\n<div id=\"root\"></div>\n```", "```\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n```", "```\nlet indexHTML = <contents of index.html>\nconst app = <render App to string>\nindexHTML = indexHTML.replace(\n  '<div id=\"root\"></div>',\n  `<div id=\"app\">${app}</div>`\n)\nres.contentType('text/html')\nres.status(200)\nreturn res.send(indexHTML)\n```", "```\n$ npx create-react-app ssrapp\n```", "```\n$ mkdir server\n```", "```\n$ npm install --save-dev ignore-styles url-loader @babel/register\n```", "```\nrequire('ignore-styles')\nrequire('url-loader')\nrequire('file-loader')\nrequire('regenerator-runtime/runtime')\nrequire('@babel/register')({\n  ignore: [/(node_modules)/],\n  presets: [\n    '@babel/preset-env',\n    [\n      '@babel/preset-react',\n      {\n        runtime: 'automatic',\n      },\n    ],\n  ],\n  plugins: [],\n})\nrequire('./ssr')\n```", "```\nimport express from 'express'\nimport fs from 'fs'\nimport path from 'path'\n\nconst server = express()\n\nserver.get(\n  /.(js|css|map|ico|svg|png)$/,\n  express.static(path.resolve(__dirname, '../build'))\n)\n\nserver.use('*', async (req, res) => {\n  let indexHTML = fs.readFileSync(\n    path.resolve(__dirname, '../build/index.html'),\n    {\n      encoding: 'utf8',\n    }\n  )\n\n  res.contentType('text/html')\n  res.status(200)\n\n  return res.send(indexHTML)\n})\n\nserver.listen(8000, () => {\n  console.log(`Launched at http://localhost:8000!`)\n})\n```", "```\nconst server = express()\n```", "```\nserver.get(\n  /.(js|css|map|ico|svg|png)$/,\n  express.static(path.resolve(__dirname, '../build'))\n)\n```", "```\nserver.use('*', async (req, res) => {\n  ...\n})\n```", "```\nserver.listen(8000, () => {\n  console.log(`Launched at http://localhost:8000!`)\n})\n```", "```\n$ yarn run build\n```", "```\n$ node server\nLaunched at http://localhost:8000!\n```", "```\nimport express from 'express'\nimport fs from 'fs'\nimport path from 'path'\nimport { renderToString } from 'react-dom/server'\nimport App from '../src/App'\n\nconst server = express()\n\nserver.get(\n  /.(js|css|map|ico|svg|png)$/,\n  express.static(path.resolve(__dirname, '../build'))\n)\n\nserver.use('*', async (req, res) => {\n  let indexHTML = fs.readFileSync(\n    path.resolve(__dirname, '../build/index.html'),\n    {\n      encoding: 'utf8',\n    }\n  )\n\n  const app = renderToString(<App />)\n\n  indexHTML = indexHTML.replace(\n    '<div id=\"root\"></div>',\n    `<div id=\"app\">${app}</div>`\n  )\n\n  res.contentType('text/html')\n  res.status(200)\n\n  return res.send(indexHTML)\n})\n\nserver.listen(8000, () => {\n  console.log(`Launched at http://localhost:8000!`)\n})\n```", "```\n<div id=\"app\">\n  <div class=\"App\" data-reactroot=\"\">\n    <header class=\"App-header\">\n      <img src=\"[object Object]\" class=\"App-logo\" alt=\"logo\"/>\n      <p>Edit <code>src/App.js</code> and save to reload.</p>\n      <a class=\"App-link\" href=\"https://reactjs.org\"\n         target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn React\n      </a>\n    </header>\n  </div>\n</div>\n```", "```\nimport logo from './logo.svg'\n...\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\n```", "```\n// import logo from './logo.svg'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n```", "```\n$ yarn build\n$ node server\n```", "```\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n```", "```\nimport { StaticRouter } from 'react-router-dom'\n...\nconst app = renderToString(\n  <StaticRouter location={req.originalUrl} context={{}}>\n    <App />\n  </StaticRouter>\n)\n```", "```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n```", "```\nreportWebVitals(console.log)\n```", "```\nreportWebVitals((vital) => {\n  fetch('/trackVitals', {\n    body: JSON.stringify(vital),\n    method: 'POST',\n    keepalive: true,\n  })\n})\n```", "```\nreportWebVitals((vital) => {\n  if (navigator.sendBeacon) {\n    navigator.sendBeacon('/trackVitals', JSON.stringify(vital))\n  } else {\n    fetch('/trackVitals', {\n      body: JSON.stringify(vital),\n      method: 'POST',\n      keepalive: true,\n    })\n  }\n})\n```"]