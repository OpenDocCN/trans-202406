- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Is Kubernetes ready for stateful workloads?
  prefs: []
  type: TYPE_NORMAL
- en: This might be the question that got you to open this book. Since cloud computing
    first emerged, data infrastructure (NoSQL/NewSQL, streaming, analytics) and application
    infrastructure (Docker, Kubernetes) have been maturing rapidly but on separate
    tracks. In our view, it’s time to formalize bringing these two areas together.
    This isn’t an aspiration for the future; it is already happening with collaboration
    across multiple communities. Organizations that are trying to manage two distinct
    stacks for applications and data will soon find themselves at a competitive disadvantage.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the first few years of Kubernetes’ existence after its public launch in
    2014, the maxim that it was not ready for data and stateful workloads was rarely
    questioned. An example of the prevailing wisdom can be found in this Kelsey Hightower
    [tweet](https://oreil.ly/d4jRU) from 2018:'
  prefs: []
  type: TYPE_NORMAL
- en: Kubernetes has made huge improvements in the ability to run stateful workloads
    including databases and message queues, but I still prefer not to run them on
    Kubernetes.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Over the past few years, the tide has turned. Problem-solving engineers took
    this challenge from Kelsey and turned it into action. In some sense, the maturation
    of Kubernetes for stateful workloads was inevitable, as the demand was so great.
    Those of us who can remember arguments about why a database had to run on a bare-metal
    machine or why you should never deploy data infrastructure in containers can relate
    to this concern.
  prefs: []
  type: TYPE_NORMAL
- en: We’ve also learned that there is a huge difference between “never” and “not
    yet.” Compute, storage, networking are now considered commodities; why not data
    management? The value proposition of Kubernetes for reducing cost and simplifying
    application development means that the migration of data infrastructure onto Kubernetes
    was inevitable. The changes are not just in Kubernetes. As you will see, projects
    in data infrastructure have been changing as well.
  prefs: []
  type: TYPE_NORMAL
- en: Why We Wrote This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We were caught up in the trend of moving stateful workloads to Kubernetes when
    our “day job” responsibilities at DataStax challenged us to consider how to deploy
    and operate Apache Cassandra in Kubernetes effectively. In the spirit of open
    source development, we sought out other practitioners who were attempting similar
    feats (and succeeding) with databases and other stateful workloads. We found a
    group of like-minded individuals and helped launch the [Data on Kubernetes Community](https://oreil.ly/WGlmp)
    (DoKC) in 2020\. DoKC is now an independent organization and has hosted well over
    100 meetups and several in-person events. The [variety of topics and presenters](https://oreil.ly/b1imM)
    in the DoKC meetup is evidence of a vibrant community, working collaboratively
    to establish standards and best practices. Most importantly, we are learning together,
    applying lessons from the past and supporting each other as we build something
    new.
  prefs: []
  type: TYPE_NORMAL
- en: As we participated in these meetups, a set of common themes began to emerge.
    We heard, again and again, the virtues of the PersistentVolume subsystem, the
    pros and cons of StatefulSets, the promise of the operator pattern for making
    database operations more manageable, and the early hints of ideas for new types
    of data management. Over time, we developed a strong conviction that this fledgling
    community of practitioners needed a place for all of the wisdom scattered across
    multiple presentations and blog posts to be gathered and distilled into a digestible
    form. This book is the result of that process.
  prefs: []
  type: TYPE_NORMAL
- en: Much work remains to be done in the area of cloud native data, and many areas
    need further exploration, including operators, machine learning, data APIs, declarative
    management of data sets, and many more. Our hope is that this book opens the gates
    for a flood of additional books, blogs, presentations, and learning resources.
  prefs: []
  type: TYPE_NORMAL
- en: Who Is This Book For?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The primary audience for this book comprises the developers and architects
    who are designing, building, and running applications in the cloud. If that describes
    you and you’re picking up this book, chances are you’ve heard the thundering herd
    of organizations adopting Kubernetes and have joined that trend or are at least
    considering it. However, you may have also heard the reservations about stateful
    workloads on Kubernetes and are looking for help in how to proceed. You’ve come
    to the right place! By reading this book you will gain the following:'
  prefs: []
  type: TYPE_NORMAL
- en: An understanding of basic Kubernetes resources and how they are used to compose
    data infrastructure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An appreciation for how tools like Helm and operators can automate the deployment
    and operations of data infrastructure on Kubernetes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ability to evaluate and select data infrastructure technologies for use
    in your applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The knowledge of how to integrate these data infrastructure technologies into
    your overall stack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A view toward emerging technologies that will enhance your Kubernetes-based
    applications in the years to come
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A smaller but no less important audience includes core Kubernetes developers
    and data infrastructure developers, many of whom we’ve met through the DoKC. We
    hope to create a common set of principles and best practices that we can use as
    a framework to drive improvements into the Kubernetes core as well as the data
    infrastructure built to run in Kubernetes. Together we can push the practice of
    data on Kubernetes forward.
  prefs: []
  type: TYPE_NORMAL
- en: For everyone, know that our objective in this book is to shoot straight. Where
    the technology is mature and solid, we’ll let you know, but there are also many
    areas where the technology is still emerging. We’ll make sure to highlight those
    areas where improvement is needed.
  prefs: []
  type: TYPE_NORMAL
- en: How to Read This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book is designed to be read from start to finish, especially by readers
    who are less experienced with Kubernetes. The first few chapters introduce Kubernetes
    terminology and concepts that are referenced throughout the remainder of the book
    as we discuss more advanced topics. Here’s how this book is organized:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1, “Introduction to Cloud Native Data Infrastructure: Persistence,
    Streaming, and Batch Analytics”](ch01.html#introduction_to_cloud_native_data_infra)'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter lays out the goal of modernizing your cloud native applications
    by putting not only stateless but also stateful workloads on Kubernetes. Of course
    we would say this, but you really should start here, as we define key goals and
    terms to give all readers a level playing field. Specifically, we propose a definition
    for the term *cloud native data* and define principles for cloud native data infrastructure
    that we’ll use to measure technologies throughout the rest of the book.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2, “Managing Data Storage on Kubernetes”](ch02.html#managing_data_storage_on_kubernetes)'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’ll look at one of the foundational areas for data infrastructure
    on Kubernetes: storage. We’ll begin with how storage works in containerized systems
    starting with Docker, then moving to Kubernetes and its PersistentVolume subsystem.
    We’ll discuss the various types of storage available including file, block, and
    object storage, and the trade-offs of using local versus remote storage solutions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3, “Databases on Kubernetes the Hard Way”](ch03.html#databases_on_kubernetes_the_hard_way)'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter introduces Kubernetes compute resources such as Pods, Deployments,
    and StatefulSets and walks you through the step-by-step process of deploying databases
    like MySQL and Apache Cassandra using these resources. You’ll learn some of the
    strengths and weaknesses of StatefulSets for managing distributed databases.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4, “Automating Database Deployment on Kubernetes with Helm”](ch04.html#automating_database_deployment_on_kuber)'
  prefs: []
  type: TYPE_NORMAL
- en: Continuing the themes of the previous chapter, we revisit the deployment of
    MySQL and Cassandra on Kubernetes, this time in a more automated fashion using
    the Helm package manager. You’ll also learn about Kubernetes resources that help
    with configuration including ConfigMaps and Secrets. We discuss the role of Helm
    in your overall DevOps process and CI/CD toolset and some of its shortcomings
    with respect to managing database operations.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5, “Automating Database Management on Kubernetes with Operators”](ch05.html#automating_database_management_on_kuber)'
  prefs: []
  type: TYPE_NORMAL
- en: This chapter concludes our sequence on database deployment by introducing the
    operator pattern and demonstrating how operators can help manage “day two” database
    operations. We’ll examine how operators extend the Kubernetes control plane to
    manage databases, using Vitess (MySQL) and Cass Operator (Apache Cassandra) as
    examples. Along the way, you’ll learn how to assess operators’ maturity and even
    how to build your own operators by using frameworks such as the Operator SDK.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6, “Integrating Data Infrastructure in a Kubernetes Stack”](ch06.html#integrating_data_infrastructure_in_a_ku)'
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we begin to expand the focus beyond just deploying and operating
    databases to consider how databases and other data infrastructure can be incorporated
    in your overall application stack. We’ll look at a project called K8ssandra that
    integrates Apache Cassandra along with tools for managing monitoring, security,
    and database backups, and an API layer for easier data access.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7, “The Kubernetes Native Database”](ch07.html#the_kubernetes_native_database)'
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we take a step back and summarize what you’ve learned about cloud
    native data management in the book’s first half and use that knowledge to consider
    the question, “What is a Kubernetes native database?” More than just a debate
    about industry buzzwords, this discussion is an important one for you who are
    involved in selecting data infrastructure and those developing that infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8, “Streaming Data on Kubernetes”](ch08.html#streaming_data_on_kubernetes)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Moving beyond persistence, we’ll start working through the rest of the data
    infrastructure, starting with streaming technologies. Moving and processing data
    in cloud native applications is just as prevalent as database persistence, but
    requires different strategies in deployment: connecting endpoints securely and
    building in default resilience and elasticity. In this chapter, Apache Pulsar
    and Apache Flink will be used to demonstrate those important practices to build.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9, “Data Analytics on Kubernetes”](ch09.html#data_analytics_on_kubernetes)'
  prefs: []
  type: TYPE_NORMAL
- en: Ironically, the needs for large-scale analytics deployments are part of the
    origin story of many of the methodologies we see used in Kubernetes today—namely,
    orchestration and resource management. Coming full circle, running analytics in
    Kubernetes is now a top priority in many organizations. We highlight changes in
    Apache Spark to give you a head start for your use case and look at the leading
    edge of analytics in Kubernetes with the Dask and Ray projects.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10, “Machine Learning and Other Emerging Use Cases”](ch10.html#machine_learning_and_other_emerging_use)'
  prefs: []
  type: TYPE_NORMAL
- en: The topics of AI and machine learning are already on the cutting edge within
    infrastructure. Projects that have started in the past few years could start in
    Kubernetes first, and it’s an interesting thing to consider. There are other types
    of projects thinking in terms of cloud native first and providing some directionality
    to the future of data. This chapter is meant to be a survey of those projects
    and offered broadly as ideas and methodologies to consider as you move forward
    with cloud native data.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11, “Migrating Data Workloads to Kubernetes”](ch11.html#migrating_data_workloads_to_kubernetes)'
  prefs: []
  type: TYPE_NORMAL
- en: All the knowledge you’ve obtained in reading the book goes to waste if you don’t
    put it into practice. In this chapter, we highlight the key teachings of the previous
    chapters and propose a framework of people, process, and technology changes you
    can make to migrate your stateful workloads to Kubernetes successfully. We conclude
    with a vision of what your organization’s data infrastructure could look like
    in the near future.
  prefs: []
  type: TYPE_NORMAL
- en: The discipline of managing data on Kubernetes is an emerging one with a lot
    of change in particular areas. We acknowledge that this, like any technical book,
    represents a snapshot of available knowledge at a specific point in time—in this
    case, late 2022\. The real danger of writing a book about a fast-moving topic
    is how quickly irrelevant the information can become.
  prefs: []
  type: TYPE_NORMAL
- en: 'To best address this reality, you will see a common formula applied in this
    book: we provide plenty of examples but stress the fundamentals. As we progress
    through the book, the technology we examine becomes progressively less mature.
    Rather than looking for the copy-and-paste answer or the one-size-fits-all architecture,
    we encourage you to extract the core tenets you can apply to your unique use cases.'
  prefs: []
  type: TYPE_NORMAL
- en: In particular, since Chapters [2](ch02.html#managing_data_storage_on_kubernetes)–[5](ch05.html#automating_database_management_on_kuber)
    address well-established topics, you’ll find more in-depth explanations and hands-on
    examples in these chapters. Chapters [8](ch08.html#streaming_data_on_kubernetes)–[10](ch10.html#machine_learning_and_other_emerging_use)
    get into data infrastructure that is still experiencing quite a bit of change,
    at least in terms of deployment on Kubernetes. In these cases, we point more frequently
    to third-party learning resources so that you can be sure to have the most up-to-date
    experience. In the spirit of this book’s inception, we encourage you to share
    new resources you find with others so we can move forward together.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, databases, data types, environment
    variables, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: '**`Constant width bold`**'
  prefs: []
  type: TYPE_NORMAL
- en: Shows commands or other text that should be typed literally by the user.
  prefs: []
  type: TYPE_NORMAL
- en: '*`Constant width italic`*'
  prefs: []
  type: TYPE_NORMAL
- en: Shows text that should be replaced with user-supplied values or by values determined
    by context.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://github.com/data-on-k8s-book/examples*](https://github.com/data-on-k8s-book/examples).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Managing Cloud
    Native Data on Kubernetes* by Jeff Carpenter and Patrick McFadin (O’Reilly). Copyright
    2023 Jeffrey Carpenter and Patrick McFadin, 978-1-098-11139-7.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](https://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/cloud-native-data-Kubernetes*](https://oreil.ly/cloud-native-data-Kubernetes).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://youtube.com/oreillymedia*](https://youtube.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks go first of all to Jess Haberman, who believed in the concept of this
    book from our first conversation and fought to make it happen, and to our editor
    Jill Leonard for her continual encouragement and wise counsel.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the key features of this book is the inclusion of sidebars based on
    our conversations with expert technologists and practitioners. We’ve tried to
    let their words speak for themselves with as little editing as possible. With
    that, we offer up our heartfelt thanks to those who shared their time and insights
    with us: Rick Vasquez, Kiran Mova, Maciej Szulik, John Sanda, Deepthi Sigireddi,
    Umair Mufti, Irfan Ur Rehman, Dongxu (Ed) Huang, Jake Luciani, Jesse Anderson,
    Josh van Leeuwen, Holden Karau, Dean Wampler, Theofilos Papapanagiotou, Willem
    Pienaar, Xiaofan Luan, Josh Patterson, Adi Polak, and Craig McLuckie.'
  prefs: []
  type: TYPE_NORMAL
- en: 'These experts have not only contributed their words, but also influenced the
    direction of our research and the choice of technologies we discuss here. Deepthi,
    Jesse, Umair, and Rick also did double duty as technical reviewers of the book.
    We also appreciate the insights of our other technical reviewers: Wei Deng, Ali
    Ok, Aaron Morton, and Noah Gift.'
  prefs: []
  type: TYPE_NORMAL
- en: The Data on Kubernetes Community (DoKC) has been a huge inspiration for this
    effort, and we’re especially grateful to Bart Farrell, Demitrios Brinkmann, and
    Melissa Logan for connecting us with many other community members and for their
    encouragement and support. We’d like to give special acknowledgment to Evan Powell,
    who birthed the DoKC by finding Demetrios and funding the initial meetups. That
    was the spark that has lit the forge for so many good things to come.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sam Ramji was a major influence on this book, not only by writing the foreword
    but also in challenging our thought processes by reminding us: “You have to do
    the work to have an opinion.” Sam was always willing to get on a call, make an
    introduction, or share ideas over a beer.'
  prefs: []
  type: TYPE_NORMAL
- en: This book was born during the early days of a global pandemic and nurtured throughout
    seasons of uncertainty, challenge, and renewal, both on a global and personal
    level. We’re so very grateful for the support of many friends and family who walked
    with us through these times and reminded us of the power of questions like “How’s
    the book going?” or even just a simple “How are you doing?”
  prefs: []
  type: TYPE_NORMAL
