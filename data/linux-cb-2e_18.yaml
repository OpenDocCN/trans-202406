- en: Chapter 17\. Keeping Time with ntpd, chrony, and timesyncd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Keeping accurate time on your computer, and on all hosts on your network, is
    easy and automatic with NTP, the Network Time Protocol. NTP is implemented on
    Linux with *ntpd*, the NTP daemon, *chrony*, the modern replacement for *ntpd*,
    and systemd’s *timesyncd*. That is right, friends, there are three (at least),
    count them, three ways to automatically manage time on your Linux computer.
  prefs: []
  type: TYPE_NORMAL
- en: '*ntpd* and *chrony* can also function as LAN time servers, while *timesyncd*
    is a simpler lightweight client with no server functions. *ntpd* and *chrony*
    are full NTP implementations, while *timesyncd* uses SNTP, the Simple Network
    Time Protocol.'
  prefs: []
  type: TYPE_NORMAL
- en: Most Linux distributions provide a default configuration that points to time
    servers that they maintain. These servers have names like *2.fedora.pool.ntp.org*
    and *0.ubuntu.pool.ntp.org*. You don’t have to do anything, except be sure to
    not disable this during installation. In this chapter you will learn how to check
    your current settings, how to change them, and how to set up a LAN time server.
  prefs: []
  type: TYPE_NORMAL
- en: There is a worldwide network of time servers that are free for everyone to use,
    and they are organized into *strata*, starting at stratum 0\. Stratum 0 is the
    source for all timekeeping, a network of atomic clocks, radio receivers tuned
    to atomic clocks, and GPS receivers using signals broadcast by GPS satellites.
  prefs: []
  type: TYPE_NORMAL
- en: Next in line is stratum 1, where the primary time servers reside. The primary
    time servers in stratum 1 are directly connected to the sources in stratum 0.
  prefs: []
  type: TYPE_NORMAL
- en: Stratum 2 contains thousands of public servers, and they sync with stratum 1.
    It is good etiquette to connect to stratum 2 servers to prevent the stratum 1
    servers from being overwhelmed and to not use the stratum 1 servers without a
    good reason.
  prefs: []
  type: TYPE_NORMAL
- en: The hierarchy continues on down the line, for example there are stratum 4, 5,
    and 6 public servers, and private LAN servers that sync with them. It’s not really
    that orderly; you can designate your private LAN NTP server as stratum 10, and
    it doesn’t have to connect to stratum 9 servers, but any server it can reach.
    You don’t have to worry about selecting the correct servers because you will use
    *pool* servers, which are clusters of NTP servers, rather than individual servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you dig into timekeeping on computers, it becomes confusing and overwhelming,
    or perhaps fascinating, depending on how nerdy you want to get. Visit the [NTP
    Pool Project](https://ntppool.org) and [NTP: The Network Time Protocol](http://ntp.org)
    to learn the nerdy stuff and how to run your own public time server.'
  prefs: []
  type: TYPE_NORMAL
- en: There are at least two timekeepers on your Linux system. One is the hardware
    clock on your motherboard, which is also called the real-time clock (RTC). The
    other is system time, managed by your Linux kernel. The RTC always has power,
    even when your machine is turned off, from a battery or capacitor on the motherboard.
    When your Linux computer starts up, your selected NTP client gets its time from
    the RTC. Then, after the network is available, it corrects the time according
    to its upstream time server.
  prefs: []
  type: TYPE_NORMAL
- en: Your RTC time is set in your BIOS/UEFI, and with some of the commands you will
    learn about in this chapter. It should always be set to UTC, Coordinated Universal
    Time, and then the Linux kernel calculates the time for your time zone from the
    UTC. UTC is similar to Greenwich Mean Time (GMT), though they are not the same.
    UTC is a time standard and GMT is a time zone. Neither UTC nor GMT change for
    daylight saving time (DST).
  prefs: []
  type: TYPE_NORMAL
- en: Time zone data comes from [IETF.org Timezones](https://oreil.ly/gUnet). This
    is a moving target as countries change their DST dates, opt out of DST, and opt
    back in. Most Linuxes store this information in */usr/share/zoneinfo/*. The Internet
    Engineering Task Force (IETF) tracks these changes and makes their databases freely
    available.
  prefs: []
  type: TYPE_NORMAL
- en: 17.1 Finding Which NTP Client Is on Your Linux System
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You read the chapter introduction, and now you know that time synchronization
    on Linux is managed by *ntpd*, *chrony*, or *timesyncd*, and you need to know
    which one your Linux system uses.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the *ps* command to see if any of the three time synchronization daemons,
    *ntpd*, *chronyd*, or *timesyncd* are running on your system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If any of these are running, skip ahead to the relevant recipes in this chapter
    to learn how to manage your time daemon.
  prefs: []
  type: TYPE_NORMAL
- en: 'If none of these are running, see if your system is using *timedatectl*, which
    is part of systemd:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This output shows that *timedatectl* is running without any time daemons, indicated
    by *systemd-timesyncd.service active: no*. Double-check by querying the status
    of *systemd-timesyncd*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This shows that *systemd-timesyncd* is not running, which means there is no
    time synchronization on your system, and it is getting its time from your system’s
    real-time clock (RTC). In this case you need to set up *ntpd*, *chrony*, or *timesyncd*.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Some Linux distributions do not use systemd; see [Recipe 4.1](ch04.xhtml#rec-is-systemd-present)
    to learn how to know if your Linux has it. If you are running a Linux system without
    systemd, your NTP choices are *ntpd* or *chrony*.
  prefs: []
  type: TYPE_NORMAL
- en: If you find both *ntpd* and *chrony* running on the same system, get rid of
    *ntpd*, as *chrony* is newer, faster, and more reliable. Having both will create
    conflicts.
  prefs: []
  type: TYPE_NORMAL
- en: The output of *timedatectl* has a lot of useful information. The example shows
    that the RTC is correctly set to the Coordinated Universal Time (UTC) protocol,
    and that the system time zone is Pacific Daylight Time, PDT. *systemd-timesyncd.service*
    is not running, and the system has not been synchronized.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[timedatectl: Control the system time and date](https://oreil.ly/QddJ7)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 ps*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.2 Using timesyncd for Simple Time Synchronization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to know how to set up the simplest NTP client to keep the correct time
    on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Enable synchronization with a public NTP server using the *systemd-timesyncd*
    daemon, which requires systemd. Check the status of *systemd-timesyncd*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Enable it with *timedatectl*, and verify that *systemd-timesyncd* started:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'If *systemd-timesyncd* did not start, start it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now see what *timedatectl* reports:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Everything looks correct. Your system is synchronized, all the times are correct,
    and the *systemd-timesyncd.service* is active.
  prefs: []
  type: TYPE_NORMAL
- en: 'It is a good practice to configure multiple public time servers for redundancy.
    Edit */etc/systemd/timesyncd.conf* to add more NTP servers by uncommenting the
    `NTP` line and entering a space-delimited list of public server pools:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In your original */etc/systemd/timesyncd.conf* file, the commented options document
    the default configuration.
  prefs: []
  type: TYPE_NORMAL
- en: The pool servers are highly reliable because they are multiple servers in a
    single pool, rather than individual servers. For best peformance use the pool
    servers for your region, either the [continental pools](https://oreil.ly/iEipo)
    or the country pools, which you will find by clicking on the continental pool
    links.
  prefs: []
  type: TYPE_NORMAL
- en: 'Your Linux distribution may configure multiple server pools of their own, such
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This is good, and you don’t need to change it, but a more diverse configuration
    is usually more reliable.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.xhtml#cha-systemd)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NTP Pool Project](https://ntppool.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 5 timesyncd.conf*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.3 Setting Time Manually with timedatectl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to set your system and RTC time manually.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use *timedatectl*. It sets the date, system time, and RTC time with a single
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'You cannot do this when *systemd-timesyncd* is running, so you must stop it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Then enter your new settings in the format shown in the example, YYYY-MM-DD
    HH:MM:SS, and verify that it worked:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: If you restart *systemd-timesyncd*, it will override your manual settings.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*timedatectl* has a small set of commands. If you are used to the *date* command
    for setting the time, and other time and date operations, *timedatectl* may seem
    lightweight. It is simple by design, and you still have *date* and its numerous
    options for complex tasks.'
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 5 timesyncd.conf*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.4 Using chrony for Your NTP Client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your want a fully featured NTP client/server, and you want to know how to set
    up *chrony* as your NTP client.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, check if *ntpd* is installed. If it is, remove it. If you have *systemd-timesyncd*,
    disable it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Then install *chrony*. The package name on most Linuxes is *chrony*. After
    installation use the *chronyc* command to check its status:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Success! It is already working, as *8 sources online* tells you. (If it did
    not start, see the Discussion.) Find your *chrony.conf*, either */etc/chrony.conf*
    (Fedora) or */etc/chrony/chrony.conf* (Ubuntu), and take a look at the settings.
    There is not much you need to change, if anything, to use it as a client. Check
    the NTP server list, where you will see either *server* options or *pool*. The
    following example on an Ubuntu system includes the default Ubuntu NTP server pools
    and a local LAN server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'You could replace some of the Ubuntu server pools with some public server pools
    to improve reliability with a more diverse set of pools:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Restart *chronyd* after changing the configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*iburst* means synchronize quickly after network interruptions, and *prefer*
    means always use this server, unless it is not available.'
  prefs: []
  type: TYPE_NORMAL
- en: That really is all you need to do for a client setup. *chrony* is a full NTP
    implementation and has many options; see *man 5 chrony.conf* for a complete description.
  prefs: []
  type: TYPE_NORMAL
- en: 'Manage *chronyd* just like any other service using the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '*systemctl status chrony*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl stop chrony*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl start chrony*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl restart chrony*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chrony has several advantages over *ntpd*. The main advantages as a client are
    better handling of interrupted network connections and faster resyncing when the
    connection is restored.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[chrony](https://oreil.ly/1S41c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 5 chrony.conf*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 chronyc*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.5 Using chrony as a LAN Time Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to set up *chrony* as your LAN time server.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just like in [Recipe 17.4](#rec-chrony-client), disable *systemd-timesyncd*
    and remove *ntpd* if it is on your system. Then install the *chrony* package.
  prefs: []
  type: TYPE_NORMAL
- en: 'Find the configuration file, either */etc/chrony.conf* (Fedora, openSUSE) or
    */etc/chrony/chrony.conf* (Ubuntu). The following example is a basic configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Then your clients need your server’s name added to their *chrony.conf* files:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'The *prefer* option means to always use this server as long as it is available.
    One of the reasons to keep a local time server is to put less of a load on the
    public time servers. With the *prefer* option you can configure some public servers
    as backups, in case your local server becomes unavailable, and not worry about
    burdening them, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*local stratum 10* configures *chrony* to continue acting as your local NTP
    server even when your internet connection is interrupted, and *stratum 10* puts
    your server safely down the strata hierarchy, so that it is lower than any external
    NTP servers you are using. Allowed values are 1–15\. (Do please use a number other
    than 10, in case this recipe makes *stratum 10* wildly popular.)'
  prefs: []
  type: TYPE_NORMAL
- en: The *allow* options define the networks that are allowed to use your NTP server.
  prefs: []
  type: TYPE_NORMAL
- en: '*rtcsync* tells *chrony* to keep your RTC synchronized with system time.'
  prefs: []
  type: TYPE_NORMAL
- en: '*log* enables logging and defines the events you want logged.'
  prefs: []
  type: TYPE_NORMAL
- en: You may look up the other options in *man 5 chrony.conf*, or in your default
    *chrony.conf*, which is usually well commented.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[chrony](https://oreil.ly/1S41c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 5 chrony.conf*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 chronyc*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.6 Viewing chrony Statistics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to call up some real-time *chrony* activity and statistics, such as
    upstream NTP servers, offsets, skew, which server you are currently synced with,
    and other information.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the *chronyc* command. The *tracking* subcommand shows how much correction
    has been applied, the RTC time, skew, and other information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'List your current source servers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'List your current source servers, with descriptions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: The asterisk shows which server your system is currently synchronizing with.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*chrony* adjusts for network delays and latency, intermittent connections,
    and sleep and hibernate modes on client machines. The *chrony* clock never stops,
    and it keeps your network synchronized even when external name servers are unavailable.'
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 chronyc*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[chrony.tuxfamily.org](https://oreil.ly/1S41c)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.7 Using ntpd for Your NTP Client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Yes, you know all about *chrony* and *timesyncd*, and how good they are, but
    you still want to use *ntpd* as your NTP client.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No problem, because *ntpd* is actively maintained and does the job just fine.
    First, make sure that *ntpd* is the only NTP client on your system (see [Recipe
    17.1](#rec-which-ntp)). On most Linux distributions, look for the *ntp* package
    to install.
  prefs: []
  type: TYPE_NORMAL
- en: 'On most Linux distributions *ntpd* comes with a useful configuration, and starts
    after installation. Check with the *ps* command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'If it does not start automatically, start it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'While *ntpd* is running, take a look at your configuration file, usually */etc/ntp.conf*.
    The default configuration for your Linux distribution should work fine for you
    without changes. If your network has its own LAN server, the following configuration
    sets the local server as the primary and one Fedora Linux server pool as a fallback:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: You may keep the default configuration, which works fine for most situations.
    It is common for Linux distributions to maintain their own NTP server pools and
    provide these in the default configuration. If you wish to replace these, or add
    some external public servers, see [continental pools](https://oreil.ly/W70Ba)
    for a list of the continental NTP server pools, or use your country pools, which
    you will find by clicking on the continental pool links.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you change */etc/ntp.conf*, restart *ntpd*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Check that it is working with *ntpq*. The asterisk shows that the machine is
    syncing with the LAN NTP server:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*iburst* tells *ntpd* to synchronize quickly at system startup.'
  prefs: []
  type: TYPE_NORMAL
- en: '*prefer* means use this server, and use the others only when it becomes unavailable.'
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 5 ntp.conf*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 ntpd*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 ntpq*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NTP Documentation](https://oreil.ly/lpDgk)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.8 Using ntpd for Your NTP Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to know how to run an *ntpd* server for your LAN.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Using *ntpd* for your LAN time server is similar to using it as an NTP client.
    The configuration is almost the same, with the addition of some access controls.
    The following example is a complete */etc/ntp.conf* configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The driftfile is where *ntpd* tracks the time drift caused by fluctuations
    in the oscillating frequency of the quartz crystal on your motherboard. You have
    the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: '*restrict default* denies all, permits only what is explicitly allowed, and
    sets defaults.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*nomodify* does not allow other time servers to make any changes on your system.
    Queries are allowed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*notrap* disables remote logging.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*nopeer* does not allow peering. Peer servers synchronize with each other,
    so the only servers allowed to supply time service are specified by the *server*
    or *pool* directives.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*noquery* disallows remote queries and remote logging.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*restrict 127.0.0.1* and *restrict ::1* mean trust localhost.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The *statistics* section logs your selected statistics into */var/log/ntpstats/*.
    This is not necessary, but it could be interesting for tracking which upstream
    NTP servers have the best performance.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 5 ntp.conf*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 ntpd*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 ntpq*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NTP Documentation](https://oreil.ly/lpDgk)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.9 Managing Time Zones with timedatectl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to list all time zones, see your current time zone, and change time
    zones.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use *timedatectl*. View your current time zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'List all time zones:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'The list is over 400 lines long. Use the *grep* command when you know what
    you are looking for. The list names major cities, for example, Berlin:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Set this as your time zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: The change takes effect immediately. Run *timedatectl* again to verify.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you work with people in different time zones, use UTC to coordinate meeting
    times. There are several online time zone converters, such as [Time Zone Converter](https://oreil.ly/NyLj7).
  prefs: []
  type: TYPE_NORMAL
- en: You must use the region/city form, as displayed by *timedatectl list-timezones*,
    to set your time zone. This is defined by the ISO 8601 standard, which defines
    an unambiguous standard for expressing time zones, time, and dates. The standard
    uses a “descending notation,” which is the largest values to the smallest values,
    in sequence. For example, for time zones the order is continent/country/city.
    The US habit of writing the date as year-day-month does not conform to this standard.
    Year-month-day is the standard, with a 4-digit year, YYYY-MM-DD. Time is HH:MM:SS,
    in the 24-hour clock format.
  prefs: []
  type: TYPE_NORMAL
- en: The officially published ISO 8601 standard costs money, but a bit of web searching
    should find the information for free.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 timedatectl*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 17.10 Managing Time Zones Without timedatectl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your Linux system does not have systemd, and you need to know what commands
    to use to manage time zones.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the *date* command to see your current time zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Or see what */etc/localtime* is linked to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'The */usr/share/zoneinfo* directory contains all time zones:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Look in the subdirectories to find a city close to yours, for example, Madrid:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'Change your time zone by changing the link to */etc/localtime*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: The change takes effect immediately.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This cool command lists all time zones alphabetically:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: The *php* command is in the *php-cli* package.
  prefs: []
  type: TYPE_NORMAL
- en: Your graphical desktop should have a nice graphical utility for managing time,
    date, and time zones. If a clock is displayed on your desktop, try right-clicking
    it to bring up a properties or settings panel.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 date*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 ln*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
