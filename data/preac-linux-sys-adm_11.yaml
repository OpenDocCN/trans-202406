- en: Chapter 11\. Deploying Samba for Windows Compatibility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Interoperability is the capability for disparate systems such as Windows, Linux,
    Unix, and macOS to coexist and work together. Interoperability is now a standard
    and accepted feature of all data center operating systems, although some functionality
    requires third-party software. Hardware, software, and operating systems can no
    longer exist in a proprietary vacuum. In other words, vendors must ensure that
    their products are cross-platform capable. Contemporary data centers are heterogenous—meaning
    that Windows, Linux, and Unix systems occupy racks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Both native and third-party utilities make interoperability possible. From
    Active Directory (AD) and LDAP to Samba/SMB to *nix utilities and applications,
    systems can work together toward a common goal: serving customers.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The generic wildcard designation “*nix” represents all Unix, Linux, and similar
    operating systems and distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Samba is a suite of utilities that enable Windows interoperability for Linux
    and Unix. Samba provides secure, stable, file and print services for non-Windows
    systems using the Server Message Block/Common Internet File System (SMB/CIFS)
    protocol. Samba has its own authentication structure consisting of permissions
    and passwords.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using Samba, Linux systems may do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Share directories, filesystems, and printers with Windows computers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mount Windows shares
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Browse the network for shares provided by Windows and other Linux computers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Participate in Windows domain authentication and authorization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use Windows name resolution services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use shared printers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With Samba installed on Linux servers, Windows computers may do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Browse Linux shares
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use shared printers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Map network drives to Linux shares
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This chapter explores some utilities and applications that enable Linux systems
    to interoperate with Windows. The following section discusses the challenges of
    interacting with Windows systems, and tools and configurations to make it work.
  prefs: []
  type: TYPE_NORMAL
- en: Planning Your Samba Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Requests for new file shares are commonplace in any business. Coworkers, often
    separated by hundreds or thousands of miles, want a shared space to place files
    such as documents, spreadsheets, text files, scripts, and images. As a system
    administrator, there are some questions you must ask of your groups who want this
    shared space.
  prefs: []
  type: TYPE_NORMAL
- en: 'For this scenario, the Facilities department has requested the shared file
    space. So, you will set up their Linux system as a Windows file server. The following
    is a list of five important questions to ask:'
  prefs: []
  type: TYPE_NORMAL
- en: Should this space be restricted to your group only?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do you want everyone in your group to be able to copy and create files in the
    shared space?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Are there any default permissions you want to set on uploaded files?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do you need any read-only folders for documents?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is this a permanent or a temporary shared space?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For this scenario, the facilities manager gave the following answers:'
  prefs: []
  type: TYPE_NORMAL
- en: Yes, restrict to facilities employees only.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Everyone needs to be able to copy and create files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Everyone in the group needs read and write access to all files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Yes, we need a *Policies* folder from which no one can edit or remove files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a permanent space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The answers give you a starting place for the new shared space for the facilities
    team. If a facilities group doesn’t exist, create one now and add facilities team
    members as their primary group. The group member accounts are `atran`, `areed`,
    and `akumar`.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Samba usernames and passwords must match exactly with those configured on Windows
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'To demonstrate Samba’s functionality, perform the following tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a directory such as */opt/facilities* that will be shared via Samba:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Change the group ownership and permissions of the */opt/facilities* directory
    to reflect the requested permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a subdirectory under */opt/facilities* and name it *Policies*. Make
    the *Policies* directory read-only for the facilities group:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Now the shared space setup is complete and ready for Samba configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Samba and Its Dependencies
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before configuring anything related to Samba, you must install it and its dependent
    software:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The process works similarly on other distributions. This transaction installs
    everything you need to set up your Linux system as a Windows file server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Enable and start the Samba services (`smb` and `nmb`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Samba services are now started and will start at boot time.
  prefs: []
  type: TYPE_NORMAL
- en: Adding Samba Users to Your System
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Because Samba manages its own user list, you must add each user to the Samba
    User Database. For demonstration purposes, I use `PaSSw0rd` for the Samba password:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: A configuration is available to sync Samba and Linux passwords. I cover this
    later in the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Managing Samba Users as a Group
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Groups make it easier to manage large numbers of users. Groups are easier to
    manage because you can apply security to multiple users at once without the overhead
    of tracking the security settings for each user. In other words, managing security
    for 10 groups is much easier than managing it for 100 individual users.
  prefs: []
  type: TYPE_NORMAL
- en: You can create new Linux groups or use existing ones for Samba users and grant
    group access to a share. You can also grant individual users access to a share,
    but it’s much more labor-intensive.
  prefs: []
  type: TYPE_NORMAL
- en: Continuing with the example scenario where you have a facilities Linux group
    containing three members, you can manage directory and file permissions for all
    three group members for a particular directory (*/opt/facilities*). This is standard
    Linux administration practice.
  prefs: []
  type: TYPE_NORMAL
- en: If you then share that same directory (*/opt/facilities*) via Samba, add `valid
    users = @facilities` in the configuration file to allow the entire group access
    to the shared directory. The `@facilities` declaration refers to the facilities
    Linux group, and its group members are valid users of that share.
  prefs: []
  type: TYPE_NORMAL
- en: Linux file and directory permissions are different from Samba permissions. A
    Linux user might have write access permission to a directory, but the share might
    be read-only for the same user. If you don’t add valid users to a share, it doesn’t
    matter that the Linux file permissions allow the group to write to the directory;
    group members won’t be able to access that directory via the share.
  prefs: []
  type: TYPE_NORMAL
- en: One of the primary reasons for enabling Samba shares is to create compatibility
    between Windows and Mac clients and Linux servers. The rest of this chapter deals
    with configuring and supporting that interoperability.
  prefs: []
  type: TYPE_NORMAL
- en: Providing Services to Mac and Windows Clients
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a Linux system administrator, you must realize that Linux is a great *server*
    operating system. Some believe massive Linux desktop adoption is “just around
    the corner.” However, realistically, Windows and Mac workstations are the corporate
    standards, while Linux is still the outlier. Because Linux is a great server operating
    system, sysadmins must provide services compatible with Windows and Mac clients.
    macOS, having *nix roots, is generally Linux compatible, so less effort is required
    to make Mac systems and Linux work together.
  prefs: []
  type: TYPE_NORMAL
- en: Windows, however, is not so easy to integrate with Linux—at least, not right
    out of the box. Windows systems require third-party tools and utilities, and Linux
    systems require extra software packages and special configurations. But it’s possible
    to make the two systems work together seamlessly, and the solutions are also quite
    elegant and stable.
  prefs: []
  type: TYPE_NORMAL
- en: Serving Network Storage to Desktop Clients
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Administrators provide network storage to Windows systems via mapped drives
    and to Mac clients via mounted shares. A mapped drive, in Linux terms, is a mounted
    remote shared directory. Windows labels these remote shares as drive letters,
    such as *F:* through *Z:*. From the Linux system, sysadmins share directories
    through Samba, which is somewhat analogous to *nix Network File System (NFS) shares.
    macOS systems can also mount Samba shares by browsing the network using the Samba
    protocol or by direct connection.
  prefs: []
  type: TYPE_NORMAL
- en: Samba shares are handy because users can drag and drop files onto a shared directory
    without using file transfer software such as FTP, SFTP, SCP, or others. Samba
    shares appear to be shared from a Windows server system, which further integrates
    Linux into a Windows and Mac desktop environment.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring global Samba settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can set dozens of “directives” in the `[global]` portion of your */etc/samba/smb.conf*
    file. Still, in my opinion, the following directives are the ones you should set,
    regardless of your use of domain controllers and AD, but they are best used as
    a standalone Samba server. Many of the directives shown are defaults:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Change the settings to match your network and needs. The workgroup is usually
    set to the same as your domain name or workgroup if you aren’t using a domain.
    The NetBIOS name is the name of the Samba server that you’ll see in a network
    browse list.
  prefs: []
  type: TYPE_NORMAL
- en: Printing via Samba
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can also share printers, but because most systems print directly to printers
    via their IP addresses, printer sharing isn’t covered here. There is a sample
    configuration for sharing printers in the */etc/samba/smb.conf* file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: These configurations will get you started. I suggest that you change `browseable
    = no` to `browseable = yes`. Remember to restart the `samba` service every time
    you make a configuration change. The next two sections step you through sharing
    a directory for user access.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying the lmhosts file
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Just as you have in Windows systems, Samba supports the *lmhosts* file. The
    *lmhosts* file lists NetBIOS names and IP addresses of systems on your network.
    I suggest you copy and paste the contents of a Windows *lmhosts* file to your
    Linux systems that provide Samba services. Do not transfer the Windows *lmhosts*
    file to your Linux servers because of text formatting differences between Windows
    and Linux systems. The default *lmhosts* file in */etc/samba* only contains localhost
    information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Think of the *lmhosts* file the same way you consider the */etc/hosts* file.
    You can also set other directives in the *lmhosts* file shown in the following
    list. Directives follow entries and use the `#`:'
  prefs: []
  type: TYPE_NORMAL
- en: '`#PRE`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Entries loaded into cache for name lookup and resolution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '`#DOM:*domain*`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Domain server entries. Use this directive with the `#PRE` directive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '`#INCLUDE \\*UNC Path*\*To File*`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Includes a file from another system. This is often used to integrate *lmhosts*
    files from frequently updated Windows systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: '`#BEGIN_ALTERNATE`/`#END_ALTERNATE`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Groups multiple `#INCLUDE` directives together:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: I always use *lmhosts* files on my Samba servers. I set up an automated script
    to keep the local *lmhosts* file in sync with a single source of truth. However,
    the `#INCLUDE` directive that points to another system’s *lmhosts* file is a good
    alternative.
  prefs: []
  type: TYPE_NORMAL
- en: The next few sections demonstrate how to set up and use a Samba share.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a Shared Directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The */etc/samba/smb.conf* file is the Samba configuration file where you set
    up shared directories. The `homes` share is a good place to start for your custom
    shared directory configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following sample shared directory is from an */etc/samba/smb.conf.example*
    file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: The following is the facilities share configuration in my */etc/samba/smb.conf*
    file. The bracketed portion, `[Facilities]`, is the share name. Remember to keep
    share names to 15 characters or less, and avoid nonalphanumeric characters and
    spaces.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `create mode` and `directory mode` are set according to the facilities
    manager’s needs from the previously mentioned five questions:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: The `valid users` entry limits access to users listed in the facilities Linux
    group. `browseable` means that if you perform a network browse, the system and
    this share appear in the list of available shares. The `create mode` directive
    (`0660`) is the default file creation permission for files in the share. When
    you create a new file in the shared directory via the share, its permissions will
    be `0660`. The directory mode is the permissions given to the share.
  prefs: []
  type: TYPE_NORMAL
- en: Browsing for Shared Directories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This section covers browsing for and connecting to Linux Samba shares from Mac,
    Windows, and Linux computers. Refer to Figures [11-1](#a_samba_network_browse_on_a_macos_syste)
    and [11-2](#the_macos_finder_app_displaying_samba_s) to see how a Mac system views
    Samba shares on Linux systems. *server1* is the CentOS system I’ve used in the
    examples, and *server2* is an Ubuntu system also used in this book.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/plsa_1101.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-1\. A Samba network browse on a macOS system
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Once connected, the mounted shares appear as resources in the macOS Finder application.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/plsa_1102.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-2\. The macOS Finder app displaying Samba systems and shares
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: On Windows systems, the view is similar, but to connect to a remote share, you
    must map a drive. Mapping a drive means mounting the remote share and using it
    as if it were local to the system. Recall the NFS reference from earlier. See
    Figures [11-3](#mapping_a_drive_left_parenthesisgright) and [11-4](#the_mapped_drive_in_windows_file_explor).
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/plsa_1103.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-3\. Mapping a drive (G:) to the remote share \\server1\Facilities
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Mapping the share makes it available as a drive letter on the client system.
  prefs: []
  type: TYPE_NORMAL
- en: '![](assets/plsa_1104.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-4\. The mapped drive in Windows File Explorer
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: With the drive mapped, the user, `ajones`, can freely access the *Facilities*
    share, and this user can create, edit, and copy files to the shared directory.
    The following section deals with how Linux systems view and connect to Windows
    shares.
  prefs: []
  type: TYPE_NORMAL
- en: Mounting Windows System’s Shares
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can also browse shares on a remote Windows (or other Linux) system from
    a Linux computer using the Samba protocol:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: The message concerning `SMB1` can be ignored. It doesn’t affect functionality.
    Depending on your Samba client and server versions on the systems you’re browsing,
    you can receive different messages referring to SMB versions. All can be ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '`mount` the remote Windows share (`Files`) on the `WIN10` computer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'If you don’t use the filesystem type `cifs` as part of the `mount` command,
    you’ll receive the following message:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux interoperability everywhere from contemporary enterprise data centers
    to small server rooms provides increased functionality, lowers costs, and offers
    greater freedom of software choice. Regardless of which distribution you choose
    to integrate into your business, providing services to Windows and Mac clients
    is essential to Linux adoption and success. You must seamlessly duplicate standard
    Windows Server services and demonstrate to users and management that Linux can
    dispel skepticism with higher stability and lower maintenance than its costly
    alternatives.
  prefs: []
  type: TYPE_NORMAL
