- en: Chapter 19\. System Rescue and Recovery with SystemRescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A SystemRescue DVD or USB drive is an essential tool, and you may use it to
    rescue nonbooting Linux and Windows systems. In this chapter you will learn how
    to create SystemRescue boot media, how to find your way around SystemRescue, customize
    boot options, repair GRUB, retrieve files from a failing disk, reset Linux and
    Windows passwords, and convert SystemRescue from a read-only filesystem to a read-write
    filesystem with a data partition.
  prefs: []
  type: TYPE_NORMAL
- en: Any live Linux can serve as a rescue Linux. The advantage of SystemRescue is
    its small size, and it is tailored for rescue operations.
  prefs: []
  type: TYPE_NORMAL
- en: The root SystemRescue filesystem is read-only, so any changes you make are lost
    when you shut it down. You will learn how to set it up to preserve your changes,
    such as configurations, appearance, and adding software.
  prefs: []
  type: TYPE_NORMAL
- en: SystemRescue was originally based on Gentoo Linux, and since version 6.0 it
    is built from Arch Linux. Arch Linux is known for being a reliable and efficient
    Linux distribution, and has first-rate documentation. Visit [*https://archlinux.org*](https://archlinux.org)
    for documentation and forums.
  prefs: []
  type: TYPE_NORMAL
- en: I prefer USB devices for SystemRescue, both thumb drives and USB hard disks.
    They’re fast and have as much capacity as you need for copying files.
  prefs: []
  type: TYPE_NORMAL
- en: 19.1 Creating Your SystemRescue Bootable Device
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to make a SystemRescue DVD or USB drive.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Download the latest SystemRescue *.iso* from [*https://system-rescue.org*](https://system-rescue.org).
  prefs: []
  type: TYPE_NORMAL
- en: The most reliable way to create a bootable SystemRescue USB stick is with the
    *dd* command (see [Recipe 1.6](ch01.xhtml#recipe0106)). See Recipes [1.4](ch01.xhtml#rec-bootable-dvd)
    and [1.5](ch01.xhtml#recipe0105) for instructions on creating a bootable DVD.
    [Chapter 1](ch01.xhtml#cha-install-linux) also describes how to boot to your new
    medium and how to disable Secure Boot. SystemRescue does not include signing keys,
    so you must disable Secure Boot.
  prefs: []
  type: TYPE_NORMAL
- en: When you boot from a USB stick, plug it in to a USB port on your computer, not
    a USB hub, because it will not be recognized on a hub.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Remember to reenable Secure Boot when you are finished using SystemRescue.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.xhtml#cha-install-linux)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.2 Getting Started with SystemRescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You have booted up SystemRescue, and it stops at a plain console prompt, and
    you need to know what to do.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SystemRescue gives you instructions on the initial login screen ([Figure 19-1](#fig-sysrec-6)).
    You are automatically logged in as root, and there is no root password.
  prefs: []
  type: TYPE_NORMAL
- en: You can either work from the console or type **`startx`** to launch the Xfce4
    desktop environment ([Figure 19-2](#fig-sysrec-7)).
  prefs: []
  type: TYPE_NORMAL
- en: '![The SystemRescue login screen..](Images/lcb2_1901.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-1\. The SystemRescue login screen
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![The SystemRescue Xfce4 desktop environment.](Images/lcb2_1902.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-2\. The SystemRescue Xfce4 desktop environment
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Explore the applications menu, adjust the appearance of Xfce, connect to networks
    with NetworkManager, and shut it down or reboot just like any Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The one thing you cannot do with the stock SystemRescue image is make persistent
    changes in its own configuration. Any changes you make will not survive a restart
    because SystemRescue runs from a compressed read-only SquashFS filesystem. However,
    you can set it up to preserve your changes; see [Recipe 19.14](#rec-preserve-changes).
  prefs: []
  type: TYPE_NORMAL
- en: SquashFS is the basis of many live Linux distributions, such as Ubuntu, Debian,
    Mint, Fedora, and Arch. It is also used by the open source router firmware projects
    DD-WRT and OpenWRT. SquashFS is lightweight and fast.
  prefs: []
  type: TYPE_NORMAL
- en: I like working from Xfce4 because it provides a lightweight graphical environment
    and applications, and an X terminal for command-line operations.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://xfce.org*](https://xfce.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.3 Understanding SystemRescue’s Two Boot Screens
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While testing SystemRescue, you noticed there are two different boot screens,
    and you want to know what they are for.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are two different boot screens according to how you boot SystemRescue.
    You’ll see one boot screen with legacy BIOS boot ([Figure 19-3](#fig-sysrec-2))
    and a different screen with UEFI boot ([Figure 19-4](#fig-sysrec-4)).
  prefs: []
  type: TYPE_NORMAL
- en: When the UEFI setup on my Dell system is configured to allow booting legacy
    devices, the one-time boot menu (press F12 at startup) shows all possible boot
    options ([Figure 19-5](#fig-sysrec-5)). SystemRescue supports UEFI, so it is not
    necessary to enable legacy boot. (Remember that Secure Boot must be disabled for
    SystemRescue to boot.)
  prefs: []
  type: TYPE_NORMAL
- en: Your system’s BIOS/UEFI may not look like mine, as they all vary.
  prefs: []
  type: TYPE_NORMAL
- en: '![The SystemRescue legacy boot screen.](Images/lcb2_1903.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-3\. The SystemRescue legacy BIOS boot screen
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![The SystemRescue UEFI boot screen.](Images/lcb2_1904.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-4\. The SystemRescue UEFI boot screen
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: '![Dell one-time boot menu shows all possible boot options.](Images/lcb2_1905.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-5\. Dell one-time boot menu shows all possible boot options
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: The main difference between the two boot screens is the SystemRescue UEFI boot
    screen has the “Start EFI Shell” and “EFI Firmware Setup” options, which are not
    applicable to a legacy BIOS boot.
  prefs: []
  type: TYPE_NORMAL
- en: The legacy BIOS boot screen does not have the two EFI options, but it includes
    Memtest86+ for testing system memory.
  prefs: []
  type: TYPE_NORMAL
- en: See [Recipe 19.4](#rec-boot-options) to learn what the different SystemRescue
    boot options are for.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can configure removable media as the default boot device. Then you don’t
    have to hassle with entering your BIOS/UEFI to enable a different boot device
    or waiting for the right moment to call up your one-time boot menu; just insert
    your removable boot media when you need it.
  prefs: []
  type: TYPE_NORMAL
- en: If you are running an older system with no UEFI, you won’t have to choose or
    hassle with Secure Boot.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.xhtml#cha-install-linux)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 19.4](#rec-boot-options)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.4 Understanding SystemRescue’s Boot Options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to know what all those SystemRescue boot options are for ([Recipe 19.3](#rec-boot-screens)).
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The boot menu options are shortcuts for the most commonly used boot options,
    saving you the trouble of opening the editing form and typing them. In most cases
    you will use the first boot option, “Boot SystemRescue Using Default Options.”
  prefs: []
  type: TYPE_NORMAL
- en: The second option, “Boot SystemRescue and copy to RAM (copytoram),” speeds up
    performance by loading SystemRescue completely into memory. This is especially
    useful when you run SystemRescue from a DVD. It uses about 2 GB of RAM.
  prefs: []
  type: TYPE_NORMAL
- en: The third option, “Boot SystemRescue and verify integrity of the medium (checksum),”
    tests itself for corruption. Use this to verify that your SystemRescue is healthy.
  prefs: []
  type: TYPE_NORMAL
- en: The fourth option, “Boot SystemRescue using basic display drivers (nomodeset),”
    uses lower-resolution basic video drivers. Use this if your video does not look
    right because SystemRescue does not have the right graphics drivers.
  prefs: []
  type: TYPE_NORMAL
- en: The fifth option, “Boot a Linux operating system installed on the disk (findroot),”
    is a good way to test if the bootloader is the problem on a nonbooting Linux installation.
    It will find a bootable partition, and if there is more than one it lists all
    of them, and you select which one you want to use.
  prefs: []
  type: TYPE_NORMAL
- en: The sixth option, “Stop during the root process before mounting the root filesystem,”
    is a repair mode in case SystemRescue will not boot. I think it’s easier to keep
    some extra SystemRescue drives on hand than to try to repair a broken SystemRescue.
  prefs: []
  type: TYPE_NORMAL
- en: 'The UEFI boot screen has two additional options: “Start EFI Shell,” and “EFI
    Firmware Setup.” “Start EFI Shell” gives you access to the numerous EFI utilities,
    and “EFI Firmware Setup” takes you to your system’s UEFI setup.'
  prefs: []
  type: TYPE_NORMAL
- en: Then Reboot and Power off.
  prefs: []
  type: TYPE_NORMAL
- en: 'The BIOS boot screen has two additional options: “Boot existing OS” and “Run
    Memtest86+.” “Boot existing OS” helps diagnose bootloader problems by bypassing
    the system’s bootloader, and “Memtest86+” tests system memory.'
  prefs: []
  type: TYPE_NORMAL
- en: Both screens include “Reboot” and “Power off,” for rebooting or shutting down
    SystemRescue instead of starting it up.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I don’t see much value in using the EFI shell because it supports advanced operations
    far beyond what you need for rescuing a nonbooting system. See Intel’s [Basic
    Instructions for Using the Extensible Firmware Interface](https://oreil.ly/dktzy)
    to learn all about it.
  prefs: []
  type: TYPE_NORMAL
- en: All of these menu options are shortcuts for some of SystemRescue’s boot options,
    which are documented on [*https://system-rescue.org*](https://system-rescue.org).
    You may append boot options to any of the SystemRescue boot menu items, which
    you will see in several of the recipes in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: You can do these tasks after you start SystemRescue, or pass in boot options.
    In the legacy BIOS screen, select your boot entry, then press the Tab key, which
    opens an edit field. Enter **`rootpass=*yourpassword* nofirewall`**, then press
    Enter to resume startup.
  prefs: []
  type: TYPE_NORMAL
- en: In the UEFI boot screen, press the E key to pass in your own boot options.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.5 Identifying Filesystems
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to know how to identify the filesystems on your hard disks, so you
    are certain which ones to use in your rescue operations.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the good old *lsblk* command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using filesystem labels makes finding the correct filesystems a lot easier.
    You may also use labels in place of UUIDs, for example, in */etc/fstab*. See [Recipe
    9.4](ch09.xhtml#rec-new-partition-gparted) and [Chapter 11](ch11.xhtml#cha-create-filesystems)
    for information on managing filesystem labels.
  prefs: []
  type: TYPE_NORMAL
- en: '*lsblk* does not need root privileges and displays information about your block
    devices in almost any way you want to see it.'
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Recipe 9.4](ch09.xhtml#rec-new-partition-gparted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 11.2](ch11.xhtml#rec-lsblk)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.xhtml#cha-create-filesystems)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.6 Resetting a Linux Root Password
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You forgot your Linux root password and need to reset it.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Boot SystemRescue, then mount the correct root filesystem. In the following
    examples, the root filesystem is on */dev/sdb2*. Create a mountpoint in */mnt*,
    then mount your filesystem:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Change from the SystemRescue root filesystem to your mounted filesystem:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Reset the root password:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Type **`exit`** to return to the SystemRescue root filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: Reboot, log in, and try your new password.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You cannot recover a forgotten password, but only create a new one.
  prefs: []
  type: TYPE_NORMAL
- en: This works for any user’s password.
  prefs: []
  type: TYPE_NORMAL
- en: By changing to the host system’s root filesystem you can run some commands,
    but not all of them because it is not a complete filesystem. It is missing all
    the pseudo-filesystems that exist only in memory, such as *sysfs* and *proc*.
    See [Recipe 19.9](#rec-repair-grub) to learn how to set up a more complete *chroot*
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Once upon a time you could reset a root password by deleting the password hash
    in */etc/shadow*. That was then, and now the *pam* subsystem is more complex and
    controls authorization. If you’re curious, study the SystemRescue *pam* configuration
    to see how it is set up to allow an empty root password.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.xhtml#cha-users-groups)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 7 pam*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.7 Enabling SSH in SystemRescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want SSH access to SystemRescue.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SSH is enabled by default, and so is the firewall. Disable the firewall to allow
    incoming SSH sessions.
  prefs: []
  type: TYPE_NORMAL
- en: 'After launching SystemRescue, disable the firewall with *systemctl*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'By default, root has no password on SystemRescue. You must create one to enable
    an SSH session:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Now you can log in to SystemRescue from another computer:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Every time you boot SystemRescue, it is like a brand-new system with a different
    SSH host key. If you reboot SystemRescue, then open a second SSH system from the
    same computer to SystemRescue, you will see this warning:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This goes on for a few more lines, and it tells you the remedy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Do what is says, then you can SSH in to SystemRescue.
  prefs: []
  type: TYPE_NORMAL
- en: You may disable the firewall from the boot menu. Press the Tab key (legacy boot)
    or the E key (UEFI boot) to add the *nofirewall* boot option (see the boot parameters
    line at the bottom of the screen, [Figure 19-6](#fig-sysrec-8)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Disabling the firewall at boot.](Images/lcb2_1906.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-6\. Disabling the firewall at boot
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 19.4](#rec-boot-options)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.xhtml#cha-ssh)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.8 Copying Files over the Network with scp and sshfs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You have SystemRescue up and running on the system you are rescuing and want
    to rescue files by copying them over the network.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: No problem, do this just like on any Linux. First, enable SSH ([Recipe 19.7](#rec-enable-ssh)).
    Then use *scp* or *sshfs* to move the files you want to save. All of the commands
    in this recipe are run from SystemRescue.
  prefs: []
  type: TYPE_NORMAL
- en: 'Find the filesystem you want to copy files from with *lsblk*. If you don’t
    remember which partition you want, mount each one to see the files until you find
    the right one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'The following example mounts the partition containing */home* on the system
    being rescued in */mnt* on SystemRescue, lists the files in the mountpoint, then
    copies the whole */home* directory to Duchess’s PC with *scp*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The result is */home/duchess/home*.
  prefs: []
  type: TYPE_NORMAL
- en: Always Create a Subdirectory in /mnt
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Never mount any filesystems in */mnt*; it will freeze SystemRescue. Always create
    subdirectories for your mountpoints.
  prefs: []
  type: TYPE_NORMAL
- en: 'You may copy a space-delimited list of files and mix files and directories.
    This example copies them to the *rescue* directory on *duchess@pc*. The remote
    directory must already exist:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '*sshfs* is convenient because it mounts a remote filesystem so that it appears
    as a local filesystem, and you can copy files just as though they were local.
    Create a mountpoint on SystemRescue, then mount a remote directory on it, which
    must already exist. You will copy files from SystemRescue to the remote system:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Now you can use the *cp* command on SystemRescue, or use a graphical file manager
    to copy files ([Figure 19-7](#fig-sysrec-10)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Copy files on SystemRescue with a graphical file manager.](Images/lcb2_1907.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-7\. Copy files on SystemRescue with a graphical file manager
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: When you are finished, run **`fusermount -u *remote*`** to cleanly unmount the
    *sshfs* filesystem.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have disabled SSH password authentication on the system you are copying
    the files to, reenable it temporarily by commenting out *PermitRootLogin no* in
    */etc/ssh/sshd_config*.
  prefs: []
  type: TYPE_NORMAL
- en: The syntax for connecting to the remote directory is relative to the user account
    you are logging into. *duchess@pc:* is the same as *duchess@pc:/home/duchess*.
    *duchess@pc:/* accesses the root filesystem. When you need to edit system configuration
    files, use *duchess@pc:/etc*; for bootfiles, use *duchess@pc:/boot*, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can create the remote directory from SystemRescue with *ssh*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Recipe 6.5](ch06.xhtml#rec-cp-mv)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12](ch12.xhtml#cha-ssh)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.9 Repairing GRUB from SystemRescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your GRUB bootloader is broken, and your system does not boot.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Boot up SystemRescue, create a *chroot* environment, and reinstall GRUB.
  prefs: []
  type: TYPE_NORMAL
- en: 'After starting up SystemRescue, create a *chroot* environment for the root
    filesystem on the host:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter the *chroot* environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'If */boot* is on its own partition, mount it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Now reinstall GRUB:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: When this is completed, type **`exit`** to leave the *chroot* environment, then
    unmount all the filesystems. Reboot your system, and GRUB should work.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Be very careful when creating a *chroot* environment, and make sure you are
    using the correct partitions and filesystems. *chroot*, change root, is a great
    utility for changing to a different root filesystem without rebooting.
  prefs: []
  type: TYPE_NORMAL
- en: You must unmount all *chroot* filesystems so that they unmount cleanly. It should
    be all right to simply reboot, but it is cheap insurance to manually unmount them
    first.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 1 chroot*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.10 Resetting a Windows Password
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You lost your Windows password, and you don’t want to jump through the usual
    Windows hoops to reset it.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'No worries, for SystemRescue will have you back in action in a jiffy. Boot
    up SystemRescue on your Windows machine, then mount your Windows system directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Navigate to the */mnt/windows/Windows/System32/config* directory, then use
    the *chntpw* (change NT password) command to list users:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Examine the information on the user you want to change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Enter **`1`** to remove the existing password:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Press **`q`** to quit, and **`y`** to “write hive files,” which saves your changes.
  prefs: []
  type: TYPE_NORMAL
- en: Now the Administrator, or whatever user you selected, must log in and set a
    new password.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You cannot create a new password or recover the old one with *chntpw*, but only
    delete it. Then you log in without a password and create a new password, or, if
    your user is present, let them do it.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 chntpw*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.11 Rescuing a Failing Hard Disk with GNU ddrescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You suspect that your hard disk is dying, and you want to copy your data from
    it before it expires.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want the excellent GNU *ddrescue* utility. *ddrescue* tries to copy all
    the good blocks first, saving as much data as possible, and skips over the bad
    blocks, tracking their locations in a log file. You may make multiple passes to
    try to capture more data.
  prefs: []
  type: TYPE_NORMAL
- en: The disk you are trying to rescue must be unmounted. You need another disk,
    also unmounted, such as a USB storage device or an internal hard disk, to copy
    the rescued data to. Your target partition must already exist and be at least
    50% larger than the partition you are trying to rescue.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example copies */dev/sdb1* to */dev/sdc1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: This will take some time. When it is finished the last line will say “Finished.”
  prefs: []
  type: TYPE_NORMAL
- en: 'This example does one pass, copying the most easily read blocks as quickly
    as possible. This is a good tactic on a drive with a lot of errors because *ddrescue*
    won’t spend a lot of time trying to recover the most damaged blocks. After making
    this first pass, run it three more times to try to recover more data:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'When it is finished, run a filesystem check on the recovery disk, which should
    remain unmounted. This example checks and automatically repairs Ext4 filesystems:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: '*-f* forces a check, in case *e2fsck* thinks the filesystem is clean. *-p*
    is short for preen, or repair, and *-v* is verbose. If it finds a problem that
    requires your intervention, it prints a description of the problem and exits.'
  prefs: []
  type: TYPE_NORMAL
- en: '*e2fsck -vf [device]* launches an interactive check and repair.'
  prefs: []
  type: TYPE_NORMAL
- en: '*fsck.vfat -vfp [device]* is for FAT16/32.'
  prefs: []
  type: TYPE_NORMAL
- en: '*xfs_repair [device]* is for XFS filesystems.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If your recovered filesystem passes the filesystem checks, go ahead and copy
    your files to their final location. If there are still problems, mount it read-only:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Then copy as many files as you can to another disk.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure you have GNU *ddrescue*, by Antonio Diaz Diaz, and not *dd-rescue*
    by Kurt Garloff. *dd-rescue* is a great tool, but it is more complicated to use.
  prefs: []
  type: TYPE_NORMAL
- en: '*ddrescue* copies at the block level, so it doesn’t matter what the filesystem
    is that you are trying to rescue. *ddrescue* will make an exact copy regardless
    of what filesystems your Linux supports.'
  prefs: []
  type: TYPE_NORMAL
- en: If *ddrescue* runs out of space, it will fail at the very end, so be sure your
    recovery drive has a generous amount of room.
  prefs: []
  type: TYPE_NORMAL
- en: You can use *ddrescue* on USB sticks, CompactFlash, and SD cards.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[GNU ddrescue](https://oreil.ly/mMxQf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 8 fsck (e2fsprogs)*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.12 Managing Partitions and Filesystems from SystemRescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to partition your hard disk or make changes to filesystem, and you
    need to do it from an external Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use SystemRescue. SystemRescue includes both GParted and *parted*. You don’t
    have to mount any filesystems, and SystemRescue will operate directly on the block
    devices on your host system. Use *lsblk* to see your host block devices:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Follow the recipes in Chapters [8](ch08.xhtml#cha-partitioning-parted), [9](ch09.xhtml#cha-partitioning-gparted),
    and [11](ch11.xhtml#cha-create-filesystems) for managing partitions and filesystems.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.xhtml#cha-partitioning-parted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.xhtml#cha-partitioning-gparted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.xhtml#cha-create-filesystems)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.13 Creating a Data Partition on Your SystemRescue USB Drive
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SystemRescue on USB drives is working well for you, but you want to know how
    to partition your device with the SystemRescue root filesystem on the first partition
    and a writable filesystem on the second partition. Then you will need only a single
    device for copying files.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can do this in just a few steps.
  prefs: []
  type: TYPE_NORMAL
- en: The stock SystemRescue image cannot boot from a partition. It uses less than
    a gigabyte of space, so any USB stick will have a lot of wasted space. The trick
    to making SystemRescue bootable from a partition is to make your SystemRescue
    ISO capable of booting from a partition, add a Master Boot Record (MBR), then
    install the boot code, *mbr.bin*.
  prefs: []
  type: TYPE_NORMAL
- en: You need *isohybrid* and *mbr.bin*, which are provided by *syslinux*. This is
    provided by the *syslinux* package on Fedora and openSUSE, and by *syslinux-utils*
    and *install-mbr* on Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: In the following examples, replace */dev/sdc* with your own device.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, make the SystemRescue image bootable from a partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Create an *msdos* partition table on your USB drive. Use GParted ([Recipe 9.2](ch09.xhtml#rec-gparted-create-partition-table))
    or *parted*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Create two partitions on your USB drive. Set the filesystem type on Partition
    1 as FAT32, and set the *boot* flag. The following example creates an approximately
    2 GB boot partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Add a second partition for data storage, using any filesystem type you want.
    The following example creates a 2 GB partition, then quits *parted*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Create your filesystems. Partition 1 is FAT32, with the label *SYSRESCUE*;
    Partition 2 is XFS, labeled *data*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Install SystemRescue to the first partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'On Ubuntu, install the MBR to the USB drive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'On other Linuxes, use *dd*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: '*mbr.bin* may be in a different directory, depending which Linux you are using.'
  prefs: []
  type: TYPE_NORMAL
- en: Boot up your SystemRescue drive, and it should start up normally.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Your filesystems do not need labels; they are a convenience to help you remember
    what they are for.
  prefs: []
  type: TYPE_NORMAL
- en: You may use any filesystem on the first partition. FAT32 is universal, so you
    can boot SystemRescue on Linux, macOS, and Windows. For copying files from macOS
    and Windows, format your data partition as FAT32 or exFAT.
  prefs: []
  type: TYPE_NORMAL
- en: You will have to mount your second partition manually, then you can use it however
    you want. It is convenient for copying files from the host system, and the coolest
    thing about having this writable partition is you can use it as a backing store
    for storing changes you make to SystemRescue, such as configuration changes and
    installing software. See [Recipe 19.14](#rec-preserve-changes) to learn all about
    it.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.xhtml#cha-partitioning-parted)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.xhtml#cha-create-filesystems)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 isohybrid*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 dd*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 19.14 Preserving Changes in SystemRescue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SystemRescue is working well for you, but you wish you could preserve some changes
    and not have to start over every time you start SystemRescue.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: See [Recipe 19.13](#rec-writable-partition) to learn how to create a writable
    partition on your SystemRescue USB drive. Give this partition a filesystem label,
    such as *data*. Once this is set up, boot up SystemRescue, select your boot menu
    choice, press the Tab key, and append **`cow_label=*data*`** to your boot selection
    ([Figure 19-8](#fig-sysrec-9)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Appending boot options.](Images/lcb2_1908.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19-8\. Appending boot options
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'SystemRescue mounts both of your partitions in */run/archiso/*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: All changes you make to SystemRescue are stored in */run/archiso/cowspace/persistent_RESCUE800*,
    and the root filesystem remains the same. *RESCUE800* is different for each SystemRescue
    release, according to the release number.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can configure SystemRescue just like any Linux: enable and disable services,
    set a root password, change appearance, install new software, change network configurations,
    or write new documents.'
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Large USB drives are inexpensive, and needing only a single rescue device is
    convenient. You can use either USB thumb drives or USB hard drives.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://system-rescue.org*](https://system-rescue.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
