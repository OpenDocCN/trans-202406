- en: Chapter 2\. Requirements
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章\. 要求
- en: This book is about GitOps and Kubernetes, and as such, you’ll need a container
    registry to publish the containers built throughout the book (see [Recipe 2.1](#recipe_2_1)).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涉及 GitOps 和 Kubernetes，因此您需要一个容器注册表来发布本书中构建的容器（参见[Recipe 2.1](#recipe_2_1)）。
- en: Also, a Git service is required to implement GitOps methodologies; you’ll learn
    how to register to public Git services like GitHub or GitLab (see [Recipe 2.2](#recipe_2_2)).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，实施 GitOps 方法论需要一个 Git 服务；您将学习如何注册公共 Git 服务，如 GitHub 或 GitLab（参见[Recipe 2.2](#recipe_2_2)）。
- en: Finally, it would be best to have a Kubernetes cluster to run the book examples.
    Although we’ll show you how to install Minikube as a Kubernetes cluster (see [Recipe
    2.3](#recipe_2_3)), and the book is tested with Minikube, any Kubernetes installation
    should work as well.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，最好拥有一个 Kubernetes 集群来运行本书中的示例。尽管我们将展示如何安装 Minikube 作为 Kubernetes 集群（参见[Recipe
    2.3](#recipe_2_3)），并且本书已经在 Minikube 上进行了测试，任何 Kubernetes 安装也应该适用。
- en: Let’s prepare your laptop to execute the recipes provided in this book.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们准备您的笔记本电脑以执行本书提供的配方。
- en: 2.1 Registering for a Container Registry
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.1 注册容器注册表
- en: Problem
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to create an account for a container registry service so you can store
    generated containers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望为容器注册表服务创建一个帐户，以便可以存储生成的容器。
- en: Solution
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: You may need to publish some containers into a public container registry as
    you work through this book. Use Docker Hub (`docker.io`) to publish containers.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在您阅读本书时，可能需要将一些容器发布到公共容器注册表。使用 Docker Hub（`docker.io`）发布容器。
- en: If you already have an account with `docker.io`, you can skip the following
    steps. Otherwise, keep reading to learn how to sign up for an account.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经拥有 `docker.io` 的帐户，可以跳过以下步骤。否则，请继续阅读以了解如何注册帐户。
- en: Discussion
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Visit [DockerHub](https://hub.docker.com) to sign up for an account. The page
    should be similar to [Figure 2-1](#fig-211).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[DockerHub](https://hub.docker.com)注册一个帐户。页面应类似于[图 2-1](#fig-211)。
- en: '![DockerHub registration page](assets/gocb_0201.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![DockerHub 注册页面](assets/gocb_0201.png)'
- en: Figure 2-1\. DockerHub registration page
  id: totrans-14
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-1\. DockerHub 注册页面
- en: When the page is loaded, fill in the form by setting a Docker ID, Email, and
    Password, and click the Sign Up button.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面加载时，填写表单设置 Docker ID、电子邮件和密码，并点击“注册”按钮。
- en: When you are registered and your account confirmed, you’ll be ready to publish
    containers under the previous step’s Docker ID.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当您注册并确认帐户后，您将可以在前面步骤中的 Docker ID 下发布容器。
- en: See Also
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Another popular container registry service is quay.io. It can be used on the
    cloud (like docker.io) or installed on-premises.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个流行的容器注册表服务是 quay.io。它可以在云上使用（类似于 docker.io）或者在本地安装。
- en: Visit [the website](https://quay.io) to get more information about Quay. The
    page should be similar to [Figure 2-2](#fig-212).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[该网站](https://quay.io)以获取有关 Quay 的更多信息。页面应类似于[图 2-2](#fig-212)。
- en: '![Quay registration page](assets/gocb_0202.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![Quay 注册页面](assets/gocb_0202.png)'
- en: Figure 2-2\. Quay registration page
  id: totrans-21
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-2\. Quay 注册页面
- en: 2.2 Registering for a Git Repository
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.2 注册 Git 仓库
- en: Problem
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to create an account for a Git service so you can store source code
    in a repository.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您希望为 Git 服务创建一个帐户，以便可以将源代码存储在仓库中。
- en: Solution
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: You may need to publish some source code into a public Git service in this book.
    Use GitHub as a Git service to create and fork Git repositories.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您可能需要将一些源代码发布到公共 Git 服务。使用 GitHub 作为 Git 服务来创建和派生 Git 仓库。
- en: If you already have an account with GitHub, you can skip the following steps,
    otherwise keep reading to learn how to sign up for an account.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经有 GitHub 帐户，可以跳过以下步骤；否则，请继续阅读以了解如何注册帐户。
- en: Discussion
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Visit the [GitHub web page](https://github.com) to sign up for an account. The
    page should be similar to [Figure 2-3](#fig-221).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[GitHub 网页](https://github.com)注册一个帐户。页面应类似于[图 2-3](#fig-221)。
- en: '![GitHub welcome page to register](assets/gocb_0203.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![GitHub 欢迎页面进行注册](assets/gocb_0203.png)'
- en: Figure 2-3\. GitHub welcome page to register
  id: totrans-31
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-3\. GitHub 欢迎页面进行注册
- en: When the page is loaded, click the Sign up for GitHub button (see [Figure 2-3](#fig-221))
    and follow the instructions. The Sign in page should be similar to [Figure 2-4](#fig-222).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面加载时，点击“注册 GitHub”按钮（见[图 2-3](#fig-221)）并按照说明操作。登录页面应类似于[图 2-4](#fig-222)。
- en: '![Sign in GitHub page](assets/gocb_0204.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![GitHub 登录页面](assets/gocb_0204.png)'
- en: Figure 2-4\. Sign In GitHub page
  id: totrans-34
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-4\. GitHub 登录页面
- en: When you are registered and your account confirmed, you’ll be ready to start
    creating or forking Git repositories into your GitHub account.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当您注册并确认帐户后，您将准备好开始在 GitHub 帐户中创建或分叉 Git 仓库。
- en: Also, you’ll need to fork the [book source code repository](https://oreil.ly/uqjTA)
    into your account. Click the Fork button shown in [Figure 2-5](#fig-223).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，您需要将[书籍源代码仓库](https://oreil.ly/uqjTA)分叉到您的帐户中。点击[图 2-5](#fig-223)中显示的分叉按钮。
- en: '![Fork button](assets/gocb_0205.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![分叉按钮](assets/gocb_0205.png)'
- en: Figure 2-5\. Fork button
  id: totrans-38
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-5\. 分叉按钮
- en: Then select your account in the Owner section, if not selected yet, and click
    the button “Create fork” button as shown in [Figure 2-6](#fig-224).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在 Owner 部分选择您的帐户（如果尚未选择），并点击“创建分叉”按钮，如[图 2-6](#fig-224)所示。
- en: '![Create Fork button](assets/gocb_0206.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![创建分叉按钮](assets/gocb_0206.png)'
- en: Figure 2-6\. Create fork button
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-6\. 创建分叉按钮
- en: 'To follow along with the example in the following chapters, you can clone this
    book’s repositories locally. When not mentioned explicitly, we will refer to the
    examples available in [the chapters repo](https://github.com/gitops-cookbook/chapters):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随下一章节中的示例，请在本地克隆这本书的仓库。如果未明确提到，我们将使用[章节仓库](https://github.com/gitops-cookbook/chapters)中提供的示例：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: See Also
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Another popular Git service is GitLab. It can be used on the cloud or installed
    on-premises.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个流行的 Git 服务是 GitLab。它可以在云上或本地安装使用。
- en: Visit [GitLab](https://about.gitlab.com) for more information.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[GitLab](https://about.gitlab.com)获取更多信息。
- en: 2.3 Creating a Local Kubernetes Cluster
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2.3 创建本地 Kubernetes 集群
- en: Problem
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: You want to spin up a Kubernetes cluster locally.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您想在本地启动 Kubernetes 集群。
- en: Solution
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案
- en: In this book, you may need a Kubernetes cluster to run most recipes. Use Minikube
    to spin up a Kubernetes cluster in your local machine.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您可能需要一个 Kubernetes 集群来运行大多数的示例。使用 Minikube 在本地机器上启动 Kubernetes 集群。
- en: Discussion
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 讨论
- en: Minikube uses container/virtualization technology like Docker, Podman, Hyperkit,
    Hyper-V, KVM, or VirtualBox to boot up a Linux machine with a Kubernetes cluster
    installed inside.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Minikube 使用 Docker、Podman、Hyperkit、Hyper-V、KVM 或 VirtualBox 等容器/虚拟化技术，在 Linux
    机器上启动一个带有 Kubernetes 集群的 Linux 系统。
- en: For simplicity and to use an installation that will work in most of the platforms,
    we are going to use VirtualBox as a virtualization system.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简便起见并且能在大多数平台上使用，我们将使用 VirtualBox 作为虚拟化系统。
- en: To install VirtualBox (if you haven’t done it yet), visit [the home page](https://oreil.ly/T93oU)
    and click the Download link as shown in [Figure 2-7](#vb_homepage).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 VirtualBox（如果尚未安装），请访问[主页](https://oreil.ly/T93oU)，并点击下载链接，如[图 2-7](#vb_homepage)所示。
- en: Note
  id: totrans-56
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: For those using macOS, the following instructions have been tested on a Mac
    AMD64 with macOS Monterey and VirtualBox 6.1\. At the time of writing this book,
    there were some incompatibilities when using the ARM version or macOS Ventura.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用 macOS 的用户，在 macOS Monterey 和 VirtualBox 6.1 上测试了以下说明。在撰写本书时，使用 ARM 版本或
    macOS Ventura 时存在一些不兼容性。
- en: '![gocb 0208](assets/gocb_0208.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![gocb 0208](assets/gocb_0208.png)'
- en: Figure 2-7\. VirtualBox home page
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-7\. VirtualBox 主页
- en: Select the package based on the operating system, download it, and install it
    on your computer. After installing VirtualBox (we used the 6.1.x version), the
    next step is to download and spin up a cluster using Minikube.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 根据操作系统选择软件包，下载并安装到计算机上。安装 VirtualBox 后（我们使用了 6.1.x 版本），下一步是下载 Minikube 并启动集群。
- en: Visit [the GitHub repo](https://oreil.ly/mmwVP), unfold the Assets section,
    and download the Minikube file that matches your platform specification. For example,
    in the case of an AMD Mac, you should select *minikube-darwin-amd64* as shown
    in [Figure 2-8](#minikube_download).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[GitHub 仓库](https://oreil.ly/mmwVP)，展开“资产”部分，并下载符合您平台规格的 Minikube 文件。例如，在
    AMD Mac 上，您应选择 *minikube-darwin-amd64*，如[图 2-8](#minikube_download)所示。
- en: Uncompress the file (if necessary) and copy it with the name *minikube* in a
    directory accessible by the `PATH` environment variable such as (`/usr/local/bin`)
    in Linux or macOS.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 解压文件（如果需要），并将其复制为 *minikube* 的名称放在 PATH 环境变量可访问的目录中，例如 Linux 或 macOS 中的 `/usr/local/bin`。
- en: With VirtualBox and Minikube installed, we can spin up a Kubernetes cluster
    in the local machine. Let’s install Kubernetes version 1.23.0 as it was the latest
    version at the time of writing (although any other previous versions can be used
    as well).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 VirtualBox 和 Minikube 后，我们可以在本地机器上启动 Kubernetes 集群。让我们安装 Kubernetes 版本 1.23.0，因为这是撰写本书时的最新版本（当然，也可以使用任何之前的版本）。
- en: '![gocb 0209](assets/gocb_0209.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![gocb 0209](assets/gocb_0209.png)'
- en: Figure 2-8\. Minikube release page
  id: totrans-65
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 2-8\. Minikube 发行页面
- en: 'Run the following command in a terminal window to spin up the Kubernetes cluster
    with 8 GB of memory assigned:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端窗口中运行以下命令，分配 8 GB 内存来启动 Kubernetes 集群：
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[![1](assets/1.png)](#co_requirements_CO1-1)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_requirements_CO1-1)'
- en: Creates a Kubernetes cluster with version 1.23.0
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个版本为 1.23.0 的 Kubernetes 集群
- en: '[![2](assets/2.png)](#co_requirements_CO1-2)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_requirements_CO1-2)'
- en: Uses VirtualBox as virtualization tool
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 VirtualBox 作为虚拟化工具
- en: '[![3](assets/3.png)](#co_requirements_CO1-3)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_requirements_CO1-3)'
- en: Creates a profile name (`gitops`) to the cluster to refer to it later
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为集群创建一个配置文件名 (`gitops`) 以便以后引用它
- en: 'The output lines should be similar to:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 输出行应类似于：
- en: '[PRE2]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[![1](assets/1.png)](#co_requirements_CO2-1)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](assets/1.png)](#co_requirements_CO2-1)'
- en: Starts the `gitops` cluster
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 `gitops` 集群
- en: '[![2](assets/2.png)](#co_requirements_CO2-2)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](assets/2.png)](#co_requirements_CO2-2)'
- en: Boots up the Kubernetes cluster control plane
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 启动 Kubernetes 集群控制平面
- en: '[![3](assets/3.png)](#co_requirements_CO2-3)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](assets/3.png)](#co_requirements_CO2-3)'
- en: Detects that we have an old `kubectl` tool
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 检测到我们有一个旧版本的 `kubectl` 工具
- en: '[![4](assets/4.png)](#co_requirements_CO2-4)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](assets/4.png)](#co_requirements_CO2-4)'
- en: Cluster is up and running
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 集群已启动并运行
- en: To align the Kubernetes cluster and Kubernetes CLI tool version, you can download
    the `kubectl` 1.23.0 version running from *https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与 Kubernetes 集群和 Kubernetes CLI 工具版本保持一致，您可以下载 `kubectl` 1.23.0 版本，运行自 *https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl*。
- en: Note
  id: totrans-85
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: You need to change `darwin/amd64` to your specific architecture. For example,
    in Windows it might be `windows/amd64/kubectl.exe`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将 `darwin/amd64` 更改为您的特定架构。例如，在 Windows 上可能是 `windows/amd64/kubectl.exe`。
- en: Copy the `kubectl` CLI tool in a directory accessible by the `PATH` environment
    variable such as (`/usr/local/bin`) in Linux or macOS.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `kubectl` CLI 工具复制到一个由 `PATH` 环境变量访问的目录中，例如在 Linux 或 macOS 中 (`/usr/local/bin`)。
- en: See Also
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: There are other ways to run Kubernetes in a local machine.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地机器上运行 Kubernetes 的其他方法还有很多。
- en: One that is very popular is [kind](https://oreil.ly/8B2bH).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 非常受欢迎的一个是 [kind](https://oreil.ly/8B2bH)。
- en: Although the examples in this book should work in any Kubernetes implementation
    as only standard resources are used, we’ve only tested with Minikube.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本书中的示例应适用于任何 Kubernetes 实现，因为只使用了标准资源，但我们只在 Minikube 上进行了测试。
