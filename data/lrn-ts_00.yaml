- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: My journey to TypeScript was not a direct or quick one. I started off in school
    primarily writing Java, then C++, and like many new developers raised on statically
    typed languages, I looked down on JavaScript as “just” the sloppy little scripting
    language people throw onto websites.
  prefs: []
  type: TYPE_NORMAL
- en: 'My first substantial project in the language was a silly remake of the original
    *Super Mario Bros.* video game in pure HTML5/CSS/JavaScript and, typical of many
    first projects, was an absolute mess. In the beginning of the project I instinctively
    disliked JavaScript’s weird flexibility and lack of guardrails. It was only toward
    the end that I really began to respect JavaScript’s features and quirks: its flexibility
    as a language, its ability to mix and match small functions, and its ability to
    *just work* in user browsers within seconds of page load.'
  prefs: []
  type: TYPE_NORMAL
- en: By the time I finished that first project, I had fallen in love with JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: Static analysis (tools that analyze your code without running it) such as TypeScript
    also gave me a queasy gut feeling at first. *JavaScript is so breezy and fluid*,
    I thought, *why bog ourselves down with rigid structures and types?* Were we reverting
    back to the worlds of Java and C++ that I had left behind?
  prefs: []
  type: TYPE_NORMAL
- en: Coming back to my old projects, it took me all of 10 minutes of struggling to
    read through my old, convoluted JavaScript code to understand how messy things
    could get without static analysis. The act of cleaning that code up showed me
    all the places I would have benefited from some structure. From that point on,
    I was hooked onto adding as much static analysis to my projects as I could.
  prefs: []
  type: TYPE_NORMAL
- en: It’s been nearly a decade since I first tinkered with TypeScript, and I enjoy
    it as much as ever. The language is still evolving with new features and is more
    useful than ever in providing *safety* and *structure* to JavaScript.
  prefs: []
  type: TYPE_NORMAL
- en: 'I hope that by reading *Learning TypeScript* you can learn to appreciate TypeScript
    the way I do: not just as a means to find bugs and typos—and certainly not a substantial
    change to JavaScript code patterns—but as JavaScript *with types*: a beautiful
    system for declaring the way our JavaScript should work, and helping us stick
    to it.'
  prefs: []
  type: TYPE_NORMAL
- en: Who Should Read This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have an understanding of writing JavaScript code, can run basic commands
    in a terminal, and are interested in learning about TypeScript, this book is for
    you.
  prefs: []
  type: TYPE_NORMAL
- en: Maybe you’ve heard TypeScript can help you write a lot of JavaScript with fewer
    bugs *(true!)* or document your code well for other people to read *(also true!)*.
    Maybe you’ve seen TypeScript show up in a lot of job postings, or in a new role
    you’re starting.
  prefs: []
  type: TYPE_NORMAL
- en: 'Whatever your reason, as long as you come in knowing the fundamentals of JavaScript—variables,
    functions, closures/scope, and classes—this book will take you from no TypeScript
    knowledge to mastering the fundamentals and most important features of the language.
    By the end of this book, you will understand:'
  prefs: []
  type: TYPE_NORMAL
- en: The history and context for why TypeScript is useful on top of “vanilla” JavaScript
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How a type system models code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How a type checker analyzes code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use development-only type annotations to inform the type system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How TypeScript works with IDEs (Integrated Development Environments) to provide
    code exploration and refactoring tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'And you will be able to:'
  prefs: []
  type: TYPE_NORMAL
- en: Articulate the benefits of TypeScript and general characteristics of its type
    system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add type annotations where useful in your code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Represent moderately complex types using TypeScript’s built-in inferences and
    new syntax.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use TypeScript to assist local development in refactoring code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why I Wrote This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'TypeScript is a wildly popular language in both industry and open source:'
  prefs: []
  type: TYPE_NORMAL
- en: GitHub’s 2021 and 2020 State of the Octoverses have it at the platform’s fourth
    top language, up from seventh in 2019 and 2018 and tenth in 2017.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: StackOverflow’s 2021 Developer Survey has it at the world’s third most loved
    language (72.73% of users).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The 2020 State of JS Survey shows TypeScript has consistently high satisfaction
    and usage amounts as both a build tool and variant of JavaScript.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For frontend developers, TypeScript is well supported in all major UI libraries
    and frameworks, including Angular, which strongly recommends TypeScript, as well
    as Gatsby, Next.js, React, Svelte, and Vue. For backend developers, TypeScript
    generates JavaScript that runs natively in Node.js; Deno, a similar runtime by
    Node’s creator, emphasizes directly supporting TypeScript files.
  prefs: []
  type: TYPE_NORMAL
- en: However, despite this plethora of popular project support, I was rather disappointed
    by the lack of good introductory content online when I first learned the language.
    Many of the online documentation sources didn’t do a great job of explaining what
    a “type system” is or how to use it. They often assumed a great deal of prior
    knowledge in both JavaScript and strongly typed languages, or were written with
    only cursory code examples.
  prefs: []
  type: TYPE_NORMAL
- en: 'Not seeing an O’Reilly book with a cute animal cover introducing TypeScript
    years ago was a disappointment. While other books on TypeScript from publishers
    including O’Reilly now exist prior to this one, I couldn’t find a book that focuses
    on the foundations of the language quite the way I wanted: why it works the way
    it does and how its core features work together. A book that starts with a foundational
    explanation of the language before adding on features one-by-one. I’m thrilled
    to be able to make a clear, comprehensive introduction to TypeScript language
    fundamentals for readers who aren’t already familiar with its principles.'
  prefs: []
  type: TYPE_NORMAL
- en: Navigating This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Learning TypeScript* has two purposes:'
  prefs: []
  type: TYPE_NORMAL
- en: You can read through it once to understand TypeScript as a whole.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Later, you can refer back to it as a practical introductory TypeScript language
    reference.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This book ramps up from concepts to practical use across three general sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Part I, “Concepts”](part01.xhtml#concepts): How JavaScript came to be, what
    TypeScript adds to it, and the foundations of a *type system* as TypeScript creates
    it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Part II, “Features”](part02.xhtml#features): Fleshing out how the type system
    interacts with the major parts of JavaScript you’d work with when writing TypeScript
    code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Part III, “Usage”](part03.xhtml#usage): Now that you understand the features
    that make up the TypeScript language, how to use them in real-world situations
    to improve your code reading and editing experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I’ve thrown in a [Part IV, “Extra Credit”](part04.xhtml#extra_credit) section
    at the end to cover lesser-used but still occasionally useful TypeScript features.
    You won’t need to deeply know them to consider yourself a TypeScript developer.
    But they’re all useful concepts that will likely come up as you use TypeScript
    for real-world projects. Once you’ve finished understanding the first three sections,
    I highly recommend studying up on the extra credit section.
  prefs: []
  type: TYPE_NORMAL
- en: Each chapter starts with a haiku to get into the spirit of its contents and
    ends with a pun. The web development community as a whole and TypeScript’s community
    within it are known for being jovial and welcoming of newcomers. I tried to make
    this book pleasant to read for learners like me who don’t appreciate long, dry
    writings.
  prefs: []
  type: TYPE_NORMAL
- en: Examples and Projects
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unlike many other resources that introduce TypeScript, this book intentionally
    focuses on introducing language features with standalone examples showing just
    the new information rather than delving into medium- or large-sized projects.
    I prefer this method of teaching because it puts a spotlight on the TypeScript
    language first and foremost. TypeScript is useful across so many frameworks and
    platforms—many of which undergo API updates regularly—that I didn’t want to keep
    anything framework- or platform-specific in this book.
  prefs: []
  type: TYPE_NORMAL
- en: That being said, it is supremely useful when learning a programming language
    to exercise concepts immediately after they’re introduced. I highly recommend
    taking a break after each chapter to rehearse that chapter’s contents. Each chapter
    ends with a suggestion to visit its section on [*https://learningtypescript.com*](https://learningtypescript.com)
    and work through the examples and projects listed there.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions Used in This Book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The following typographical conventions are used in this book:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Italic*'
  prefs: []
  type: TYPE_NORMAL
- en: Indicates new terms, URLs, email addresses, filenames, and file extensions.
  prefs: []
  type: TYPE_NORMAL
- en: '`Constant width`'
  prefs: []
  type: TYPE_NORMAL
- en: Used for program listings, as well as within paragraphs to refer to program
    elements such as variable or function names, data types, statements, and keywords.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a tip or suggestion.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element signifies a general note.
  prefs: []
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: This element indicates a warning or caution.
  prefs: []
  type: TYPE_NORMAL
- en: Using Code Examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Supplemental material (code examples, exercises, etc.) is available for download
    at [*https://learningtypescript.com*](https://learningtypescript.com).
  prefs: []
  type: TYPE_NORMAL
- en: If you have a technical question or a problem using the code examples, please
    send email to [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: This book is here to help you get your job done. In general, if example code
    is offered with this book, you may use it in your programs and documentation.
    You do not need to contact us for permission unless you’re reproducing a significant
    portion of the code. For example, writing a program that uses several chunks of
    code from this book does not require permission. Selling or distributing examples
    from O’Reilly books does require permission. Answering a question by citing this
    book and quoting example code does not require permission. Incorporating a significant
    amount of example code from this book into your product’s documentation does require
    permission.
  prefs: []
  type: TYPE_NORMAL
- en: 'We appreciate, but generally do not require, attribution. An attribution usually
    includes the title, author, publisher, and ISBN. For example: “*Learning Typescript*
    by Josh Goldberg (O’Reilly). Copyright 2022 Josh Goldberg, 978-1-098-11033-8.”'
  prefs: []
  type: TYPE_NORMAL
- en: If you feel your use of code examples falls outside fair use or the permission
    given above, feel free to contact us at [*permissions@oreilly.com*](mailto:permissions@oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Online Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: For more than 40 years, [*O’Reilly Media*](http://oreilly.com) has provided
    technology and business training, knowledge, and insight to help companies succeed.
  prefs: []
  type: TYPE_NORMAL
- en: Our unique network of experts and innovators share their knowledge and expertise
    through books, articles, and our online learning platform. O’Reilly’s online learning
    platform gives you on-demand access to live training courses, in-depth learning
    paths, interactive coding environments, and a vast collection of text and video
    from O’Reilly and 200+ other publishers. For more information, visit [*http://oreilly.com*](http://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: How to Contact Us
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please address comments and questions concerning this book to the publisher:'
  prefs: []
  type: TYPE_NORMAL
- en: O’Reilly Media, Inc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1005 Gravenstein Highway North
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sebastopol, CA 95472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 800-998-9938 (in the United States or Canada)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0515 (international or local)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 707-829-0104 (fax)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We have a web page for this book, where we list errata, examples, and any additional
    information. You can access this page at [*https://oreil.ly/learning-typescript*](https://oreil.ly/learning-typescript).
  prefs: []
  type: TYPE_NORMAL
- en: Email [*bookquestions@oreilly.com*](mailto:bookquestions@oreilly.com) to comment
    or ask technical questions about this book.
  prefs: []
  type: TYPE_NORMAL
- en: For news and information about our books and courses, visit [*https://oreilly.com*](https://oreilly.com).
  prefs: []
  type: TYPE_NORMAL
- en: 'Find us on LinkedIn: [*https://linkedin.com/company/oreilly-media*](https://linkedin.com/company/oreilly-media).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow us on Twitter: [*https://twitter.com/oreillymedia*](https://twitter.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Watch us on YouTube: [*https://www.youtube.com/oreillymedia*](https://www.youtube.com/oreillymedia).'
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book was a team effort, and I’d like to sincerely thank everybody who
    made it possible. First and foremost my superhuman editor-in-chief, Rita Fernando,
    for an incredible amount of patience and excellent guidance throughout the authoring
    journey. Additional shoutout to the rest of the O’Reilly crew: Kristen Brown,
    Suzanne Huston, Clare Jensen, Carol Keller, Elizabeth Kelly, Cheryl Lenser, Elizabeth
    Oliver, and Amanda Quinn. You all rock!'
  prefs: []
  type: TYPE_NORMAL
- en: 'Many deep thanks to the tech reviewers for their consistently top-notch pedagogical
    insights and TypeScript expertise: Mike Boyle, Ryan Cavanaugh, Sara Gallagher,
    Michael Hoffman, Adam Reineke, and Dan Vanderkam. This book wouldn’t be the same
    without you, and I hope I successfully captured the intent of all your great suggestions!'
  prefs: []
  type: TYPE_NORMAL
- en: 'Further thanks to the assorted peers and praise quoters who gave spot reviews
    on the book that helped me improve technical accuracy and writing quality: Robert
    Blake, Andrew Branch, James Henry, Adam Kaczmarek, Loren Sands-Ramshaw, Nik Stern,
    and Lenz Weber-Tronic. Every suggestion helps!'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, I’d like to thank my family for their love and support over the years.
    My parents, Frances and Mark, and brother, Danny—thanks for letting me spend time
    with Legos and books and video games. To my spouse Mariah Goldberg for her patience
    during my long bouts of editing and writing, and our cats Luci, Tiny, and Jerry
    for distinguished fluffiness and keeping me company.
  prefs: []
  type: TYPE_NORMAL
