- en: Part II. Behavioral Patterns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The patterns in this category are focused on the communications and interactions
    between the Pods and the managing platform. Depending on the type of managing
    controller used, a Pod may run until completion or be scheduled to run periodically.
    It can run as a daemon or ensure uniqueness guarantees to its replicas. There
    are different ways to run a Pod on Kubernetes, and picking the right Pod-management
    primitives requires understanding their behavior. In the following chapters, we
    explore the patterns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7, “Batch Job”](ch07.html#BatchJob), describes how to isolate an atomic
    unit of work and run it until completion.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 8, “Periodic Job”](ch08.html#PeriodicJob), allows the execution of
    a unit of work to be triggered by a temporal event.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 9, “Daemon Service”](ch09.html#DaemonService), allows you to run infrastructure-focused
    Pods on specific nodes, before application Pods are placed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 10, “Singleton Service”](ch10.html#SingletonService), ensures that
    only one instance of a service is active at a time and still remains highly available.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 11, “Stateless Service”](ch11.html#StatelessService), describes the
    building blocks used for managing identical application instances.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 12, “Stateful Service”](ch12.html#StatefulService), is all about how
    to create and manage distributed stateful applications with Kubernetes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 13, “Service Discovery”](ch13.html#ServiceDiscovery), explains how
    client services can discover and consume the instances of providing services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 14, “Self Awareness”](ch14.html#SelfAwareness), describes mechanisms
    for introspection and metadata injection into applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
