- en: Chapter 14\. Building a Linux Firewall with firewalld
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter covers the basics of using firewalld to build host firewalls. Individual
    hosts have different requirements. For example, a server has to allow different
    types of incoming connection requests, and a PC running no services does not have
    to accept any connection requests. A laptop that is used to access multiple networks
    needs dynamic firewall management.
  prefs: []
  type: TYPE_NORMAL
- en: firewalld Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: firewalld, like all firewalls, has a very long list of capabilities. We will
    mainly learn about using firewalld *zones* to control traffic entering our systems.
    A zone is a container for a level of trust; for example, some zones allow all
    manner of incoming connection requests, and some are very restrictive. Each network
    interface on a system may be assigned only one zone, and one zone may be assigned
    to multiple interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: Networking Knowledge Required
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The most important networking concepts to understand are ports, services, TCP,
    UDP, port forwarding, masquerade, routing, and IP addressing. You will understand
    how to configure your firewall when you understand these. If you need some coaching
    on computer networking, try *Networking Fundamentals* by Gordon Davies (Packt
    Publishing), or *Networking All-in-One For Dummies*, 7th Edition by Doug Lowe
    (For Dummies). If you have an [O’Reilly Learning Platform subscription](https://oreil.ly/mEsNB),
    you will find a wealth of great information.
  prefs: []
  type: TYPE_NORMAL
- en: The traditional Linux firewall is built with the *netfilter* packet-filtering
    framework in the Linux kernel, which filters incoming and outgoing network traffic,
    and *iptables*, which is the software used to create and manage tables of rules
    to filter your traffic.
  prefs: []
  type: TYPE_NORMAL
- en: Times change, and iptables is being replaced by newer rules managers, such as
    *ufw* (Uncomplicated Firewall), *nftables* (Netfilter tables), and *firewalld*
    (firewall daemon). firewalld, like iptables and nftables, uses tables of rules
    to manage traffic filtering. It provides both a command-line interface and a nice
    graphical interface, *firewall-config*. firewalld is a frontend to both iptables
    and nftables. nftables is a significant improvement over iptables and is intended
    to be the default backend for firewalld, but in some Linux distributions iptables
    is still the default. Set your preferred backend in */etc/firewalld/firewalld.conf*
    with the *FirewallBackend* option ([Recipe 14.4](#rec-firewall-backend)).
  prefs: []
  type: TYPE_NORMAL
- en: firewalld comes with predefined sets of rules, called *zones*, for different
    use cases, such as a machine running no services, a machine running services,
    and different zones for different network interfaces on the same machine. You
    can edit these zones to suit your own requirements.
  prefs: []
  type: TYPE_NORMAL
- en: firewalld zones manage *services*, which are configurations for common services
    such as ssh, imaps, and rsync. Most of the predefined services include only the
    standard port assignments. You may edit these as you need and create your own
    custom zones.
  prefs: []
  type: TYPE_NORMAL
- en: firewalld is integrated with NetworkManager, so you don’t have to worry about
    managing dynamic connections, like when you tote your laptop all over and connect
    to different networks.
  prefs: []
  type: TYPE_NORMAL
- en: The NetworkManager Service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NetworkManager has been an important part of Linux since 2004\. NetworkManager
    replaced a hodgepodge of cumbersome network client tools and manages all of your
    network interfaces and network connections. If you’re not familiar with NetworkManager,
    see [GNOME NetworkManager](https://oreil.ly/hkqaq).
  prefs: []
  type: TYPE_NORMAL
- en: If you are running public servers on a commercial hosting service, your firewall
    setup depends on what your service provider supports. Protecting public servers,
    such as web servers and online storefronts, whether they are remotely hosted or
    in your own datacenter, requires a great deal of skill and care that is beyond
    the scope of this book. Do please get in-depth study and training, or hire experts.
  prefs: []
  type: TYPE_NORMAL
- en: How Firewalls Work
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once upon a time, Ubuntu Linux did not ship with a firewall, because the default
    installation had no public services, and therefore no listening network ports.
    The reasoning was that with no listening ports there were no points of attack.
    Fortunately, this decision was reversed in later releases, because users make
    changes, even the most experts users make mistakes, and attackers are always discovering
    new vulnerabilities. Security is a multilayered process.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at how firewalls work. The basic principle is deny all, allow only
    as needed.
  prefs: []
  type: TYPE_NORMAL
- en: 'A network service, such as an SSH server, needs to open a network port to enable
    remote users to log in. You are allowing other people into your system. The default
    port for *sshd* is TCP port 22\. You can see all the listening ports on your system
    with the *netstat* command. This snippet shows what the SSH port looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This example shows that there is not an active connection because the Foreign
    Address fields are all zeroes and the State is LISTEN. *sshd* is listening for
    incoming IPv4 and IPv6 connections on all network interfaces and all IP addresses
    on TCP port 22. The combination of IP address and port number is an address that
    tells the Linux kernel where to send SSH packets.
  prefs: []
  type: TYPE_NORMAL
- en: 'This example shows an active SSH connection, with the ESTABLISHED State. It
    lists the local address and port that the remote machine is connected to, and
    the foreign address and port of the remote machine (the Recv-Q and Send-Q columns
    have been removed for clarity):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: There are several ways to control which TCP/IP packets can access a particular
    IP address and port. Most servers have configuration options to listen only on
    particular network interfaces or IP addresses, and to accept requests from specific
    addresses and address ranges. A firewall adds additional controls, and it is a
    best practice to use both.
  prefs: []
  type: TYPE_NORMAL
- en: Network Ports and Numbering
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are 65,536 possible network ports on a Linux system, numbered 0-65535,
    and many of them are reserved for specific services. 0 is reserved and not used.
    You can see all of these in the */etc/services* file, which is on every Linux.
    See the [IANA Service Name and Transport Protocol Port Number Registry](https://oreil.ly/CF0bF)
    for the complete official list.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is how the port numbering ranges are organized:'
  prefs: []
  type: TYPE_NORMAL
- en: 0-1023 are called the *well-known ports*. These are system ports for common
    services, such as FTPS (secure file sharing), SSH (secure remote login), NTP (Network
    Time Protocol), POP3 (email), HTTPS (encrypted web server), and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1024-49151 are the *registered ports*, which are for additional services.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '49152-65535 are the *ephemeral ports*, also called private ports and dynamic
    ports. These are used by your system to complete connections with remote services.
    For example, when you are web surfing, it looks like this in *netstat* (the Recv-Q
    and Send-Q columns have been removed for clarity):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: This illustrates a response to an outgoing request from your computer. When
    you visit a website you initiate the connection request, and the remote web server
    sends responses to ephemeral network ports on your system. The first connection
    on the list is connected to the example local computer at IP address 192.168.43.234,
    port 50586\. The Foreign Address is the remote server’s IP address and port. The
    state ESTABLISHED means it is connected to another machine. When the session is
    finished, after closing the web browser, port 50586 is released and ready to be
    used again.
  prefs: []
  type: TYPE_NORMAL
- en: Ephemeral ports are not listening ports for services. Connections to ephemeral
    ports are temporary, and are created only as replies to an outgoing connection
    request from your computer, such as visiting a website. A firewall can block ephemeral
    ports, but then you have no access to hosts or sites outside of your computer.
  prefs: []
  type: TYPE_NORMAL
- en: 14.1 Querying Which Firewall Is Running
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to know which firewall your Linux system is using.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Start with the documentation for your particular Linux distribution, as most
    Linuxes install with a firewall. The three most common are *iptables* (Internet
    Protocol tables), *ufw* (Uncomplicated Firewall), and *nftables* (Netfilter tables).
    All three manage filter rules on the netfilter framework, which is part of the
    Linux kernel.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then see what systemd says. This example shows that nftables is running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This shows firewalld is running:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This example checks for ufw and shows that it is installed but inactive:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: If any of them are not installed, you will see a message to that effect.
  prefs: []
  type: TYPE_NORMAL
- en: 'You could remove ufw and nftables, or mask them so that they cannot be started:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: It is best to run only one firewall, unless you enjoy untangling conflicting
    firewall rules.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.xhtml#cha-systemd)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.2 Installing firewalld
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need to install firewalld on your Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If firewalld is not on your system, install the *firewalld* package, and install
    *firewall-config* to get the nice graphical interface.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: So far, the major Linux distributions, thankfully, all use the same package
    names, *firewalld* and *firewall-config*.
  prefs: []
  type: TYPE_NORMAL
- en: firewalld may or may not start automatically after installation, depending on
    your Linux distribution. It must be running to create and test rules.
  prefs: []
  type: TYPE_NORMAL
- en: If possible, disable your machine’s network connection until you have completed
    your initial firewalld configuration. Disconnect from your network by clicking
    the NetworkManager applet, which is installed by default on most Linux distributions
    ([Figure 14-1](#fig-firewalld-2)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Disconnecting from the network.](Images/lcb2_1401.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14-1\. Disconnect from the network with NetworkManager
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Or use the *nmcli* command. The following example finds and disconnects a WiFi
    connection. Use the CONNECTION name in your command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Restore the connection:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Manage firewalld the usual way with systemd. Here are the commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '*systemctl status firewalld.service*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl enable firewalld.service*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl start firewalld.service*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl stop firewalld.service*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*sudo systemctl restart firewalld.service*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.xhtml#cha-systemd)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [Appendix](app01.xhtml#appendix)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.3 Finding Your firewalld Version
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You need the version number of your installed firewalld.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Query the installed package with your package manager, or use *firewall-cmd*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: firewalld must be running for the *firewall-cmd* command to work. If it is not
    running you will see a “FirewallD is not running” message.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.4 Configuring iptables or nftables as the firewalld Backend
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to choose your own firewalld backend, either iptables or nftables.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Edit */etc/firewalld/firewalld.conf* with your preference:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Or:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Then restart firewalld.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may need to install your preferred backend.
  prefs: []
  type: TYPE_NORMAL
- en: Even if you don’t care which one your system uses, you should use nftables because
    that is what the firewalld developers are actively working on.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[“firewalld Overview”](#ch14-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The [nftables backend blog post](https://oreil.ly/xO5eS) by the firewalld developers
    has detailed information about the two backends and future development.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.5 Listing All Zones and All Services Managed by Each Zone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to see all the available zones in your firewalld configuration and
    the services that each zone manages.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'List the default zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'List all zones:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'List all active zones, the zones currently in use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'List the configuration of a zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'List the configurations of all zones:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: firewalld zones define levels of trust for network connections. Each zone contains
    the zone description and other items as shown in the preceding example for the
    *public* zone. Zone files are in XML format, and must have the *.xml* file extension.
    Look in */usr/lib/firewalld/zones* to see their source files.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following list defines zone options:'
  prefs: []
  type: TYPE_NORMAL
- en: '*target:* defines the default action for packets that do not match any rules.
    It takes one of four values: *default*, *ACCEPT*, *DROP*, or *REJECT*. For example,
    when connection requests for dhcpv6-client, ipp, ipp-client, mdns, or ssh packets
    arrive in the example *public* zone, they are accepted. Any packets that do not
    match the allowed services are rejected by the *default* target, and it sends
    reject messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*ACCEPT* accepts all packets that are not explicitly blocked by rules.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*DROP* silently drops all packets not explicitly allowed.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*REJECT* is similar to *DROP*, except that it also sends reject messages.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '*icmp-block-inversion* inverts your ICMP requests settings. Any requests that
    are blocked are changed to unblocked, and unblocked requests are inverted to blocked.
    It is usually set to *no*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*interfaces:* defines the network interface or interfaces that this zone is
    applied to. Each interface may be bound to only one zone, and you may use the
    same zone on multiple interfaces.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*source:* takes IP and MAC addresses, and IP address ranges. For example, you
    can accept only packets from your local network, from specific hosts, or block
    hosts or networks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*services:* is the list of services managed by this zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*ports:* list port numbers managed by this zone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*protocols:* list additional TCP protocols managed by this zone, as shown in
    */etc/protocols*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*masquerade:* is either *yes* or *no*. Masquerading is for sharing an IPv4
    internet connection. Set it to *no* on all hosts except routers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*forward-ports:* is for forwarding packets that come in on one port to another
    port.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*source-ports:* is for listing source ports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*icmp-blocks:* is for listing ICMP types to block.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*rich rules* are custom rules that you write.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 5 firewalld.zone*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 1 firewall-cmd*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.6 Listing and Querying Services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to see a list of services that firewalld supports.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Use the *firewall-cmd* command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'That is rather a big glob. Convert it to nice tidy single column:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Create more columns with *xargs -n2*, *xargs -n3*, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'firewalld services can be more than simple port addressing. For example, the
    *bittorrent-lsd* service includes two destination IP addresses:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'The *ceph-mon* service opens two listening ports:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: You may edit any of the predefined services to meet your requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you’re adding services to a zone, use their names exactly as they appear
    in the list. You can create your own custom service; see “Add a Service” in the
    [firewalld documentation](https://oreil.ly/kvMYY).
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “Add a Service” in the [firewalld documentation](https://oreil.ly/kvMYY)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.7 Selecting and Setting Zones
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to know how to select and set the right zone.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The firewalld zone you select depends on which services your machine is running.
    If your machine is not running any network services and needs only a network connection,
    use the *drop* or the *block* zone. The *drop* zone is the most restrictive, dropping
    all incoming connections requests, and allowing replies only to connections initiated
    from the computer. *block* is like *drop*, except it sends rejection messages.
  prefs: []
  type: TYPE_NORMAL
- en: 'The other zones are configured differently on the different Linux distros,
    so you need to see how they are configured on your system, like this example for
    the *work* zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'You must bind a zone to a network interface. The following example assigns
    the *work* zone to eth0, then verifies it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'If you prefer to test changes before making them permanent, omit the *--permanent*
    option. This creates a *runtime* configuration, and the change is immediately
    applied. Runtime changes are lost when firewalld is restarted and when you run
    *firewall-cmd --reload*. Convert runtime changes to permanent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: It is not necessary to reload the firewalld configuration when you bind a zone
    to a network interface or restart firewalld.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: How do you know which zone to select? These are the predefined zones that come
    with firewalld on Ubuntu 20.04, in order from most restrictive to least restrictive.
    Zones may be configured a little differently on your Linux; see [Recipe 14.5](#rec-list-zones)
    to learn how view your zone configurations.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following list describes the default zones:'
  prefs: []
  type: TYPE_NORMAL
- en: '*drop*'
  prefs: []
  type: TYPE_NORMAL
- en: All unsolicited incoming network packets are dropped, and there is no reply.
    Only incoming packets that are replies to connections initiated from your computer
    are allowed. This is the strongest protection when you are connected to an untrusted
    network and don’t need to allow access for incoming SSH connections, shared files,
    or any other external connection requests.
  prefs: []
  type: TYPE_NORMAL
- en: '*block*'
  prefs: []
  type: TYPE_NORMAL
- en: Any incoming network connections are rejected with an *icmp-host-prohibited*
    message for IPv4, and *icmp6-adm-prohibited* for IPv6\. Only network connections
    initiated from your system are allowed.
  prefs: []
  type: TYPE_NORMAL
- en: '*public*'
  prefs: []
  type: TYPE_NORMAL
- en: Incoming dhcpv6-client, ipp, ipp-client, mdns, and ssh connections are accepted,
    all others are blocked.
  prefs: []
  type: TYPE_NORMAL
- en: '*external*'
  prefs: []
  type: TYPE_NORMAL
- en: This is for a simple internet gateway, combining a firewall and simple routing.
    Only incoming SSH connections are accepted, and IPv4 masqerading is enabled for
    sharing an internet connection.
  prefs: []
  type: TYPE_NORMAL
- en: '*dmz*'
  prefs: []
  type: TYPE_NORMAL
- en: For computers in your demilitarized zone that are publicly accessible. Only
    incoming SSH connections are accepted. (A DMZ is a separate network segment on
    your network for internet-facing servers.)
  prefs: []
  type: TYPE_NORMAL
- en: '*work*'
  prefs: []
  type: TYPE_NORMAL
- en: Only incoming ssh and dhcpv6-client connections are accepted.
  prefs: []
  type: TYPE_NORMAL
- en: '*home*'
  prefs: []
  type: TYPE_NORMAL
- en: Only incoming ssh, mdns samba-client, and dhcpv6-client connection requests
    are accepted.
  prefs: []
  type: TYPE_NORMAL
- en: '*internal*'
  prefs: []
  type: TYPE_NORMAL
- en: Only incoming ssh, mdns, samba-client, and dhcpv6-client connection requests
    are accepted.
  prefs: []
  type: TYPE_NORMAL
- en: '*trusted*'
  prefs: []
  type: TYPE_NORMAL
- en: All network connection requests are accepted.
  prefs: []
  type: TYPE_NORMAL
- en: You may customize any of these zones or create new zones; see [Recipe 14.9](#rec-custom-zones).
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Recipe 14.9](#rec-custom-zones)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.8 Changing the Default firewalld Zone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You don’t like your default firewalld zone and want to change it.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Verify your current default:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Suppose you want *drop* as your default, because it is the most restrictive.
    Set the new default with the *firewall-cmd* command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: It is not necessary to reload the firewalld configuration or restart firewalld
    when you use this command.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may assign zones with NetworkManager ([Recipe 14.11](#sec-networkman-firewalld)).
    NetworkManager assigns the default zone to all connections that you do not explicitly
    assign a zone to.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Discussion in [Recipe 14.7](#rec-host-firewall) to learn about firewalld
    zones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 14.11](#sec-networkman-firewalld)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.9 Customizing firewalld Zones
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: None of the default zones meet your needs, and you want to modify the predefined
    zones.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Suppose you like the *internal* zone, but the default configuration isn’t quite
    what you want. The current configuration allows *ssh*, *mdns*, *samba-client*,
    and *dhcpv6-client*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'The following example shows how to remove *samba-client* because you don’t
    use Samba:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'You are running a small local 389 Directory server, so you need to add the
    LDAPS service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'These are temporary changes that will not survive a reboot or configuration
    reload. However, they are immediately applied so that you can test them. Test
    your changes, and if everything works as expected, make the changes permanent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'To discard the changes, do not use *--runtime-to-permanent*. Instead, use *--reload*
    to discard the runtime changes and revert to your original configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*--reload* does not interrupt any active connections.'
  prefs: []
  type: TYPE_NORMAL
- en: '*--complete-reload* reloads firewalld completely, including reloading kernel
    modules, and terminates active connections. This is a good option when your runtime
    changes are so messed up you want to start over.'
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Discussion in [Recipe 14.7](#rec-host-firewall) to learn about firewalld
    zones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.xhtml#cha-systemd)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.10 Creating a New Zone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to create a new custom zone.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create an XML containing your zone configuration, then reload firewalld and
    it is ready to use.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following example creates a zone for local name services, with DNS and
    DHCP servers on the same machine, and SSH access. The example file is named */etc/firewalld/zones/names.xml*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Run the *sudo firewall-cmd --get-zones* command, and your new zone will not
    be listed. Add the *--permanent* option to see any new zones that are not yet
    read by firewalld, and now the new “names” zone appears. Zone names are the filenames
    without the *.xml* extension:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Reload firewalld:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Now firewalld can read it, and you can see it with the other zones:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'And list its configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Your new zone is ready to use, and you can modify it just like any other zone.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: See *man 5 firewalld.zone* to learn about configuration options and see the
    source files for the predefined zones in */usr/lib/firewalld/zones/* to use as
    examples. The only files that go in */etc/firewalld/zones/* are user custom files.
  prefs: []
  type: TYPE_NORMAL
- en: Remove a zone by deleting its *.xml* file, and then reload firewalld.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*man 5 firewalld.zone*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 14.9](#rec-custom-zones)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.11 Integrating NetworkManager and firewalld
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You travel between multiple networks, such as multiple work locations, coffee
    shops, hotels, and coworking locations. You need to know how to set up NetworkManager
    to keep up with these changes and always ensure that new connections are assigned
    to the correct firewall zone.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NetworkManager includes firewalld integration. When you connect to a new network,
    NetworkManager assigns it to your default firewalld zone.
  prefs: []
  type: TYPE_NORMAL
- en: You may assign a nondefault zone to a particular connection with NetworkManager.
    If you have the NetworkManager applet in your panel, click it to bring up the
    Edit Connections dialog ([Figure 14-2](#fig-network-man-edit)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Editing connections in NetworkManager.](Images/lcb2_1402.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14-2\. Editing network connections in NetworkManager
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Or, run the *nm-connection-editor* command to open the editor. Click Edit Connections,
    click the connection you want to edit, and click the gear icon to open the editor.
    This opens the editing dialog ([Figure 14-3](#fig-network-man-edit-2)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Changing the firewall zone.](Images/lcb2_1403.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14-3\. Changing the firewall zone
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: Go to the General tab and use the Firewall Zone drop-down menu to select the
    zone you want for that connection. Save your change and you’re finished.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Discussion in [Recipe 14.7](#rec-host-firewall) to learn about firewalld
    zones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 14.9](#rec-custom-zones)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NetworkManager Reference Manual](https://oreil.ly/pvrwj)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.12 Allowing or Blocking Specific Ports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You are using nonstandard ports, for example, port 2022 for your SSH server.
    You want to block port 22 and allow port 2022.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Any port that is not specifically allowed is denied for all firewalld zones,
    except the *trusted* zone, which allows everything. If you were using the default
    SSH service, which uses TCP port 22, first remove port 22 from the relevant zone,
    then add port 2022, then reload firewalld. In this example the nonstandard port
    is assigned to the *work* zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'Verify by listing the zone configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'When you are satisfied, make your changes permanent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you see a message like “Warning: NOT_ENABLED: 22:tcp” when you try to remove
    that port, that means it was not enabled for that zone, and you can go ahead and
    add your new port.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When you use a nonstandard port, clients connecting to the service must specify
    that port number. For example, for SSH:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: How do you know what ports to use? Every service has its own default ports,
    which you will find in the service’s documentation, and in the */etc/services*
    file. You may use nonstandard ports, and they must be unused ports between 1024
    and 49151\. Record your changes in */etc/services*. You also need to set your
    nonstandard ports in the configuration for your server. See [Recipe 12.3](ch12.xhtml#rec-secure-server-ssh)
    for an example.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 12.3](ch12.xhtml#rec-secure-server-ssh)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.13 Blocking IP Addresses with Rich Rules
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to block certain IP addresses.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a *rich rule*, which defines the address to be blocked, and the target,
    which in the example is *reject*. The following example blocks a single address,
    and is added to the internal zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Test it by pinging from the blocked host. The blocked host should see the “Destination
    Port Unreachable” message.
  prefs: []
  type: TYPE_NORMAL
- en: If you do not want to keep the rule, run *sudo firewall-cmd --reload* to delete
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'To make it permanent, use the *--runtime-to-permanent* option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'List the rich rules in a zone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'To delete a permanent rich rule, use the *--remove-rich-rule* option:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'You don’t have to completely block the offending host, but you can apply blocks
    to specific services. The following example blocks the source address only for
    the SSH service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You may create multiple rich rules in a zone, though be careful to avoid conflicts.
  prefs: []
  type: TYPE_NORMAL
- en: Once upon a time, a person I had the dubious pleasure of working with thought
    it was funny to practice penetration testing on his coworkers. Our team ran a
    number of test servers on our workstations and made them available to the team.
    Our wannabe pen-tester was so annoying, we all blocked him at our firewalls.
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Discussion in [Recipe 14.7](#rec-host-firewall) to learn about firewalld
    zones and options
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*man 5 firewalld.richlanguage*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 14.14 Changing a Zone Default Target
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You want to change the default target for a zone.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'List the current target:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Change it from *ACCEPT* to *REJECT*, then reload and verify:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Discussion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The zone target defines the default action for packets that do not match any
    rules. It takes one of four values: *default*, *ACCEPT*, *DROP*, or *REJECT*.'
  prefs: []
  type: TYPE_NORMAL
- en: See Also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[*https://firewalld.org*](https://firewalld.org)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Discussion in [Recipe 14.5](#rec-list-zones) to learn about firewalld zones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Recipe 14.11](#sec-networkman-firewalld)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
